Starting experiment 38_uwcse_cora 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.307
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.350', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.11
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20564083645138656;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4043065147315884;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014283434161880808;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0014797094419622902;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17399348696885145;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.338235469181611;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892267859778524;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.6062158589698355E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14405022986842406;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711730044372582;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353548502929043;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.83271544349826E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12107522500507466;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.005585345981830072;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076159918515961;  // std dev = 15.194, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07981137355657215;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.014780034661489463;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050692401205041204;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05134887648133333;  // std dev = 14.502, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.01934831475109225;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030894309033999864;  // std dev = 15.160, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.238', 'seconds']
Refined model CLL: -0.624506


******************************************
Best model found
******************************************
Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.11 

Total Inference Time : 0.9408714771270752 

Total revision time: 8.12455934715271
Best scored revision CLL: -0.624506


Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.158608142852783 

Total Inference Time : 0.9408714771270752 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.366
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.333', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 6.145
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37301714859831614;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5516269444842152;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5463348219282366;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.21020036814672396;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3056990706242831;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.447558147597091;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4677070955120816;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10312419784214047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.5137090760383558;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.029536270271713124;  // std dev = 1.666, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.24260188140562475;  // std dev = 17.312, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.2935863773171759;  // std dev = 3.039, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2485836834752641;  // std dev = 2.753, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.18718264633839216;  // std dev = 17.549, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14286662154102409;  // std dev = 17.765, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.10664103415600282;  // std dev = 17.494, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.12889421757926103;  // std dev = 3.086, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08066190841909476;  // std dev = 17.765, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05990724588778255;  // std dev = 17.494, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.07781943917428381;  // std dev = 3.091, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045527138108324074;  // std dev = 17.766, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.040', 'seconds']
Refined model CLL: -0.675323


******************************************
Best model found
******************************************
Results 

CLL : -0.745021 

AUC ROC : 0.470776 

AUC PR : 0.31048 

Precision : 0.335179 

Recall : 0.997329 

F1 : 0.501736 

Total Learning Time : 6.145 

Total Inference Time : 1.018416404724121 

Total revision time: 9.360384307861327
Best scored revision CLL: -0.675323


Results 

CLL : -0.745021 

AUC ROC : 0.470776 

AUC PR : 0.31048 

Precision : 0.335179 

Recall : 0.997329 

F1 : 0.501736 

Total Learning Time : 9.3944331035614 

Total Inference Time : 1.018416404724121 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.954
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1860270389369791;  // std dev = 19.761, 1,772.000 (wgt'ed) examples reached here.  /* #neg=1,191 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1682545393873916;  // std dev = 0.472, 1,738.000 (wgt'ed) examples reached here.  /* #neg=1,157 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13907755320271645;  // std dev = 0.470, 1,762.000 (wgt'ed) examples reached here.  /* #neg=1,181 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11876090281025407;  // std dev = 19.703, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10103910273046289;  // std dev = 19.661, 1,736.000 (wgt'ed) examples reached here.  /* #neg=1,155 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0847933293938553;  // std dev = 19.626, 1,724.000 (wgt'ed) examples reached here.  /* #neg=1,143 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06846791820802309;  // std dev = 19.626, 1,724.000 (wgt'ed) examples reached here.  /* #neg=1,143 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050371067397630795;  // std dev = 19.692, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04905045556643943;  // std dev = 19.559, 1,701.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032683764491868966;  // std dev = 19.650, 1,732.000 (wgt'ed) examples reached here.  /* #neg=1,151 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.235', 'seconds']
Parameter learned model CLL:-0.536772 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.761, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.472, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.47, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.703, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.661, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.626, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.626, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.692, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.559, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.65, 1, 581]}]
{'': [nan, 0.22037405286140122], 'false': [nan, 0.22037405286140122], 'false,false': [nan, 0.22037405286140122]}
{'': [nan, 0.22254095484274777], 'false': [nan, 0.22254095484274777]}
{'': [nan, 0.22101116907445126], 'false': [nan, 0.22101116907445126]}
{'': [nan, 0.22171225645393897], 'false': [nan, 0.22171225645393897]}
{'': [nan, 0.22266844432880453], 'false': [nan, 0.22266844432880453], 'false,false': [nan, 0.22266844432880453]}
{'': [nan, 0.22343326909306305], 'false': [nan, 0.22343326909306305], 'false,false': [nan, 0.22343326909306305], 'false,false,false': [nan, 0.22343326909306305]}
{'': [nan, 0.22343326909307867], 'false': [nan, 0.22343326909307867], 'false,false': [nan, 0.22343326909307867]}
{'': [nan, 0.22196723535219418], 'false': [nan, 0.22196723535219418], 'false,false': [nan, 0.22196723535219418], 'false,false,false': [nan, 0.22196723535219418]}
{'': [nan, 0.22489796609596838], 'false': [nan, 0.22489796609596838], 'false,false': [nan, 0.22489796609596838]}
{'': [nan, 0.22292341150680253], 'false': [nan, 0.22292341150680253], 'false,false': [nan, 0.22292341150680253], 'false,false,false': [nan, 0.22292341150680253]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.465
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.21482432776966442;  // std dev = 18.725, 1,528.000 (wgt'ed) examples reached here.  /* #neg=983 #pos=545 */
%   | | | else return 0.029577506528082796;  // std dev = 5.462, 210.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.17036180285667302;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.1947638571486922;  // std dev = 18.330, 1,450.000 (wgt'ed) examples reached here.  /* #neg=921 #pos=529 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.03451020438159727;  // std dev = 3.842, 100.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=18 */
%   | | | else return -0.005954911897472566;  // std dev = 3.936, 129.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.15607186733573608;  // std dev = 0.479, 1,534.000 (wgt'ed) examples reached here.  /* #neg=989 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.040557736540719126;  // std dev = 1.339, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.009331519703694233;  // std dev = 5.354, 217.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=34 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.13138560553707845;  // std dev = 0.479, 1,528.000 (wgt'ed) examples reached here.  /* #neg=983 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return -0.015727823889564903;  // std dev = 1.324, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.030371903243547174;  // std dev = 5.283, 190.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.11067202025559167;  // std dev = 18.680, 1,515.000 (wgt'ed) examples reached here.  /* #neg=970 #pos=545 */
%   | | | else return 0.0036656927304679894;  // std dev = 5.514, 232.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07214458365987632;  // std dev = 19.613, 1,773.000 (wgt'ed) examples reached here.  /* #neg=1,192 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07257369660057829;  // std dev = 18.715, 1,525.000 (wgt'ed) examples reached here.  /* #neg=980 #pos=545 */
%   | | | else return -0.005755068088241951;  // std dev = 5.512, 231.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05259742089971906;  // std dev = 19.492, 1,733.000 (wgt'ed) examples reached here.  /* #neg=1,152 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.04666885132579399;  // std dev = 18.711, 1,524.000 (wgt'ed) examples reached here.  /* #neg=979 #pos=545 */
%   | | | else return 0.0033779163393318594;  // std dev = 5.461, 210.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028853617266478292;  // std dev = 19.539, 1,761.000 (wgt'ed) examples reached here.  /* #neg=1,180 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.634', 'seconds']
Refined model CLL: -0.527848


******************************************
Best model found
******************************************
Results 

CLL : -0.73123 

AUC ROC : 0.545946 

AUC PR : 0.489882 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.465 

Total Inference Time : 1.199122667312622 

Total revision time: 12.605429500579834
Best scored revision CLL: -0.527848


Results 

CLL : -0.73123 

AUC ROC : 0.545946 

AUC PR : 0.489882 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.639478296279908 

Total Inference Time : 1.199122667312622 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.62
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.342', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.893
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24029514227107734;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.36420092978917523;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0814045543349177;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.048527842006150124;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20205616407667265;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040794229163586;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397170698129955;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03776564972512874;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562187444395876;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24431902143844492;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06418425566419733;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210243848964374;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13562635207102938;  // std dev = 20.289, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.04320853988499048;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10198403852190846;  // std dev = 20.834, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2398200044971842;  // std dev = 2.236, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.07805834197699747;  // std dev = 20.698, 1,794.000 (wgt'ed) examples reached here.  /* #neg=1,059 #pos=735 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06210232873818143;  // std dev = 20.823, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05176959971503792;  // std dev = 20.282, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return -0.002186776755832611;  // std dev = 4.675, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03666123514710575;  // std dev = 20.818, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.121', 'seconds']
Refined model CLL: -0.671596


******************************************
Best model found
******************************************
Results 

CLL : -0.642763 

AUC ROC : 0.564582 

AUC PR : 0.418933 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 8.893 

Total Inference Time : 1.071495771408081 

Total revision time: 12.459635007858278
Best scored revision CLL: -0.671596


Results 

CLL : -0.642763 

AUC ROC : 0.564582 

AUC PR : 0.418933 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 12.493683803558351 

Total Inference Time : 1.071495771408081 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.19
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.336', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.182
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3785938489282847;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6644684231619105;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14168213568619817;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07038583938990187;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30972674031800285;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5350832715071676;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1307735287526293;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.05808197450811081;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.13254975084434328;  // std dev = 3.806, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.25917665944386004;  // std dev = 13.576, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1120916334143151;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.04978970433771048;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.19157705528201588;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.05564362711145933;  // std dev = 6.261, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1249038053097025;  // std dev = 15.495, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.11383568414899703;  // std dev = 14.116, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.026614208229176928;  // std dev = 6.260, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07253335113502536;  // std dev = 15.464, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.0673868069721804;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.00934334445336898;  // std dev = 6.259, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041904878651697786;  // std dev = 15.453, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.010', 'seconds']
Refined model CLL: -0.648321


******************************************
Best model found
******************************************
Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.182 

Total Inference Time : 0.8980774879455566 

Total revision time: 8.076900026321411
Best scored revision CLL: -0.648321


Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.110948822021484 

Total Inference Time : 0.8980774879455566 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.26
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.375', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.202
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20564083645138656;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4043065147315884;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014283434161880808;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0014797094419622902;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17399348696885145;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.338235469181611;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892267859778524;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.606215858969846E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14405022986842406;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711730044372582;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353548502929038;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8327154434982875E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12107522500507469;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.005585345981830074;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076159918515959;  // std dev = 15.194, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07981137355657214;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.014780034661489456;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0506924012050412;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.051348876481333336;  // std dev = 14.502, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.019348314751092246;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030894309034000023;  // std dev = 15.160, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.215', 'seconds']
Refined model CLL: -0.624506


******************************************
Best model found
******************************************
Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.202 

Total Inference Time : 0.937244176864624 

Total revision time: 8.182337152481079
Best scored revision CLL: -0.624506


Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.285589086532593 

Total Inference Time : 0.937244176864624 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.521
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.314', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 7.235
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37301714859831614;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5516269444842152;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5463348219282366;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.21020036814672396;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3056990706242831;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.447558147597091;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4677070955120816;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10312419784214047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.24119684112806916;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3449923596624612;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3652828352497801;  // std dev = 2.316, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.073604493530158;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.24491381256939143;  // std dev = 2.759, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.18727059226417445;  // std dev = 17.563, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14288164989621988;  // std dev = 17.780, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.15993756088976904;  // std dev = 2.775, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.10613040632063046;  // std dev = 17.560, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0806883833384054;  // std dev = 17.780, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.1010478058135711;  // std dev = 2.760, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.059545793766883695;  // std dev = 17.563, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045545128551471324;  // std dev = 17.780, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.232', 'seconds']
Refined model CLL: -0.676069


******************************************
Best model found
******************************************
Results 

CLL : -0.741132 

AUC ROC : 0.49583 

AUC PR : 0.320228 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 7.235 

Total Inference Time : 1.0259032249450684 

Total revision time: 10.640868860244751
Best scored revision CLL: -0.676069


Results 

CLL : -0.741132 

AUC ROC : 0.49583 

AUC PR : 0.320228 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 10.744120794296265 

Total Inference Time : 1.0259032249450684 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.966
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1971220972932063;  // std dev = 19.597, 1,714.000 (wgt'ed) examples reached here.  /* #neg=1,133 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1614122999648285;  // std dev = 0.470, 1,766.000 (wgt'ed) examples reached here.  /* #neg=1,185 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1418237076578651;  // std dev = 0.471, 1,744.000 (wgt'ed) examples reached here.  /* #neg=1,163 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11949096342847994;  // std dev = 19.675, 1,741.000 (wgt'ed) examples reached here.  /* #neg=1,160 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10256936243966454;  // std dev = 19.618, 1,721.000 (wgt'ed) examples reached here.  /* #neg=1,140 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08226289684894728;  // std dev = 19.638, 1,728.000 (wgt'ed) examples reached here.  /* #neg=1,147 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06251704149467951;  // std dev = 19.695, 1,748.000 (wgt'ed) examples reached here.  /* #neg=1,167 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.055827264630595834;  // std dev = 19.609, 1,718.000 (wgt'ed) examples reached here.  /* #neg=1,137 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04203299361699505;  // std dev = 19.644, 1,730.000 (wgt'ed) examples reached here.  /* #neg=1,149 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03169103217349291;  // std dev = 19.667, 1,738.000 (wgt'ed) examples reached here.  /* #neg=1,157 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.245', 'seconds']
Parameter learned model CLL:-0.53659 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.597, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.47, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.471, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.675, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.618, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.638, 1, 581]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.695, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.609, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.644, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.667, 1, 581]}]
{'': [nan, 0.22407035750608903], 'false': [nan, 0.22407035750608903], 'false,false': [nan, 0.22407035750608903]}
{'': [nan, 0.22075628872536815], 'false': [nan, 0.22075628872536815]}
{'': [nan, 0.22215847519149085], 'false': [nan, 0.22215847519149085]}
{'': [nan, 0.22234971615736338], 'false': [nan, 0.22234971615736338]}
{'': [nan, 0.22362442818503453], 'false': [nan, 0.22362442818503453], 'false,false': [nan, 0.22362442818503453]}
{'': [nan, 0.22317835594564012], 'false': [nan, 0.22317835594564012], 'false,false': [nan, 0.22317835594564012], 'false,false,false': [nan, 0.22317835594564012]}
{'': [nan, 0.2219034895715905], 'false': [nan, 0.2219034895715905], 'false,false': [nan, 0.2219034895715905]}
{'': [nan, 0.22381556104574632], 'false': [nan, 0.22381556104574632], 'false,false': [nan, 0.22381556104574632], 'false,false,false': [nan, 0.22381556104574632]}
{'': [nan, 0.22305088709945503], 'false': [nan, 0.22305088709945503], 'false,false': [nan, 0.22305088709945503]}
{'': [nan, 0.22254095484275574], 'false': [nan, 0.22254095484275574], 'false,false': [nan, 0.22254095484275574], 'false,false,false': [nan, 0.22254095484275574]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 7.781
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.22148226843284072;  // std dev = 18.627, 1,500.000 (wgt'ed) examples reached here.  /* #neg=955 #pos=545 */
%   | | | else return 0.02178529873587505;  // std dev = 5.487, 220.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.18968277607659048;  // std dev = 0.480, 1,511.000 (wgt'ed) examples reached here.  /* #neg=966 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02528759842072039;  // std dev = 3.866, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return 0.008018650547359328;  // std dev = 3.906, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.09670248159150184;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.15639541813506067;  // std dev = 18.458, 1,486.000 (wgt'ed) examples reached here.  /* #neg=957 #pos=529 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.028792203202048804;  // std dev = 3.850, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | | else return 0.01519633590306777;  // std dev = 3.887, 112.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.13173110725101336;  // std dev = 0.479, 1,526.000 (wgt'ed) examples reached here.  /* #neg=981 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return -0.022662798891557874;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.0072041186005586235;  // std dev = 5.355, 217.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.10861518853955261;  // std dev = 18.706, 1,523.000 (wgt'ed) examples reached here.  /* #neg=978 #pos=545 */
%   | | | else return 0.0137351896864518;  // std dev = 5.486, 220.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07917552174215857;  // std dev = 19.509, 1,737.000 (wgt'ed) examples reached here.  /* #neg=1,156 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07828805697553157;  // std dev = 18.612, 1,496.000 (wgt'ed) examples reached here.  /* #neg=951 #pos=545 */
%   | | | else return -0.003485013372906923;  // std dev = 5.502, 227.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05597521878695943;  // std dev = 19.408, 1,702.000 (wgt'ed) examples reached here.  /* #neg=1,121 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.03717011811858308;  // std dev = 18.801, 1,551.000 (wgt'ed) examples reached here.  /* #neg=1,006 #pos=545 */
%   | | | else return -0.0012470685943299694;  // std dev = 5.471, 214.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02804569468133374;  // std dev = 19.535, 1,757.000 (wgt'ed) examples reached here.  /* #neg=1,176 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.615', 'seconds']
Refined model CLL: -0.528349


******************************************
Best model found
******************************************
Results 

CLL : -0.730477 

AUC ROC : 0.546153 

AUC PR : 0.489936 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.781 

Total Inference Time : 1.1438324451446533 

Total revision time: 11.950704833984375
Best scored revision CLL: -0.528349


Results 

CLL : -0.730477 

AUC ROC : 0.546153 

AUC PR : 0.489936 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.053956768035889 

Total Inference Time : 1.1438324451446533 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.599
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.374', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.968
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24029514227107734;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.36420092978917523;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0814045543349177;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.048527842006150124;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20205616407667265;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040794229163586;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397170698129962;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03776564972512874;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.34522386449371484;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.16719658038971072;  // std dev = 20.161, 1,667.000 (wgt'ed) examples reached here.  /* #neg=960 #pos=707 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.06418425566419737;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210243848964374;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13568635583045321;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.04320853988499053;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10202047066676333;  // std dev = 20.832, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08440976448899078;  // std dev = 20.286, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.021192958169213096;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06184579878674521;  // std dev = 20.824, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.20265740741426708;  // std dev = 2.217, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.04595677245732383;  // std dev = 20.692, 1,794.000 (wgt'ed) examples reached here.  /* #neg=1,059 #pos=735 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036726503307701414;  // std dev = 20.816, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.936', 'seconds']
Refined model CLL: -0.671485


******************************************
Best model found
******************************************
Results 

CLL : -0.643055 

AUC ROC : 0.563302 

AUC PR : 0.418039 

Precision : 0.6 

Recall : 0.002643 

F1 : 0.005263 

Total Learning Time : 8.968 

Total Inference Time : 1.0736753940582275 

Total revision time: 12.53425869178772
Best scored revision CLL: -0.671485


Results 

CLL : -0.643055 

AUC ROC : 0.563302 

AUC PR : 0.418039 

Precision : 0.6 

Recall : 0.002643 

F1 : 0.005263 

Total Learning Time : 12.637510625839234 

Total Inference Time : 1.0736753940582275 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.254
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.478', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.298
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3785938489282847;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6644684231619105;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14168213568619817;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07038583938990187;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30972674031800285;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5350832715071676;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1307735287526293;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.05808197450811088;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.24386743256744317;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.4075536339904864;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.11191418461935204;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.04984959330601078;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.19154383692676236;  // std dev = 14.118, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.05564237209344527;  // std dev = 6.261, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12494801568951681;  // std dev = 15.497, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.11393180464749932;  // std dev = 14.119, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.026605674642265476;  // std dev = 6.260, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07262454347588673;  // std dev = 15.467, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.06750701689404537;  // std dev = 14.120, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.009319631337611397;  // std dev = 6.259, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04199151509769936;  // std dev = 15.456, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.287', 'seconds']
Refined model CLL: -0.64838


******************************************
Best model found
******************************************
Results 

CLL : -0.696027 

AUC ROC : 0.554345 

AUC PR : 0.398613 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.298 

Total Inference Time : 0.9033396244049072 

Total revision time: 8.2857327003479
Best scored revision CLL: -0.64838


Results 

CLL : -0.696027 

AUC ROC : 0.554345 

AUC PR : 0.398613 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.388984634399414 

Total Inference Time : 0.9033396244049072 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.244
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.497', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.231
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20564083645138656;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4043065147315884;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014283434161880808;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0014797094419622902;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17399348696885145;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.338235469181611;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892267859778524;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.6062158589698355E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14405022986842406;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711730044372582;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353548502929053;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8327154434984003E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12107522500507469;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.005585345981830045;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076159918515974;  // std dev = 15.194, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07981137355657213;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.014780034661489451;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05069240120504113;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05134887648133331;  // std dev = 14.502, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.01934831475109224;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030894309033999888;  // std dev = 15.160, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.102', 'seconds']
Refined model CLL: -0.624506


******************************************
Best model found
******************************************
Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.231 

Total Inference Time : 0.9559969902038574 

Total revision time: 8.225406980514526
Best scored revision CLL: -0.624506


Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.284138536453247 

Total Inference Time : 0.9559969902038574 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.319
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.313', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 6.0
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37301714859831614;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5516269444842152;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5463348219282366;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.21020036814672396;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3056990706242831;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.447558147597091;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4677070955120816;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10312419784214047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.5137090760383558;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.030035232506230698;  // std dev = 1.668, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.24260188140562475;  // std dev = 17.312, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.2937243881479998;  // std dev = 3.037, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18788657336618972;  // std dev = 17.497, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.21082230326660725;  // std dev = 3.083, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14286461407994036;  // std dev = 17.766, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.10685293517614375;  // std dev = 17.496, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.12336455965878972;  // std dev = 3.083, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.080665620767053;  // std dev = 17.766, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.060065720788475295;  // std dev = 17.496, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.07375897821097413;  // std dev = 3.088, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04553041966882828;  // std dev = 17.767, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.969', 'seconds']
Refined model CLL: -0.675395


******************************************
Best model found
******************************************
Results 

CLL : -0.745456 

AUC ROC : 0.47211 

AUC PR : 0.309806 

Precision : 0.334678 

Recall : 0.997329 

F1 : 0.501175 

Total Learning Time : 6.0 

Total Inference Time : 0.9790217876434326 

Total revision time: 9.154023403167724
Best scored revision CLL: -0.675395


Results 

CLL : -0.745456 

AUC ROC : 0.47211 

AUC PR : 0.309806 

Precision : 0.334678 

Recall : 0.997329 

F1 : 0.501175 

Total Learning Time : 9.212754959106444 

Total Inference Time : 0.9790217876434326 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.962
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19535148878493971;  // std dev = 19.624, 1,723.000 (wgt'ed) examples reached here.  /* #neg=1,142 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16372120738991308;  // std dev = 0.471, 1,755.000 (wgt'ed) examples reached here.  /* #neg=1,174 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13908740093927;  // std dev = 0.470, 1,758.000 (wgt'ed) examples reached here.  /* #neg=1,177 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11909576223296704;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10244780933317103;  // std dev = 19.626, 1,724.000 (wgt'ed) examples reached here.  /* #neg=1,143 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08180683734259445;  // std dev = 19.652, 1,733.000 (wgt'ed) examples reached here.  /* #neg=1,152 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05625168756762275;  // std dev = 19.796, 1,785.000 (wgt'ed) examples reached here.  /* #neg=1,204 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05250275157189198;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.049797935474026625;  // std dev = 19.568, 1,704.000 (wgt'ed) examples reached here.  /* #neg=1,123 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028753280009582095;  // std dev = 19.725, 1,759.000 (wgt'ed) examples reached here.  /* #neg=1,178 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.259', 'seconds']
Parameter learned model CLL:-0.535787 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.624, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.471, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.47, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.626, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.652, 1, 581]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.796, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.568, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.725, 1, 581]}]
{'': [nan, 0.22349699147344124], 'false': [nan, 0.22349699147344124], 'false,false': [nan, 0.22349699147344124]}
{'': [nan, 0.22145729336614853], 'false': [nan, 0.22145729336614853]}
{'': [nan, 0.22126608606067225], 'false': [nan, 0.22126608606067225]}
{'': [nan, 0.22209472828630708], 'false': [nan, 0.22209472828630708]}
{'': [nan, 0.22343326909307165], 'false': [nan, 0.22343326909307165], 'false,false': [nan, 0.22343326909307165]}
{'': [nan, 0.22285967151344876], 'false': [nan, 0.22285967151344876], 'false,false': [nan, 0.22285967151344876], 'false,false,false': [nan, 0.22285967151344876]}
{'': [nan, 0.21954632833525795], 'false': [nan, 0.21954632833525795], 'false,false': [nan, 0.21954632833525795]}
{'': [nan, 0.22209472828628757], 'false': [nan, 0.22209472828628757], 'false,false': [nan, 0.22209472828628757], 'false,false,false': [nan, 0.22209472828628757]}
{'': [nan, 0.22470705492737897], 'false': [nan, 0.22470705492737897], 'false,false': [nan, 0.22470705492737897]}
{'': [nan, 0.22120235378453587], 'false': [nan, 0.22120235378453587], 'false,false': [nan, 0.22120235378453587], 'false,false,false': [nan, 0.22120235378453587]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.524
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.21459105413155447;  // std dev = 18.728, 1,529.000 (wgt'ed) examples reached here.  /* #neg=984 #pos=545 */
%   | | | else return 0.022532496743347025;  // std dev = 5.485, 219.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.17779528008543571;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.19106134329957558;  // std dev = 18.384, 1,465.000 (wgt'ed) examples reached here.  /* #neg=936 #pos=529 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.026969069083258416;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.024538100948934112;  // std dev = 5.315, 201.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=34 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.13488172414310065;  // std dev = 3.267, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.161228068245294;  // std dev = 18.401, 1,470.000 (wgt'ed) examples reached here.  /* #neg=941 #pos=529 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.027326418343405056;  // std dev = 3.853, 103.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=18 */
%   | | | else return 0.009563304772149889;  // std dev = 3.896, 115.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.1359734510307348;  // std dev = 0.480, 1,508.000 (wgt'ed) examples reached here.  /* #neg=963 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return -0.01774929192254667;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.01575241663732318;  // std dev = 5.326, 205.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1106365919052222;  // std dev = 18.666, 1,511.000 (wgt'ed) examples reached here.  /* #neg=966 #pos=545 */
%   | | | else return 0.007354020477738667;  // std dev = 5.503, 227.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07517334936298538;  // std dev = 19.546, 1,755.000 (wgt'ed) examples reached here.  /* #neg=1,174 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07880174836249157;  // std dev = 18.599, 1,492.000 (wgt'ed) examples reached here.  /* #neg=947 #pos=545 */
%   | | | else return -0.006239790742455407;  // std dev = 5.511, 231.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05139208108433818;  // std dev = 19.449, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,153 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.0423889831938787;  // std dev = 18.731, 1,530.000 (wgt'ed) examples reached here.  /* #neg=985 #pos=545 */
%   | | | else return -0.008571807018604464;  // std dev = 5.499, 225.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02673394102868449;  // std dev = 19.551, 1,761.000 (wgt'ed) examples reached here.  /* #neg=1,180 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.626', 'seconds']
Refined model CLL: -0.528341


******************************************
Best model found
******************************************
Results 

CLL : -0.730371 

AUC ROC : 0.545912 

AUC PR : 0.489877 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.524 

Total Inference Time : 1.2974021434783936 

Total revision time: 12.742190061569213
Best scored revision CLL: -0.528341


Results 

CLL : -0.730371 

AUC ROC : 0.545912 

AUC PR : 0.489877 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.800921617507933 

Total Inference Time : 1.2974021434783936 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.66
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.377', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 9.595
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24029514227107734;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.36420092978917523;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0814045543349177;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.048527842006150124;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20205616407667265;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040794229163586;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397170698129957;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03776564972512874;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562187444395876;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24431902143844492;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06418425566419735;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210243848964374;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1356263520710294;  // std dev = 20.289, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.043208539884990474;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1019840385219085;  // std dev = 20.834, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08438615753059196;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.02119873318020953;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06183570933149442;  // std dev = 20.826, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05080679235401979;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.00770568615025668;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03654718773897957;  // std dev = 20.822, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.039', 'seconds']
Refined model CLL: -0.671757


******************************************
Best model found
******************************************
Results 

CLL : -0.642364 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.595 

Total Inference Time : 1.1480083465576172 

Total revision time: 13.296079998016358
Best scored revision CLL: -0.671757


Results 

CLL : -0.642364 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.354811553955079 

Total Inference Time : 1.1480083465576172 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.392
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.358', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.224
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3785938489282847;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6644684231619105;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14168213568619817;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07038583938990187;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30972674031800285;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5350832715071676;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1307735287526293;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.05808197450811092;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.13254975084434328;  // std dev = 3.806, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.25917665944386004;  // std dev = 13.576, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11209163341431508;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.04978970433771053;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.19157705528201566;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.05564362711145944;  // std dev = 6.261, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12490380530970259;  // std dev = 15.495, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.11383568414899724;  // std dev = 14.116, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.026614208229176903;  // std dev = 6.260, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0725333511350253;  // std dev = 15.464, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.06738680697218036;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.00934334445336889;  // std dev = 6.259, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04190487865169753;  // std dev = 15.453, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.008', 'seconds']
Refined model CLL: -0.648321


******************************************
Best model found
******************************************
Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.224 

Total Inference Time : 0.937110424041748 

Total revision time: 8.330556694030761
Best scored revision CLL: -0.648321


Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.389288249969482 

Total Inference Time : 0.937110424041748 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.254
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.348', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.213
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20564083645138656;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4043065147315884;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014283434161880808;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0014797094419622902;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17399348696885145;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.338235469181611;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892267859778524;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.6062158589698355E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14405022986842406;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711730044372582;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353548502929053;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8327154434984003E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12107522500507462;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.005585345981830053;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076159918515974;  // std dev = 15.194, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07981137355657208;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.014780034661489437;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05069240120504116;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05134887648133335;  // std dev = 14.502, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.01934831475109223;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03089430903399997;  // std dev = 15.160, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.115', 'seconds']
Refined model CLL: -0.624506


******************************************
Best model found
******************************************
Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.213 

Total Inference Time : 1.003688097000122 

Total revision time: 8.26142834854126
Best scored revision CLL: -0.624506


Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.290914289474488 

Total Inference Time : 1.003688097000122 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.382
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.394', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 7.11
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37301714859831614;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5516269444842152;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5463348219282366;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.21020036814672396;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3056990706242831;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.447558147597091;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4677070955120816;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10312419784214047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.24119684112806916;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3449923596624612;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.36528283524978;  // std dev = 2.316, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.073604493530158;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1878332835596802;  // std dev = 17.519, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.21204760056972058;  // std dev = 3.039, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14288304738906582;  // std dev = 17.781, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1617936566886061;  // std dev = 2.775, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.10608743616599103;  // std dev = 17.560, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08069441563124556;  // std dev = 17.781, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1012694816928768;  // std dev = 2.775, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.05954655962337816;  // std dev = 17.562, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04555114156332839;  // std dev = 17.781, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.134', 'seconds']
Refined model CLL: -0.676114


******************************************
Best model found
******************************************
Results 

CLL : -0.742127 

AUC ROC : 0.495873 

AUC PR : 0.31912 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 7.11 

Total Inference Time : 0.9851634502410889 

Total revision time: 10.306269781112672
Best scored revision CLL: -0.676114


Results 

CLL : -0.742127 

AUC ROC : 0.495873 

AUC PR : 0.31912 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 10.3357557220459 

Total Inference Time : 0.9851634502410889 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.968
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19359928151983066;  // std dev = 19.650, 1,732.000 (wgt'ed) examples reached here.  /* #neg=1,151 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1654811938755605;  // std dev = 0.471, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14288929469315953;  // std dev = 0.472, 1,738.000 (wgt'ed) examples reached here.  /* #neg=1,157 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11505518748523877;  // std dev = 19.737, 1,763.000 (wgt'ed) examples reached here.  /* #neg=1,182 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09919855763249093;  // std dev = 19.675, 1,741.000 (wgt'ed) examples reached here.  /* #neg=1,160 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08421494308481477;  // std dev = 19.626, 1,724.000 (wgt'ed) examples reached here.  /* #neg=1,143 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06373295941194129;  // std dev = 19.689, 1,746.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048182459200212475;  // std dev = 19.731, 1,761.000 (wgt'ed) examples reached here.  /* #neg=1,180 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04116477191059411;  // std dev = 19.689, 1,746.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03547264140925283;  // std dev = 19.647, 1,731.000 (wgt'ed) examples reached here.  /* #neg=1,150 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.315', 'seconds']
Parameter learned model CLL:-0.535805 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.65, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.471, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.472, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.737, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.675, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.626, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.689, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.731, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.689, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.647, 1, 581]}]
{'': [nan, 0.22292341150679407], 'false': [nan, 0.22292341150679407], 'false,false': [nan, 0.22292341150679407]}
{'': [nan, 0.22196723535220453], 'false': [nan, 0.22196723535220453]}
{'': [nan, 0.22254095484273312], 'false': [nan, 0.22254095484273312]}
{'': [nan, 0.22094744526439755], 'false': [nan, 0.22094744526439755]}
{'': [nan, 0.22234971615737317], 'false': [nan, 0.22234971615737317], 'false,false': [nan, 0.22234971615737317]}
{'': [nan, 0.22343326909309644], 'false': [nan, 0.22343326909309644], 'false,false': [nan, 0.22343326909309644], 'false,false,false': [nan, 0.22343326909309644]}
{'': [nan, 0.22203098163169824], 'false': [nan, 0.22203098163169824], 'false,false': [nan, 0.22203098163169824]}
{'': [nan, 0.22107489517501938], 'false': [nan, 0.22107489517501938], 'false,false': [nan, 0.22107489517501938], 'false,false,false': [nan, 0.22107489517501938]}
{'': [nan, 0.2220309816317063], 'false': [nan, 0.2220309816317063], 'false,false': [nan, 0.2220309816317063]}
{'': [nan, 0.2229871500796964], 'false': [nan, 0.2229871500796964], 'false,false': [nan, 0.2229871500796964], 'false,false,false': [nan, 0.2229871500796964]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.142
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2209984690542344;  // std dev = 18.635, 1,502.000 (wgt'ed) examples reached here.  /* #neg=957 #pos=545 */
%   | | | else return 0.03290621665290941;  // std dev = 5.451, 206.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.15559367617216469;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.18481289580352592;  // std dev = 18.461, 1,487.000 (wgt'ed) examples reached here.  /* #neg=958 #pos=529 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.03966289253334201;  // std dev = 3.829, 97.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=18 */
%   | | | else return 0.02717280530098676;  // std dev = 3.858, 104.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.14629763659370787;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.15941852229207848;  // std dev = 18.426, 1,477.000 (wgt'ed) examples reached here.  /* #neg=948 #pos=529 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.02384078950708415;  // std dev = 3.854, 103.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=18 */
%   | | | else return -0.002981508650904299;  // std dev = 3.920, 123.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.1313238136417969;  // std dev = 0.479, 1,529.000 (wgt'ed) examples reached here.  /* #neg=984 #pos=545 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.02413228315835136;  // std dev = 3.858, 104.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
%   | | | else return 0.011326062211237732;  // std dev = 3.876, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.10549083539201207;  // std dev = 18.758, 1,538.000 (wgt'ed) examples reached here.  /* #neg=993 #pos=545 */
%   | | | else return 0.010099640375529855;  // std dev = 5.486, 220.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07350822827378901;  // std dev = 19.605, 1,770.000 (wgt'ed) examples reached here.  /* #neg=1,189 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08027669905083402;  // std dev = 18.616, 1,497.000 (wgt'ed) examples reached here.  /* #neg=952 #pos=545 */
%   | | | else return 0.007393422724851609;  // std dev = 5.458, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04840106437188741;  // std dev = 19.530, 1,754.000 (wgt'ed) examples reached here.  /* #neg=1,173 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.04348134933080112;  // std dev = 18.761, 1,539.000 (wgt'ed) examples reached here.  /* #neg=994 #pos=545 */
%   | | | else return -0.01265445886128169;  // std dev = 5.498, 225.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025014906976880198;  // std dev = 19.606, 1,785.000 (wgt'ed) examples reached here.  /* #neg=1,204 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.655', 'seconds']
Refined model CLL: -0.527287


******************************************
Best model found
******************************************
Results 

CLL : -0.732268 

AUC ROC : 0.546737 

AUC PR : 0.490099 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.142 

Total Inference Time : 1.2844765186309814 

Total revision time: 12.38461552619934
Best scored revision CLL: -0.527287


Results 

CLL : -0.732268 

AUC ROC : 0.546737 

AUC PR : 0.490099 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.414101467132568 

Total Inference Time : 1.2844765186309814 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.578
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.477', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.896
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24029514227107734;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.36420092978917523;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0814045543349177;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.048527842006150124;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20205616407667265;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040794229163586;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397170698129957;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03776564972512874;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562187444395876;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24431902143844492;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06418425566419733;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210243848964374;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13562635207102938;  // std dev = 20.289, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.04320853988499047;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10198403852190846;  // std dev = 20.834, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08438615753059196;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.02119873318020954;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06183570933149447;  // std dev = 20.826, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.050806792354019845;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.007705686150256595;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036547187738979456;  // std dev = 20.822, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.006', 'seconds']
Refined model CLL: -0.671757


******************************************
Best model found
******************************************
Results 

CLL : -0.642364 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.896 

Total Inference Time : 1.0378010272979736 

Total revision time: 12.378800176620484
Best scored revision CLL: -0.671757


Results 

CLL : -0.642364 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.408286117553711 

Total Inference Time : 1.0378010272979736 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.231
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.352', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.224
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3785938489282847;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6644684231619105;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14168213568619817;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07038583938990187;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30972674031800285;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5350832715071676;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1307735287526293;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.05808197450811083;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.24386743256744317;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.4075536339904864;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.11209163341431513;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.04978970433771048;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.19154383692676225;  // std dev = 14.118, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.05564362711145941;  // std dev = 6.261, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12494823207383758;  // std dev = 15.497, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.113931750833312;  // std dev = 14.119, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.02660668028357576;  // std dev = 6.260, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07262467945306982;  // std dev = 15.467, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.06750694276718079;  // std dev = 14.120, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.00932040002307924;  // std dev = 6.259, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041991598457113546;  // std dev = 15.456, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.251', 'seconds']
Refined model CLL: -0.648379


******************************************
Best model found
******************************************
Results 

CLL : -0.696027 

AUC ROC : 0.554345 

AUC PR : 0.398613 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.224 

Total Inference Time : 0.9745748043060303 

Total revision time: 8.213350133895874
Best scored revision CLL: -0.648379


Results 

CLL : -0.696027 

AUC ROC : 0.554345 

AUC PR : 0.398613 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.242836074829102 

Total Inference Time : 0.9745748043060303 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.253
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.347', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.078
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20564083645138656;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4043065147315884;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014283434161880808;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0014797094419622902;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17399348696885145;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.338235469181611;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892267859778526;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.6062158589698425E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14405022986842406;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711730044372582;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353548502929038;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8327154434982875E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12107522500507474;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.005585345981830023;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076159918515975;  // std dev = 15.194, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07981137355657204;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.014780034661489359;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0506924012050412;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.051348876481333315;  // std dev = 14.502, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.019348314751092232;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030894309034000044;  // std dev = 15.160, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.105', 'seconds']
Refined model CLL: -0.624506


******************************************
Best model found
******************************************
Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.078 

Total Inference Time : 0.8953590393066406 

Total revision time: 7.976728349685669
Best scored revision CLL: -0.624506


Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.080542236328125 

Total Inference Time : 0.8953590393066406 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.332
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.306', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 7.319
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37301714859831614;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5516269444842152;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5463348219282366;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.21020036814672396;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3056990706242831;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.447558147597091;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4677070955120816;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10312419784214047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.24119684112806916;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3449923596624612;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.36528283524977995;  // std dev = 2.316, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.073604493530158;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.24491381256939143;  // std dev = 2.759, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.18727059226417433;  // std dev = 17.563, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14288164989622001;  // std dev = 17.780, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.1497220958335553;  // std dev = 2.759, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.10639336290944067;  // std dev = 17.563, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08068869997399379;  // std dev = 17.780, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05965290252740264;  // std dev = 17.516, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.08526710006363648;  // std dev = 3.050, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04555558718692841;  // std dev = 17.781, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.127', 'seconds']
Refined model CLL: -0.676106


******************************************
Best model found
******************************************
Results 

CLL : -0.742222 

AUC ROC : 0.497074 

AUC PR : 0.319708 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 7.319 

Total Inference Time : 1.0074150562286377 

Total revision time: 10.509725547790527
Best scored revision CLL: -0.676106


Results 

CLL : -0.742222 

AUC ROC : 0.497074 

AUC PR : 0.319708 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 10.613539434432983 

Total Inference Time : 1.0074150562286377 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 2.0
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.197518093978012;  // std dev = 19.591, 1,712.000 (wgt'ed) examples reached here.  /* #neg=1,131 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16341911099953182;  // std dev = 0.471, 1,755.000 (wgt'ed) examples reached here.  /* #neg=1,174 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14570785190627902;  // std dev = 0.473, 1,722.000 (wgt'ed) examples reached here.  /* #neg=1,141 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12074689541635525;  // std dev = 19.641, 1,729.000 (wgt'ed) examples reached here.  /* #neg=1,148 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0914942128698141;  // std dev = 19.761, 1,772.000 (wgt'ed) examples reached here.  /* #neg=1,191 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07813653950811124;  // std dev = 19.709, 1,753.000 (wgt'ed) examples reached here.  /* #neg=1,172 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06612829138066047;  // std dev = 19.664, 1,737.000 (wgt'ed) examples reached here.  /* #neg=1,156 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05046273170062513;  // std dev = 19.700, 1,750.000 (wgt'ed) examples reached here.  /* #neg=1,169 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.041668547728691156;  // std dev = 19.678, 1,742.000 (wgt'ed) examples reached here.  /* #neg=1,161 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.040620546164237624;  // std dev = 19.565, 1,703.000 (wgt'ed) examples reached here.  /* #neg=1,122 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.301', 'seconds']
Parameter learned model CLL:-0.536504 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.591, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.471, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.473, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.641, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.761, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.709, 1, 581]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.664, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.7, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.678, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.565, 1, 581]}]
{'': [nan, 0.22419773288058678], 'false': [nan, 0.22419773288058678], 'false,false': [nan, 0.22419773288058678]}
{'': [nan, 0.22145729336614747], 'false': [nan, 0.22145729336614747]}
{'': [nan, 0.2235607112168768], 'false': [nan, 0.2235607112168768]}
{'': [nan, 0.22311462243275612], 'false': [nan, 0.22311462243275612]}
{'': [nan, 0.22037405286141554], 'false': [nan, 0.22037405286141554], 'false,false': [nan, 0.22037405286141554]}
{'': [nan, 0.22158477244940972], 'false': [nan, 0.22158477244940972], 'false,false': [nan, 0.22158477244940972], 'false,false,false': [nan, 0.22158477244940972]}
{'': [nan, 0.22260469996875631], 'false': [nan, 0.22260469996875631], 'false,false': [nan, 0.22260469996875631]}
{'': [nan, 0.22177599999998168], 'false': [nan, 0.22177599999998168], 'false,false': [nan, 0.22177599999998168], 'false,false,false': [nan, 0.22177599999998168]}
{'': [nan, 0.2222859692529017], 'false': [nan, 0.2222859692529017], 'false,false': [nan, 0.2222859692529017]}
{'': [nan, 0.2247706975600887], 'false': [nan, 0.2247706975600887], 'false,false': [nan, 0.2247706975600887], 'false,false,false': [nan, 0.2247706975600887]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 7.925
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.21435808542630475;  // std dev = 18.731, 1,530.000 (wgt'ed) examples reached here.  /* #neg=985 #pos=545 */
%   | | | else return 0.03548883657734384;  // std dev = 5.442, 203.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.17042759913747896;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.18455970797327298;  // std dev = 18.478, 1,492.000 (wgt'ed) examples reached here.  /* #neg=963 #pos=529 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.03744722116540214;  // std dev = 3.833, 98.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=18 */
%   | | | else return 0.025202323206218503;  // std dev = 3.862, 105.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.16770586359329478;  // std dev = 0.482, 1,492.000 (wgt'ed) examples reached here.  /* #neg=947 #pos=545 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return -0.03212139845732131;  // std dev = 1.329, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.01018048281588021;  // std dev = 5.343, 212.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=34 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.12814084955047056;  // std dev = 0.478, 1,541.000 (wgt'ed) examples reached here.  /* #neg=996 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.018073604543148606;  // std dev = 3.870, 107.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=18 */
%   | | | else return -0.0020733175487303176;  // std dev = 3.911, 120.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.11153130285806791;  // std dev = 18.673, 1,513.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=545 */
%   | | | else return 0.012234288766442246;  // std dev = 5.484, 219.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.080683194321827;  // std dev = 19.477, 1,732.000 (wgt'ed) examples reached here.  /* #neg=1,151 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07038003025176755;  // std dev = 18.725, 1,528.000 (wgt'ed) examples reached here.  /* #neg=983 #pos=545 */
%   | | | else return -0.0029945293743961553;  // std dev = 5.493, 223.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04785941365772958;  // std dev = 19.535, 1,755.000 (wgt'ed) examples reached here.  /* #neg=1,174 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.03311978819690259;  // std dev = 19.008, 1,637.000 (wgt'ed) examples reached here.  /* #neg=1,089 #pos=548 */
%   | | | else return 0.09097116904502245;  // std dev = 4.619, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01941971597529777;  // std dev = 19.696, 1,818.000 (wgt'ed) examples reached here.  /* #neg=1,237 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.738', 'seconds']
Refined model CLL: -0.526655


******************************************
Best model found
******************************************
Results 

CLL : -0.73396 

AUC ROC : 0.551937 

AUC PR : 0.505203 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.925 

Total Inference Time : 1.252631664276123 

Total revision time: 12.220895338058472
Best scored revision CLL: -0.526655


Results 

CLL : -0.73396 

AUC ROC : 0.551937 

AUC PR : 0.505203 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.324709224700928 

Total Inference Time : 1.252631664276123 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.638
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.349', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.617
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24029514227107734;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.36420092978917523;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0814045543349177;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.048527842006150124;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20205616407667265;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040794229163586;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397170698129953;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03776564972512874;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562187444395876;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24431902143844492;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06418425566419735;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210243848964374;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1356263520710294;  // std dev = 20.289, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.04320853988499052;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10198403852190843;  // std dev = 20.834, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08438615753059202;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.02119873318020959;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06183570933149444;  // std dev = 20.826, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05080679235401972;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.007705686150256718;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03654718773897951;  // std dev = 20.822, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.072', 'seconds']
Refined model CLL: -0.671757


******************************************
Best model found
******************************************
Results 

CLL : -0.642364 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.617 

Total Inference Time : 1.0674548149108887 

Total revision time: 12.199277048110963
Best scored revision CLL: -0.671757


Results 

CLL : -0.642364 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.303090934753419 

Total Inference Time : 1.0674548149108887 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.217
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.293', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.382
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3785938489282847;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6644684231619105;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14168213568619817;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07038583938990187;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30972674031800285;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5350832715071676;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1307735287526293;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.058081974508110853;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.13254975084434328;  // std dev = 3.806, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.25917665944386004;  // std dev = 13.576, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11209163341431509;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.049789704337710475;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.19157705528201557;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.0556436271114595;  // std dev = 6.261, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12490380530970242;  // std dev = 15.495, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.11383568414899721;  // std dev = 14.116, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.026614208229176893;  // std dev = 6.260, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07253335113502517;  // std dev = 15.464, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.06738680697218037;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.009343344453368943;  // std dev = 6.259, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041904878651698105;  // std dev = 15.453, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.023', 'seconds']
Refined model CLL: -0.648321


******************************************
Best model found
******************************************
Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.382 

Total Inference Time : 0.9156143665313721 

Total revision time: 8.30364849472046
Best scored revision CLL: -0.648321


Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.407462381362915 

Total Inference Time : 0.9156143665313721 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.343
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.396', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.307
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20564083645138656;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4043065147315884;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014283434161880808;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0014797094419622902;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17399348696885145;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.338235469181611;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892267859778524;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.6062158589698355E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14405022986842406;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711730044372582;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353548502929027;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.832715443498316E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12107522500507477;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.005585345981830015;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076159918515963;  // std dev = 15.194, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07981137355657215;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.014780034661489416;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050692401205041135;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.051348876481333294;  // std dev = 14.502, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.019348314751092215;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030894309034000072;  // std dev = 15.160, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.135', 'seconds']
Refined model CLL: -0.624506


******************************************
Best model found
******************************************
Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.307 

Total Inference Time : 0.9145936965942383 

Total revision time: 8.368478679656983
Best scored revision CLL: -0.624506


Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.427788400650025 

Total Inference Time : 0.9145936965942383 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.44
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.383', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 6.775
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37301714859831614;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5516269444842152;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5463348219282366;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.21020036814672396;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3056990706242831;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.447558147597091;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4677070955120816;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10312419784214047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.24119684112806916;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3449923596624612;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.36528283524978006;  // std dev = 2.316, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.073604493530158;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18783328355968018;  // std dev = 17.519, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.21204760056972058;  // std dev = 3.039, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14288304738906588;  // std dev = 17.781, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1617936566886064;  // std dev = 2.775, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.10608743616599106;  // std dev = 17.560, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08069441563124566;  // std dev = 17.781, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.06128402814620093;  // std dev = 17.553, 1,279.000 (wgt'ed) examples reached here.  /* #neg=531 #pos=748 */
%   | | | else return 0.0360641759456903;  // std dev = 2.834, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04554233650597379;  // std dev = 17.782, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.175', 'seconds']
Refined model CLL: -0.676138


******************************************
Best model found
******************************************
Results 

CLL : -0.741556 

AUC ROC : 0.498825 

AUC PR : 0.320519 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 6.775 

Total Inference Time : 1.0185892581939697 

Total revision time: 10.060709800720215
Best scored revision CLL: -0.676138


Results 

CLL : -0.741556 

AUC ROC : 0.498825 

AUC PR : 0.320519 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 10.120019521713257 

Total Inference Time : 1.0185892581939697 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 2.059
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19321237223906904;  // std dev = 19.655, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,153 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17372737632566845;  // std dev = 0.474, 1,705.000 (wgt'ed) examples reached here.  /* #neg=1,124 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13655616085961172;  // std dev = 0.470, 1,765.000 (wgt'ed) examples reached here.  /* #neg=1,184 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11953832929547033;  // std dev = 19.667, 1,738.000 (wgt'ed) examples reached here.  /* #neg=1,157 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09526740469082298;  // std dev = 19.717, 1,756.000 (wgt'ed) examples reached here.  /* #neg=1,175 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07843625155184597;  // std dev = 19.706, 1,752.000 (wgt'ed) examples reached here.  /* #neg=1,171 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06369946378045822;  // std dev = 19.700, 1,750.000 (wgt'ed) examples reached here.  /* #neg=1,169 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05407474166289559;  // std dev = 19.655, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,153 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.037884334868785285;  // std dev = 19.731, 1,761.000 (wgt'ed) examples reached here.  /* #neg=1,180 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030929797630297913;  // std dev = 19.717, 1,756.000 (wgt'ed) examples reached here.  /* #neg=1,175 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.289', 'seconds']
Parameter learned model CLL:-0.535239 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.655, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.474, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.47, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.667, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.717, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.706, 1, 581]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.7, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.655, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.731, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.717, 1, 581]}]
{'': [nan, 0.22279593023177036], 'false': [nan, 0.22279593023177036], 'false,false': [nan, 0.22279593023177036]}
{'': [nan, 0.22464340691945558], 'false': [nan, 0.22464340691945558]}
{'': [nan, 0.22082000497557203], 'false': [nan, 0.22082000497557203]}
{'': [nan, 0.2225409548427433], 'false': [nan, 0.2225409548427433]}
{'': [nan, 0.22139355596951987], 'false': [nan, 0.22139355596951987], 'false,false': [nan, 0.22139355596951987]}
{'': [nan, 0.22164851389670975], 'false': [nan, 0.22164851389670975], 'false,false': [nan, 0.22164851389670975], 'false,false,false': [nan, 0.22164851389670975]}
{'': [nan, 0.22177600000001643], 'false': [nan, 0.22177600000001643], 'false,false': [nan, 0.22177600000001643]}
{'': [nan, 0.2227959302317727], 'false': [nan, 0.2227959302317727], 'false,false': [nan, 0.2227959302317727], 'false,false,false': [nan, 0.2227959302317727]}
{'': [nan, 0.22107489517500942], 'false': [nan, 0.22107489517500942], 'false,false': [nan, 0.22107489517500942]}
{'': [nan, 0.2213935559695278], 'false': [nan, 0.2213935559695278], 'false,false': [nan, 0.2213935559695278], 'false,false,false': [nan, 0.2213935559695278]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 7.7
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2219673596655955;  // std dev = 18.620, 1,498.000 (wgt'ed) examples reached here.  /* #neg=953 #pos=545 */
%   | | | else return 0.027960255854228358;  // std dev = 5.467, 212.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.1800855052056969;  // std dev = 0.477, 1,552.000 (wgt'ed) examples reached here.  /* #neg=1,007 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04418483401105536;  // std dev = 3.820, 95.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=18 */
%   | | | else return -0.0024317073423281497;  // std dev = 3.928, 126.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.1351912611473507;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.16025901182485275;  // std dev = 18.423, 1,476.000 (wgt'ed) examples reached here.  /* #neg=947 #pos=529 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.02323715789530981;  // std dev = 3.869, 107.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=18 */
%   | | | else return 0.008637834923425002;  // std dev = 3.889, 113.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.1319758721868058;  // std dev = 0.479, 1,528.000 (wgt'ed) examples reached here.  /* #neg=983 #pos=545 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return -0.02646198034551568;  // std dev = 1.322, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.018652529462400584;  // std dev = 5.317, 202.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.10398999192994084;  // std dev = 18.785, 1,546.000 (wgt'ed) examples reached here.  /* #neg=1,001 #pos=545 */
%   | | | else return -0.0017974635525269066;  // std dev = 5.531, 240.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07896684615034671;  // std dev = 19.540, 1,744.000 (wgt'ed) examples reached here.  /* #neg=1,163 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07550998814506393;  // std dev = 18.679, 1,515.000 (wgt'ed) examples reached here.  /* #neg=970 #pos=545 */
%   | | | else return 0.0028634547665246394;  // std dev = 5.483, 218.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.043812910595051074;  // std dev = 19.616, 1,781.000 (wgt'ed) examples reached here.  /* #neg=1,200 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.049175815722665384;  // std dev = 18.701, 1,521.000 (wgt'ed) examples reached here.  /* #neg=976 #pos=545 */
%   | | | else return -0.0048052300750378;  // std dev = 5.486, 220.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036249993952094876;  // std dev = 19.459, 1,721.000 (wgt'ed) examples reached here.  /* #neg=1,140 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.630', 'seconds']
Refined model CLL: -0.52801


******************************************
Best model found
******************************************
Results 

CLL : -0.730881 

AUC ROC : 0.546594 

AUC PR : 0.490058 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.7 

Total Inference Time : 1.1234455108642578 

Total revision time: 11.907313999176026
Best scored revision CLL: -0.52801


Results 

CLL : -0.730881 

AUC ROC : 0.546594 

AUC PR : 0.490058 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.966623720169068 

Total Inference Time : 1.1234455108642578 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.719
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.349', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.987
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24029514227107734;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.36420092978917523;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0814045543349177;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.048527842006150124;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20205616407667265;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040794229163586;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397170698129955;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03776564972512874;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562187444395876;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24431902143844492;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06418425566419737;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210243848964374;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1356263520710294;  // std dev = 20.289, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.04320853988499055;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10198403852190836;  // std dev = 20.834, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08438615753059199;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.021198733180209584;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.061835709331494425;  // std dev = 20.826, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.20730782156984007;  // std dev = 2.232, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.04589962222714504;  // std dev = 20.692, 1,794.000 (wgt'ed) examples reached here.  /* #neg=1,059 #pos=735 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03672942666774392;  // std dev = 20.818, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.975', 'seconds']
Refined model CLL: -0.671585


******************************************
Best model found
******************************************
Results 

CLL : -0.642695 

AUC ROC : 0.564582 

AUC PR : 0.418933 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 8.987 

Total Inference Time : 1.0484116077423096 

Total revision time: 12.639426141738891
Best scored revision CLL: -0.671585


Results 

CLL : -0.642695 

AUC ROC : 0.564582 

AUC PR : 0.418933 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 12.698735862731933 

Total Inference Time : 1.0484116077423096 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.246
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.333', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.341
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3785938489282847;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6644684231619105;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14168213568619817;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07038583938990187;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30972674031800285;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5350832715071676;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.13077352875262932;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.05808197450811085;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordauthor(F, E) )
%   | | | then return 0.6098989157413459;  // std dev = 0.189, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24557924541535636;  // std dev = 14.084, 826.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=488 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.11209163341431508;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.049789704337710475;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.19156793706373462;  // std dev = 14.110, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.055643627111459454;  // std dev = 6.261, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12492766916104583;  // std dev = 15.490, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.11388288388895382;  // std dev = 14.111, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.026610164614208252;  // std dev = 6.260, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0725766459532962;  // std dev = 15.460, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.06744311186318552;  // std dev = 14.112, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.009332051103682312;  // std dev = 6.259, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041944973020883486;  // std dev = 15.449, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.047', 'seconds']
Refined model CLL: -0.647964


******************************************
Best model found
******************************************
Results 

CLL : -0.69583 

AUC ROC : 0.55543 

AUC PR : 0.40047 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.341 

Total Inference Time : 0.9853212833404541 

Total revision time: 8.348727809906006
Best scored revision CLL: -0.647964


Results 

CLL : -0.69583 

AUC ROC : 0.55543 

AUC PR : 0.40047 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.408037530899048 

Total Inference Time : 0.9853212833404541 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.275
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.393', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.499
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20564083645138656;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4043065147315884;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014283434161880808;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0014797094419622902;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17399348696885145;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.338235469181611;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892267859778524;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.6062158589698355E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14405022986842406;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711730044372582;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353548502929038;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8327154434984003E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12107522500507456;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.0055853459818300324;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076159918515945;  // std dev = 15.194, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07981137355657214;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.014780034661489421;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050692401205041246;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05134887648133334;  // std dev = 14.502, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.01934831475109223;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030894309033999874;  // std dev = 15.160, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.124', 'seconds']
Refined model CLL: -0.624506


******************************************
Best model found
******************************************
Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.499 

Total Inference Time : 0.962465763092041 

Total revision time: 8.502004932403564
Best scored revision CLL: -0.624506


Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.53135831260681 

Total Inference Time : 0.962465763092041 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.374
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.346', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 6.019
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37301714859831614;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5516269444842152;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5463348219282366;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.21020036814672396;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3056990706242831;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.447558147597091;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4677070955120816;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10312419784214047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.5137090760383558;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.029536270271713124;  // std dev = 1.666, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.2426018814056248;  // std dev = 17.312, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.293586377317176;  // std dev = 3.039, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18788552902097874;  // std dev = 17.497, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.21084268522754734;  // std dev = 3.083, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14286451851898296;  // std dev = 17.766, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.10685207913063877;  // std dev = 17.496, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.1233873020303052;  // std dev = 3.083, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08066570203956266;  // std dev = 17.766, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.06006502715163095;  // std dev = 17.496, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.07378023976248745;  // std dev = 3.088, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045530553851992304;  // std dev = 17.767, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.895', 'seconds']
Refined model CLL: -0.675398


******************************************
Best model found
******************************************
Results 

CLL : -0.745444 

AUC ROC : 0.472121 

AUC PR : 0.309822 

Precision : 0.334678 

Recall : 0.997329 

F1 : 0.501175 

Total Learning Time : 6.019 

Total Inference Time : 1.0361049175262451 

Total revision time: 9.257594697952271
Best scored revision CLL: -0.675398


Results 

CLL : -0.745444 

AUC ROC : 0.472121 

AUC PR : 0.309822 

Precision : 0.334678 

Recall : 0.997329 

F1 : 0.501175 

Total Learning Time : 9.286948078155518 

Total Inference Time : 1.0361049175262451 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 2.065
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19148226843284066;  // std dev = 19.681, 1,743.000 (wgt'ed) examples reached here.  /* #neg=1,162 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16313166953930872;  // std dev = 0.470, 1,761.000 (wgt'ed) examples reached here.  /* #neg=1,180 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1386524079739164;  // std dev = 0.470, 1,764.000 (wgt'ed) examples reached here.  /* #neg=1,183 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12145080852205578;  // std dev = 19.664, 1,737.000 (wgt'ed) examples reached here.  /* #neg=1,156 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10173449388190141;  // std dev = 19.644, 1,730.000 (wgt'ed) examples reached here.  /* #neg=1,149 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08280902477323902;  // std dev = 19.647, 1,731.000 (wgt'ed) examples reached here.  /* #neg=1,150 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.056329823627818534;  // std dev = 19.802, 1,787.000 (wgt'ed) examples reached here.  /* #neg=1,206 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05955699977565805;  // std dev = 19.589, 1,711.000 (wgt'ed) examples reached here.  /* #neg=1,130 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.036818841372995195;  // std dev = 19.745, 1,766.000 (wgt'ed) examples reached here.  /* #neg=1,185 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02858863920108732;  // std dev = 19.753, 1,769.000 (wgt'ed) examples reached here.  /* #neg=1,188 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.323', 'seconds']
Parameter learned model CLL:-0.534965 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.681, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.47, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.47, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.664, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.644, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.647, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.802, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.589, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.745, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.753, 1, 581]}]
{'': [nan, 0.22222222222220783], 'false': [nan, 0.22222222222220783], 'false,false': [nan, 0.22222222222220783]}
{'': [nan, 0.2210748951750194], 'false': [nan, 0.2210748951750194]}
{'': [nan, 0.22088372385990562], 'false': [nan, 0.22088372385990562]}
{'': [nan, 0.22260469996873383], 'false': [nan, 0.22260469996873383]}
{'': [nan, 0.22305088709947324], 'false': [nan, 0.22305088709947324], 'false,false': [nan, 0.22305088709947324]}
{'': [nan, 0.22298715007969877], 'false': [nan, 0.22298715007969877], 'false,false': [nan, 0.22298715007969877], 'false,false,false': [nan, 0.22298715007969877]}
{'': [nan, 0.21941905241769433], 'false': [nan, 0.21941905241769433], 'false,false': [nan, 0.21941905241769433]}
{'': [nan, 0.22426141435022234], 'false': [nan, 0.22426141435022234], 'false,false': [nan, 0.22426141435022234], 'false,false,false': [nan, 0.22426141435022234]}
{'': [nan, 0.22075628872536865], 'false': [nan, 0.22075628872536865], 'false,false': [nan, 0.22075628872536865]}
{'': [nan, 0.22056515691224135], 'false': [nan, 0.22056515691224135], 'false,false': [nan, 0.22056515691224135], 'false,false,false': [nan, 0.22056515691224135]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.215
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.22075705219864244;  // std dev = 18.638, 1,503.000 (wgt'ed) examples reached here.  /* #neg=958 #pos=545 */
%   | | | else return 0.027960255854228358;  // std dev = 5.467, 212.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.1846528297581673;  // std dev = 3.211, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.1992862175196372;  // std dev = 18.253, 1,429.000 (wgt'ed) examples reached here.  /* #neg=900 #pos=529 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0198487644794281;  // std dev = 3.877, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   | | | else return 0.016873311962691175;  // std dev = 3.883, 111.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.15596504526999874;  // std dev = 0.479, 1,527.000 (wgt'ed) examples reached here.  /* #neg=982 #pos=545 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.018895602159750835;  // std dev = 3.873, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return -0.0022354538142236135;  // std dev = 3.923, 124.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordauthor(F, E) )
%   | | | then return 0.20389602618334643;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.12940986374089214;  // std dev = 18.674, 1,520.000 (wgt'ed) examples reached here.  /* #neg=978 #pos=542 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return -0.03651334216382685;  // std dev = 1.334, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.022998846510599497;  // std dev = 5.307, 198.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.10453218111717462;  // std dev = 18.745, 1,534.000 (wgt'ed) examples reached here.  /* #neg=989 #pos=545 */
%   | | | else return 0.02032288824857553;  // std dev = 5.461, 210.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08293155622982015;  // std dev = 19.440, 1,713.000 (wgt'ed) examples reached here.  /* #neg=1,132 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07528531154661304;  // std dev = 18.634, 1,502.000 (wgt'ed) examples reached here.  /* #neg=957 #pos=545 */
%   | | | else return -0.0074940090939755;  // std dev = 5.507, 229.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04819630489801925;  // std dev = 19.505, 1,739.000 (wgt'ed) examples reached here.  /* #neg=1,158 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.04599778360278285;  // std dev = 18.683, 1,516.000 (wgt'ed) examples reached here.  /* #neg=971 #pos=545 */
%   | | | else return -0.012602548391962981;  // std dev = 5.506, 228.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0269453408914484;  // std dev = 19.548, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.685', 'seconds']
Refined model CLL: -0.528653


******************************************
Best model found
******************************************
Results 

CLL : -0.72978 

AUC ROC : 0.551139 

AUC PR : 0.501199 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.215 

Total Inference Time : 1.2141845226287842 

Total revision time: 12.460914640426635
Best scored revision CLL: -0.528653


Results 

CLL : -0.72978 

AUC ROC : 0.551139 

AUC PR : 0.501199 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.490268020629882 

Total Inference Time : 1.2141845226287842 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.639
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.287', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 9.645
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24029514227107734;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.36420092978917523;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0814045543349177;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.048527842006150124;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20205616407667265;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040794229163586;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397170698129955;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03776564972512874;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562187444395876;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24431902143844492;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06418425566419735;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210243848964374;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13562635207102944;  // std dev = 20.289, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.04320853988499043;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1019840385219086;  // std dev = 20.834, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08438615753059207;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.021198733180209574;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06183570933149437;  // std dev = 20.826, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.20730782156984007;  // std dev = 2.232, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.045899622227144755;  // std dev = 20.692, 1,794.000 (wgt'ed) examples reached here.  /* #neg=1,059 #pos=735 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03672942666774394;  // std dev = 20.818, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.011', 'seconds']
Refined model CLL: -0.671585


******************************************
Best model found
******************************************
Results 

CLL : -0.642695 

AUC ROC : 0.564582 

AUC PR : 0.418933 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 9.645 

Total Inference Time : 1.0492141246795654 

Total revision time: 13.18465050125122
Best scored revision CLL: -0.671585


Results 

CLL : -0.642695 

AUC ROC : 0.564582 

AUC PR : 0.418933 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 13.214003881454467 

Total Inference Time : 1.0492141246795654 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.307
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.453', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.309
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3785938489282847;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6644684231619105;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14168213568619817;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07038583938990187;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30972674031800285;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5350832715071676;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1307735287526293;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.05808197450811081;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.13254975084434328;  // std dev = 3.806, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.25917665944386;  // std dev = 13.576, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11209163341431513;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.04978970433771053;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1915770552820157;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.05564362711145936;  // std dev = 6.261, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12490380530970248;  // std dev = 15.495, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.11383568414899721;  // std dev = 14.116, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.026614208229176945;  // std dev = 6.260, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07253335113502503;  // std dev = 15.464, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.06738680697218033;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.009343344453369;  // std dev = 6.259, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041904878651697876;  // std dev = 15.453, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.045', 'seconds']
Refined model CLL: -0.648321


******************************************
Best model found
******************************************
Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.309 

Total Inference Time : 0.9879570007324219 

Total revision time: 8.406406465530395
Best scored revision CLL: -0.648321


Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.435759845733642 

Total Inference Time : 0.9879570007324219 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.291
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.360', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.215
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20564083645138656;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4043065147315884;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014283434161880808;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0014797094419622902;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17399348696885145;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.338235469181611;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892267859778526;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.606215858969846E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14405022986842406;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711730044372582;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353548502929064;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8327154434982913E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12107522500507484;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.005585345981830022;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0807615991851598;  // std dev = 15.194, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07981137355657206;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.014780034661489402;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05069240120504114;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.051348876481333294;  // std dev = 14.502, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.019348314751092215;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030894309034000044;  // std dev = 15.160, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.265', 'seconds']
Refined model CLL: -0.624506


******************************************
Best model found
******************************************
Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.215 

Total Inference Time : 1.0212407112121582 

Total revision time: 8.372055250167847
Best scored revision CLL: -0.624506


Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.480998235702515 

Total Inference Time : 1.0212407112121582 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.497
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.302', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 7.357
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37301714859831614;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5516269444842152;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5463348219282366;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.21020036814672396;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3056990706242831;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.447558147597091;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4677070955120816;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10312419784214047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.24119684112806916;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3449923596624612;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.36528283524978;  // std dev = 2.316, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.073604493530158;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18783328355968018;  // std dev = 17.519, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.21204760056972058;  // std dev = 3.039, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14288304738906585;  // std dev = 17.781, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.10820882835031718;  // std dev = 17.554, 1,279.000 (wgt'ed) examples reached here.  /* #neg=531 #pos=748 */
%   | | | else return 0.08178312154079309;  // std dev = 2.830, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0806904188612847;  // std dev = 17.782, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.059802483051314755;  // std dev = 17.520, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.08133215501586387;  // std dev = 3.039, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045554265332723165;  // std dev = 17.783, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.138', 'seconds']
Refined model CLL: -0.676188


******************************************
Best model found
******************************************
Results 

CLL : -0.742407 

AUC ROC : 0.498313 

AUC PR : 0.318837 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 7.357 

Total Inference Time : 1.0146145820617676 

Total revision time: 10.718247322082519
Best scored revision CLL: -0.676188


Results 

CLL : -0.742407 

AUC ROC : 0.498313 

AUC PR : 0.318837 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 10.827190307617187 

Total Inference Time : 1.0146145820617676 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.963
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18995932916004415;  // std dev = 19.703, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1581794700748827;  // std dev = 0.468, 1,789.000 (wgt'ed) examples reached here.  /* #neg=1,208 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14342691116964318;  // std dev = 0.471, 1,744.000 (wgt'ed) examples reached here.  /* #neg=1,163 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11549962549976778;  // std dev = 19.756, 1,770.000 (wgt'ed) examples reached here.  /* #neg=1,189 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09775470791736003;  // std dev = 19.723, 1,758.000 (wgt'ed) examples reached here.  /* #neg=1,177 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07816177126874274;  // std dev = 19.748, 1,767.000 (wgt'ed) examples reached here.  /* #neg=1,186 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06791605550100065;  // std dev = 19.678, 1,742.000 (wgt'ed) examples reached here.  /* #neg=1,161 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05696696181399762;  // std dev = 19.641, 1,729.000 (wgt'ed) examples reached here.  /* #neg=1,148 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04171046229991137;  // std dev = 19.695, 1,748.000 (wgt'ed) examples reached here.  /* #neg=1,167 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03514097032336256;  // std dev = 19.664, 1,737.000 (wgt'ed) examples reached here.  /* #neg=1,156 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.274', 'seconds']
Parameter learned model CLL:-0.535378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.703, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.468, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.471, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.756, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.723, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.748, 1, 581]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.678, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.641, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.695, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.664, 1, 581]}]
{'': [nan, 0.22171225645391363], 'false': [nan, 0.22171225645391363], 'false,false': [nan, 0.22171225645391363]}
{'': [nan, 0.21929179655438027], 'false': [nan, 0.21929179655438027]}
{'': [nan, 0.2221584751914901], 'false': [nan, 0.2221584751914901]}
{'': [nan, 0.22050145232851426], 'false': [nan, 0.22050145232851426]}
{'': [nan, 0.22126608606065948], 'false': [nan, 0.22126608606065948], 'false,false': [nan, 0.22126608606065948]}
{'': [nan, 0.2206925752228607], 'false': [nan, 0.2206925752228607], 'false,false': [nan, 0.2206925752228607], 'false,false,false': [nan, 0.2206925752228607]}
{'': [nan, 0.2222859692529199], 'false': [nan, 0.2222859692529199], 'false,false': [nan, 0.2222859692529199]}
{'': [nan, 0.22311462243276478], 'false': [nan, 0.22311462243276478], 'false,false': [nan, 0.22311462243276478], 'false,false,false': [nan, 0.22311462243276478]}
{'': [nan, 0.2219034895716015], 'false': [nan, 0.2219034895716015], 'false,false': [nan, 0.2219034895716015]}
{'': [nan, 0.22260469996876012], 'false': [nan, 0.22260469996876012], 'false,false': [nan, 0.22260469996876012], 'false,false,false': [nan, 0.22260469996876012]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.266
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.22416639648298622;  // std dev = 18.588, 1,489.000 (wgt'ed) examples reached here.  /* #neg=944 #pos=545 */
%   | | | else return 0.02328654977841049;  // std dev = 5.482, 218.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.1799998475021236;  // std dev = 0.477, 1,551.000 (wgt'ed) examples reached here.  /* #neg=1,006 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.033598319891825;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.017195330901825526;  // std dev = 5.338, 210.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=34 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.1593682920134683;  // std dev = 0.479, 1,523.000 (wgt'ed) examples reached here.  /* #neg=978 #pos=545 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.02706760099678988;  // std dev = 3.857, 104.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
%   | | | else return 0.0071022935439958605;  // std dev = 3.902, 117.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.12724294200112626;  // std dev = 0.478, 1,547.000 (wgt'ed) examples reached here.  /* #neg=1,002 #pos=545 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.024915888930359623;  // std dev = 3.855, 103.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=18 */
%   | | | else return 0.010317299839114131;  // std dev = 3.893, 114.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.09889693149488782;  // std dev = 18.866, 1,571.000 (wgt'ed) examples reached here.  /* #neg=1,026 #pos=545 */
%   | | | else return 0.0038016538323095038;  // std dev = 5.516, 233.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08490850698458567;  // std dev = 19.465, 1,724.000 (wgt'ed) examples reached here.  /* #neg=1,143 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.0773109221510759;  // std dev = 18.659, 1,509.000 (wgt'ed) examples reached here.  /* #neg=964 #pos=545 */
%   | | | else return -0.0038121900055081512;  // std dev = 5.502, 227.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05096045034157844;  // std dev = 19.506, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05735818844828292;  // std dev = 18.559, 1,481.000 (wgt'ed) examples reached here.  /* #neg=936 #pos=545 */
%   | | | else return -0.005510601080010113;  // std dev = 5.487, 220.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0258283785044725;  // std dev = 19.568, 1,762.000 (wgt'ed) examples reached here.  /* #neg=1,181 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.519', 'seconds']
Refined model CLL: -0.528362


******************************************
Best model found
******************************************
Results 

CLL : -0.730318 

AUC ROC : 0.548212 

AUC PR : 0.491218 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.266 

Total Inference Time : 1.1702353954315186 

Total revision time: 12.451128391265868
Best scored revision CLL: -0.528362


Results 

CLL : -0.730318 

AUC ROC : 0.548212 

AUC PR : 0.491218 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.560071376800536 

Total Inference Time : 1.1702353954315186 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.626
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.374', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 9.062
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24029514227107734;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.36420092978917523;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0814045543349177;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.048527842006150124;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20205616407667265;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040794229163586;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397170698129953;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03776564972512874;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562187444395876;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24431902143844492;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0641842556641973;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210243848964374;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13562635207102938;  // std dev = 20.289, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.04320853988499037;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10198403852190852;  // std dev = 20.834, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2398200044971842;  // std dev = 2.236, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.0780583419769977;  // std dev = 20.698, 1,794.000 (wgt'ed) examples reached here.  /* #neg=1,059 #pos=735 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06210232873818152;  // std dev = 20.823, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.051769599715037855;  // std dev = 20.282, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return -0.0021867767558325707;  // std dev = 4.675, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036661235147105654;  // std dev = 20.818, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.146', 'seconds']
Refined model CLL: -0.671596


******************************************
Best model found
******************************************
Results 

CLL : -0.642763 

AUC ROC : 0.564582 

AUC PR : 0.418933 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 9.062 

Total Inference Time : 1.1176066398620605 

Total revision time: 12.729665792465209
Best scored revision CLL: -0.671596


Results 

CLL : -0.642763 

AUC ROC : 0.564582 

AUC PR : 0.418933 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 12.838608777999877 

Total Inference Time : 1.1176066398620605 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.345
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.386', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.323
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3785938489282847;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6644684231619105;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14168213568619817;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07038583938990187;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30972674031800285;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5350832715071676;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.13077352875262932;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.05808197450811085;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.13254975084434328;  // std dev = 3.806, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.25917665944386;  // std dev = 13.576, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11209163341431509;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.04978970433771055;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1915770552820158;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.055643627111459384;  // std dev = 6.261, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12490380530970274;  // std dev = 15.495, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.11383568414899724;  // std dev = 14.116, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.026614208229177008;  // std dev = 6.260, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0725333511350253;  // std dev = 15.464, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.0673868069721804;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.009343344453368973;  // std dev = 6.259, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04190487865169768;  // std dev = 15.453, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.044', 'seconds']
Refined model CLL: -0.648321


******************************************
Best model found
******************************************
Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.323 

Total Inference Time : 0.9586968421936035 

Total revision time: 8.399255054473876
Best scored revision CLL: -0.648321


Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.508198040008544 

Total Inference Time : 0.9586968421936035 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.275
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.403', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.326
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20564083645138656;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4043065147315884;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014283434161880808;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0014797094419622902;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17399348696885145;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.338235469181611;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892267859778526;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.6062158589698355E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14405022986842406;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711730044372582;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353548502929032;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.832715443498316E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12107522500507481;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.0055853459818300056;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076159918515982;  // std dev = 15.194, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07981137355657203;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.014780034661489421;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05069240120504114;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05134887648133333;  // std dev = 14.502, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.01934831475109226;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030894309034000044;  // std dev = 15.160, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.327', 'seconds']
Refined model CLL: -0.624506


******************************************
Best model found
******************************************
Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.326 

Total Inference Time : 0.9284520149230957 

Total revision time: 8.32287066078186
Best scored revision CLL: -0.624506


Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.38319723701477 

Total Inference Time : 0.9284520149230957 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.352
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.353', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 6.803
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37301714859831614;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5516269444842152;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5463348219282366;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.21020036814672396;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3056990706242831;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.447558147597091;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4677070955120816;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10312419784214047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.24119684112806916;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3449923596624612;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.36528283524977995;  // std dev = 2.316, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.073604493530158;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18783328355968018;  // std dev = 17.519, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.21204760056972063;  // std dev = 3.039, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1428830473890658;  // std dev = 17.781, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.10820882835031723;  // std dev = 17.554, 1,279.000 (wgt'ed) examples reached here.  /* #neg=531 #pos=748 */
%   | | | else return 0.08178312154079309;  // std dev = 2.830, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08069041886128474;  // std dev = 17.782, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.1165985779363691;  // std dev = 2.760, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.059146596251853874;  // std dev = 17.564, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04554399806903832;  // std dev = 17.782, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.300', 'seconds']
Refined model CLL: -0.676133


******************************************
Best model found
******************************************
Results 

CLL : -0.74155 

AUC ROC : 0.498823 

AUC PR : 0.3205 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 6.803 

Total Inference Time : 1.0222022533416748 

Total revision time: 10.014830141067506
Best scored revision CLL: -0.676133


Results 

CLL : -0.74155 

AUC ROC : 0.498823 

AUC PR : 0.3205 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 10.075156717300416 

Total Inference Time : 1.0222022533416748 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.979
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19148226843284066;  // std dev = 19.681, 1,743.000 (wgt'ed) examples reached here.  /* #neg=1,162 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16089866664044045;  // std dev = 0.469, 1,773.000 (wgt'ed) examples reached here.  /* #neg=1,192 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1422018554892484;  // std dev = 0.471, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11517942235049107;  // std dev = 19.753, 1,769.000 (wgt'ed) examples reached here.  /* #neg=1,188 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10714679987294141;  // std dev = 19.577, 1,707.000 (wgt'ed) examples reached here.  /* #neg=1,126 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07813260922818935;  // std dev = 19.714, 1,755.000 (wgt'ed) examples reached here.  /* #neg=1,174 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06403233730480264;  // std dev = 19.700, 1,750.000 (wgt'ed) examples reached here.  /* #neg=1,169 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04902560839095546;  // std dev = 19.734, 1,762.000 (wgt'ed) examples reached here.  /* #neg=1,181 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04746613414015108;  // std dev = 19.609, 1,718.000 (wgt'ed) examples reached here.  /* #neg=1,137 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.035430696408643776;  // std dev = 19.641, 1,729.000 (wgt'ed) examples reached here.  /* #neg=1,148 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.276', 'seconds']
Parameter learned model CLL:-0.536007 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.681, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.469, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.471, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.753, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.577, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.714, 1, 581]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.7, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.734, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.609, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.641, 1, 581]}]
{'': [nan, 0.22222222222220783], 'false': [nan, 0.22222222222220783], 'false,false': [nan, 0.22222222222220783]}
{'': [nan, 0.22031035819935232], 'false': [nan, 0.22031035819935232]}
{'': [nan, 0.22196723535219906], 'false': [nan, 0.22196723535219906]}
{'': [nan, 0.2205651569122162], 'false': [nan, 0.2205651569122162]}
{'': [nan, 0.224516095377621], 'false': [nan, 0.224516095377621], 'false,false': [nan, 0.224516095377621]}
{'': [nan, 0.22145729336612271], 'false': [nan, 0.22145729336612271], 'false,false': [nan, 0.22145729336612271], 'false,false,false': [nan, 0.22145729336612271]}
{'': [nan, 0.22177599999998318], 'false': [nan, 0.22177599999998318], 'false,false': [nan, 0.22177599999998318]}
{'': [nan, 0.22101116907444776], 'false': [nan, 0.22101116907444776], 'false,false': [nan, 0.22101116907444776], 'false,false,false': [nan, 0.22101116907444776]}
{'': [nan, 0.22381556104575762], 'false': [nan, 0.22381556104575762], 'false,false': [nan, 0.22381556104575762]}
{'': [nan, 0.2231146224327738], 'false': [nan, 0.2231146224327738], 'false,false': [nan, 0.2231146224327738], 'false,false,false': [nan, 0.2231146224327738]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 7.952
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.20930872891394037;  // std dev = 18.805, 1,552.000 (wgt'ed) examples reached here.  /* #neg=1,007 #pos=545 */
%   | | | else return 0.03548883657734384;  // std dev = 5.442, 203.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.14443882803328512;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.1893574056338201;  // std dev = 18.419, 1,475.000 (wgt'ed) examples reached here.  /* #neg=946 #pos=529 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.028531033331045123;  // std dev = 3.854, 103.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=18 */
%   | | | else return 0.0076199056238009585;  // std dev = 3.903, 117.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.1359516234392928;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.1600695716724878;  // std dev = 18.433, 1,479.000 (wgt'ed) examples reached here.  /* #neg=950 #pos=529 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.047444529211836166;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.023148216417635575;  // std dev = 5.307, 198.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=34 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.13734064914697783;  // std dev = 0.480, 1,509.000 (wgt'ed) examples reached here.  /* #neg=964 #pos=545 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.01575357992591455;  // std dev = 3.878, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   | | | else return 0.0012925577196961813;  // std dev = 3.902, 117.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.11296849072384632;  // std dev = 18.654, 1,507.000 (wgt'ed) examples reached here.  /* #neg=962 #pos=545 */
%   | | | else return 0.018024304043455057;  // std dev = 5.465, 212.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07858064074924614;  // std dev = 19.508, 1,740.000 (wgt'ed) examples reached here.  /* #neg=1,159 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.06732861932061661;  // std dev = 18.772, 1,542.000 (wgt'ed) examples reached here.  /* #neg=997 #pos=545 */
%   | | | else return -3.560981124816245E-4;  // std dev = 5.484, 219.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04165662777169998;  // std dev = 19.638, 1,793.000 (wgt'ed) examples reached here.  /* #neg=1,212 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05597850187533848;  // std dev = 18.605, 1,494.000 (wgt'ed) examples reached here.  /* #neg=949 #pos=545 */
%   | | | else return -0.006041542312929921;  // std dev = 5.483, 219.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027237205538906736;  // std dev = 19.561, 1,770.000 (wgt'ed) examples reached here.  /* #neg=1,189 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.679', 'seconds']
Refined model CLL: -0.527744


******************************************
Best model found
******************************************
Results 

CLL : -0.731514 

AUC ROC : 0.546315 

AUC PR : 0.489985 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.952 

Total Inference Time : 1.1949787139892578 

Total revision time: 12.186508899688722
Best scored revision CLL: -0.527744


Results 

CLL : -0.731514 

AUC ROC : 0.546315 

AUC PR : 0.489985 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.246835475921632 

Total Inference Time : 1.1949787139892578 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.576
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.477', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 9.091
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24029514227107734;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.36420092978917523;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0814045543349177;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.048527842006150124;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20205616407667265;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040794229163586;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397170698129957;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03776564972512874;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562187444395876;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24431902143844492;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06418425566419736;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210243848964374;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1356263520710294;  // std dev = 20.289, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.04320853988499046;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10198403852190847;  // std dev = 20.834, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08438615753059202;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.02119873318020958;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06183570933149433;  // std dev = 20.826, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05080679235401971;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.007705686150256695;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036547187738979504;  // std dev = 20.822, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.077', 'seconds']
Refined model CLL: -0.671757


******************************************
Best model found
******************************************
Results 

CLL : -0.642364 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.091 

Total Inference Time : 1.1732487678527832 

Total revision time: 12.721121732711792
Best scored revision CLL: -0.671757


Results 

CLL : -0.642364 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.781448308944702 

Total Inference Time : 1.1732487678527832 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.315
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.369', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.208
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3785938489282847;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6644684231619105;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14168213568619817;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07038583938990187;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30972674031800285;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5350832715071676;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1307735287526293;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.0580819745081109;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1325497508443433;  // std dev = 3.806, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.25917665944386;  // std dev = 13.576, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1120916334143151;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.04978970433771059;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1915770552820156;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.05564362711145942;  // std dev = 6.261, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12490380530970266;  // std dev = 15.495, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.11383568414899721;  // std dev = 14.116, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.026614208229176935;  // std dev = 6.260, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07253335113502517;  // std dev = 15.464, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.06738680697218037;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.009343344453369026;  // std dev = 6.259, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041904878651697806;  // std dev = 15.453, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.098', 'seconds']
Refined model CLL: -0.648321


******************************************
Best model found
******************************************
Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.208 

Total Inference Time : 0.9437792301177979 

Total revision time: 8.279380796432495
Best scored revision CLL: -0.648321


Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.339707372665405 

Total Inference Time : 0.9437792301177979 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.419
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.484', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.414
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20564083645138656;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4043065147315884;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014283434161880808;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0014797094419622902;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17399348696885145;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.338235469181611;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892267859778524;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.6062158589698355E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14405022986842406;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711730044372582;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353548502929027;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8327154434984003E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12107522500507456;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.005585345981830036;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076159918515961;  // std dev = 15.194, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07981137355657214;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.014780034661489399;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05069240120504109;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.051348876481333385;  // std dev = 14.502, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.019348314751092235;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030894309034000023;  // std dev = 15.160, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.217', 'seconds']
Refined model CLL: -0.624506


******************************************
Best model found
******************************************
Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.414 

Total Inference Time : 0.9406414031982422 

Total revision time: 8.587355669021607
Best scored revision CLL: -0.624506


Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.617184217453003 

Total Inference Time : 0.9406414031982422 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.361
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.425', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 6.735
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37301714859831614;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5516269444842152;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5463348219282366;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.21020036814672396;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3056990706242831;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.447558147597091;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4677070955120816;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10312419784214047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.24119684112806916;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3449923596624612;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.36528283524978;  // std dev = 2.316, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.073604493530158;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.24299681170626286;  // std dev = 2.774, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.1873199378402144;  // std dev = 17.561, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14288147602161294;  // std dev = 17.780, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.10659689728145728;  // std dev = 17.517, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.1308104721311696;  // std dev = 3.043, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08069596644948114;  // std dev = 17.781, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.06128518792287048;  // std dev = 17.553, 1,279.000 (wgt'ed) examples reached here.  /* #neg=531 #pos=748 */
%   | | | else return 0.03606537720504831;  // std dev = 2.834, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04554320504560164;  // std dev = 17.782, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.193', 'seconds']
Refined model CLL: -0.676138


******************************************
Best model found
******************************************
Results 

CLL : -0.741556 

AUC ROC : 0.498825 

AUC PR : 0.320519 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 6.735 

Total Inference Time : 1.0116169452667236 

Total revision time: 9.970537229537964
Best scored revision CLL: -0.676138


Results 

CLL : -0.741556 

AUC ROC : 0.498825 

AUC PR : 0.320519 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 10.00036577796936 

Total Inference Time : 1.0116169452667236 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.964
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19186519012535455;  // std dev = 19.675, 1,741.000 (wgt'ed) examples reached here.  /* #neg=1,160 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17511813051549108;  // std dev = 0.474, 1,699.000 (wgt'ed) examples reached here.  /* #neg=1,118 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13432645728023254;  // std dev = 0.469, 1,777.000 (wgt'ed) examples reached here.  /* #neg=1,196 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11685734047007705;  // std dev = 19.712, 1,754.000 (wgt'ed) examples reached here.  /* #neg=1,173 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09204885424488138;  // std dev = 19.777, 1,778.000 (wgt'ed) examples reached here.  /* #neg=1,197 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08224909634690157;  // std dev = 19.672, 1,740.000 (wgt'ed) examples reached here.  /* #neg=1,159 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06760089138882816;  // std dev = 19.655, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,153 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0547304698734749;  // std dev = 19.647, 1,731.000 (wgt'ed) examples reached here.  /* #neg=1,150 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.040089189678645845;  // std dev = 19.698, 1,749.000 (wgt'ed) examples reached here.  /* #neg=1,168 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029093169161074014;  // std dev = 19.737, 1,763.000 (wgt'ed) examples reached here.  /* #neg=1,182 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.265', 'seconds']
Parameter learned model CLL:-0.535304 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.675, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.474, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.469, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.712, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.777, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.672, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.655, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.647, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.698, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.737, 1, 581]}]
{'': [nan, 0.22234971615735652], 'false': [nan, 0.22234971615735652], 'false,false': [nan, 0.22234971615735652]}
{'': [nan, 0.2250252113125331], 'false': [nan, 0.2250252113125331]}
{'': [nan, 0.22005561591892076], 'false': [nan, 0.22005561591892076]}
{'': [nan, 0.22152103223255432], 'false': [nan, 0.22152103223255432]}
{'': [nan, 0.21999193998387426], 'false': [nan, 0.21999193998387426], 'false,false': [nan, 0.21999193998387426]}
{'': [nan, 0.22241346280882496], 'false': [nan, 0.22241346280882496], 'false,false': [nan, 0.22241346280882496], 'false,false,false': [nan, 0.22241346280882496]}
{'': [nan, 0.22279593023179378], 'false': [nan, 0.22279593023179378], 'false,false': [nan, 0.22279593023179378]}
{'': [nan, 0.22298715007972944], 'false': [nan, 0.22298715007972944], 'false,false': [nan, 0.22298715007972944], 'false,false,false': [nan, 0.22298715007972944]}
{'': [nan, 0.221839744413274], 'false': [nan, 0.221839744413274], 'false,false': [nan, 0.221839744413274]}
{'': [nan, 0.22094744526440493], 'false': [nan, 0.22094744526440493], 'false,false': [nan, 0.22094744526440493], 'false,false,false': [nan, 0.22094744526440493]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 7.67
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2131977950343608;  // std dev = 18.748, 1,535.000 (wgt'ed) examples reached here.  /* #neg=990 #pos=545 */
%   | | | else return 0.021044862701321373;  // std dev = 5.490, 221.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.1887183515120688;  // std dev = 0.480, 1,520.000 (wgt'ed) examples reached here.  /* #neg=975 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05121997249156861;  // std dev = 3.805, 92.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=18 */
%   | | | else return 0.016282084292810885;  // std dev = 3.887, 112.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.16913032282437762;  // std dev = 0.482, 1,484.000 (wgt'ed) examples reached here.  /* #neg=939 #pos=545 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03176194700349756;  // std dev = 3.846, 101.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=18 */
%   | | | else return -0.00553792438737083;  // std dev = 3.922, 124.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.1350412007175657;  // std dev = 0.480, 1,508.000 (wgt'ed) examples reached here.  /* #neg=963 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.022907528679618403;  // std dev = 3.858, 104.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
%   | | | else return 9.87164102155655E-4;  // std dev = 3.908, 119.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.0984766970495007;  // std dev = 18.831, 1,560.000 (wgt'ed) examples reached here.  /* #neg=1,015 #pos=545 */
%   | | | else return 0.010986341109481133;  // std dev = 5.490, 221.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07683634105664927;  // std dev = 19.540, 1,753.000 (wgt'ed) examples reached here.  /* #neg=1,172 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07592295112691581;  // std dev = 18.659, 1,509.000 (wgt'ed) examples reached here.  /* #neg=964 #pos=545 */
%   | | | else return 0.002601805480990868;  // std dev = 5.478, 217.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.046344570990343684;  // std dev = 19.561, 1,761.000 (wgt'ed) examples reached here.  /* #neg=1,180 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.043776122296132675;  // std dev = 18.755, 1,537.000 (wgt'ed) examples reached here.  /* #neg=992 #pos=545 */
%   | | | else return 0.0020733924911383495;  // std dev = 5.458, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.034819358315085425;  // std dev = 19.455, 1,732.000 (wgt'ed) examples reached here.  /* #neg=1,151 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.530', 'seconds']
Refined model CLL: -0.528311


******************************************
Best model found
******************************************
Results 

CLL : -0.730443 

AUC ROC : 0.548961 

AUC PR : 0.491423 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.67 

Total Inference Time : 1.150317668914795 

Total revision time: 11.770945486068726
Best scored revision CLL: -0.528311


Results 

CLL : -0.730443 

AUC ROC : 0.548961 

AUC PR : 0.491423 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.800774034500122 

Total Inference Time : 1.150317668914795 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.744
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.407', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 9.171
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24029514227107734;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.36420092978917523;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0814045543349177;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.048527842006150124;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20205616407667265;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040794229163586;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397170698129955;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03776564972512874;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562187444395876;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24431902143844492;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06418425566419733;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210243848964374;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13562635207102938;  // std dev = 20.289, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.04320853988499041;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10198403852190846;  // std dev = 20.834, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08438615753059198;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.021198733180209588;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06183570933149444;  // std dev = 20.826, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05080679235401984;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.007705686150256692;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03654718773897949;  // std dev = 20.822, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.026', 'seconds']
Refined model CLL: -0.671757


******************************************
Best model found
******************************************
Results 

CLL : -0.642364 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.171 

Total Inference Time : 1.0800182819366455 

Total revision time: 12.886933126449584
Best scored revision CLL: -0.671757


Results 

CLL : -0.642364 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.91676167488098 

Total Inference Time : 1.0800182819366455 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.239
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.419', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.305
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3785938489282847;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6644684231619105;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14168213568619817;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07038583938990187;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30972674031800285;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5350832715071676;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1307735287526293;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.058081974508110853;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.1325497508443433;  // std dev = 3.806, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.25917665944386004;  // std dev = 13.576, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1120916334143151;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.04978970433771053;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.19157705528201563;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.05564362711145944;  // std dev = 6.261, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1249038053097026;  // std dev = 15.495, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.11383568414899733;  // std dev = 14.116, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.02661420822917693;  // std dev = 6.260, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07253335113502528;  // std dev = 15.464, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.06738680697218015;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.00934334445336899;  // std dev = 6.259, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041904878651697904;  // std dev = 15.453, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.068', 'seconds']
Refined model CLL: -0.648321


******************************************
Best model found
******************************************
Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.305 

Total Inference Time : 0.8868675231933594 

Total revision time: 8.231777519226075
Best scored revision CLL: -0.648321


Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.261606067657471 

Total Inference Time : 0.8868675231933594 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.236
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.401', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.256
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20564083645138656;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4043065147315884;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014283434161880808;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0014797094419622902;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17399348696885145;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.338235469181611;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892267859778524;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.6062158589698355E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14405022986842406;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711730044372582;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353548502929022;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.832715443498316E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1210752250050748;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.005585345981830021;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076159918515968;  // std dev = 15.194, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07981137355657204;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.014780034661489383;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0506924012050411;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.051348876481333315;  // std dev = 14.502, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.01934831475109222;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030894309033999874;  // std dev = 15.160, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.248', 'seconds']
Refined model CLL: -0.624506


******************************************
Best model found
******************************************
Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.256 

Total Inference Time : 0.9871430397033691 

Total revision time: 8.254668371200562
Best scored revision CLL: -0.624506


Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.358418838500977 

Total Inference Time : 0.9871430397033691 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.359
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.324', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 6.258
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37301714859831614;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5516269444842152;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5463348219282366;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.21020036814672396;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3056990706242831;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.447558147597091;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4677070955120816;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10312419784214047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.5137090760383558;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.03003523250623071;  // std dev = 1.668, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.2426018814056248;  // std dev = 17.312, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.2937243881479999;  // std dev = 3.037, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1878865733661898;  // std dev = 17.497, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.2108223032666072;  // std dev = 3.083, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1428646140799404;  // std dev = 17.766, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.10685293517614375;  // std dev = 17.496, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.12336455965878983;  // std dev = 3.083, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08066562076705293;  // std dev = 17.766, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.060065720788475024;  // std dev = 17.496, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.07375897821097409;  // std dev = 3.088, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04553041966882818;  // std dev = 17.767, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.908', 'seconds']
Refined model CLL: -0.675395


******************************************
Best model found
******************************************
Results 

CLL : -0.745456 

AUC ROC : 0.47211 

AUC PR : 0.309806 

Precision : 0.334678 

Recall : 0.997329 

F1 : 0.501175 

Total Learning Time : 6.258 

Total Inference Time : 0.9438977241516113 

Total revision time: 9.424436466217042
Best scored revision CLL: -0.675395


Results 

CLL : -0.745456 

AUC ROC : 0.47211 

AUC PR : 0.309806 

Precision : 0.334678 

Recall : 0.997329 

F1 : 0.501175 

Total Learning Time : 9.528186933517457 

Total Inference Time : 0.9438977241516113 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 2.164
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1860270389369791;  // std dev = 19.761, 1,772.000 (wgt'ed) examples reached here.  /* #neg=1,191 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16184035323637078;  // std dev = 0.469, 1,772.000 (wgt'ed) examples reached here.  /* #neg=1,191 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14156930086951539;  // std dev = 0.471, 1,754.000 (wgt'ed) examples reached here.  /* #neg=1,173 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12579133705620754;  // std dev = 19.609, 1,718.000 (wgt'ed) examples reached here.  /* #neg=1,137 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09685886264598653;  // std dev = 19.714, 1,755.000 (wgt'ed) examples reached here.  /* #neg=1,174 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07568171784460137;  // std dev = 19.764, 1,773.000 (wgt'ed) examples reached here.  /* #neg=1,192 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06226249429912137;  // std dev = 19.748, 1,767.000 (wgt'ed) examples reached here.  /* #neg=1,186 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05272992710165754;  // std dev = 19.706, 1,752.000 (wgt'ed) examples reached here.  /* #neg=1,171 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04660863125112385;  // std dev = 19.638, 1,728.000 (wgt'ed) examples reached here.  /* #neg=1,147 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033269473481151134;  // std dev = 19.692, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.250', 'seconds']
Parameter learned model CLL:-0.535171 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.761, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.469, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.471, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.609, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.714, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.764, 1, 581]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.748, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.706, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.638, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.692, 1, 581]}]
{'': [nan, 0.22037405286140122], 'false': [nan, 0.22037405286140122], 'false,false': [nan, 0.22037405286140122]}
{'': [nan, 0.2203740528614212], 'false': [nan, 0.2203740528614212]}
{'': [nan, 0.22152103223255], 'false': [nan, 0.22152103223255]}
{'': [nan, 0.2238155610457347], 'false': [nan, 0.2238155610457347]}
{'': [nan, 0.221457293366131], 'false': [nan, 0.221457293366131], 'false,false': [nan, 0.221457293366131]}
{'': [nan, 0.22031035819933997], 'false': [nan, 0.22031035819933997], 'false,false': [nan, 0.22031035819933997], 'false,false,false': [nan, 0.22031035819933997]}
{'': [nan, 0.2206925752228626], 'false': [nan, 0.2206925752228626], 'false,false': [nan, 0.2206925752228626]}
{'': [nan, 0.2216485138967154], 'false': [nan, 0.2216485138967154], 'false,false': [nan, 0.2216485138967154], 'false,false,false': [nan, 0.2216485138967154]}
{'': [nan, 0.22317835594565383], 'false': [nan, 0.22317835594565383], 'false,false': [nan, 0.22317835594565383]}
{'': [nan, 0.2219672353521866], 'false': [nan, 0.2219672353521866], 'false,false': [nan, 0.2219672353521866], 'false,false,false': [nan, 0.2219672353521866]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 7.881
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.21931527042091228;  // std dev = 18.659, 1,509.000 (wgt'ed) examples reached here.  /* #neg=964 #pos=545 */
%   | | | else return 0.022532496743347025;  // std dev = 5.485, 219.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.17821312225351504;  // std dev = 0.477, 1,562.000 (wgt'ed) examples reached here.  /* #neg=1,017 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.026969069083258416;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.02710104381038444;  // std dev = 5.307, 198.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=34 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.1501523330138295;  // std dev = 0.476, 1,568.000 (wgt'ed) examples reached here.  /* #neg=1,023 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.03020075041890771;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.015460555714669973;  // std dev = 5.333, 208.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=34 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.14133744407898732;  // std dev = 3.191, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.1420261493131488;  // std dev = 18.338, 1,452.000 (wgt'ed) examples reached here.  /* #neg=923 #pos=529 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.028499742703769582;  // std dev = 3.845, 101.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=18 */
%   | | | else return -0.0010116176907926865;  // std dev = 3.917, 122.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.11359367606478936;  // std dev = 18.656, 1,508.000 (wgt'ed) examples reached here.  /* #neg=963 #pos=545 */
%   | | | else return 0.007640539890583573;  // std dev = 5.503, 227.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07616524795206266;  // std dev = 19.563, 1,755.000 (wgt'ed) examples reached here.  /* #neg=1,174 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.0777629772987632;  // std dev = 18.638, 1,503.000 (wgt'ed) examples reached here.  /* #neg=958 #pos=545 */
%   | | | else return -0.0031831978502915334;  // std dev = 5.502, 227.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05276316373488502;  // std dev = 19.446, 1,740.000 (wgt'ed) examples reached here.  /* #neg=1,159 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.04972376037030119;  // std dev = 18.649, 1,506.000 (wgt'ed) examples reached here.  /* #neg=961 #pos=545 */
%   | | | else return -0.001866568676017446;  // std dev = 5.475, 216.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032661279572609586;  // std dev = 19.455, 1,732.000 (wgt'ed) examples reached here.  /* #neg=1,151 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.499', 'seconds']
Refined model CLL: -0.529015


******************************************
Best model found
******************************************
Results 

CLL : -0.729396 

AUC ROC : 0.545946 

AUC PR : 0.489882 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.881 

Total Inference Time : 1.124006748199463 

Total revision time: 12.163283987045288
Best scored revision CLL: -0.529015


Results 

CLL : -0.729396 

AUC ROC : 0.545946 

AUC PR : 0.489882 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.267034454345703 

Total Inference Time : 1.124006748199463 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.611
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.360', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.935
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24029514227107734;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.36420092978917523;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0814045543349177;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.048527842006150124;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20205616407667265;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040794229163586;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397170698129957;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03776564972512874;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562187444395876;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24431902143844492;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06418425566419736;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210243848964374;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13562635207102938;  // std dev = 20.289, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.04320853988499048;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10198403852190849;  // std dev = 20.834, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.084386157530592;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.02119873318020956;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06183570933149438;  // std dev = 20.826, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.20730782156984015;  // std dev = 2.232, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.04589962222714467;  // std dev = 20.692, 1,794.000 (wgt'ed) examples reached here.  /* #neg=1,059 #pos=735 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03672942666774399;  // std dev = 20.818, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.988', 'seconds']
Refined model CLL: -0.671585


******************************************
Best model found
******************************************
Results 

CLL : -0.642695 

AUC ROC : 0.564582 

AUC PR : 0.418933 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 8.935 

Total Inference Time : 1.0941081047058105 

Total revision time: 12.575918909072875
Best scored revision CLL: -0.671585


Results 

CLL : -0.642695 

AUC ROC : 0.564582 

AUC PR : 0.418933 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 12.67966937637329 

Total Inference Time : 1.0941081047058105 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.271
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.425', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.207
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3785938489282847;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6644684231619105;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14168213568619817;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07038583938990187;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30972674031800285;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5350832715071676;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1307735287526293;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.05808197450811081;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.13254975084434328;  // std dev = 3.806, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.25917665944386004;  // std dev = 13.576, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.11209163341431509;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.0497897043377105;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1915770552820155;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.05564362711145932;  // std dev = 6.261, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12490380530970237;  // std dev = 15.495, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.11383568414899727;  // std dev = 14.116, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.0266142082291769;  // std dev = 6.260, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07253335113502514;  // std dev = 15.464, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.06738680697218044;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.009343344453368938;  // std dev = 6.259, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0419048786516979;  // std dev = 15.453, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.117', 'seconds']
Refined model CLL: -0.648321


******************************************
Best model found
******************************************
Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.207 

Total Inference Time : 0.9254038333892822 

Total revision time: 8.189888074874878
Best scored revision CLL: -0.648321


Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.293638542175293 

Total Inference Time : 0.9254038333892822 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.243
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.324', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.306
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20564083645138656;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4043065147315884;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014283434161880808;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0014797094419622902;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17399348696885145;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.338235469181611;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892267859778524;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.6062158589698355E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14405022986842406;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711730044372582;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353548502929048;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8327154434984003E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12107522500507466;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.005585345981830087;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076159918515961;  // std dev = 15.194, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07981137355657213;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.014780034661489486;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0506924012050412;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.051348876481333336;  // std dev = 14.502, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.019348314751092263;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030894309034000016;  // std dev = 15.160, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.121', 'seconds']
Refined model CLL: -0.624506


******************************************
Best model found
******************************************
Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.306 

Total Inference Time : 0.9057650566101074 

Total revision time: 8.221475099563598
Best scored revision CLL: -0.624506


Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.281225656509399 

Total Inference Time : 0.9057650566101074 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.318
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.322', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 7.031
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37301714859831614;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5516269444842152;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5463348219282366;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.21020036814672396;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3056990706242831;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.447558147597091;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4677070955120816;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10312419784214047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.24119684112806916;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3449923596624612;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.36528283524978006;  // std dev = 2.316, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.073604493530158;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.24491381256939143;  // std dev = 2.759, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.18727059226417442;  // std dev = 17.563, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14288164989621988;  // std dev = 17.780, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.10659673879482891;  // std dev = 17.517, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.13081359082004626;  // std dev = 3.043, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08069577655318633;  // std dev = 17.781, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.06127399471990039;  // std dev = 17.554, 1,279.000 (wgt'ed) examples reached here.  /* #neg=531 #pos=748 */
%   | | | else return 0.03645442358471037;  // std dev = 2.831, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04554312391035135;  // std dev = 17.782, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.201', 'seconds']
Refined model CLL: -0.676134


******************************************
Best model found
******************************************
Results 

CLL : -0.741575 

AUC ROC : 0.498823 

AUC PR : 0.3205 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 7.031 

Total Inference Time : 1.0076813697814941 

Total revision time: 10.228746675491333
Best scored revision CLL: -0.676134


Results 

CLL : -0.741575 

AUC ROC : 0.498823 

AUC PR : 0.3205 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 10.288497232437134 

Total Inference Time : 1.0076813697814941 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 2.107
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19554730908324716;  // std dev = 19.621, 1,722.000 (wgt'ed) examples reached here.  /* #neg=1,141 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.165400386051096;  // std dev = 0.471, 1,746.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1447293927603435;  // std dev = 0.472, 1,727.000 (wgt'ed) examples reached here.  /* #neg=1,146 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11517929565207793;  // std dev = 19.725, 1,759.000 (wgt'ed) examples reached here.  /* #neg=1,178 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10199634247228898;  // std dev = 19.624, 1,723.000 (wgt'ed) examples reached here.  /* #neg=1,142 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07719662534143747;  // std dev = 19.712, 1,754.000 (wgt'ed) examples reached here.  /* #neg=1,173 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05929746302359308;  // std dev = 19.756, 1,770.000 (wgt'ed) examples reached here.  /* #neg=1,189 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0487834791528379;  // std dev = 19.737, 1,763.000 (wgt'ed) examples reached here.  /* #neg=1,182 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04184598380249838;  // std dev = 19.692, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029378004501670784;  // std dev = 19.748, 1,767.000 (wgt'ed) examples reached here.  /* #neg=1,186 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.290', 'seconds']
Parameter learned model CLL:-0.534847 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.621, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.471, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.472, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.725, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.624, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.712, 1, 581]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.756, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.737, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.692, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.748, 1, 581]}]
{'': [nan, 0.22356071121685403], 'false': [nan, 0.22356071121685403], 'false,false': [nan, 0.22356071121685403]}
{'': [nan, 0.22203098163170343], 'false': [nan, 0.22203098163170343]}
{'': [nan, 0.22324208750358757], 'false': [nan, 0.22324208750358757]}
{'': [nan, 0.22120235378454933], 'false': [nan, 0.22120235378454933]}
{'': [nan, 0.22349699147346686], 'false': [nan, 0.22349699147346686], 'false,false': [nan, 0.22349699147346686]}
{'': [nan, 0.2215210322325572], 'false': [nan, 0.2215210322325572], 'false,false': [nan, 0.2215210322325572], 'false,false,false': [nan, 0.2215210322325572]}
{'': [nan, 0.2205014523285038], 'false': [nan, 0.2205014523285038], 'false,false': [nan, 0.2205014523285038]}
{'': [nan, 0.22094744526440693], 'false': [nan, 0.22094744526440693], 'false,false': [nan, 0.22094744526440693], 'false,false,false': [nan, 0.22094744526440693]}
{'': [nan, 0.2219672353521815], 'false': [nan, 0.2219672353521815], 'false,false': [nan, 0.2219672353521815]}
{'': [nan, 0.22069257522285754], 'false': [nan, 0.22069257522285754], 'false,false': [nan, 0.22069257522285754], 'false,false,false': [nan, 0.22069257522285754]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.603
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2122749909799492;  // std dev = 18.762, 1,539.000 (wgt'ed) examples reached here.  /* #neg=994 #pos=545 */
%   | | | else return 0.022532496743347025;  // std dev = 5.485, 219.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.13798809468249934;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.1904047046212205;  // std dev = 18.398, 1,469.000 (wgt'ed) examples reached here.  /* #neg=940 #pos=529 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.01961612790678783;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.01728863399797461;  // std dev = 5.338, 210.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=34 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.12912562560917;  // std dev = 3.286, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.15703401059150293;  // std dev = 18.470, 1,490.000 (wgt'ed) examples reached here.  /* #neg=961 #pos=529 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.0369432855993269;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.024949232611596497;  // std dev = 5.307, 198.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=34 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.12585425328948097;  // std dev = 0.477, 1,558.000 (wgt'ed) examples reached here.  /* #neg=1,013 #pos=545 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.02115339859831249;  // std dev = 3.866, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return 0.0017493910926581965;  // std dev = 3.907, 119.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.10147388226049785;  // std dev = 18.848, 1,566.000 (wgt'ed) examples reached here.  /* #neg=1,021 #pos=545 */
%   | | | else return 0.005936513130620267;  // std dev = 5.510, 230.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08365695381560671;  // std dev = 19.493, 1,737.000 (wgt'ed) examples reached here.  /* #neg=1,156 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07643338736194465;  // std dev = 18.691, 1,518.000 (wgt'ed) examples reached here.  /* #neg=973 #pos=545 */
%   | | | else return 0.017009638137039002;  // std dev = 5.434, 201.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05551750002639149;  // std dev = 19.460, 1,723.000 (wgt'ed) examples reached here.  /* #neg=1,142 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.04567714084545618;  // std dev = 18.738, 1,532.000 (wgt'ed) examples reached here.  /* #neg=987 #pos=545 */
%   | | | else return -0.009339449351896926;  // std dev = 5.487, 221.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03230564036180052;  // std dev = 19.497, 1,746.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.694', 'seconds']
Refined model CLL: -0.527951


******************************************
Best model found
******************************************
Results 

CLL : -0.731423 

AUC ROC : 0.545954 

AUC PR : 0.489888 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.603 

Total Inference Time : 1.203885793685913 

Total revision time: 12.903208932876588
Best scored revision CLL: -0.527951


Results 

CLL : -0.731423 

AUC ROC : 0.545954 

AUC PR : 0.489888 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.962959489822389 

Total Inference Time : 1.203885793685913 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.672
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.420', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.847
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24029514227107734;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.36420092978917523;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0814045543349177;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.048527842006150124;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20205616407667265;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040794229163586;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397170698129954;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03776564972512874;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562187444395876;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24431902143844492;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06418425566419733;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210243848964374;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1356263520710294;  // std dev = 20.289, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.04320853988499045;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10198403852190843;  // std dev = 20.834, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08438615753059191;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.021198733180209588;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06183570933149441;  // std dev = 20.826, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05080679235401987;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.007705686150256726;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03654718773897939;  // std dev = 20.822, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.029', 'seconds']
Refined model CLL: -0.671757


******************************************
Best model found
******************************************
Results 

CLL : -0.642364 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.847 

Total Inference Time : 1.0544631481170654 

Total revision time: 12.505344099044798
Best scored revision CLL: -0.671757


Results 

CLL : -0.642364 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.565094655990599 

Total Inference Time : 1.0544631481170654 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.234
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.412', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.261
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3785938489282847;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6644684231619105;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14168213568619817;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07038583938990187;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30972674031800285;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5350832715071676;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1307735287526293;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.05808197450811089;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.13254975084434328;  // std dev = 3.806, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.25917665944386004;  // std dev = 13.576, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11209163341431509;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.04978970433771053;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.19157705528201566;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.055643627111459454;  // std dev = 6.261, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1249038053097025;  // std dev = 15.495, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.11383568414899725;  // std dev = 14.116, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.02661420822917695;  // std dev = 6.260, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07253335113502508;  // std dev = 15.464, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.06738680697218036;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.009343344453368969;  // std dev = 6.259, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04190487865169785;  // std dev = 15.453, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.170', 'seconds']
Refined model CLL: -0.648321


******************************************
Best model found
******************************************
Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.261 

Total Inference Time : 0.9007556438446045 

Total revision time: 8.200000400543214
Best scored revision CLL: -0.648321


Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.259750957489015 

Total Inference Time : 0.9007556438446045 

Run: 5
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.297
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.381', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.371
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20564083645138656;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4043065147315884;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014283434161880808;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0014797094419622902;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17399348696885145;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.338235469181611;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892267859778524;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.6062158589698425E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14405022986842406;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711730044372582;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353548502929032;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8327154434982913E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12107522500507471;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.005585345981830015;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076159918515956;  // std dev = 15.194, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07981137355657211;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.014780034661489399;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05069240120504118;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.051348876481333336;  // std dev = 14.502, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.019348314751092246;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030894309033999916;  // std dev = 15.160, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.172', 'seconds']
Refined model CLL: -0.624506


******************************************
Best model found
******************************************
Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.371 

Total Inference Time : 0.9677543640136719 

Total revision time: 8.420596855163573
Best scored revision CLL: -0.624506


Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.449883001327514 

Total Inference Time : 0.9677543640136719 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.449
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.328', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 6.726
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37301714859831614;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5516269444842152;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5463348219282366;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.21020036814672396;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3056990706242831;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.447558147597091;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4677070955120816;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10312419784214047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.24119684112806916;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3449923596624612;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.36528283524978006;  // std dev = 2.316, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.073604493530158;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18783328355968018;  // std dev = 17.519, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.21204760056972058;  // std dev = 3.039, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14288304738906585;  // std dev = 17.781, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.10820882835031718;  // std dev = 17.554, 1,279.000 (wgt'ed) examples reached here.  /* #neg=531 #pos=748 */
%   | | | else return 0.08178312154079309;  // std dev = 2.830, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0806904188612847;  // std dev = 17.782, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05980248305131472;  // std dev = 17.520, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.08133215501586384;  // std dev = 3.039, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045554265332723304;  // std dev = 17.783, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.183', 'seconds']
Refined model CLL: -0.676188


******************************************
Best model found
******************************************
Results 

CLL : -0.742407 

AUC ROC : 0.498313 

AUC PR : 0.318837 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 6.726 

Total Inference Time : 0.9769163131713867 

Total revision time: 9.980309534072877
Best scored revision CLL: -0.676188


Results 

CLL : -0.742407 

AUC ROC : 0.498313 

AUC PR : 0.318837 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 10.009595680236817 

Total Inference Time : 0.9769163131713867 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 2.0
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18976993966571737;  // std dev = 19.706, 1,752.000 (wgt'ed) examples reached here.  /* #neg=1,171 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16058296446572154;  // std dev = 0.469, 1,776.000 (wgt'ed) examples reached here.  /* #neg=1,195 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1531219066580978;  // std dev = 0.475, 1,693.000 (wgt'ed) examples reached here.  /* #neg=1,112 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11762945994768703;  // std dev = 19.695, 1,748.000 (wgt'ed) examples reached here.  /* #neg=1,167 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10000597500881872;  // std dev = 19.652, 1,733.000 (wgt'ed) examples reached here.  /* #neg=1,152 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0844677569524773;  // std dev = 19.609, 1,718.000 (wgt'ed) examples reached here.  /* #neg=1,137 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0705231840958918;  // std dev = 19.574, 1,706.000 (wgt'ed) examples reached here.  /* #neg=1,125 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05480901147175002;  // std dev = 19.597, 1,714.000 (wgt'ed) examples reached here.  /* #neg=1,133 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03598810052971245;  // std dev = 19.709, 1,753.000 (wgt'ed) examples reached here.  /* #neg=1,172 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02359833929321946;  // std dev = 19.780, 1,779.000 (wgt'ed) examples reached here.  /* #neg=1,198 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.273', 'seconds']
Parameter learned model CLL:-0.535956 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.706, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.469, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.475, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.695, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.652, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.609, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.574, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.597, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.709, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.78, 1, 581]}]
{'': [nan, 0.22164851389669327], 'false': [nan, 0.22164851389669327], 'false,false': [nan, 0.22164851389669327]}
{'': [nan, 0.2201192958160942], 'false': [nan, 0.2201192958160942]}
{'': [nan, 0.2254067947341566], 'false': [nan, 0.2254067947341566]}
{'': [nan, 0.22190348957160194], 'false': [nan, 0.22190348957160194]}
{'': [nan, 0.22285967151345432], 'false': [nan, 0.22285967151345432], 'false,false': [nan, 0.22285967151345432]}
{'': [nan, 0.2238155610457418], 'false': [nan, 0.2238155610457418], 'false,false': [nan, 0.2238155610457418], 'false,false,false': [nan, 0.2238155610457418]}
{'': [nan, 0.22457975368637476], 'false': [nan, 0.22457975368637476], 'false,false': [nan, 0.22457975368637476]}
{'': [nan, 0.22407035750612014], 'false': [nan, 0.22407035750612014], 'false,false': [nan, 0.22407035750612014], 'false,false,false': [nan, 0.22407035750612014]}
{'': [nan, 0.22158477244939884], 'false': [nan, 0.22158477244939884], 'false,false': [nan, 0.22158477244939884]}
{'': [nan, 0.21992826811838684], 'false': [nan, 0.21992826811838684], 'false,false': [nan, 0.21992826811838684], 'false,false,false': [nan, 0.21992826811838684]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.013
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.20773200116749965;  // std dev = 18.828, 1,559.000 (wgt'ed) examples reached here.  /* #neg=1,014 #pos=545 */
%   | | | else return 0.027163019606553637;  // std dev = 5.470, 213.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.19090853530526644;  // std dev = 0.480, 1,514.000 (wgt'ed) examples reached here.  /* #neg=969 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.0201898773956911;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.01985866629362968;  // std dev = 5.328, 206.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=34 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.15022561322666889;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.16522531502187307;  // std dev = 18.359, 1,458.000 (wgt'ed) examples reached here.  /* #neg=929 #pos=529 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.03656082810424108;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.0123491339373297;  // std dev = 5.345, 213.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=34 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1495890976315704;  // std dev = 3.170, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return 0.13184045757245458;  // std dev = 18.444, 1,482.000 (wgt'ed) examples reached here.  /* #neg=953 #pos=529 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.016486538687580973;  // std dev = 3.876, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   | | | else return 0.005410553901681666;  // std dev = 3.902, 117.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.11462436966304734;  // std dev = 18.624, 1,499.000 (wgt'ed) examples reached here.  /* #neg=954 #pos=545 */
%   | | | else return 0.009580872578522186;  // std dev = 5.500, 226.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07955209319684627;  // std dev = 19.494, 1,731.000 (wgt'ed) examples reached here.  /* #neg=1,150 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08100354783596661;  // std dev = 18.559, 1,481.000 (wgt'ed) examples reached here.  /* #neg=936 #pos=545 */
%   | | | else return -0.004276844246754709;  // std dev = 5.507, 229.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03859724944810496;  // std dev = 19.640, 1,793.000 (wgt'ed) examples reached here.  /* #neg=1,212 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.043436558304276236;  // std dev = 18.742, 1,533.000 (wgt'ed) examples reached here.  /* #neg=988 #pos=545 */
%   | | | else return -0.009703996811035547;  // std dev = 5.509, 230.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03368621042089229;  // std dev = 19.479, 1,728.000 (wgt'ed) examples reached here.  /* #neg=1,147 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.557', 'seconds']
Refined model CLL: -0.528241


******************************************
Best model found
******************************************
Results 

CLL : -0.730453 

AUC ROC : 0.550235 

AUC PR : 0.496207 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.013 

Total Inference Time : 1.1813075542449951 

Total revision time: 12.175107229232788
Best scored revision CLL: -0.528241


Results 

CLL : -0.730453 

AUC ROC : 0.550235 

AUC PR : 0.496207 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.204393375396728 

Total Inference Time : 1.1813075542449951 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.571
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.330', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 9.655
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24029514227107734;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.36420092978917523;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0814045543349177;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.048527842006150124;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20205616407667265;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040794229163586;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397170698129957;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03776564972512874;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562187444395876;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24431902143844492;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06418425566419733;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210243848964374;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1356263520710294;  // std dev = 20.289, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.043208539884990495;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10198403852190853;  // std dev = 20.834, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08438615753059199;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.021198733180209508;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06183570933149438;  // std dev = 20.826, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.20708080484323133;  // std dev = 2.233, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.045902279613576444;  // std dev = 20.691, 1,794.000 (wgt'ed) examples reached here.  /* #neg=1,059 #pos=735 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03672920630444119;  // std dev = 20.818, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.069', 'seconds']
Refined model CLL: -0.671585


******************************************
Best model found
******************************************
Results 

CLL : -0.642688 

AUC ROC : 0.564699 

AUC PR : 0.418962 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 9.655 

Total Inference Time : 1.0675017833709717 

Total revision time: 13.19813339805603
Best scored revision CLL: -0.671585


Results 

CLL : -0.642688 

AUC ROC : 0.564699 

AUC PR : 0.418962 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 13.22741954421997 

Total Inference Time : 1.0675017833709717 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.222
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.326', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sameauthor(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sameauthor(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sameauthor(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sameauthor(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.203
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3785938489282847;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6644684231619105;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14168213568619817;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07038583938990187;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30972674031800285;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5350832715071676;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1307735287526293;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.0580819745081108;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordauthor(F, E) )
%   | | | then return 0.6098989157413459;  // std dev = 0.189, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2455792454153564;  // std dev = 14.084, 826.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=488 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.11209163341431509;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.049789704337710614;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.19156793706373462;  // std dev = 14.110, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.05564362711145937;  // std dev = 6.261, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12492766916104596;  // std dev = 15.490, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.1138828838889538;  // std dev = 14.111, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.026610164614208343;  // std dev = 6.260, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07257664595329588;  // std dev = 15.460, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return -0.011865875721022068;  // std dev = 5.033, 115.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=46 */
%   | | | else return 0.06389740765960208;  // std dev = 14.594, 935.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=504 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042423241589808876;  // std dev = 15.446, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.952', 'seconds']
Refined model CLL: -0.647898


******************************************
Best model found
******************************************
Results 

CLL : -0.695504 

AUC ROC : 0.555122 

AUC PR : 0.400348 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.203 

Total Inference Time : 0.9167344570159912 

Total revision time: 8.151080894470216
Best scored revision CLL: -0.647898


Results 

CLL : -0.695504 

AUC ROC : 0.555122 

AUC PR : 0.400348 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.180367040634156 

Total Inference Time : 0.9167344570159912 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.225
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.406', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.469
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20564083645138656;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4043065147315884;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014283434161880808;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0014797094419622902;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17399348696885145;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.338235469181611;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892267859778524;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.6062158589698355E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14405022986842406;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711730044372582;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353548502929017;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8327154434984003E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12107522500507449;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.005585345981830004;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076159918515974;  // std dev = 15.194, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07981137355657221;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.014780034661489382;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05069240120504106;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05134887648133334;  // std dev = 14.502, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.019348314751092204;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03089430903399976;  // std dev = 15.160, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.232', 'seconds']
Refined model CLL: -0.624506


******************************************
Best model found
******************************************
Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.469 

Total Inference Time : 0.9868893623352051 

Total revision time: 8.538882488250733
Best scored revision CLL: -0.624506


Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.64214157485962 

Total Inference Time : 0.9868893623352051 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.389
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.350', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 7.131
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37301714859831614;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5516269444842152;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5463348219282366;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.21020036814672396;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3056990706242831;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.447558147597091;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4677070955120816;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10312419784214047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.24119684112806916;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3449923596624612;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3652828352497801;  // std dev = 2.316, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.073604493530158;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18783328355968018;  // std dev = 17.519, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.21204760056972058;  // std dev = 3.039, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14288304738906585;  // std dev = 17.781, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.16378426581687625;  // std dev = 2.760, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.10603619583741637;  // std dev = 17.563, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0806942574573201;  // std dev = 17.781, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.061272832694379525;  // std dev = 17.554, 1,279.000 (wgt'ed) examples reached here.  /* #neg=531 #pos=748 */
%   | | | else return 0.036454181187531326;  // std dev = 2.831, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04554227403302364;  // std dev = 17.782, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.221', 'seconds']
Refined model CLL: -0.676133


******************************************
Best model found
******************************************
Results 

CLL : -0.741576 

AUC ROC : 0.498823 

AUC PR : 0.3205 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 7.131 

Total Inference Time : 0.9960289001464844 

Total revision time: 10.358056802749633
Best scored revision CLL: -0.676133


Results 

CLL : -0.741576 

AUC ROC : 0.498823 

AUC PR : 0.3205 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 10.46131588935852 

Total Inference Time : 0.9960289001464844 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 2.055
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18437015913095034;  // std dev = 19.785, 1,781.000 (wgt'ed) examples reached here.  /* #neg=1,200 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16600194337496343;  // std dev = 0.471, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14156216500804755;  // std dev = 0.471, 1,752.000 (wgt'ed) examples reached here.  /* #neg=1,171 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12186672228285844;  // std dev = 19.661, 1,736.000 (wgt'ed) examples reached here.  /* #neg=1,155 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09825039386321625;  // std dev = 19.698, 1,749.000 (wgt'ed) examples reached here.  /* #neg=1,168 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08383338618805929;  // std dev = 19.644, 1,730.000 (wgt'ed) examples reached here.  /* #neg=1,149 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07463977359060218;  // std dev = 19.541, 1,695.000 (wgt'ed) examples reached here.  /* #neg=1,114 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04877924894536113;  // std dev = 19.703, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04164389099482546;  // std dev = 19.661, 1,736.000 (wgt'ed) examples reached here.  /* #neg=1,155 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.024670079779586903;  // std dev = 19.783, 1,780.000 (wgt'ed) examples reached here.  /* #neg=1,199 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.316', 'seconds']
Parameter learned model CLL:-0.535467 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.785, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.471, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.471, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.661, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.698, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.644, 1, 581]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.541, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.703, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.661, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.783, 1, 581]}]
{'': [nan, 0.21980093702285539], 'false': [nan, 0.21980093702285539], 'false,false': [nan, 0.21980093702285539]}
{'': [nan, 0.22171225645393747], 'false': [nan, 0.22171225645393747]}
{'': [nan, 0.22164851389671766], 'false': [nan, 0.22164851389671766]}
{'': [nan, 0.22266844432882882], 'false': [nan, 0.22266844432882882]}
{'': [nan, 0.22183974441330703], 'false': [nan, 0.22183974441330703], 'false,false': [nan, 0.22183974441330703]}
{'': [nan, 0.22305088709946705], 'false': [nan, 0.22305088709946705], 'false,false': [nan, 0.22305088709946705], 'false,false,false': [nan, 0.22305088709946705]}
{'': [nan, 0.2252796268741217], 'false': [nan, 0.2252796268741217], 'false,false': [nan, 0.2252796268741217]}
{'': [nan, 0.22171225645392856], 'false': [nan, 0.22171225645392856], 'false,false': [nan, 0.22171225645392856], 'false,false,false': [nan, 0.22171225645392856]}
{'': [nan, 0.222668444328839], 'false': [nan, 0.222668444328839], 'false,false': [nan, 0.222668444328839]}
{'': [nan, 0.21986460042924966], 'false': [nan, 0.21986460042924966], 'false,false': [nan, 0.21986460042924966], 'false,false,false': [nan, 0.21986460042924966]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.509
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2106715741680714;  // std dev = 18.785, 1,546.000 (wgt'ed) examples reached here.  /* #neg=1,001 #pos=545 */
%   | | | else return 0.0287650488435872;  // std dev = 5.464, 211.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.13821390399887903;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.19484666517711383;  // std dev = 18.338, 1,452.000 (wgt'ed) examples reached here.  /* #neg=923 #pos=529 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.029368463628045575;  // std dev = 3.854, 103.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=18 */
%   | | | else return 0.007153554956003501;  // std dev = 3.906, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.09891612007429487;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.16337024098486633;  // std dev = 18.373, 1,462.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=529 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.031099999222404057;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.025116676171851357;  // std dev = 5.303, 197.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=34 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.13130042510377188;  // std dev = 0.479, 1,528.000 (wgt'ed) examples reached here.  /* #neg=983 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return -0.033302926857110525;  // std dev = 1.332, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.011927781923636933;  // std dev = 5.335, 209.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.10614199269062;  // std dev = 18.746, 1,534.000 (wgt'ed) examples reached here.  /* #neg=989 #pos=545 */
%   | | | else return 0.0015992763335115128;  // std dev = 5.521, 235.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0811617175940566;  // std dev = 19.475, 1,736.000 (wgt'ed) examples reached here.  /* #neg=1,155 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.06912332794969545;  // std dev = 18.750, 1,536.000 (wgt'ed) examples reached here.  /* #neg=991 #pos=545 */
%   | | | else return -0.011759898534889802;  // std dev = 5.528, 239.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05010645537897515;  // std dev = 19.513, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.0493086646402731;  // std dev = 18.676, 1,514.000 (wgt'ed) examples reached here.  /* #neg=969 #pos=545 */
%   | | | else return -0.0035838796506871846;  // std dev = 5.485, 219.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03424878124702386;  // std dev = 19.455, 1,731.000 (wgt'ed) examples reached here.  /* #neg=1,150 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.583', 'seconds']
Refined model CLL: -0.528394


******************************************
Best model found
******************************************
Results 

CLL : -0.730402 

AUC ROC : 0.545954 

AUC PR : 0.489888 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.509 

Total Inference Time : 1.258108377456665 

Total revision time: 12.770109762191773
Best scored revision CLL: -0.528394


Results 

CLL : -0.730402 

AUC ROC : 0.545954 

AUC PR : 0.489888 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.87336884880066 

Total Inference Time : 1.258108377456665 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.677
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.326', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.85
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24029514227107734;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.36420092978917523;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0814045543349177;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.048527842006150124;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20205616407667265;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040794229163586;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0739717069812996;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03776564972512874;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562187444395876;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24431902143844492;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06418425566419737;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210243848964374;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13562635207102938;  // std dev = 20.289, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.04320853988499052;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10198403852190835;  // std dev = 20.834, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08438615753059187;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.021198733180209522;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.061835709331494584;  // std dev = 20.826, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.20708080484323133;  // std dev = 2.233, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.04590227961357691;  // std dev = 20.691, 1,794.000 (wgt'ed) examples reached here.  /* #neg=1,059 #pos=735 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03672920630444115;  // std dev = 20.818, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.071', 'seconds']
Refined model CLL: -0.671585


******************************************
Best model found
******************************************
Results 

CLL : -0.642688 

AUC ROC : 0.564699 

AUC PR : 0.418962 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 8.85 

Total Inference Time : 1.0419082641601562 

Total revision time: 12.458182384490966
Best scored revision CLL: -0.671585


Results 

CLL : -0.642688 

AUC ROC : 0.564699 

AUC PR : 0.418962 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 12.561441471099853 

Total Inference Time : 1.0419082641601562 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.247
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.465', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), haswordtitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordtitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'haswordtitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), haswordtitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- haswordtitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;haswordtitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.244
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3785938489282847;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6644684231619105;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14168213568619817;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07038583938990187;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30972674031800285;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5350832715071676;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1307735287526293;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.0580819745081108;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordauthor(F, E) )
%   | | | then return 0.6098989157413459;  // std dev = 0.189, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24557924541535636;  // std dev = 14.084, 826.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=488 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.1120916334143151;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.049789704337710405;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1915679370637347;  // std dev = 14.110, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.05564362711145947;  // std dev = 6.261, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12492766916104596;  // std dev = 15.490, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordtitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.11388288388895375;  // std dev = 14.111, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.026610164614208186;  // std dev = 6.260, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07257664595329626;  // std dev = 15.460, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.06744311186318552;  // std dev = 14.112, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.00933205110368227;  // std dev = 6.259, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04194497302088343;  // std dev = 15.449, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.926', 'seconds']
Refined model CLL: -0.647964


******************************************
Best model found
******************************************
Results 

CLL : -0.69583 

AUC ROC : 0.55543 

AUC PR : 0.40047 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.244 

Total Inference Time : 0.9001600742340088 

Total revision time: 8.203419986724853
Best scored revision CLL: -0.647964


Results 

CLL : -0.69583 

AUC ROC : 0.55543 

AUC PR : 0.40047 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.30667907333374 

Total Inference Time : 0.9001600742340088 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.338
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.445', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.564
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20564083645138656;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4043065147315884;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.014283434161880808;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0014797094419622902;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17399348696885145;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.338235469181611;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892267859778524;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.6062158589698425E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14405022986842406;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711730044372582;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353548502929043;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8327154434982875E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12107522500507467;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.0055853459818300585;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076159918515961;  // std dev = 15.194, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.07981137355657211;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.014780034661489408;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050692401205041204;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.05134887648133333;  // std dev = 14.502, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.019348314751092215;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03089430903399998;  // std dev = 15.160, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.277', 'seconds']
Refined model CLL: -0.624506


******************************************
Best model found
******************************************
Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.564 

Total Inference Time : 0.9233396053314209 

Total revision time: 8.624708940505982
Best scored revision CLL: -0.624506


Results 

CLL : -0.656294 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.684481193542481 

Total Inference Time : 0.9233396053314209 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.584
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 0.492, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.363', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 6.694
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37301714859831614;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5516269444842152;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.5463348219282366;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.21020036814672396;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3056990706242831;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.447558147597091;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4677070955120816;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10312419784214047;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.24119684112806916;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3449923596624612;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.36528283524978;  // std dev = 2.316, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.073604493530158;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1878332835596802;  // std dev = 17.519, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.21204760056972058;  // std dev = 3.039, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14288304738906588;  // std dev = 17.781, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.10820882835031716;  // std dev = 17.554, 1,279.000 (wgt'ed) examples reached here.  /* #neg=531 #pos=748 */
%   | | | else return 0.08178312154079309;  // std dev = 2.830, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08069041886128467;  // std dev = 17.782, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.11481524285025108;  // std dev = 2.774, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.05919250113316585;  // std dev = 17.562, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04554426869292077;  // std dev = 17.782, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.283', 'seconds']
Refined model CLL: -0.676138


******************************************
Best model found
******************************************
Results 

CLL : -0.741537 

AUC ROC : 0.498825 

AUC PR : 0.320519 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 6.694 

Total Inference Time : 1.0350210666656494 

Total revision time: 10.173276069641114
Best scored revision CLL: -0.676138


Results 

CLL : -0.741537 

AUC ROC : 0.498825 

AUC PR : 0.320519 

Precision : 0.334824 

Recall : 1.0 

F1 : 0.501675 

Total Learning Time : 10.233048322677613 

Total Inference Time : 1.0350210666656494 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 2.024
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19167361937046026;  // std dev = 19.678, 1,742.000 (wgt'ed) examples reached here.  /* #neg=1,161 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1765595113687172;  // std dev = 0.475, 1,692.000 (wgt'ed) examples reached here.  /* #neg=1,111 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14753967550005775;  // std dev = 0.474, 1,707.000 (wgt'ed) examples reached here.  /* #neg=1,126 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1195900193863117;  // std dev = 19.635, 1,727.000 (wgt'ed) examples reached here.  /* #neg=1,146 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08748224295457262;  // std dev = 19.799, 1,786.000 (wgt'ed) examples reached here.  /* #neg=1,205 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07364837845186603;  // std dev = 19.764, 1,773.000 (wgt'ed) examples reached here.  /* #neg=1,192 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.062236642209421766;  // std dev = 19.723, 1,758.000 (wgt'ed) examples reached here.  /* #neg=1,177 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.047604689655737616;  // std dev = 19.756, 1,770.000 (wgt'ed) examples reached here.  /* #neg=1,189 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05161182830578601;  // std dev = 19.553, 1,699.000 (wgt'ed) examples reached here.  /* #neg=1,118 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.040461293944468436;  // std dev = 19.559, 1,701.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.184', 'seconds']
Parameter learned model CLL:-0.53676 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.678, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.475, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.474, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.635, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.799, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.764, 1, 581]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.723, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.756, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.553, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.559, 1, 581]}]
{'': [nan, 0.2222859692528997], 'false': [nan, 0.2222859692528997], 'false,false': [nan, 0.2222859692528997]}
{'': [nan, 0.22547036813484692], 'false': [nan, 0.22547036813484692]}
{'': [nan, 0.22451609537764733], 'false': [nan, 0.22451609537764733]}
{'': [nan, 0.22324208750359936], 'false': [nan, 0.22324208750359936]}
{'': [nan, 0.2194826879211027], 'false': [nan, 0.2194826879211027], 'false,false': [nan, 0.2194826879211027]}
{'': [nan, 0.22031035819935033], 'false': [nan, 0.22031035819935033], 'false,false': [nan, 0.22031035819935033], 'false,false,false': [nan, 0.22031035819935033]}
{'': [nan, 0.2212660860606767], 'false': [nan, 0.2212660860606767], 'false,false': [nan, 0.2212660860606767]}
{'': [nan, 0.2205014523285197], 'false': [nan, 0.2205014523285197], 'false,false': [nan, 0.2205014523285197], 'false,false,false': [nan, 0.2205014523285197]}
{'': [nan, 0.22502521131254954], 'false': [nan, 0.22502521131254954], 'false,false': [nan, 0.22502521131254954]}
{'': [nan, 0.22489796609597051], 'false': [nan, 0.22489796609597051], 'false,false': [nan, 0.22489796609597051], 'false,false,false': [nan, 0.22489796609597051]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.283
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.22075705219864244;  // std dev = 18.638, 1,503.000 (wgt'ed) examples reached here.  /* #neg=958 #pos=545 */
%   | | | else return 0.027960255854228358;  // std dev = 5.467, 212.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.1900244265205134;  // std dev = 0.480, 1,510.000 (wgt'ed) examples reached here.  /* #neg=965 #pos=545 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.021377816467195682;  // std dev = 3.873, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return 0.004711149800529002;  // std dev = 3.912, 120.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.1539045499007248;  // std dev = 0.478, 1,542.000 (wgt'ed) examples reached here.  /* #neg=997 #pos=545 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.01870293761161534;  // std dev = 3.873, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return 0.0053856452251506036;  // std dev = 3.909, 119.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.132358838576261;  // std dev = 0.479, 1,524.000 (wgt'ed) examples reached here.  /* #neg=979 #pos=545 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return -0.004502167997591898;  // std dev = 1.311, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.02072148622145853;  // std dev = 5.314, 201.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.10242630210670123;  // std dev = 18.798, 1,550.000 (wgt'ed) examples reached here.  /* #neg=1,005 #pos=545 */
%   | | | else return 0.022013345933749588;  // std dev = 5.457, 208.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07685315321461826;  // std dev = 19.568, 1,750.000 (wgt'ed) examples reached here.  /* #neg=1,169 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08503165037639653;  // std dev = 18.541, 1,476.000 (wgt'ed) examples reached here.  /* #neg=931 #pos=545 */
%   | | | else return 0.0051708814973466495;  // std dev = 5.468, 213.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05230653793187141;  // std dev = 19.465, 1,722.000 (wgt'ed) examples reached here.  /* #neg=1,141 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.03843058044593558;  // std dev = 18.801, 1,551.000 (wgt'ed) examples reached here.  /* #neg=1,006 #pos=545 */
%   | | | else return -0.004484409019509931;  // std dev = 5.474, 215.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03520427549380859;  // std dev = 19.439, 1,722.000 (wgt'ed) examples reached here.  /* #neg=1,141 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.420', 'seconds']
Refined model CLL: -0.528833


******************************************
Best model found
******************************************
Results 

CLL : -0.729913 

AUC ROC : 0.548377 

AUC PR : 0.49126 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.283 

Total Inference Time : 1.1405754089355469 

Total revision time: 12.387574274063109
Best scored revision CLL: -0.528833


Results 

CLL : -0.729913 

AUC ROC : 0.548377 

AUC PR : 0.49126 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.447346527099608 

Total Inference Time : 1.1405754089355469 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.619
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 0.492, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.295', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 8.673
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24029514227107734;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.36420092978917523;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0814045543349177;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.048527842006150124;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20205616407667265;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040794229163586;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397170698129954;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03776564972512874;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562187444395876;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24431902143844492;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06418425566419736;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210243848964374;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13562635207102938;  // std dev = 20.289, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.043208539884990446;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10198403852190839;  // std dev = 20.834, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08438615753059192;  // std dev = 20.288, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.021198733180209574;  // std dev = 4.674, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06183570933149447;  // std dev = 20.826, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.20708080484323133;  // std dev = 2.233, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.04590227961357652;  // std dev = 20.691, 1,794.000 (wgt'ed) examples reached here.  /* #neg=1,059 #pos=735 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036729206304441014;  // std dev = 20.818, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.991', 'seconds']
Refined model CLL: -0.671585


******************************************
Best model found
******************************************
Results 

CLL : -0.642688 

AUC ROC : 0.564699 

AUC PR : 0.418962 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 8.673 

Total Inference Time : 1.0751731395721436 

Total revision time: 12.29473060798645
Best scored revision CLL: -0.671585


Results 

CLL : -0.642688 

AUC ROC : 0.564699 

AUC PR : 0.418962 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 12.354502861022949 

Total Inference Time : 1.0751731395721436 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.184
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 0.499, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.403', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A), sametitle(E, B)', 'false,false': 'author(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, A)', 'false,false,false': 'author(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sametitle(C, B)', 'false': 'author(D, A), author(D, B)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, B)', 'false,false': 'author(E, A), author(E, B)', 'false,false,false': 'sametitle(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)', 'false': 'author(D, A)', 'false,false': 'author(E, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, B), author(C, A)', 'false': 'author(D, B)', 'false,false': 'author(E, B), author(F, A)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
0;false;author(D, A).;true;true
0;false,false;author(E, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;false;author(D, A), author(E, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;false;author(D, B), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, B).;true;true
3;false;author(D, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;false;author(D, A), sametitle(E, B).;true;true
4;false,false;author(F, A).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;false;author(D, A).;true;true
5;false,false;author(E, A).;true;true
5;false,false,false;author(F, B).;true;true
6;;samevenue(A, B) :- sametitle(C, B).;true;true
6;false;author(D, A), author(D, B).;true;true
6;false,false;author(E, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;false;author(D, B).;true;true
7;false,false;author(E, A), author(E, B).;true;true
7;false,false,false;sametitle(F, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;false;author(D, A).;true;true
8;false,false;author(E, B).;true;true
9;;samevenue(A, B) :- author(C, B), author(C, A).;true;true
9;false;author(D, B).;true;true
9;false,false;author(E, B), author(F, A).;true;true
9;false,false,false;author(G, A).;true;true


Refining candidate
***************************
Model training time 5.213
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3785938489282847;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6644684231619105;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14168213568619817;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07038583938990187;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30972674031800285;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5350832715071676;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1307735287526293;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.058081974508110826;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.13254975084434328;  // std dev = 3.806, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.25917665944386;  // std dev = 13.576, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11209163341431508;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.049789704337710614;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sametitle(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.19157705528201552;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.05564362711145933;  // std dev = 6.261, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12490380530970231;  // std dev = 15.495, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sametitle(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.11383568414899735;  // std dev = 14.116, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.026614208229176883;  // std dev = 6.260, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, A), author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07253335113502508;  // std dev = 15.464, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.06738680697218047;  // std dev = 14.117, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.009343344453368943;  // std dev = 6.259, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, B), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(E, B), author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04190487865169751;  // std dev = 15.453, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.020', 'seconds']
Refined model CLL: -0.648321


******************************************
Best model found
******************************************
Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.213 

Total Inference Time : 0.9221551418304443 

Total revision time: 8.09732548904419
Best scored revision CLL: -0.648321


Results 

CLL : -0.697634 

AUC ROC : 0.552972 

AUC PR : 0.397936 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.157097742080689 

Total Inference Time : 0.9221551418304443 

