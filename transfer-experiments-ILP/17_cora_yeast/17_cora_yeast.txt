Starting experiment 17_cora_yeast 

Loading pre-trained trees.
Starting experiment 17_cora_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 

Starting experiment 17_cora_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

Results 

CLL : -0.223047 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.212523258209229 

Total Inference Time : ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '9,288', 'seconds'] 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

Results 

CLL : -0.225276 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.830523258209229 

Total Inference Time : ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '5,026', 'seconds'] 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

Starting experiment 17_cora_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 2.979
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0,469, 266,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0,477, 249,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0,472, 260,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0,470, 264,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0,480, 242,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0,468, 268,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(C, D) )
%   then return 0.20202245288607257;  // std dev = 7,555, 253,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0,475, 252,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(C, D) )
%   then return 0.15636239528252371;  // std dev = 7,665, 268,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0,467, 270,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '11,690', 'seconds']
Parameter learned model CLL:-0.223085 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'location(C, D)'}, {'true': [7.555, 166, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'location(C, D)'}, {'true': [7.665, 181, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{'': [0.22562452155165771, nan]}
{}
{'': [0.21924426375584902, nan]}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
6;;proteinclass(A, B) :- location(C, D).;true;true
8;;proteinclass(A, B) :- location(C, D).;true;true


Refining candidate
***************************
