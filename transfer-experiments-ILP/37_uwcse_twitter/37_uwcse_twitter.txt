Starting experiment 37_uwcse_twitter 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.973
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.14185106490048766;  // std dev = 6.99e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return 0.3011869097830532;  // std dev = 7.647, 237.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=105 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(G, B) )
%   | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0.45814893509951155;  // std dev = 2.898, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A), follows(G, B) )
%   | then if ( follows(F, H) )
%   | | then return -0.18260261391961194;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4002074565552703;  // std dev = 0.479, 220.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360628;  // std dev = 5.89e-09, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( follows(D, B), follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return -0.15690809731444952;  // std dev = 1.03e-07, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.35945691455722095;  // std dev = 0.470, 211.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.1458981921788597;  // std dev = 0.046, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then return 0.4545874542818175;  // std dev = 4.830, 135.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=105 */
%   | else return 0.4193481869621671;  // std dev = 2.160, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08903213308867211;  // std dev = 2.79e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( follows(D, A) )
%   | then return 0.10198390643773907;  // std dev = 6.486, 258.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=105 */
%   | else return 0.012788668283034349;  // std dev = 3.023, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.08207046605503031;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A) )
%   | then return 0.11410343396124632;  // std dev = 6.001, 251.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=105 */
%   | else if ( follows(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, B) )
%   | | | then return -0.2116019447925561;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.3451345428251758;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07609597160554192;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( follows(D, B) )
%   | then if ( follows(D, E) )
%   | | then return -0.15368269659351458;  // std dev = 0.175, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25420076561670385;  // std dev = 5.666, 168.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.0709156199616051;  // std dev = 2.24e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( follows(D, B) )
%   | then return -0.13548825154299843;  // std dev = 0.159, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else if ( follows(E, A), follows(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18673307008854972;  // std dev = 0.439, 169.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06638305117826267;  // std dev = 1.29e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02810284971615136;  // std dev = 5.689, 255.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=105 */
%   | else if ( follows(E, B) )
%   | | then return -0.1399062173754576;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0.04614710756052866;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.0623854117597179;  // std dev = 1.39e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( follows(D, B) )
%   | then return -0.1181191048902799;  // std dev = 0.038, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( follows(E, B), follows(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(G, A) )
%   | | | then return 0.1058751246000855;  // std dev = 5.568, 149.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=105 */
%   | | | else return 0.05991605505982784;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.385', 'seconds']
Parameter learned model CLL:-0.260746 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)', 'false,true': 'follows(E, F)', 'false,false': 'follows(G, B)'}, {'true,true': [6.99e-08, 71, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [7.647, 132, 105], 'false,true,false': [0.0, 0, 0], 'false,false,true': [3.33e-08, 34, 0], 'false,false,false': [2.898, 14, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A), follows(G, B)', 'false,true': 'follows(F, H)'}, {'true,true': [0.0, 50, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 109, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.479, 94, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B), follows(E, A)', 'false,true': 'follows(E, F)'}, {'true': [5.89e-09, 61, 0], 'false,true,true': [1.03e-07, 114, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.47, 85, 126]}]
['accounttype(A, B)', {'': 'follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)'}, {'true,true': [0.046, 190, 0], 'true,false': [0.0, 0, 0], 'false,true': [4.83, 30, 105], 'false,false': [2.16, 6, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)'}, {'true': [2.79e-08, 71, 0], 'false,true': [6.486, 153, 105], 'false,false': [3.023, 42, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A)', 'false,false': 'follows(G, A)', 'false,false,false': 'follows(H, B)'}, {'true,true': [0.0, 54, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.001, 146, 105], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 29, 0], 'false,false,false,false': [2.01, 5, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,true': 'follows(D, E)'}, {'true': [7.45e-09, 53, 0], 'false,true,true': [0.175, 157, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [5.666, 42, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,false': 'follows(E, A), follows(E, B)'}, {'true': [2.24e-08, 68, 0], 'false,true': [0.159, 150, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.439, 43, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)', 'false,true': 'follows(D, B)', 'false,false': 'follows(E, B)'}, {'true': [1.29e-08, 78, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [5.689, 150, 105], 'false,false,true': [0.0, 36, 0], 'false,false,false': [2.51, 9, 21]}]
['accounttype(A, B)', {'': 'follows(C, B), follows(C, A)', 'false': 'follows(D, B)', 'false,false': 'follows(E, B), follows(F, A)', 'false,false,false': 'follows(G, A)'}, {'true': [1.39e-08, 60, 0], 'false,true': [0.038, 127, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.568, 44, 105], 'false,false,false,false': [2.407, 8, 21]}]
{'': [6.880255363874209e-17, 0.2422145328719744], 'false': [0.24675532767185024, 0.21172022684310035], 'false,true': [0.24675532767185024, nan], 'false,false': [3.2653618371328135e-17, 0.24000000000000027], 'true': [6.880255363874209e-17, nan]}
{'': [-3.3306690738754695e-17, 0.22849976218771856], 'false': [-4.0742129344042444e-18, 0.22917676474992418], 'false,true': [-4.0742129344042444e-18, nan], 'true': [-3.3306690738754695e-17, nan]}
{'': [3.45807171604557e-17, 0.2041562739120412], 'false': [9.349246523159212e-17, 0.22093212464801193], 'false,true': [9.349246523159212e-17, nan]}
{'': [0.0021409557751170954, 0.17301197922300893], 'false': [0.17283950617283858, 0.1728395061728395], 'true': [0.0021409557751170954, nan]}
{'': [1.0945860806163514e-17, 0.16076450104137066], 'false': [0.1630316794890379, 0.1450854918132687]}
{'': [-1.2335811384723961e-17, 0.14534569719077248], 'false': [0.14347317833791473, 0.150684907162202], 'false,false': [nan, 0.150684907162202], 'false,false,false': [-2.2970131543968756e-17, 0.1553254437869821], 'true': [-1.2335811384723961e-17, nan]}
{'': [1.047380211910525e-18, 0.14043159776894898], 'false': [0.000195849769621526, 0.19111625785792746], 'false,true': [0.000195849769621526, nan]}
{'': [7.34706413354883e-18, 0.12823539589076433], 'false': [0.0001685652963802505, 0.19308290452632665], 'false,false': [nan, 0.1930829045263265]}
{'': [2.135044278125301e-18, 0.12336476771213276], 'false': [0.12693578683423487, 0.10403698505447982], 'false,true': [nan, 0.12693578683423487], 'false,false': [-1.5419764230904953e-17, 0.20999999999999996]}
{'': [3.23815048849004e-18, 0.1322190468840544], 'false': [1.126957957680048e-05, 0.207028595402634], 'false,false': [nan, 0.207028595402634], 'false,false,false': [0.20809873429124845, 0.1997621878715815]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
0;false;follows(E, A).;true;true
0;false,false;follows(G, B).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
1;false;follows(F, A), follows(G, B).;true;true
2;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
2;false;follows(D, B), follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, B).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;false;follows(F, A).;true;true
5;false,false;follows(H, B).;true;true
6;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
6;false;follows(D, B).;true;true
7;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
7;false;follows(D, B).;true;true
8;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
8;false;follows(D, A).;true;true
8;false,false;follows(E, B).;true;true
9;;accounttype(A, B) :- follows(C, B), follows(C, A).;true;true
9;false;follows(D, B).;true;true


Refining candidate
***************************
Model training time 13.378
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.14185106490048766;  // std dev = 7.30e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( follows(D, A) )
%   | then if ( tweets(A, E) )
%   | | then if ( tweets(F, E), follows(F, A) )
%   | | | then return 0.2867203636709405;  // std dev = 6.803, 189.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=81 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.25814893509951203;  // std dev = 0.490, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( follows(G, B) )
%   | | then return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.5456489350995123;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( follows(D, A), follows(E, B) )
%   | then return -0.18206055423801826;  // std dev = 0.108, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( follows(F, A), follows(G, F) )
%   | | then if ( follows(G, A), tweets(A, H) )
%   | | | then return 0.6479951902667639;  // std dev = 3.281, 76.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=63 */
%   | | | else return 0.5258495401902026;  // std dev = 3.466, 58.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=41 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.21502126085013573;  // std dev = 2.601, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.09208829655349084;  // std dev = 2.302, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360628;  // std dev = 4.59e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( follows(D, B), follows(E, A) )
%   | then return -0.15561247428715835;  // std dev = 0.070, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( follows(F, A), tweets(F, G) )
%   | | then if ( follows(A, H), follows(H, F) )
%   | | | then return 0.4801496670550976;  // std dev = 4.312, 104.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=80 */
%   | | | else return 0.3870491504905282;  // std dev = 2.834, 36.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.24190292317490655;  // std dev = 2.361, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.12211222350772796;  // std dev = 2.265, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then return -0.13250474164015139;  // std dev = 0.346, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
%   else if ( tweets(A, D), follows(E, A) )
%   | then if ( tweets(E, D), follows(F, E) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.2949858001444647;  // std dev = 4.337, 89.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=62 */
%   | | | else return 0.38405714460864165;  // std dev = 2.119, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | else return 0.6061264189067226;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( follows(G, A) )
%   | | | then return 0.4606564842276464;  // std dev = 1.826, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return 0.3590968127565908;  // std dev = 2.003, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.4672174367555402;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.693930505245021;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.09012441028666716;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( follows(D, A), tweets(D, E) )
%   | then if ( follows(D, F), follows(F, A) )
%   | | then if ( tweets(F, G), follows(A, D) )
%   | | | then return 0.10990760965123542;  // std dev = 4.409, 130.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=58 */
%   | | | else return 0.18196077585082748;  // std dev = 1.921, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( follows(A, D), tweets(A, H) )
%   | | | then return 0.03450730806460121;  // std dev = 2.760, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.11003594288581646;  // std dev = 2.300, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( tweets(A, K), tweets(I, K) )
%   | | | then return 0.05037324236575838;  // std dev = 1.920, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.21338000986955774;  // std dev = 1.192, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( tweets(A, L) )
%   | | | then return -0.04640537698092821;  // std dev = 1.473, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.031549364879454;  // std dev = 1.580, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08300195081508419;  // std dev = 3.33e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( follows(D, A) )
%   | then if ( tweets(A, E), follows(A, F) )
%   | | then if ( follows(F, A), tweets(F, G) )
%   | | | then return 0.07379867562229112;  // std dev = 4.909, 174.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=71 */
%   | | | else return -0.02098093804432079;  // std dev = 1.731, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( follows(A, H), follows(H, A) )
%   | | | then return 0.12009990692045357;  // std dev = 2.470, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.09723611541587865;  // std dev = 1.605, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( follows(I, B) )
%   | | then return -0.16088233163222365;  // std dev = 0.119, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.2488643128476221;  // std dev = 2.008, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.4483935425897679;  // std dev = 0.913, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.0768991843788708;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( follows(D, B) )
%   | then return -0.14127144385210594;  // std dev = 0.132, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( follows(A, E) )
%   | | then if ( follows(A, F), follows(E, F) )
%   | | | then return 0.2061283428546707;  // std dev = 4.996, 125.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=91 */
%   | | | else return 0.253692239707718;  // std dev = 2.532, 35.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=27 */
%   | | else return 0.14269820249874432;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07161497336996539;  // std dev = 1.97e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( follows(D, B) )
%   | then return -0.1262044849605802;  // std dev = 0.127, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( tweets(A, E) )
%   | | then if ( follows(A, F), tweets(F, E) )
%   | | | then return 0.23413484627738218;  // std dev = 4.192, 109.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=87 */
%   | | | else return 0.4309010839158904;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.040992587670942646;  // std dev = 2.735, 32.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   | | | else return 0.27146644419049404;  // std dev = 0.973, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06699720202080903;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(E, A), tweets(A, F) )
%   | | | then return 0.023121526561850833;  // std dev = 4.465, 171.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=72 */
%   | | | else return 0.05349406465429428;  // std dev = 2.424, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | | else return 0.1849980698042324;  // std dev = 0.217, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( follows(G, B) )
%   | | then return -0.11197514896246734;  // std dev = 0.072, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.39244136211215674;  // std dev = 0.118, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.17314362098341263;  // std dev = 1.227, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.06292884681297609;  // std dev = 9.13e-09, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( follows(D, B) )
%   | then return -0.11361749295692937;  // std dev = 0.149, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(F, A), follows(E, A) )
%   | | | then return 0.11575638849076932;  // std dev = 4.016, 85.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=64 */
%   | | | else return 0.22759721295837257;  // std dev = 2.466, 50.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=43 */
%   | | else if ( follows(A, G) )
%   | | | then return -0.08070695042107762;  // std dev = 2.053, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return -0.13009106664123918;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.360', 'seconds']
Refined model CLL: -0.278221


******************************************
Best model found
******************************************
Results 

CLL : -0.393933 

AUC ROC : 0.841772 

AUC PR : 0.019608 

Precision : 0.019608 

Recall : 1.0 

F1 : 0.038462 

Total Learning Time : 13.378 

Total Inference Time : 5.054989814758301 

Total revision time: 24.605904747009276
Best scored revision CLL: -0.260746


Results 

CLL : -0.393933 

AUC ROC : 0.841772 

AUC PR : 0.019608 

Precision : 0.019608 

Recall : 1.0 

F1 : 0.038462 

Total Learning Time : 24.622520376205443 

Total Inference Time : 5.054989814758301 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.919
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return 0.22801194879813866;  // std dev = 8.250, 292.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=108 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(G, B) )
%   | | then return -0.14185106490048766;  // std dev = 6.50e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return 0.48152555847613626;  // std dev = 4.252, 77.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=48 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.12544463852839155;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A), follows(G, B) )
%   | then if ( follows(F, H) )
%   | | then return -0.1719331639760391;  // std dev = 6.99e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3103823516887182;  // std dev = 0.489, 323.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360633;  // std dev = 3.73e-09, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( follows(D, B), follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return -0.14881555193657423;  // std dev = 9.77e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26355224251423937;  // std dev = 0.486, 323.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.14937792977654896;  // std dev = 0.040, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then return 0.3932523800761324;  // std dev = 6.037, 163.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=108 */
%   | else return 0.2933724124739952;  // std dev = 4.297, 78.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=48 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.0887503108430727;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( follows(D, A) )
%   | then return 0.14197993405594475;  // std dev = 7.022, 259.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=108 */
%   | else return 0.0063747396424730565;  // std dev = 5.116, 160.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=48 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.08182987316510419;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A) )
%   | then return 0.06547399510967347;  // std dev = 7.324, 302.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=108 */
%   | else if ( follows(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, B) )
%   | | | then return -0.18080253945656333;  // std dev = 4.21e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return 0.15485498512160514;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=48 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07588831641392936;  // std dev = 1.97e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( follows(D, B) )
%   | then if ( follows(D, E) )
%   | | then return -0.14591415727690885;  // std dev = 0.119, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18096069323137623;  // std dev = 7.991, 264.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.070734667357296;  // std dev = 1.49e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( follows(D, B) )
%   | then return -0.12814621206381438;  // std dev = 0.103, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else if ( follows(E, A), follows(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1504748999367532;  // std dev = 0.489, 258.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06622402885297475;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04485531840770461;  // std dev = 6.731, 274.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=108 */
%   | else if ( follows(E, B) )
%   | | then return -0.12284260226618299;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0.04776655265685077;  // std dev = 4.605, 86.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=48 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.062244609034791974;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( follows(D, B) )
%   | then return -0.11173743686766158;  // std dev = 0.014, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( follows(E, B), follows(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(G, A) )
%   | | | then return 0.08590902585261044;  // std dev = 6.730, 186.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=108 */
%   | | | else return 0.05601195043444669;  // std dev = 4.499, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.211', 'seconds']
Parameter learned model CLL:-0.301507 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)', 'false,true': 'follows(E, F)', 'false,false': 'follows(G, B)'}, {'true,true': [5.96e-08, 57, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [8.25, 184, 108], 'false,true,false': [0.0, 0, 0], 'false,false,true': [6.5e-08, 64, 0], 'false,false,false': [4.252, 29, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A), follows(G, B)', 'false,true': 'follows(F, H)'}, {'true,true': [0.0, 48, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [6.99e-08, 99, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.489, 167, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B), follows(E, A)', 'false,true': 'follows(E, F)'}, {'true': [3.73e-09, 48, 0], 'false,true,true': [9.77e-08, 88, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.486, 167, 156]}]
['accounttype(A, B)', {'': 'follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)'}, {'true,true': [0.04, 198, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.037, 55, 108], 'false,false': [4.297, 30, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)'}, {'true': [0.0, 47, 0], 'false,true': [7.022, 151, 108], 'false,false': [5.116, 112, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A)', 'false,false': 'follows(G, A)', 'false,false,false': 'follows(H, B)'}, {'true,true': [0.0, 53, 0], 'true,false': [0.0, 0, 0], 'false,true': [7.324, 194, 108], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.21e-08, 68, 0], 'false,false,false,false': [4.671, 40, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,true': 'follows(D, E)'}, {'true': [1.97e-08, 45, 0], 'false,true,true': [0.119, 178, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [7.991, 108, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,false': 'follows(E, A), follows(E, B)'}, {'true': [1.49e-08, 65, 0], 'false,true': [0.103, 168, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.489, 102, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)', 'false,true': 'follows(D, B)', 'false,false': 'follows(E, B)'}, {'true': [0.0, 51, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [6.731, 166, 108], 'false,false,true': [0.0, 58, 0], 'false,false,false': [4.605, 38, 48]}]
['accounttype(A, B)', {'': 'follows(C, B), follows(C, A)', 'false': 'follows(D, B)', 'false,false': 'follows(E, B), follows(F, A)', 'false,false,false': 'follows(G, A)'}, {'true': [0.0, 46, 0], 'false,true': [0.014, 149, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.73, 78, 108], 'false,false,false,false': [4.499, 35, 48]}]
{'': [6.232831015439475e-17, 0.23047752134792104], 'false': [0.23306436479639964, 0.22453598913535608], 'false,true': [0.23306436479639964, nan], 'false,false': [6.591949208711867e-17, 0.23477820880418293], 'true': [6.232831015439475e-17, nan]}
{'': [-3.0068540250264654e-17, 0.22513296274227648], 'false': [4.9343245538895844e-17, 0.23956263681766013], 'false,true': [4.9343245538895844e-17, nan], 'true': [-3.0068540250264654e-17, nan]}
{'': [1.61907524424502e-17, 0.2139644463194987], 'false': [1.084990683156403e-16, 0.2358490330434713], 'false,true': [1.084990683156403e-16, nan]}
{'': [0.0015889871749472538, 0.22999810130266396], 'false': [0.22356882080620522, 0.23668639053254517], 'true': [0.0015889871749472538, nan]}
{'': [-1.0629794916623839e-17, 0.1844953878275474], 'false': [0.19039104356201889, 0.163584990556665]}
{'': [-1.047380211910525e-18, 0.1749297802855295], 'false': [0.17763081033491995, 0.16756367319572457], 'false,false': [nan, 0.16756367319572457], 'false,false,false': [2.6122894697062506e-17, 0.2479338842975209], 'true': [-1.047380211910525e-18, nan]}
{'': [8.635067969306773e-18, 0.17018775696948338], 'false': [7.93004946111317e-05, 0.24185314508054884], 'false,true': [7.93004946111317e-05, nan]}
{'': [3.416070845000482e-18, 0.16332781426041418], 'false': [6.327129810042232e-05, 0.23902507061480288], 'false,false': [nan, 0.23902507061480305]}
{'': [-2.7211348642773444e-18, 0.16251213611449566], 'false': [0.16534217525475944, 0.15428856403339836], 'false,true': [nan, 0.16534217525475944], 'false,false': [-1.7227598657976568e-17, 0.2466197944835044]}
{'': [-3.0169103930031427e-18, 0.16504082616535515], 'false': [1.4097894170033704e-06, 0.24380142725863888], 'false,false': [nan, 0.24380142725863888], 'false,false,false': [0.24349635796045857, 0.24386703440267063]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
0;false;follows(E, A).;true;true
0;false,false;follows(G, B).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
1;false;follows(F, A), follows(G, B).;true;true
2;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
2;false;follows(D, B), follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, B).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;false;follows(F, A).;true;true
5;false,false;follows(H, B).;true;true
6;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
6;false;follows(D, B).;true;true
7;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
7;false;follows(D, B).;true;true
8;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
8;false;follows(D, A).;true;true
8;false,false;follows(E, B).;true;true
9;;accounttype(A, B) :- follows(C, B), follows(C, A).;true;true
9;false;follows(D, B).;true;true


Refining candidate
***************************
Model training time 7.403
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E) )
%   | | then if ( tweets(A, F), follows(E, A) )
%   | | | then return 0.27278308144097696;  // std dev = 6.309, 164.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=68 */
%   | | | else return 0.38087620782678505;  // std dev = 3.313, 44.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=23 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.23652731347789074;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( follows(H, B) )
%   | | then return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( follows(A, I), tweets(A, J) )
%   | | | then return 0.5581489350995117;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | | else return 0.3981489350995123;  // std dev = 3.524, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( follows(D, A), follows(E, B) )
%   | then return -0.1806649282413338;  // std dev = 0.079, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( follows(F, A) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.39756103996100195;  // std dev = 6.178, 157.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=91 */
%   | | | else return 0.6781219752720368;  // std dev = 1.595, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( follows(A, H), tweets(A, I) )
%   | | | then return 0.13497185327326744;  // std dev = 3.558, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | | | else return 0.09600249613238632;  // std dev = 4.270, 105.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=27 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( follows(D, B), follows(E, A) )
%   | then return -0.15575135714829688;  // std dev = 0.068, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( follows(F, A), tweets(F, G) )
%   | | then if ( follows(A, H), follows(H, F) )
%   | | | then return 0.36448684064369297;  // std dev = 5.247, 116.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=71 */
%   | | | else return 0.49363070125384045;  // std dev = 2.913, 47.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=36 */
%   | | else if ( tweets(A, I), follows(A, J) )
%   | | | then return 0.08168431119451777;  // std dev = 3.637, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   | | | else return 0.17300552354883963;  // std dev = 4.040, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then return -0.13661517667421355;  // std dev = 0.291, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else if ( follows(D, A) )
%   | then if ( tweets(A, E), follows(A, D) )
%   | | then if ( follows(A, F), follows(F, D) )
%   | | | then return 0.28451575066406526;  // std dev = 4.846, 98.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=59 */
%   | | | else return 0.40385439466611545;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( follows(G, D), follows(A, G) )
%   | | | then return 0.290182174348428;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0.16350396747562673;  // std dev = 3.546, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.2619735530325588;  // std dev = 2.778, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.4528082355477407;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.6076832129805075;  // std dev = 0.920, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.39922033417310626;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08978791378105024;  // std dev = 2.69e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( tweets(A, D) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(F, A), follows(F, E) )
%   | | | then return 0.087720550398969;  // std dev = 5.654, 174.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=67 */
%   | | | else return 0.12218854841609793;  // std dev = 3.638, 77.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=30 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.08649274092180613;  // std dev = 2.447, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.04603515325224378;  // std dev = 1.409, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(A, I), follows(H, I) )
%   | | | then return 0.0626953429200626;  // std dev = 3.312, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | | else return -0.0209121070250524;  // std dev = 2.503, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.1341234185642115;  // std dev = 1.032, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1266328969230594;  // std dev = 1.817, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08271515811287464;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( follows(D, A) )
%   | then if ( tweets(A, E), follows(A, F) )
%   | | then if ( follows(F, G), follows(A, G) )
%   | | | then return 0.09625719336588091;  // std dev = 5.442, 159.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=66 */
%   | | | else return 0.26210170323637655;  // std dev = 1.382, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.07914546710305681;  // std dev = 2.386, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.0681894361372559;  // std dev = 2.837, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | else if ( follows(I, B) )
%   | | then return -0.14898859761692446;  // std dev = 0.043, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.28004396447832425;  // std dev = 2.709, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | | | else return 0.16454159104351526;  // std dev = 3.663, 54.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07665201182439796;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( follows(D, B) )
%   | then return -0.13915013522201533;  // std dev = 0.149, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else if ( follows(A, E) )
%   | | then if ( tweets(A, F), follows(E, G) )
%   | | | then return 0.1738939745430227;  // std dev = 5.984, 152.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=93 */
%   | | | else return 0.32411281876677084;  // std dev = 3.081, 48.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=35 */
%   | | else if ( follows(H, A) )
%   | | | then return 0.031234260336591244;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.09762816805777694;  // std dev = 2.346, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07139985839390746;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( follows(D, B) )
%   | then return -0.12280016410500083;  // std dev = 0.134, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else if ( follows(A, E), tweets(A, F) )
%   | | then if ( follows(E, G), tweets(G, F) )
%   | | | then return 0.10745052623588068;  // std dev = 6.099, 155.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=91 */
%   | | | else return -0.09739759250085647;  // std dev = 1.796, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( follows(H, A), tweets(A, I) )
%   | | | then return 0.2446773573546527;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.1719098649251307;  // std dev = 4.064, 71.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06680836990431238;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( follows(D, A) )
%   | then if ( tweets(A, E) )
%   | | then if ( tweets(F, E), follows(F, A) )
%   | | | then return 0.023715809679731928;  // std dev = 5.980, 226.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=88 */
%   | | | else return -0.0824286859145446;  // std dev = 1.039, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( follows(A, G), follows(G, A) )
%   | | | then return -0.02016183224144196;  // std dev = 2.445, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.028373695602101602;  // std dev = 1.239, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( follows(H, B) )
%   | | then return -0.10331764973590396;  // std dev = 0.033, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.07460296073129685;  // std dev = 4.004, 65.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=37 */
%   | | | else return 0.21867236459338488;  // std dev = 1.857, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.0627618168855233;  // std dev = 5.27e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( follows(D, B) )
%   | then return -0.10700292638677288;  // std dev = 0.172, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( tweets(A, E) )
%   | | then if ( follows(F, A), follows(G, F) )
%   | | | then return 0.09476974335319056;  // std dev = 5.832, 142.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=88 */
%   | | | else return -0.024040559944287564;  // std dev = 3.667, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.09542381632998076;  // std dev = 3.306, 47.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=29 */
%   | | | else return 0.2831007385098154;  // std dev = 1.558, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.904', 'seconds']
Refined model CLL: -0.316197


******************************************
Best model found
******************************************
Results 

CLL : -0.210966 

AUC ROC : 0.910156 

AUC PR : 0.041667 

Precision : 0.041667 

Recall : 1.0 

F1 : 0.08 

Total Learning Time : 7.403 

Total Inference Time : 4.2457733154296875 

Total revision time: 17.950814220428466
Best scored revision CLL: -0.301507


Results 

CLL : -0.210966 

AUC ROC : 0.910156 

AUC PR : 0.041667 

Precision : 0.041667 

Recall : 1.0 

F1 : 0.08 

Total Learning Time : 17.967429849624633 

Total Inference Time : 4.2457733154296875 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.896
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.14185106490048766;  // std dev = 6.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return 0.26991364098186166;  // std dev = 7.859, 255.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=105 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(G, B) )
%   | | then return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0.5822868661339945;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A), follows(G, B) )
%   | then if ( follows(F, H) )
%   | | then return -0.17798105078268242;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4890465963039337;  // std dev = 0.456, 190.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360632;  // std dev = 4.37e-09, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( follows(D, B), follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return -0.1534145496422266;  // std dev = 7.88e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3323299892781873;  // std dev = 0.478, 213.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.13720302892379144;  // std dev = 0.044, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then return 0.37957546370862705;  // std dev = 5.523, 148.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=105 */
%   | else return 0.321945090156283;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08973988252588445;  // std dev = 3.65e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( follows(D, A) )
%   | then return 0.14741686004952378;  // std dev = 6.113, 240.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=105 */
%   | else return -0.007740079374015818;  // std dev = 3.027, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.082674209304922;  // std dev = 2.79e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A) )
%   | then return 0.10374400084917379;  // std dev = 6.235, 244.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=105 */
%   | else if ( follows(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, B) )
%   | | | then return -0.22004269460259723;  // std dev = 4.94e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.270521349955299;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07661671086279045;  // std dev = 1.05e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( follows(D, B) )
%   | then if ( follows(D, E) )
%   | | then return -0.15842762290340257;  // std dev = 0.195, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23628543215477377;  // std dev = 5.870, 173.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07136912883838904;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( follows(D, B) )
%   | then return -0.13502557501973475;  // std dev = 0.154, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( follows(E, A), follows(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1813283932074672;  // std dev = 0.445, 172.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06678138944475896;  // std dev = 3.07e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03333324602153699;  // std dev = 5.787, 243.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=105 */
%   | else if ( follows(E, B) )
%   | | then return -0.14443734913676123;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0.10297136023986456;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.06273794724061817;  // std dev = 2.11e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( follows(D, B) )
%   | then return -0.12034961066154129;  // std dev = 0.046, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( follows(E, B), follows(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(G, A) )
%   | | | then return 0.19140477496554004;  // std dev = 4.767, 134.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=105 */
%   | | | else return 0.10760314547516898;  // std dev = 2.160, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.274', 'seconds']
Parameter learned model CLL:-0.268938 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)', 'false,true': 'follows(E, F)', 'false,false': 'follows(G, B)'}, {'true,true': [6.83e-08, 69, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [7.859, 150, 105], 'false,true,false': [0.0, 0, 0], 'false,false,true': [3.49e-08, 35, 0], 'false,false,false': [2.407, 8, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A), follows(G, B)', 'false,true': 'follows(F, H)'}, {'true,true': [0.0, 54, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 116, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.456, 64, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B), follows(E, A)', 'false,true': 'follows(E, F)'}, {'true': [4.37e-09, 51, 0], 'false,true,true': [7.88e-08, 93, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.478, 87, 126]}]
['accounttype(A, B)', {'': 'follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)'}, {'true,true': [0.044, 187, 0], 'true,false': [0.0, 0, 0], 'false,true': [5.523, 43, 105], 'false,false': [2.407, 8, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)'}, {'true': [3.65e-08, 67, 0], 'false,true': [6.113, 135, 105], 'false,false': [3.027, 42, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A)', 'false,false': 'follows(G, A)', 'false,false,false': 'follows(H, B)'}, {'true,true': [2.79e-08, 68, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.235, 139, 105], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.94e-08, 35, 0], 'false,false,false,false': [2.291, 7, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,true': 'follows(D, E)'}, {'true': [1.05e-08, 60, 0], 'false,true,true': [0.195, 144, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [5.87, 47, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,false': 'follows(E, A), follows(E, B)'}, {'true': [0.0, 58, 0], 'false,true': [0.154, 157, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.445, 46, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)', 'false,true': 'follows(D, B)', 'false,false': 'follows(E, B)'}, {'true': [3.07e-08, 68, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [5.787, 138, 105], 'false,false,true': [0.0, 27, 0], 'false,false,false': [2.291, 7, 21]}]
['accounttype(A, B)', {'': 'follows(C, B), follows(C, A)', 'false': 'follows(D, B)', 'false,false': 'follows(E, B), follows(F, A)', 'false,false,false': 'follows(G, A)'}, {'true': [2.11e-08, 69, 0], 'false,true': [0.046, 154, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.767, 29, 105], 'false,false,false,false': [2.16, 6, 21]}]
{'': [6.75787928032704e-17, 0.23897170821827826], 'false': [0.24221453287197503, 0.2204589843750001], 'false,true': [0.24221453287197503, nan], 'false,false': [3.489272363107635e-17, 0.19976218787158173], 'true': [6.75787928032704e-17, nan]}
{'': [-3.700743415417188e-17, 0.23385072943657134], 'false': [-1.4164914452114067e-16, 0.20795804029462867], 'true': [-3.700743415417188e-17, nan], 'false,true': [-1.4164914452114067e-16, nan]}
{'': [1.959217102279688e-17, 0.20884800065641637], 'false': [6.685213911721373e-17, 0.22832554342337327], 'false,true': [6.685213911721373e-17, nan]}
{'': [0.001968194401416578, 0.20553896083568046], 'false': [0.20612673484295269, 0.19976218787158184], 'true': [0.001968194401416578, nan]}
{'': [1.9884591485823698e-17, 0.15752772505686327], 'false': [0.1556894751645194, 0.1454623236895781]}
{'': [1.1428766429964846e-17, 0.15775843602381445], 'false': [0.15933731879231308, 0.14275384736123478], 'false,false': [nan, 0.14275384736123478], 'false,false,false': [6.97854472621527e-17, 0.1875], 'true': [1.1428766429964846e-17, nan]}
{'': [1.8503717077085942e-18, 0.1474297716660138], 'false': [0.00026354136266758406, 0.19915374540621744], 'false,true': [0.00026354136266758406, nan]}
{'': [-4.785444071660158e-18, 0.1284681920811078], 'false': [0.00015041288595061362, 0.19783700583456987], 'false,false': [nan, 0.19783700583456987]}
{'': [1.3877787807814457e-17, 0.13322803472022723], 'false': [0.13781959025750912, 0.11075225405732506], 'false,true': [nan, 0.13781959025750912], 'false,false': [0.0, 0.18749999999999997]}
{'': [6.436075505073371e-18, 0.10960739713457467], 'false': [1.389869998161372e-05, 0.17110783864308926], 'false,false': [nan, 0.17110783864308926], 'false,false,false': [0.16958119848518655, 0.17283950617283944]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
0;false;follows(E, A).;true;true
0;false,false;follows(G, B).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
1;false;follows(F, A), follows(G, B).;true;true
2;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
2;false;follows(D, B), follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, B).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;false;follows(F, A).;true;true
5;false,false;follows(H, B).;true;true
6;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
6;false;follows(D, B).;true;true
7;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
7;false;follows(D, B).;true;true
8;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
8;false;follows(D, A).;true;true
8;false,false;follows(E, B).;true;true
9;;accounttype(A, B) :- follows(C, B), follows(C, A).;true;true
9;false;follows(D, B).;true;true


Refining candidate
***************************
Model training time 15.542
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.14185106490048766;  // std dev = 6.32e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), tweets(A, F) )
%   | | then if ( tweets(G, F), follows(G, A) )
%   | | | then return 0.22133301470150374;  // std dev = 6.818, 201.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=73 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( follows(A, H) )
%   | | | then return 0.30259337954395643;  // std dev = 3.333, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   | | | else return 0.35814893509951234;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( follows(I, B) )
%   | | then return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.6081489350995123;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.42064893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.1254446385283916;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( follows(D, A), follows(E, B) )
%   | then return -0.17621261181411685;  // std dev = 0.109, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( follows(F, A), follows(G, F) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.6041064739074751;  // std dev = 4.241, 104.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=81 */
%   | | | else return 0.7736848471958674;  // std dev = 0.979, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.15300726554954608;  // std dev = 2.651, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.21690489935634527;  // std dev = 2.300, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360622;  // std dev = 6.23e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( follows(D, B), follows(E, A) )
%   | then return -0.1533890907407112;  // std dev = 0.114, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( follows(F, A) )
%   | | then if ( follows(A, F), tweets(F, G) )
%   | | | then return 0.47086663485790636;  // std dev = 4.687, 118.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=89 */
%   | | | else return 0.35393589703113076;  // std dev = 2.261, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.12016197924897856;  // std dev = 2.565, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.17386786354137196;  // std dev = 2.291, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then return -0.1259960365227193;  // std dev = 0.320, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else if ( follows(D, A), tweets(D, E) )
%   | then if ( tweets(A, F), follows(G, D) )
%   | | then if ( follows(G, A), follows(D, G) )
%   | | | then return 0.28643626123607996;  // std dev = 4.412, 88.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=59 */
%   | | | else return 0.35656558733059707;  // std dev = 2.454, 32.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   | | else if ( follows(A, H), follows(H, D) )
%   | | | then return 0.2290654209446589;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return 0.10272940729636587;  // std dev = 1.747, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( tweets(A, K) )
%   | | | then return 0.4499443309987708;  // std dev = 1.480, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.7514165996309906;  // std dev = 2.58e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.2616336645471738;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.3954736856006854;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.09065956289908901;  // std dev = 2.98e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( tweets(A, D), follows(E, A) )
%   | then if ( follows(F, E), follows(F, A) )
%   | | then if ( follows(A, E), follows(A, F) )
%   | | | then return 0.2010432862268307;  // std dev = 3.696, 99.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=51 */
%   | | | else return 0.09302252924236205;  // std dev = 1.979, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else if ( follows(A, G), follows(G, E) )
%   | | | then return 0.1213531597981916;  // std dev = 1.831, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.06564751688688804;  // std dev = 1.957, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( tweets(I, J), follows(I, H) )
%   | | | then return 0.11024131189374278;  // std dev = 3.380, 69.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=29 */
%   | | | else return -0.04338251544569901;  // std dev = 1.026, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.0691192289507209;  // std dev = 1.367, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.06314091047511342;  // std dev = 1.721, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08345774760471132;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(F, A), tweets(A, G) )
%   | | | then return 0.014519230740275231;  // std dev = 5.367, 174.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=66 */
%   | | | else return 0.04757919379062115;  // std dev = 3.353, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | | else return 0.1414150389014602;  // std dev = 0.410, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( follows(H, B) )
%   | | then return -0.1608953497960389;  // std dev = 0.032, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.3664340209001073;  // std dev = 1.539, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.5321956134642211;  // std dev = 0.962, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.0772917816783725;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( follows(D, B) )
%   | then return -0.14173769015398358;  // std dev = 0.122, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else if ( follows(E, A) )
%   | | then if ( follows(A, F), follows(F, E) )
%   | | | then return 0.1931396628716819;  // std dev = 5.002, 117.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=81 */
%   | | | else return 0.36631374697038344;  // std dev = 1.683, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.16168706759136803;  // std dev = 1.991, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.09147352712522264;  // std dev = 1.889, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07195647506435068;  // std dev = 2.47e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( follows(D, B) )
%   | then return -0.12270080648878207;  // std dev = 0.091, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( tweets(A, E), follows(F, A) )
%   | | then if ( follows(A, G), follows(G, H) )
%   | | | then return 0.2616753311804986;  // std dev = 3.731, 93.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=76 */
%   | | | else return 0.05624061110274222;  // std dev = 1.659, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( follows(I, A), follows(A, I) )
%   | | | then return 0.08935191876936509;  // std dev = 2.632, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return 0.19015609043958173;  // std dev = 2.433, 30.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06729684167828547;  // std dev = 7.45e-09, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(F, A), follows(F, E) )
%   | | | then return 0.06062856864523618;  // std dev = 4.447, 172.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=77 */
%   | | | else return -0.018696888893936312;  // std dev = 2.416, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | else if ( follows(A, G) )
%   | | | then return -0.3265266040608218;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.04893763418288288;  // std dev = 1.758, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( follows(H, B) )
%   | | then return -0.11286672290543677;  // std dev = 0.021, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return -0.04268005995030773;  // std dev = 2.229, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.13029935611845594;  // std dev = 1.697, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.06319378273669816;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( follows(D, B) )
%   | then return -0.11131014485164309;  // std dev = 0.112, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else if ( tweets(A, E), follows(A, F) )
%   | | then if ( follows(G, A), tweets(G, E) )
%   | | | then return 0.07853067345761068;  // std dev = 4.658, 104.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=73 */
%   | | | else return 0.10980106206819441;  // std dev = 2.042, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.18694471722273948;  // std dev = 2.309, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | | else return 0.2509536457947305;  // std dev = 1.321, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.557', 'seconds']
Refined model CLL: -0.263342


******************************************
Best model found
******************************************
Results 

CLL : -0.393904 

AUC ROC : 0.841772 

AUC PR : 0.019608 

Precision : 0.019608 

Recall : 0.987179 

F1 : 0.038452 

Total Learning Time : 15.542 

Total Inference Time : 4.981184244155884 

Total revision time: 26.472827470779418
Best scored revision CLL: -0.263342


Results 

CLL : -0.393904 

AUC ROC : 0.841772 

AUC PR : 0.019608 

Precision : 0.019608 

Recall : 0.987179 

F1 : 0.038452 

Total Learning Time : 26.528529441833495 

Total Inference Time : 4.981184244155884 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.982
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return 0.25667292033936107;  // std dev = 8.060, 271.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=108 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(G, B) )
%   | | then return -0.14185106490048766;  // std dev = 6.32e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0.4897278824679339;  // std dev = 4.205, 76.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=48 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.1254446385283916;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A), follows(G, B) )
%   | then if ( follows(F, H) )
%   | | then return -0.1760521357038185;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.30201305942012;  // std dev = 0.487, 328.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360633;  // std dev = 3.73e-09, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( follows(D, B), follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return -0.15195114191869724;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2727581813847018;  // std dev = 0.486, 315.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.15190098010608166;  // std dev = 0.041, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then return 0.2992996373834504;  // std dev = 6.779, 188.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=108 */
%   | else return 0.3335454860138017;  // std dev = 4.054, 73.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=48 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08854647405480386;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( follows(D, A) )
%   | then return 0.12074611297000157;  // std dev = 7.313, 280.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=108 */
%   | else return 0.04648281519916115;  // std dev = 4.871, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.081655790873771;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A) )
%   | then return 0.13634715643930628;  // std dev = 6.973, 253.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=108 */
%   | else if ( follows(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, B) )
%   | | | then return -0.1865632288288519;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return 0.18794403214609762;  // std dev = 4.382, 80.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=48 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07573801670078731;  // std dev = 2.36e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( follows(D, B) )
%   | then if ( follows(D, E) )
%   | | then return -0.15131377213566416;  // std dev = 0.083, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22634904669034742;  // std dev = 7.461, 243.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07060365676797381;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( follows(D, B) )
%   | then return -0.1330668254442491;  // std dev = 0.080, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( follows(E, A), follows(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.106056766858927;  // std dev = 0.496, 269.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06610886627498401;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04080577387842346;  // std dev = 6.821, 272.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=108 */
%   | else if ( follows(E, B) )
%   | | then return -0.1252702239812136;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0.17529171701763288;  // std dev = 3.689, 67.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=48 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.06214261756400842;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( follows(D, B) )
%   | then return -0.11584088622778035;  // std dev = 0.038, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | else if ( follows(E, B), follows(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(G, A) )
%   | | | then return 0.10642168802556896;  // std dev = 6.600, 181.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=108 */
%   | | | else return 0.055768428637736456;  // std dev = 4.157, 75.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.057', 'seconds']
Parameter learned model CLL:-0.317276 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)', 'false,true': 'follows(E, F)', 'false,false': 'follows(G, B)'}, {'true,true': [5.37e-08, 51, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [8.06, 163, 108], 'false,true,false': [0.0, 0, 0], 'false,false,true': [6.32e-08, 62, 0], 'false,false,false': [4.205, 28, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A), follows(G, B)', 'false,true': 'follows(F, H)'}, {'true,true': [0.0, 61, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 102, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.487, 172, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B), follows(E, A)', 'false,true': 'follows(E, F)'}, {'true': [3.73e-09, 48, 0], 'false,true,true': [0.0, 99, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.486, 159, 156]}]
['accounttype(A, B)', {'': 'follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)'}, {'true,true': [0.041, 188, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.779, 80, 108], 'false,false': [4.054, 25, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)'}, {'true': [0.0, 38, 0], 'false,true': [7.313, 172, 108], 'false,false': [4.871, 87, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A)', 'false,false': 'follows(G, A)', 'false,false,false': 'follows(H, B)'}, {'true,true': [7.45e-09, 52, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.973, 145, 108], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 64, 0], 'false,false,false,false': [4.382, 32, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,true': 'follows(D, E)'}, {'true': [2.36e-08, 49, 0], 'false,true,true': [0.083, 152, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [7.461, 87, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,false': 'follows(E, A), follows(E, B)'}, {'true': [0.0, 66, 0], 'false,true': [0.08, 172, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.496, 113, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)', 'false,true': 'follows(D, B)', 'false,false': 'follows(E, B)'}, {'true': [0.0, 44, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [6.821, 164, 108], 'false,false,true': [0.0, 62, 0], 'false,false,false': [3.689, 19, 48]}]
['accounttype(A, B)', {'': 'follows(C, B), follows(C, A)', 'false': 'follows(D, B)', 'false,false': 'follows(E, B), follows(F, A)', 'false,false,false': 'follows(G, A)'}, {'true': [0.0, 58, 0], 'false,true': [0.038, 164, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.6, 73, 108], 'false,false,false,false': [4.157, 27, 48]}]
{'': [5.659960517696876e-17, 0.2359383313107904], 'false': [0.23970261842840104, 0.2268431001890366], 'false,true': [0.23970261842840104, nan], 'false,false': [6.446456272017038e-17, 0.2326869806094184], 'true': [5.659960517696876e-17, nan]}
{'': [-4.186086814160426e-17, 0.2223560373155628], 'false': [-8.272249987403127e-17, 0.2372900259272178], 'true': [-4.186086814160426e-17, nan], 'false,true': [-8.272249987403127e-17, nan]}
{'': [1.61907524424502e-17, 0.21266156966501032], 'false': [-6.280049432223107e-17, 0.2363641911989719], 'false,true': [-6.280049432223107e-17, nan]}
{'': [0.001702892540403125, 0.23930065300325074], 'false': [0.2444545043005896, 0.22518296115593844], 'true': [0.001702892540403125, nan]}
{'': [-4.382459307730881e-18, 0.1872579115657893], 'false': [0.19100853774880416, 0.1757578459517314]}
{'': [1.0675221390626506e-18, 0.18646026005700697], 'false': [0.19220302852760685, 0.16796436753653368], 'false,false': [nan, 0.16796436753653368], 'false,false,false': [-2.7755575615628914e-17, 0.2400000000000002], 'true': [1.0675221390626506e-18, nan]}
{'': [1.1328806373726087e-17, 0.17470346445845775], 'false': [4.536239857974139e-05, 0.2290694606245655], 'false,true': [4.536239857974139e-05, nan]}
{'': [-5.887546342709164e-18, 0.16371841305101875], 'false': [3.703414513671053e-05, 0.24607560596162234], 'false,false': [nan, 0.24607560596162295]}
{'': [-2.523234146875356e-18, 0.15726007014783394], 'false': [0.1710722164764384, 0.12806935833144018], 'false,true': [nan, 0.1710722164764384], 'false,false': [0.0, 0.20316328803742462]}
{'': [-8.613799328988284e-18, 0.15541966008022787], 'false': [8.599632295629866e-06, 0.23817994570083664], 'false,false': [nan, 0.23817994570083664], 'false,false,false': [0.24065199474985502, 0.2304000000000001]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
0;false;follows(E, A).;true;true
0;false,false;follows(G, B).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
1;false;follows(F, A), follows(G, B).;true;true
2;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
2;false;follows(D, B), follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, B).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;false;follows(F, A).;true;true
5;false,false;follows(H, B).;true;true
6;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
6;false;follows(D, B).;true;true
7;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
7;false;follows(D, B).;true;true
8;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
8;false;follows(D, A).;true;true
8;false,false;follows(E, B).;true;true
9;;accounttype(A, B) :- follows(C, B), follows(C, A).;true;true
9;false;follows(D, B).;true;true


Refining candidate
***************************
Model training time 11.447
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(E, F), follows(F, A) )
%   | | | then return 0.27963653840529845;  // std dev = 5.432, 121.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=51 */
%   | | | else return 0.22719655414713005;  // std dev = 4.423, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
%   | | else if ( follows(A, G), follows(G, H) )
%   | | | then return 0.3966104735610508;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.25398226843284566;  // std dev = 3.388, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | else if ( follows(I, B) )
%   | | then return -0.14185106490048766;  // std dev = 6.66e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.4362739350995111;  // std dev = 3.951, 64.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=37 */
%   | | | else return 0.5052077586289241;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( follows(D, A), follows(E, B) )
%   | then return -0.17816765434588308;  // std dev = 0.071, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( follows(F, A), follows(G, F) )
%   | | then if ( tweets(A, H), follows(A, F) )
%   | | | then return 0.4148006875387866;  // std dev = 5.269, 115.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=68 */
%   | | | else return 0.6134791649549116;  // std dev = 2.810, 48.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=38 */
%   | | else if ( tweets(A, I), follows(A, J) )
%   | | | then return 0.22166516647921677;  // std dev = 3.558, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | | else return 0.12390868217452701;  // std dev = 4.141, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( follows(D, B), follows(E, A) )
%   | then return -0.15420556952671924;  // std dev = 0.072, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( follows(F, A), follows(G, F) )
%   | | then if ( follows(G, A), tweets(A, H) )
%   | | | then return 0.391979402600196;  // std dev = 4.555, 91.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=59 */
%   | | | else return 0.28198180852949284;  // std dev = 4.626, 86.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=47 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.16039951682642595;  // std dev = 4.730, 109.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=39 */
%   | | | else return 0.1348557975825247;  // std dev = 2.563, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then return -0.13327943139110646;  // std dev = 0.346, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   else if ( follows(A, D), follows(E, A) )
%   | then if ( follows(D, A), follows(D, E) )
%   | | then if ( tweets(D, F), tweets(E, F) )
%   | | | then return 0.17331987782527414;  // std dev = 4.876, 95.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=48 */
%   | | | else return 0.6711924698803955;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( follows(D, E) )
%   | | | then return 0.4349128536441897;  // std dev = 2.262, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return 0.251354871901489;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( follows(A, G), tweets(A, H) )
%   | | then if ( follows(G, I), tweets(G, H) )
%   | | | then return 0.32743774635225303;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.10243774635225325;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( tweets(A, J), follows(K, A) )
%   | | | then return 0.29980883784744805;  // std dev = 2.164, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0.3626929469535396;  // std dev = 3.328, 48.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=30 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.0900609043449582;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( tweets(A, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(F, G), follows(A, F) )
%   | | | then return 0.0713399546456847;  // std dev = 6.110, 205.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=74 */
%   | | | else return 0.12424422819040461;  // std dev = 2.997, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | else if ( follows(H, A), follows(A, I) )
%   | | | then return 0.2335827815676026;  // std dev = 0.703, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08976664309081135;  // std dev = 3.071, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | else if ( follows(J, A), tweets(J, K) )
%   | | then if ( follows(J, L), follows(L, A) )
%   | | | then return 0.05471983368870386;  // std dev = 1.980, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.04107787277685072;  // std dev = 2.299, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( follows(A, M), follows(M, N) )
%   | | | then return 0.08551652771904418;  // std dev = 2.791, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.13182304841146997;  // std dev = 2.078, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08294783679755595;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( follows(D, A) )
%   | then if ( tweets(A, E), follows(A, F) )
%   | | then if ( tweets(G, E), follows(G, A) )
%   | | | then return 0.12670887205425133;  // std dev = 5.559, 173.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=74 */
%   | | | else return -0.10045973243982667;  // std dev = 1.160, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( follows(A, H), follows(H, A) )
%   | | | then return 0.043409940715534515;  // std dev = 2.686, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.08721407259679906;  // std dev = 2.650, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | else if ( follows(I, B) )
%   | | then return -0.16202428962490137;  // std dev = 0.066, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.22316221219325647;  // std dev = 3.729, 57.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=33 */
%   | | | else return 0.35547385538984405;  // std dev = 2.088, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07685255478489493;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( follows(D, B) )
%   | then return -0.1392775901151975;  // std dev = 0.131, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(E, A), follows(F, A) )
%   | | | then return 0.17441661981071382;  // std dev = 4.533, 86.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=51 */
%   | | | else return 0.26955536182889545;  // std dev = 4.685, 103.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=71 */
%   | | else if ( follows(A, G), tweets(A, H) )
%   | | | then return 0.34885001957881717;  // std dev = 0.974, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.14762594230057327;  // std dev = 3.416, 49.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=30 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07157439809062993;  // std dev = 2.36e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( follows(D, B) )
%   | then return -0.12329488037408068;  // std dev = 0.099, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else if ( follows(E, A), follows(A, F) )
%   | | then if ( follows(G, E), follows(F, G) )
%   | | | then return 0.07921287575704065;  // std dev = 6.183, 154.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=86 */
%   | | | else return 0.22263189510139444;  // std dev = 1.115, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( tweets(A, H), follows(I, A) )
%   | | | then return 0.25988005430209166;  // std dev = 1.756, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.12771940901536022;  // std dev = 4.492, 84.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=51 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.0669615893642074;  // std dev = 7.45e-09, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(A, F), follows(F, E) )
%   | | | then return 0.03541279724678142;  // std dev = 5.335, 181.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=69 */
%   | | | else return 0.07026051020247995;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( follows(G, A), follows(H, G) )
%   | | | then return -0.017410176885685396;  // std dev = 3.103, 58.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=24 */
%   | | | else return 0.29370036586309967;  // std dev = 0.522, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(I, B) )
%   | | then return -0.11070112844981933;  // std dev = 0.041, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.09739726348475933;  // std dev = 3.120, 41.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=25 */
%   | | | else return 0.2138631604606051;  // std dev = 2.533, 32.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=23 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.06289734994989649;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( follows(D, B) )
%   | then return -0.10952358120547256;  // std dev = 0.179, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | else if ( tweets(A, E) )
%   | | then if ( follows(F, A), tweets(F, E) )
%   | | | then return 0.12028267046683204;  // std dev = 5.591, 137.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=88 */
%   | | | else return 0.06733698175760268;  // std dev = 3.277, 45.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */
%   | | else if ( follows(A, G) )
%   | | | then return 0.046647911748860925;  // std dev = 3.617, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return -0.0621803047536013;  // std dev = 2.265, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.254', 'seconds']
Refined model CLL: -0.320059


******************************************
Best model found
******************************************
Results 

CLL : -0.21764 

AUC ROC : 0.910156 

AUC PR : 0.041667 

Precision : 0.041667 

Recall : 1.0 

F1 : 0.08 

Total Learning Time : 11.447 

Total Inference Time : 6.06428337097168 

Total revision time: 23.930564264297484
Best scored revision CLL: -0.317276


Results 

CLL : -0.21764 

AUC ROC : 0.910156 

AUC PR : 0.041667 

Precision : 0.041667 

Recall : 1.0 

F1 : 0.08 

Total Learning Time : 23.98626623535156 

Total Inference Time : 6.06428337097168 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.808
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.14185106490048766;  // std dev = 6.66e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return 0.24848350759021498;  // std dev = 8.001, 269.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=105 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(G, B) )
%   | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0.6981489350995119;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.1254446385283916;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A), follows(G, B) )
%   | then if ( follows(F, H) )
%   | | then return -0.1748673474579845;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.45347352009245934;  // std dev = 0.470, 200.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360626;  // std dev = 6.04e-09, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( follows(D, B), follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return -0.1510507109379983;  // std dev = 9.42e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.36927366227115416;  // std dev = 0.472, 202.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.14183927814036926;  // std dev = 0.051, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then return 0.4192159991289239;  // std dev = 5.178, 141.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=105 */
%   | else return 0.20569015149014513;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08936188258241631;  // std dev = 2.79e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( follows(D, A) )
%   | then return 0.12136645655775723;  // std dev = 6.365, 249.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=105 */
%   | else return 0.011808971045468504;  // std dev = 2.939, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.08235184051434888;  // std dev = 1.97e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A) )
%   | then return 0.10117075328264621;  // std dev = 6.248, 250.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=105 */
%   | else if ( follows(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, B) )
%   | | | then return -0.2228500507275246;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0.1716463210338487;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07633872432985107;  // std dev = 2.36e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( follows(D, B) )
%   | then if ( follows(D, E) )
%   | | then return -0.1504263311059836;  // std dev = 0.212, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23470845601711338;  // std dev = 5.919, 175.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07112707958447244;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( follows(D, B) )
%   | then return -0.13264269377863228;  // std dev = 0.190, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else if ( follows(E, A), follows(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19204646833701258;  // std dev = 0.440, 171.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06656882318065312;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.039824279849592664;  // std dev = 5.762, 235.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=105 */
%   | else if ( follows(E, B) )
%   | | then return -0.1474109665003738;  // std dev = 2.58e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0.04635247042168572;  // std dev = 2.603, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.0625498520121046;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( follows(D, B) )
%   | then return -0.11815818242083088;  // std dev = 0.068, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( follows(E, B), follows(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(G, A) )
%   | | | then return 0.09250678540334827;  // std dev = 5.739, 153.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=105 */
%   | | | else return 0.19820834129727163;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.245', 'seconds']
Parameter learned model CLL:-0.258837 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)', 'false,true': 'follows(E, F)', 'false,false': 'follows(G, B)'}, {'true,true': [6.66e-08, 65, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [8.001, 164, 105], 'false,true,false': [0.0, 0, 0], 'false,false,true': [3.33e-08, 34, 0], 'false,false,false': [1.833, 4, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A), follows(G, B)', 'false,true': 'follows(F, H)'}, {'true,true': [0.0, 65, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 90, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.47, 74, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B), follows(E, A)', 'false,true': 'follows(E, F)'}, {'true': [6.04e-09, 62, 0], 'false,true,true': [9.42e-08, 106, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.472, 76, 126]}]
['accounttype(A, B)', {'': 'follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)'}, {'true,true': [0.051, 213, 0], 'true,false': [0.0, 0, 0], 'false,true': [5.178, 36, 105], 'false,false': [2.763, 12, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)'}, {'true': [2.79e-08, 65, 0], 'false,true': [6.365, 144, 105], 'false,false': [2.939, 39, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A)', 'false,false': 'follows(G, A)', 'false,false,false': 'follows(H, B)'}, {'true,true': [1.97e-08, 63, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.248, 145, 105], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 48, 0], 'false,false,false,false': [2.687, 11, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,true': 'follows(D, E)'}, {'true': [2.36e-08, 76, 0], 'false,true,true': [0.212, 152, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [5.919, 49, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,false': 'follows(E, A), follows(E, B)'}, {'true': [0.0, 62, 0], 'false,true': [0.19, 144, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.44, 45, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)', 'false,true': 'follows(D, B)', 'false,false': 'follows(E, B)'}, {'true': [0.0, 62, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [5.762, 130, 105], 'false,false,true': [2.58e-08, 43, 0], 'false,false,false': [2.603, 10, 21]}]
['accounttype(A, B)', {'': 'follows(C, B), follows(C, A)', 'false': 'follows(D, B)', 'false,false': 'follows(E, B), follows(F, A)', 'false,false,false': 'follows(G, A)'}, {'true': [0.0, 64, 0], 'false,true': [0.068, 129, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.739, 48, 105], 'false,false,false,false': [1.833, 4, 21]}]
{'': [6.832141690000964e-17, 0.23657792980369038], 'false': [0.23797349400920648, 0.2292444699798909], 'false,true': [0.23797349400920648, nan], 'false,false': [3.2653618371328135e-17, 0.13440000000000019], 'true': [6.832141690000964e-17, nan]}
{'': [-3.75767792950053e-17, 0.23671055587759499], 'false': [-9.375216652390211e-17, 0.22070236766021956], 'true': [-3.75767792950053e-17, nan], 'false,true': [-9.375216652390211e-17, nan]}
{'': [3.581364595565021e-17, 0.20713754110787838], 'false': [8.379041695284201e-17, 0.222657601716759], 'false,true': [8.379041695284201e-17, nan]}
{'': [0.0025589953526442165, 0.20496610156691225], 'false': [0.19013128112268068, 0.23140495867768587], 'true': [0.0025589953526442165, nan]}
{'': [1.1956247957501686e-17, 0.16094692487206771], 'false': [0.16272034062374802, 0.14391505592553283]}
{'': [6.1679056923619804e-18, 0.15428120761789643], 'false': [0.15612586812448498, 0.1275849479598927], 'false,false': [nan, 0.1275849479598927], 'false,false,false': [-5.551115123125783e-17, 0.22558593749999997], 'true': [6.1679056923619804e-18, nan]}
{'': [7.304098846218135e-18, 0.1441819162892309], 'false': [0.0002961490457251283, 0.20020903698750114], 'false,true': [0.0002961490457251283, nan]}
{'': [0.0, 0.1316012522073859], 'false': [0.00025073824563321166, 0.19401881613519342], 'false,false': [nan, 0.19401881613519342]}
{'': [-1.2534776084477573e-17, 0.1336148395800239], 'false': [0.1412909777558561, 0.10068240208326285], 'false,true': [nan, 0.1412909777558561], 'false,false': [1.5491484064537068e-17, 0.21852237252861595]}
{'': [0.0, 0.1314319630543996], 'false': [3.606015871627108e-05, 0.20528801426990154], 'false,false': [nan, 0.20528801426990154], 'false,false,false': [0.21530180699730853, 0.13440000000000005]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
0;false;follows(E, A).;true;true
0;false,false;follows(G, B).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
1;false;follows(F, A), follows(G, B).;true;true
2;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
2;false;follows(D, B), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;false;follows(F, A).;true;true
5;false,false;follows(H, B).;true;true
6;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
6;false;follows(D, B).;true;true
7;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
7;false;follows(D, B).;true;true
8;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
8;false;follows(D, A).;true;true
8;false,false;follows(E, B).;true;true
9;;accounttype(A, B) :- follows(C, B), follows(C, A).;true;true
9;false;follows(D, B).;true;true


Refining candidate
***************************
Model training time 9.558
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( follows(D, A) )
%   | then if ( tweets(A, E) )
%   | | then if ( tweets(F, E), follows(F, A) )
%   | | | then return 0.30320388015445693;  // std dev = 6.705, 182.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=81 */
%   | | | else return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.21529179224236922;  // std dev = 0.479, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | else if ( follows(G, B) )
%   | | then return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.5052077586289241;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.1254446385283916;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( follows(D, A), follows(E, B) )
%   | then return -0.18015631974472987;  // std dev = 0.050, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( follows(F, A) )
%   | | then if ( follows(A, G), tweets(F, H) )
%   | | | then return 0.5529979495407155;  // std dev = 5.061, 131.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=96 */
%   | | | else return 0.8178336438800292;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.11149969060550885;  // std dev = 2.712, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.1328748290555517;  // std dev = 2.266, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360625;  // std dev = 5.48e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( follows(D, B), follows(E, A) )
%   | then return -0.1559903936615315;  // std dev = 0.040, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( follows(F, A), follows(G, F) )
%   | | then if ( tweets(A, H), tweets(F, H) )
%   | | | then return 0.37052237458414017;  // std dev = 5.243, 122.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=80 */
%   | | | else return 0.591214678492993;  // std dev = 1.846, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.18493372109306297;  // std dev = 2.531, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.136299053234389;  // std dev = 2.301, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, C), follows(A, D) )
%   | then return 0.09911503846069501;  // std dev = 0.381, 246.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=81 */
%   | else if ( follows(A, E), tweets(C, F) )
%   | | then return 0.197897838753116;  // std dev = 0.385, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else return 0.07349658044006979;  // std dev = 0.379, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( tweets(A, I), tweets(G, I) )
%   | | then if ( follows(A, H), follows(H, G) )
%   | | | then return 0.19525677565615443;  // std dev = 0.978, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2341607773456327;  // std dev = 1.507, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.13575910821514356;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.09181485460177283;  // std dev = 1.318, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( tweets(A, K) )
%   | | then return 0.07977580543084938;  // std dev = 0.396, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0.21509832342507423;  // std dev = 0.450, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11130868624024175;  // std dev = 0.024, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, A) )
%   | | then if ( follows(E, D), follows(A, E) )
%   | | | then return 0.11099896166361489;  // std dev = 5.621, 188.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=74 */
%   | | | else return 0.25936140556433973;  // std dev = 1.367, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( follows(F, A), tweets(F, G) )
%   | | | then return 0.008679441699143763;  // std dev = 2.595, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return 0.1402265806162015;  // std dev = 2.391, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.025834145752237178;  // std dev = 0.655, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.03913707308213859;  // std dev = 1.870, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.06681823438932262;  // std dev = 1.472, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.06058771428125793;  // std dev = 1.818, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.10062125811621812;  // std dev = 0.014, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(A, F), follows(E, F) )
%   | | | then return 0.08013044172844051;  // std dev = 6.157, 219.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=87 */
%   | | | else return 0.17189217920114996;  // std dev = 1.716, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else return 0.04379498846202739;  // std dev = 0.412, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( follows(G, B) )
%   | | then return -0.20283003240707748;  // std dev = 0.077, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.44928908658569094;  // std dev = 1.525, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.5618500627145219;  // std dev = 0.935, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.09159852002601332;  // std dev = 0.011, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( follows(D, B) )
%   | then return -0.1745371730337617;  // std dev = 0.129, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( follows(E, A), follows(A, F) )
%   | | then if ( follows(F, E), tweets(A, G) )
%   | | | then return 0.29824338467534967;  // std dev = 4.195, 90.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=66 */
%   | | | else return 0.4251429200121451;  // std dev = 1.885, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.16891554892461755;  // std dev = 2.058, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.24595001618124548;  // std dev = 2.243, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08468726564290696;  // std dev = 0.017, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( follows(D, B) )
%   | then return -0.14859952958324943;  // std dev = 0.130, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else if ( tweets(A, E) )
%   | | then if ( follows(F, A), tweets(F, G) )
%   | | | then return 0.29381937428945853;  // std dev = 3.993, 104.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=84 */
%   | | | else return 0.20458165504092118;  // std dev = 1.936, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | else if ( follows(H, A) )
%   | | | then return 0.0735118943153144;  // std dev = 2.666, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | | else return 0.4700578927839973;  // std dev = 0.131, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07840350251175185;  // std dev = 0.017, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( follows(D, A) )
%   | then if ( follows(E, A), follows(F, E) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.0784551657823599;  // std dev = 4.390, 145.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=72 */
%   | | | else return -0.015475153459498112;  // std dev = 3.328, 85.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=32 */
%   | | else return -0.23520051761772184;  // std dev = 0.339, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( follows(G, B) )
%   | | then return -0.12672947250879177;  // std dev = 0.061, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.36937102154825874;  // std dev = 0.958, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.05418363342924211;  // std dev = 1.647, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.07281639812053106;  // std dev = 0.013, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( follows(D, B) )
%   | then return -0.13390584903517952;  // std dev = 0.166, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else if ( tweets(A, E) )
%   | | then if ( follows(F, A), follows(A, F) )
%   | | | then return 0.14143424074750008;  // std dev = 4.313, 97.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=72 */
%   | | | else return 0.30391506944477625;  // std dev = 1.354, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.14338322432307768;  // std dev = 2.292, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return -0.05481004784064939;  // std dev = 1.904, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.681', 'seconds']
Refined model CLL: -0.277155


******************************************
Best model found
******************************************
Results 

CLL : -0.392872 

AUC ROC : 0.841772 

AUC PR : 0.019608 

Precision : 0.019608 

Recall : 1.0 

F1 : 0.038462 

Total Learning Time : 9.558 

Total Inference Time : 3.413506269454956 

Total revision time: 18.835406604766845
Best scored revision CLL: -0.258837


Results 

CLL : -0.392872 

AUC ROC : 0.841772 

AUC PR : 0.019608 

Precision : 0.019608 

Recall : 1.0 

F1 : 0.038462 

Total Learning Time : 18.85661417579651 

Total Inference Time : 3.413506269454956 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.915
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.14185106490048766;  // std dev = 6.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return 0.22801194879813866;  // std dev = 8.250, 292.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=108 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(G, B) )
%   | | then return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0.4364621881115612;  // std dev = 4.499, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A), follows(G, B) )
%   | then if ( follows(F, H) )
%   | | then return -0.1719331639760391;  // std dev = 6.66e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27224617191022055;  // std dev = 0.485, 354.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360626;  // std dev = 6.18e-09, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( follows(D, B), follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return -0.1488155519365742;  // std dev = 1.07e-07, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2854845394702674;  // std dev = 0.491, 311.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.1441139296024325;  // std dev = 0.038, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then return 0.3305375733913722;  // std dev = 6.600, 181.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=108 */
%   | else return 0.32279425123961747;  // std dev = 4.205, 76.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=48 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08917695259474585;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( follows(D, A) )
%   | then return 0.15845407599502986;  // std dev = 6.995, 261.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=108 */
%   | else return 0.04763294628409907;  // std dev = 4.918, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.08219405799644085;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A) )
%   | then return 0.08427653431644704;  // std dev = 7.295, 293.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=108 */
%   | else if ( follows(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, B) )
%   | | | then return -0.1853366080975234;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return 0.18547085818581271;  // std dev = 4.499, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07620261259162263;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( follows(D, B) )
%   | then if ( follows(D, E) )
%   | | then return -0.14885266248773463;  // std dev = 0.103, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23169572626192977;  // std dev = 7.548, 244.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07100852418031077;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( follows(D, B) )
%   | then return -0.13175297828946372;  // std dev = 0.094, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( follows(E, A), follows(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15444118101688303;  // std dev = 0.486, 253.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06646467758231843;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.014914927080605758;  // std dev = 7.019, 288.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=108 */
%   | else if ( follows(E, B) )
%   | | then return -0.12493073432115781;  // std dev = 7.15e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return 0.08937222938003983;  // std dev = 4.252, 77.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=48 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.062457671485597964;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( follows(D, B) )
%   | then return -0.1125773940079589;  // std dev = 0.008, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( follows(E, B), follows(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(G, A) )
%   | | | then return 0.1378899803202691;  // std dev = 6.339, 172.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=108 */
%   | | | else return 0.04383797429583314;  // std dev = 4.382, 80.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.880', 'seconds']
Parameter learned model CLL:-0.312184 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)', 'false,true': 'follows(E, F)', 'false,false': 'follows(G, B)'}, {'true,true': [6.83e-08, 69, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [8.25, 184, 108], 'false,true,false': [0.0, 0, 0], 'false,false,true': [5.16e-08, 49, 0], 'false,false,false': [4.499, 35, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A), follows(G, B)', 'false,true': 'follows(F, H)'}, {'true,true': [0.0, 52, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [6.66e-08, 94, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.485, 198, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B), follows(E, A)', 'false,true': 'follows(E, F)'}, {'true': [6.18e-09, 64, 0], 'false,true,true': [1.07e-07, 94, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.491, 155, 156]}]
['accounttype(A, B)', {'': 'follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)'}, {'true,true': [0.038, 213, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.6, 73, 108], 'false,false': [4.205, 28, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)'}, {'true': [0.0, 47, 0], 'false,true': [6.995, 153, 108], 'false,false': [4.918, 97, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A)', 'false,false': 'follows(G, A)', 'false,false,false': 'follows(H, B)'}, {'true,true': [0.0, 49, 0], 'true,false': [0.0, 0, 0], 'false,true': [7.295, 185, 108], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 70, 0], 'false,false,false,false': [4.499, 35, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,true': 'follows(D, E)'}, {'true': [0.0, 45, 0], 'false,true,true': [0.103, 167, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [7.548, 88, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,false': 'follows(E, A), follows(E, B)'}, {'true': [0.0, 47, 0], 'false,true': [0.094, 165, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.486, 97, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)', 'false,true': 'follows(D, B)', 'false,false': 'follows(E, B)'}, {'true': [0.0, 48, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [7.019, 180, 108], 'false,false,true': [7.15e-08, 84, 0], 'false,false,false': [4.252, 29, 48]}]
['accounttype(A, B)', {'': 'follows(C, B), follows(C, A)', 'false': 'follows(D, B)', 'false,false': 'follows(E, B), follows(F, A)', 'false,false,false': 'follows(G, A)'}, {'true': [0.0, 41, 0], 'false,true': [0.008, 172, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.339, 64, 108], 'false,false,false,false': [4.382, 32, 48]}]
{'': [6.75787928032704e-17, 0.23255606977572288], 'false': [0.23306436479639964, 0.23140495867768657], 'false,true': [0.23306436479639964, nan], 'false,false': [5.437827059388522e-17, 0.24386703440267105], 'true': [6.75787928032704e-17, nan]}
{'': [-3.416070845000482e-17, 0.21882078084519965], 'false': [4.724353296277262e-17, 0.23552895594146653], 'false,true': [4.724353296277262e-17, nan], 'true': [-3.416070845000482e-17, nan]}
{'': [3.8163916471489756e-17, 0.21886972690914405], 'false': [1.2283318570320881e-16, 0.24124560491088035], 'false,true': [1.2283318570320881e-16, nan]}
{'': [0.0014348858934545535, 0.23830906965386203], 'false': [0.24065199474985366, 0.23268698060941836], 'true': [0.0014348858934545535, nan]}
{'': [-5.9054416203465774e-18, 0.18292110288819016], 'false': [0.18749391930006049, 0.16679489726727637]}
{'': [-9.063045098980869e-18, 0.17746567055227866], 'false': [0.18162579720463912, 0.1664202605215329], 'false,false': [nan, 0.1664202605215329], 'false,false,false': [-7.612957883143931e-17, 0.24386703440267157], 'true': [-9.063045098980869e-18, nan]}
{'': [-4.934324553889585e-18, 0.17357062847924004], 'false': [6.355875438841716e-05, 0.23348046977519393], 'false,true': [6.355875438841716e-05, nan]}
{'': [-2.362176648138631e-18, 0.16270590702091123], 'false': [5.342619121816472e-05, 0.23645186316468325], 'false,false': [nan, 0.2364518631646838]}
{'': [-2.3129646346357427e-18, 0.15443030818952805], 'false': [0.1710839682761372, 0.12374496631494435], 'false,true': [nan, 0.1710839682761372], 'false,false': [6.079792753899667e-17, 0.23477820880418288]}
{'': [-7.446617848095563e-18, 0.1529347328769207], 'false': [3.299533624927726e-07, 0.23757561179595624], 'false,false': [nan, 0.23757561179595624], 'false,false,false': [0.2336398053001622, 0.23999999999999977]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
0;false;follows(E, A).;true;true
0;false,false;follows(G, B).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
1;false;follows(F, A), follows(G, B).;true;true
2;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
2;false;follows(D, B), follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, B).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;false;follows(F, A).;true;true
5;false,false;follows(H, B).;true;true
6;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
6;false;follows(D, B).;true;true
7;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
7;false;follows(D, B).;true;true
8;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
8;false;follows(D, A).;true;true
8;false,false;follows(E, B).;true;true
9;;accounttype(A, B) :- follows(C, B), follows(C, A).;true;true
9;false;follows(D, B).;true;true


Refining candidate
***************************
Model training time 13.429
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(E, F), follows(F, A) )
%   | | | then return 0.2565864350995134;  // std dev = 5.539, 128.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=51 */
%   | | | else return 0.22285481745245217;  // std dev = 4.438, 85.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=31 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.20735528430586092;  // std dev = 3.784, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( follows(H, B) )
%   | | then return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.41038774106966036;  // std dev = 4.070, 67.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=37 */
%   | | | else return 0.4692600462106234;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.12544463852839155;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( follows(D, A), follows(E, B) )
%   | then return -0.17270657899983247;  // std dev = 0.032, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( follows(F, A), tweets(F, G) )
%   | | then if ( follows(A, F), tweets(A, H) )
%   | | | then return 0.3527428460556568;  // std dev = 5.671, 129.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=68 */
%   | | | else return 0.48906157903138303;  // std dev = 3.632, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | | else if ( follows(A, I), tweets(A, J) )
%   | | | then return 0.17267066969112893;  // std dev = 3.545, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | | else return 0.1257666307556446;  // std dev = 4.251, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( follows(D, B), follows(E, A) )
%   | then return -0.14933895912439352;  // std dev = 0.036, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( follows(F, A) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.3191695080644796;  // std dev = 6.044, 148.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=82 */
%   | | | else return 0.5124403861287213;  // std dev = 2.488, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | else if ( follows(A, G) )
%   | | | then return 0.13461583816656186;  // std dev = 4.753, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | | else return 0.2137624127403265;  // std dev = 2.400, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then return -0.13368306006859812;  // std dev = 0.354, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   else if ( tweets(A, D), follows(A, E) )
%   | then if ( follows(E, F), tweets(E, D) )
%   | | then if ( follows(F, A), follows(E, A) )
%   | | | then return 0.36130797269361287;  // std dev = 3.800, 64.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=42 */
%   | | | else return 0.27186527470100624;  // std dev = 4.721, 90.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=50 */
%   | | else return 0.5458316727610244;  // std dev = 0.882, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return 0.25277504777216636;  // std dev = 2.900, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.17354640944233768;  // std dev = 2.316, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.2556967315620666;  // std dev = 2.828, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.3763858569747361;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.09002783247254784;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( follows(D, A), tweets(A, E) )
%   | then if ( tweets(D, E), follows(F, D) )
%   | | then if ( follows(A, F), tweets(F, E) )
%   | | | then return 0.19743609256123398;  // std dev = 4.653, 118.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=57 */
%   | | | else return 0.13025594477702884;  // std dev = 3.540, 66.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=29 */
%   | | else return 0.2966877435939522;  // std dev = 1.006, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( tweets(A, I), tweets(H, I) )
%   | | | then return 0.07864403622200151;  // std dev = 3.140, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.10680868137749273;  // std dev = 3.915, 84.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=30 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.3065321527480329;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13627647875479812;  // std dev = 2.587, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08291965382607862;  // std dev = 2.24e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E) )
%   | | then if ( tweets(A, F), follows(E, G) )
%   | | | then return 0.03261364458727115;  // std dev = 6.131, 211.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=74 */
%   | | | else return 0.12983022982909995;  // std dev = 2.605, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.008041110391310289;  // std dev = 2.634, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return -0.0674269953253567;  // std dev = 1.244, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( follows(I, B) )
%   | | then return -0.15911533657488594;  // std dev = 0.053, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.27585416326233503;  // std dev = 3.639, 55.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=33 */
%   | | | else return 0.2005320721535077;  // std dev = 2.517, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07682826816761207;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( follows(D, B) )
%   | then return -0.1395787366839654;  // std dev = 0.078, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.23994386954620053;  // std dev = 5.748, 146.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=96 */
%   | | | else return 0.1577615653717376;  // std dev = 3.411, 47.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( follows(G, A), tweets(A, H) )
%   | | | then return 0.07279650478206742;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return 0.26387265086230943;  // std dev = 2.289, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07155326359713778;  // std dev = 1.05e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( follows(D, B) )
%   | then return -0.12450748480694698;  // std dev = 0.074, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | else if ( follows(A, E), tweets(A, F) )
%   | | then if ( follows(G, A), follows(E, G) )
%   | | | then return 0.13706602126976888;  // std dev = 4.778, 97.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=60 */
%   | | | else return 0.2662706590135875;  // std dev = 3.181, 51.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=37 */
%   | | else if ( follows(H, A) )
%   | | | then return 0.05954579204617073;  // std dev = 3.833, 59.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=32 */
%   | | | else return 0.11972235914058342;  // std dev = 3.388, 47.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=27 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.0669430388162957;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( follows(D, A) )
%   | then if ( follows(E, A), follows(A, E) )
%   | | then if ( follows(A, F), follows(E, F) )
%   | | | then return 0.046913698750081334;  // std dev = 5.358, 175.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=74 */
%   | | | else return 0.1399778901571227;  // std dev = 1.529, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( follows(A, G), follows(G, H) )
%   | | | then return -0.07776301178751822;  // std dev = 1.849, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.033334391784543775;  // std dev = 2.698, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | else if ( follows(I, B) )
%   | | then return -0.10928083122282488;  // std dev = 0.030, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.08292611372637938;  // std dev = 2.932, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.24432038777089934;  // std dev = 2.707, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.06288094256793772;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( follows(D, B) )
%   | then return -0.10850157684606533;  // std dev = 0.138, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( follows(E, A), follows(A, F) )
%   | | then if ( tweets(A, G), follows(H, E) )
%   | | | then return 0.10438569115193656;  // std dev = 5.204, 116.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=74 */
%   | | | else return 0.29264586740329374;  // std dev = 1.792, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.07326699254994543;  // std dev = 3.946, 66.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return 0.008112497638683666;  // std dev = 3.417, 47.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.678', 'seconds']
Refined model CLL: -0.324021


******************************************
Best model found
******************************************
Results 

CLL : -0.215798 

AUC ROC : 0.910156 

AUC PR : 0.041667 

Precision : 0.041667 

Recall : 1.0 

F1 : 0.08 

Total Learning Time : 13.429 

Total Inference Time : 5.252148628234863 

Total revision time: 25.17029990577698
Best scored revision CLL: -0.312184


Results 

CLL : -0.215798 

AUC ROC : 0.910156 

AUC PR : 0.041667 

Precision : 0.041667 

Recall : 1.0 

F1 : 0.08 

Total Learning Time : 25.191507476806642 

Total Inference Time : 5.252148628234863 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.827
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.14185106490048766;  // std dev = 6.99e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return 0.2764756283266004;  // std dev = 7.815, 251.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=105 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(G, B) )
%   | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0.45814893509951155;  // std dev = 2.898, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.12544463852839155;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A), follows(G, B) )
%   | then if ( follows(F, H) )
%   | | then return -0.17894312393221276;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.45658851302931736;  // std dev = 0.470, 200.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360624;  // std dev = 7.09e-09, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( follows(D, B), follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return -0.15414327067438552;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3970587224529461;  // std dev = 0.461, 195.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.1484735706670174;  // std dev = 0.054, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then return 0.3957413816605437;  // std dev = 5.282, 143.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=105 */
%   | else return 0.36968320926650117;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08882347691095831;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( follows(D, A) )
%   | then return 0.11936038623285486;  // std dev = 6.280, 249.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=105 */
%   | else return -0.03368740755016437;  // std dev = 3.162, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.08189234552171121;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A) )
%   | then return 0.0783502408742941;  // std dev = 6.342, 266.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=105 */
%   | else if ( follows(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, B) )
%   | | | then return -0.21919480943244035;  // std dev = 2.98e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.23797871325234865;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07594224382091593;  // std dev = 4.41e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( follows(D, B) )
%   | then if ( follows(D, E) )
%   | | then return -0.1538903101179468;  // std dev = 0.260, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2758561230731266;  // std dev = 5.464, 165.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.070781666049134;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( follows(D, B) )
%   | then return -0.1335338075887904;  // std dev = 0.204, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else if ( follows(E, A), follows(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1436833403316443;  // std dev = 0.458, 180.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06626533617038263;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04737906144645836;  // std dev = 5.493, 251.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=105 */
%   | else if ( follows(E, B) )
%   | | then return -0.14467598147142716;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0.18398588565889742;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.062281187263362646;  // std dev = 2.17e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( follows(D, B) )
%   | then return -0.11778111083946999;  // std dev = 0.074, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | else if ( follows(E, B), follows(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(G, A) )
%   | | | then return 0.16446809617918073;  // std dev = 5.011, 138.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=105 */
%   | | | else return 0.17418969214556512;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.428', 'seconds']
Parameter learned model CLL:-0.267335 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)', 'false,true': 'follows(E, F)', 'false,false': 'follows(G, B)'}, {'true,true': [6.99e-08, 71, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [7.815, 146, 105], 'false,true,false': [0.0, 0, 0], 'false,false,true': [3.33e-08, 34, 0], 'false,false,false': [2.898, 14, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A), follows(G, B)', 'false,true': 'follows(F, H)'}, {'true,true': [0.0, 70, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 109, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.47, 74, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B), follows(E, A)', 'false,true': 'follows(E, F)'}, {'true': [7.09e-09, 76, 0], 'false,true,true': [0.0, 106, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.461, 69, 126]}]
['accounttype(A, B)', {'': 'follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)'}, {'true,true': [0.054, 183, 0], 'true,false': [0.0, 0, 0], 'false,true': [5.282, 38, 105], 'false,false': [2.291, 7, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)'}, {'true': [0.0, 71, 0], 'false,true': [6.28, 144, 105], 'false,false': [3.162, 49, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A)', 'false,false': 'follows(G, A)', 'false,false,false': 'follows(H, B)'}, {'true,true': [0.0, 64, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.342, 161, 105], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.98e-08, 29, 0], 'false,false,false,false': [2.51, 9, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,true': 'follows(D, E)'}, {'true': [4.41e-08, 80, 0], 'false,true,true': [0.26, 173, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [5.464, 39, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,false': 'follows(E, A), follows(E, B)'}, {'true': [0.0, 72, 0], 'false,true': [0.204, 144, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.458, 54, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)', 'false,true': 'follows(D, B)', 'false,false': 'follows(E, B)'}, {'true': [0.0, 65, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [5.493, 146, 105], 'false,false,true': [0.0, 37, 0], 'false,false,false': [2.01, 5, 21]}]
['accounttype(A, B)', {'': 'follows(C, B), follows(C, A)', 'false': 'follows(D, B)', 'false,false': 'follows(E, B), follows(F, A)', 'false,false,false': 'follows(G, A)'}, {'true': [2.17e-08, 60, 0], 'false,true': [0.074, 158, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.011, 33, 105], 'false,false,false,false': [1.833, 4, 21]}]
{'': [6.880255363874209e-17, 0.23871093750000205], 'false': [0.24332947096078114, 0.21172022684310035], 'false,true': [0.24332947096078114, nan], 'false,false': [3.2653618371328135e-17, 0.24000000000000027], 'true': [6.880255363874209e-17, nan]}
{'': [-3.172065784643304e-17, 0.23512724045218192], 'false': [-5.296476814725518e-17, 0.22079537189632192], 'true': [-3.172065784643304e-17, nan], 'false,true': [-5.296476814725518e-17, nan]}
{'': [4.966787215428332e-17, 0.20727876274504578], 'false': [-3.35161667811368e-17, 0.2129590016521112], 'false,true': [-3.35161667811368e-17, nan]}
{'': [0.0029255874672470426, 0.19396489760152594], 'false': [0.19511956574893696, 0.18750000000000008], 'true': [0.0029255874672470426, nan]}
{'': [-2.5019110414088035e-17, 0.1589872799642508], 'false': [0.15839030799586226, 0.14282714824196815]}
{'': [-5.204170427930421e-18, 0.15326707580382093], 'false': [0.15122283254879115, 0.15901655787540847], 'false,false': [nan, 0.15901655787540847], 'false,false,false': [3.062684205862501e-17, 0.21000000000000008], 'true': [-5.204170427930421e-18, nan]}
{'': [2.42861286636753e-17, 0.13466030632341577], 'false': [0.00038929565588378, 0.18091484241741929], 'false,true': [0.00038929565588378, nan]}
{'': [-9.25185853854297e-18, 0.13589275102679677], 'false': [0.00029041552552235776, 0.21021935404953224], 'false,false': [nan, 0.2102193540495319]}
{'': [-1.1102230246251566e-17, 0.1147192025602627], 'false': [0.12021375530888305, 0.09028394864153576], 'false,true': [nan, 0.12021375530888305], 'false,false': [0.0, 0.1553254437869822]}
{'': [7.864079757761525e-18, 0.10883289582271208], 'false': [3.431409824279307e-05, 0.17466684665705975], 'false,false': [nan, 0.17466684665705975], 'false,false,false': [0.1819470699432895, 0.13439999999999996]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
0;false;follows(E, A).;true;true
0;false,false;follows(G, B).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
1;false;follows(F, A), follows(G, B).;true;true
2;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
2;false;follows(D, B), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;false;follows(F, A).;true;true
5;false,false;follows(H, B).;true;true
6;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
6;false;follows(D, B).;true;true
7;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
7;false;follows(D, B).;true;true
8;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
8;false;follows(D, A).;true;true
8;false,false;follows(E, B).;true;true
9;;accounttype(A, B) :- follows(C, B), follows(C, A).;true;true
9;false;follows(D, B).;true;true


Refining candidate
***************************
Model training time 17.484
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.14185106490048766;  // std dev = 7.30e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(F, A), follows(E, A) )
%   | | | then return 0.2876791364417954;  // std dev = 6.042, 149.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=64 */
%   | | | else return 0.21769949689726514;  // std dev = 4.527, 89.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
%   | | else return 0.3318331456258281;  // std dev = 0.499, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( follows(G, B) )
%   | | then return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.12544463852839152;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( follows(D, A), follows(E, B) )
%   | then return -0.1770816564207584;  // std dev = 0.063, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( follows(F, A), follows(G, F) )
%   | | then if ( tweets(A, H), tweets(F, I) )
%   | | | then return 0.536680673038731;  // std dev = 4.857, 116.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=83 */
%   | | | else return 0.6998893736010648;  // std dev = 1.624, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.16678847601160376;  // std dev = 2.587, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.1918882822427327;  // std dev = 2.231, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360625;  // std dev = 5.48e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( follows(D, B), follows(E, A) )
%   | then return -0.15266124992285543;  // std dev = 0.048, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( follows(F, A) )
%   | | then if ( tweets(A, G), follows(A, F) )
%   | | | then return 0.39615640937843116;  // std dev = 4.893, 108.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=72 */
%   | | | else return 0.47910724505871866;  // std dev = 2.777, 43.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=33 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.16264606801404624;  // std dev = 2.398, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.07754956857459569;  // std dev = 2.350, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( follows(D, E), follows(A, E) )
%   | then if ( follows(A, D), tweets(E, C) )
%   | | then return 0.09558105845023462;  // std dev = 0.387, 198.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=64 */
%   | | else if ( follows(F, D), follows(F, E) )
%   | | | then return 0.30023742462537817;  // std dev = 1.133, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.10288385976039457;  // std dev = 1.245, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.06992834492812419;  // std dev = 0.378, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( tweets(H, I), follows(H, G) )
%   | | then if ( follows(G, A), follows(H, A) )
%   | | | then return 0.11098531768069377;  // std dev = 1.814, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.17274883876119465;  // std dev = 2.803, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else return -0.02731472456224547;  // std dev = 0.352, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( tweets(A, J) )
%   | | then return 0.1363187574296747;  // std dev = 0.400, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.09987030882337262;  // std dev = 0.418, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11122941124371095;  // std dev = 0.027, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( follows(D, A), tweets(D, E) )
%   | then if ( follows(A, F), follows(F, D) )
%   | | then if ( follows(D, F) )
%   | | | then return 0.15338073865574972;  // std dev = 5.396, 172.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=76 */
%   | | | else return 0.016295757151215236;  // std dev = 1.433, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( follows(A, D) )
%   | | | then return 0.020210281137724998;  // std dev = 2.284, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.11781487432227955;  // std dev = 2.399, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | else if ( tweets(A, G) )
%   | | then if ( follows(H, A) )
%   | | | then return 0.011839151871999229;  // std dev = 0.617, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.06332327193871116;  // std dev = 2.423, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.07131191312570544;  // std dev = 1.310, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.17628314955505617;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.1008731026226303;  // std dev = 0.024, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( tweets(A, F) )
%   | | | then return 0.1966938364701324;  // std dev = 4.888, 139.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=72 */
%   | | | else return 0.11784591900916268;  // std dev = 2.564, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | else if ( follows(A, G) )
%   | | | then return -0.008854536377685768;  // std dev = 1.670, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.17048457617643475;  // std dev = 1.674, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( follows(H, B) )
%   | | then return -0.1986941436092028;  // std dev = 0.013, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.2806650750771079;  // std dev = 1.966, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.49329150088240414;  // std dev = 1.263, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.091762385383227;  // std dev = 0.015, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( follows(D, B) )
%   | then return -0.18280234240311852;  // std dev = 0.194, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(G, A), tweets(E, H) )
%   | | | then return 0.2598820509547025;  // std dev = 5.120, 131.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=95 */
%   | | | else return 0.19539429297463815;  // std dev = 2.086, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | else if ( tweets(A, I), follows(A, J) )
%   | | | then return 0.06815571899108476;  // std dev = 1.488, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.2078198765056581;  // std dev = 2.162, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08458775280456364;  // std dev = 0.025, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( follows(D, B) )
%   | then return -0.15681942566475846;  // std dev = 0.149, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( tweets(A, E), follows(A, F) )
%   | | then if ( follows(G, A), follows(H, G) )
%   | | | then return 0.17404163730641437;  // std dev = 4.811, 109.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=76 */
%   | | | else return 0.26173928823122083;  // std dev = 1.773, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.35256415522288503;  // std dev = 1.620, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | | | else return 0.1786690260013589;  // std dev = 1.789, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07797554363592504;  // std dev = 0.011, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( tweets(E, G), follows(E, A) )
%   | | | then return 0.0497966098979868;  // std dev = 5.054, 201.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=89 */
%   | | | else return -0.1325772673855907;  // std dev = 2.017, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( follows(A, H) )
%   | | | then return -0.06382217527095835;  // std dev = 0.718, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.044985656470349696;  // std dev = 1.779, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( follows(I, B) )
%   | | then return -0.12620657801867255;  // std dev = 0.012, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.0571481046587598;  // std dev = 2.102, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0.2398467655865442;  // std dev = 1.504, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.07246361614955285;  // std dev = 0.015, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( follows(D, B) )
%   | then return -0.1360713073236472;  // std dev = 0.223, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( tweets(A, E), follows(F, A) )
%   | | then if ( follows(A, F), tweets(F, E) )
%   | | | then return 0.16121930639863194;  // std dev = 4.196, 92.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=68 */
%   | | | else return 0.3823904374827091;  // std dev = 0.969, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( follows(A, G), follows(G, H) )
%   | | | then return -0.02804644697405112;  // std dev = 3.564, 52.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   | | | else return 0.17641913083473515;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.571', 'seconds']
Refined model CLL: -0.269264


******************************************
Best model found
******************************************
Results 

CLL : -0.408776 

AUC ROC : 0.841772 

AUC PR : 0.019608 

Precision : 0.019608 

Recall : 1.0 

F1 : 0.038462 

Total Learning Time : 17.484 

Total Inference Time : 8.866474866867065 

Total revision time: 32.23301900482178
Best scored revision CLL: -0.267335


Results 

CLL : -0.408776 

AUC ROC : 0.841772 

AUC PR : 0.019608 

Precision : 0.019608 

Recall : 1.0 

F1 : 0.038462 

Total Learning Time : 32.24997891044617 

Total Inference Time : 8.866474866867065 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.806
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return 0.24663814373260212;  // std dev = 8.127, 278.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=108 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(G, B) )
%   | | then return -0.14185106490048766;  // std dev = 6.50e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return 0.3798880655342957;  // std dev = 4.791, 92.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=48 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A), follows(G, B) )
%   | then if ( follows(F, H) )
%   | | then return -0.17460124193409682;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.31086062780300217;  // std dev = 0.490, 324.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360632;  // std dev = 4.37e-09, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( follows(D, B), follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return -0.15084830728602447;  // std dev = 9.42e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2691841009569914;  // std dev = 0.486, 321.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.1493498860885618;  // std dev = 0.040, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then return 0.35368715443961685;  // std dev = 6.339, 172.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=108 */
%   | else return 0.30607430682099573;  // std dev = 4.340, 79.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=48 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08875257886584718;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( follows(D, A) )
%   | then return 0.14366715901848726;  // std dev = 6.947, 269.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=108 */
%   | else return 0.03915125330843417;  // std dev = 5.072, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.08183180980823615;  // std dev = 3.25e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A) )
%   | then return 0.10255846923323843;  // std dev = 7.063, 272.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=108 */
%   | else if ( follows(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, B) )
%   | | | then return -0.1866380598321095;  // std dev = 6.66e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return 0.22884127192619302;  // std dev = 4.340, 79.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=48 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07588998824428296;  // std dev = 1.97e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( follows(D, B) )
%   | then if ( follows(D, E) )
%   | | then return -0.1507505802070062;  // std dev = 0.103, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19388693710471847;  // std dev = 7.803, 256.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07073612444891844;  // std dev = 1.97e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( follows(D, B) )
%   | then return -0.1319642651595178;  // std dev = 0.089, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else if ( follows(E, A), follows(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15606110885676697;  // std dev = 0.485, 252.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06622530954407622;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.025079912571794052;  // std dev = 6.897, 269.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=108 */
%   | else if ( follows(E, B) )
%   | | then return -0.12549875563710855;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return 0.1106043455489781;  // std dev = 4.205, 76.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=48 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.06224574314327079;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( follows(D, B) )
%   | then return -0.11397009479137611;  // std dev = 0.017, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | else if ( follows(E, B), follows(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(G, A) )
%   | | | then return 0.10294605196712509;  // std dev = 6.545, 179.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=108 */
%   | | | else return 0.04410742401124031;  // std dev = 4.422, 81.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.955', 'seconds']
Parameter learned model CLL:-0.311914 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)', 'false,true': 'follows(E, F)', 'false,false': 'follows(G, B)'}, {'true,true': [5.16e-08, 49, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [8.127, 170, 108], 'false,true,false': [0.0, 0, 0], 'false,false,true': [6.5e-08, 64, 0], 'false,false,false': [4.791, 44, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A), follows(G, B)', 'false,true': 'follows(F, H)'}, {'true,true': [0.0, 55, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 93, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.49, 168, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B), follows(E, A)', 'false,true': 'follows(E, F)'}, {'true': [4.37e-09, 51, 0], 'false,true,true': [9.42e-08, 95, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.486, 165, 156]}]
['accounttype(A, B)', {'': 'follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)'}, {'true,true': [0.04, 215, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.339, 64, 108], 'false,false': [4.34, 31, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)'}, {'true': [0.0, 45, 0], 'false,true': [6.947, 161, 108], 'false,false': [5.072, 99, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A)', 'false,false': 'follows(G, A)', 'false,false,false': 'follows(H, B)'}, {'true,true': [3.25e-08, 59, 0], 'true,false': [0.0, 0, 0], 'false,true': [7.063, 164, 108], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.66e-08, 68, 0], 'false,false,false,false': [4.34, 31, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,true': 'follows(D, E)'}, {'true': [1.97e-08, 35, 0], 'false,true,true': [0.103, 171, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [7.803, 100, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,false': 'follows(E, A), follows(E, B)'}, {'true': [1.97e-08, 55, 0], 'false,true': [0.089, 163, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.485, 96, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)', 'false,true': 'follows(D, B)', 'false,false': 'follows(E, B)'}, {'true': [0.0, 53, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [6.897, 161, 108], 'false,false,true': [0.0, 66, 0], 'false,false,false': [4.205, 28, 48]}]
['accounttype(A, B)', {'': 'follows(C, B), follows(C, A)', 'false': 'follows(D, B)', 'false,false': 'follows(E, B), follows(F, A)', 'false,false,false': 'follows(G, A)'}, {'true': [0.0, 42, 0], 'false,true': [0.017, 164, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.545, 71, 108], 'false,false,false,false': [4.422, 33, 48]}]
{'': [5.437827059388522e-17, 0.23024485548642123], 'false': [0.2375653434087289, 0.21301775147929078], 'false,true': [0.2375653434087289, nan], 'false,false': [6.591949208711867e-17, 0.24952741020793962], 'true': [5.437827059388522e-17, nan]}
{'': [-3.633457171500512e-17, 0.22760651825422612], 'false': [-2.3875763970433474e-17, 0.24037780277770399], 'false,true': [-2.3875763970433474e-17, nan], 'true': [-3.633457171500512e-17, nan]}
{'': [1.959217102279688e-17, 0.21357250070503087], 'false': [9.349246523159212e-17, 0.23648944469588493], 'false,true': [9.349246523159212e-17, nan]}
{'': [0.0016105810591130925, 0.2356343176372579], 'false': [0.23363980530016515, 0.23842332959461596], 'true': [0.0016105810591130925, nan]}
{'': [0.0, 0.18034497656476345], 'false': [0.17941317151132097, 0.1749865549990325]}
{'': [1.787647243040506e-17, 0.18004649747130635], 'false': [0.18338637698705162, 0.17104638280891837], 'false,false': [nan, 0.17104638280891837], 'false,false,false': [6.530723674265627e-17, 0.2384233295946163], 'true': [1.787647243040506e-17, nan]}
{'': [1.1102230246251566e-17, 0.17113135591304685], 'false': [6.147152662758145e-05, 0.2378350530866817], 'false,true': [6.147152662758145e-05, nan]}
{'': [7.065055611250995e-18, 0.16273339601853834], 'false': [4.8203117435578886e-05, 0.2353785648826354], 'false,false': [nan, 0.2353785648826359]}
{'': [-7.331661483373675e-18, 0.16368102416782776], 'false': [0.17682185298075942, 0.1384037483374092], 'false,true': [nan, 0.17682185298075942], 'false,false': [-5.719330732917473e-17, 0.2326869806094183]}
{'': [-3.3042351923367752e-18, 0.15696427557801113], 'false': [1.8359177505545805e-06, 0.2407177048440611], 'false,false': [nan, 0.2407177048440611], 'false,false,false': [0.23931837333416667, 0.2414266117969822]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
0;false;follows(E, A).;true;true
0;false,false;follows(G, B).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
1;false;follows(F, A), follows(G, B).;true;true
2;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
2;false;follows(D, B), follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, B).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;false;follows(F, A).;true;true
5;false,false;follows(H, B).;true;true
6;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
6;false;follows(D, B).;true;true
7;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
7;false;follows(D, B).;true;true
8;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
8;false;follows(D, A).;true;true
8;false,false;follows(E, B).;true;true
9;;accounttype(A, B) :- follows(C, B), follows(C, A).;true;true
9;false;follows(D, B).;true;true


Refining candidate
***************************
Model training time 14.688
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( follows(D, A) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(A, F), follows(F, A) )
%   | | | then return 0.29685861251886836;  // std dev = 6.178, 155.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=68 */
%   | | | else return 0.2510060779566552;  // std dev = 3.655, 56.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
%   | | else if ( follows(A, G) )
%   | | | then return 0.17064893509951237;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(H, B) )
%   | | then return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.5724346493852258;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return 0.4331489350995114;  // std dev = 3.126, 40.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=23 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( follows(D, A), follows(E, B) )
%   | then return -0.1821748807210923;  // std dev = 0.140, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( follows(F, A), follows(G, F) )
%   | | then if ( tweets(A, H), follows(A, I) )
%   | | | then return 0.45103854042653063;  // std dev = 5.215, 117.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=74 */
%   | | | else return 0.37697981735392677;  // std dev = 3.785, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.14897256894064115;  // std dev = 4.001, 82.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=27 */
%   | | | else return 0.11516146695172026;  // std dev = 3.854, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.1123163781936063;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( follows(D, B), follows(E, A) )
%   | then return -0.1554226918195078;  // std dev = 0.130, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( follows(F, A) )
%   | | then if ( tweets(A, G), follows(H, F) )
%   | | | then return 0.33214678351736426;  // std dev = 6.030, 150.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=88 */
%   | | | else return 0.4726032769650212;  // std dev = 2.474, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | else if ( follows(A, I), tweets(A, J) )
%   | | | then return 0.13600309538983985;  // std dev = 3.470, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | | | else return 0.10054961927060056;  // std dev = 4.134, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then return -0.1349730418669359;  // std dev = 0.299, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else if ( follows(D, A), tweets(D, E) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(A, F), follows(F, D) )
%   | | | then return 0.2963323844121353;  // std dev = 5.107, 111.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=69 */
%   | | | else return 0.4883555324472664;  // std dev = 1.568, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else if ( tweets(G, E), follows(A, G) )
%   | | | then return 0.18988586904617347;  // std dev = 1.881, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.29897853214951214;  // std dev = 2.625, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I), tweets(A, J) )
%   | | | then return 0.31962246504527747;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.4171369648390266;  // std dev = 2.844, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.23967077107580503;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3598304173419483;  // std dev = 2.064, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08992220939759986;  // std dev = 2.47e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( follows(D, A), follows(A, E) )
%   | then if ( follows(F, D), follows(F, E) )
%   | | then if ( follows(F, A), follows(E, D) )
%   | | | then return 0.16292875846926322;  // std dev = 4.027, 81.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=40 */
%   | | | else return 0.10649324274705288;  // std dev = 4.520, 123.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=48 */
%   | | else if ( follows(D, E) )
%   | | | then return 0.013448596953797541;  // std dev = 1.091, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.0682644266229639;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( tweets(A, G), follows(A, H) )
%   | | then if ( follows(H, I), tweets(I, G) )
%   | | | then return 0.03189341858418133;  // std dev = 3.136, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return -0.051365662546321925;  // std dev = 1.414, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.053164901773426115;  // std dev = 3.003, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | else return 0.08682865890759706;  // std dev = 3.823, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.0828296349466732;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(E, F), follows(F, A) )
%   | | | then return 0.08964525845265205;  // std dev = 5.504, 172.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=71 */
%   | | | else return 0.03852243063788168;  // std dev = 3.066, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.17100326188578188;  // std dev = 2.318, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.022118195977566008;  // std dev = 1.140, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( follows(H, B) )
%   | | then return -0.1457152791261461;  // std dev = 0.012, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.24708906293921507;  // std dev = 3.115, 41.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=25 */
%   | | | else return 0.2839023985574554;  // std dev = 2.961, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07675068729909383;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( follows(D, B) )
%   | then return -0.13629950993096032;  // std dev = 0.122, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | else if ( follows(A, E) )
%   | | then if ( follows(F, A), follows(E, F) )
%   | | | then return 0.2163167673093834;  // std dev = 4.862, 107.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=71 */
%   | | | else return 0.3150134619530214;  // std dev = 3.896, 77.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=57 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.1733073263496941;  // std dev = 2.570, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.11485108869041823;  // std dev = 2.293, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.0714857462656444;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( follows(D, B) )
%   | then return -0.12100944230450689;  // std dev = 0.134, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( follows(E, A), follows(A, E) )
%   | | then if ( follows(A, F), follows(F, E) )
%   | | | then return 0.08626026784132686;  // std dev = 5.325, 117.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=69 */
%   | | | else return 0.01337768531943959;  // std dev = 2.380, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | else if ( follows(A, G), follows(G, H) )
%   | | | then return 0.23709148503699304;  // std dev = 3.301, 55.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | | | else return 0.1484281015318292;  // std dev = 3.642, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06688377196713845;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( tweets(A, G), follows(A, F) )
%   | | | then return 0.02515867292012615;  // std dev = 5.086, 166.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=66 */
%   | | | else return 0.08643956866360154;  // std dev = 2.666, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | else if ( follows(A, H) )
%   | | | then return -0.09824020993454971;  // std dev = 1.093, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.010383742673827395;  // std dev = 2.628, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | else if ( follows(I, B) )
%   | | then return -0.10166554910617359;  // std dev = 0.017, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.12901447840274088;  // std dev = 2.856, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | | else return 0.23256104663520058;  // std dev = 2.394, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.06282851948317911;  // std dev = 5.27e-09, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( follows(D, B) )
%   | then return -0.10597504405881915;  // std dev = 0.158, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(G, A), follows(G, E) )
%   | | | then return 0.07767771504783151;  // std dev = 5.532, 129.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=79 */
%   | | | else return -0.007217394966701637;  // std dev = 4.215, 74.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=43 */
%   | | else if ( follows(H, A) )
%   | | | then return 0.35062120517801776;  // std dev = 1.599, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.054096566412433086;  // std dev = 2.512, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.008', 'seconds']
Refined model CLL: -0.331481


******************************************
Best model found
******************************************
Results 

CLL : -0.216611 

AUC ROC : 0.910156 

AUC PR : 0.041667 

Precision : 0.041667 

Recall : 1.0 

F1 : 0.08 

Total Learning Time : 14.688 

Total Inference Time : 6.0841100215911865 

Total revision time: 27.007615608215332
Best scored revision CLL: -0.311914


Results 

CLL : -0.216611 

AUC ROC : 0.910156 

AUC PR : 0.041667 

Precision : 0.041667 

Recall : 1.0 

F1 : 0.08 

Total Learning Time : 27.02457551383972 

Total Inference Time : 6.0841100215911865 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.896
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.14185106490048766;  // std dev = 7.30e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return 0.2832501496744076;  // std dev = 7.769, 247.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=105 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(G, B) )
%   | | then return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0.5822868661339945;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.12544463852839155;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A), follows(G, B) )
%   | then if ( follows(F, H) )
%   | | then return -0.17994061916908277;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3932697195901612;  // std dev = 0.483, 221.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360625;  // std dev = 6.45e-09, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( follows(D, B), follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return -0.15489800325339498;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.39309970203794853;  // std dev = 0.466, 198.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.1443947501493266;  // std dev = 0.045, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then return 0.41956960055289194;  // std dev = 5.178, 141.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=105 */
%   | else return 0.3061944888173975;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08915414573897638;  // std dev = 3.80e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( follows(D, A) )
%   | then return 0.11974351864360826;  // std dev = 6.275, 260.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=105 */
%   | else return 0.006006336938658248;  // std dev = 3.011, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.08217459600744545;  // std dev = 3.07e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A) )
%   | then return 0.12497280963419978;  // std dev = 6.039, 235.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=105 */
%   | else if ( follows(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, B) )
%   | | | then return -0.21519848396882918;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0.25388846850355623;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.0761858212574537;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( follows(D, B) )
%   | then if ( follows(D, E) )
%   | | then return -0.15586322402474964;  // std dev = 0.161, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24426762939911478;  // std dev = 5.780, 171.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07099389685792293;  // std dev = 1.67e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( follows(D, B) )
%   | then return -0.13653387900464886;  // std dev = 0.149, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( follows(E, A), follows(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17783270924579053;  // std dev = 0.447, 172.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06645182672655674;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03757846908104347;  // std dev = 5.653, 245.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=105 */
%   | else if ( follows(E, B) )
%   | | then return -0.14167274672087526;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0.04169692127418098;  // std dev = 2.603, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.06244629592663795;  // std dev = 2.69e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( follows(D, B) )
%   | then return -0.12020183521411555;  // std dev = 0.034, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else if ( follows(E, B), follows(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(G, A) )
%   | | | then return 0.15825043360489663;  // std dev = 5.068, 139.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=105 */
%   | | | else return 0.05467713928689903;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.702', 'seconds']
Parameter learned model CLL:-0.264274 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)', 'false,true': 'follows(E, F)', 'false,false': 'follows(G, B)'}, {'true,true': [7.3e-08, 76, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [7.769, 142, 105], 'false,true,false': [0.0, 0, 0], 'false,false,true': [5.05e-08, 48, 0], 'false,false,false': [2.407, 8, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A), follows(G, B)', 'false,true': 'follows(F, H)'}, {'true,true': [0.0, 69, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 108, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.483, 95, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B), follows(E, A)', 'false,true': 'follows(E, F)'}, {'true': [6.45e-09, 67, 0], 'false,true,true': [0.0, 104, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.466, 72, 126]}]
['accounttype(A, B)', {'': 'follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)'}, {'true,true': [0.045, 230, 0], 'true,false': [0.0, 0, 0], 'false,true': [5.178, 36, 105], 'false,false': [2.51, 9, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)'}, {'true': [3.8e-08, 71, 0], 'false,true': [6.275, 155, 105], 'false,false': [3.011, 42, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A)', 'false,false': 'follows(G, A)', 'false,false,false': 'follows(H, B)'}, {'true,true': [3.07e-08, 58, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.039, 130, 105], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 44, 0], 'false,false,false,false': [2.407, 8, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,true': 'follows(D, E)'}, {'true': [0.0, 70, 0], 'false,true,true': [0.161, 129, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [5.78, 45, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,false': 'follows(E, A), follows(E, B)'}, {'true': [1.67e-08, 83, 0], 'false,true': [0.149, 136, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.447, 46, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)', 'false,true': 'follows(D, B)', 'false,false': 'follows(E, B)'}, {'true': [0.0, 66, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [5.653, 140, 105], 'false,false,true': [0.0, 29, 0], 'false,false,false': [2.603, 10, 21]}]
['accounttype(A, B)', {'': 'follows(C, B), follows(C, A)', 'false': 'follows(D, B)', 'false,false': 'follows(E, B), follows(F, A)', 'false,false,false': 'follows(G, A)'}, {'true': [2.69e-08, 65, 0], 'false,true': [0.034, 140, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.068, 34, 105], 'false,false,false,false': [2.51, 9, 21]}]
{'': [7.011934892369409e-17, 0.2376543209876563], 'false': [0.2443901719418474, 0.19834710743801678], 'false,true': [0.2443901719418474, nan], 'false,false': [5.3198186596622086e-17, 0.19976218787158173], 'true': [7.011934892369409e-17, nan]}
{'': [-3.539841527790354e-17, 0.22912307072649202], 'false': [-2.0148491928382471e-16, 0.23323384081282192], 'true': [-3.539841527790354e-17, nan], 'false,true': [-2.0148491928382471e-16, nan]}
{'': [4.142623226213271e-17, 0.21025160355481942], 'false': [-1.1102230246251565e-16, 0.2172717083316516], 'false,true': [-1.1102230246251565e-16, nan]}
{'': [0.002054400799873667, 0.1954764674143894], 'false': [0.19013128112268035, 0.21000000000000008], 'true': [0.002054400799873667, nan]}
{'': [2.032802721144653e-17, 0.15202977302973805], 'false': [0.15146706424510437, 0.14393906606761458]}
{'': [1.6270509843644534e-17, 0.15398347409669327], 'false': [0.15519023535024254, 0.13204557510647394], 'false,false': [nan, 0.13204557510647394], 'false,false,false': [-1.0092936587501423e-17, 0.19976218787158118], 'true': [1.6270509843644534e-17, nan]}
{'': [-4.758098676964957e-18, 0.150683163853991], 'false': [0.0002010977173776631, 0.19535970157791782], 'false,true': [0.0002010977173776631, nan]}
{'': [3.3440452548950498e-18, 0.13578953645144826], 'false': [0.00016316686822974845, 0.19939138158139316], 'false,false': [nan, 0.19939138158139308]}
{'': [-4.20539024479226e-18, 0.1297585558896932], 'false': [0.13042506115858657, 0.12129999447073364], 'false,true': [nan, 0.13042506115858657], 'false,false': [0.0, 0.2185223725286161]}
{'': [1.1102230246251566e-17, 0.12112643122643481], 'false': [8.34820040780393e-06, 0.19081744227954586], 'false,false': [nan, 0.19081744227954586], 'false,false,false': [0.18477304487345295, 0.21000000000000002]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
0;false;follows(E, A).;true;true
0;false,false;follows(G, B).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
1;false;follows(F, A), follows(G, B).;true;true
2;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
2;false;follows(D, B), follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, B).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;false;follows(F, A).;true;true
5;false,false;follows(H, B).;true;true
6;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
6;false;follows(D, B).;true;true
7;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
7;false;follows(D, B).;true;true
8;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
8;false;follows(D, A).;true;true
8;false,false;follows(E, B).;true;true
9;;accounttype(A, B) :- follows(C, B), follows(C, A).;true;true
9;false;follows(D, B).;true;true


Refining candidate
***************************
Model training time 11.726
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.14185106490048766;  // std dev = 7.15e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(F, A), tweets(F, G) )
%   | | | then return 0.29530740504486735;  // std dev = 6.710, 183.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=80 */
%   | | | else return 0.23024195835532632;  // std dev = 3.170, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else return 0.3081489350995123;  // std dev = 0.497, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( follows(H, B) )
%   | | then return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.6081489350995123;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.5504566274072047;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.12544463852839158;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( follows(D, A), follows(E, B) )
%   | then return -0.17935905610900302;  // std dev = 0.039, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( follows(F, A), follows(G, F) )
%   | | then if ( follows(A, F), follows(G, A) )
%   | | | then return 0.6365781978087546;  // std dev = 3.385, 77.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=63 */
%   | | | else return 0.5158501247370746;  // std dev = 3.539, 59.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=41 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.1294910720904432;  // std dev = 2.663, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.1706440515255535;  // std dev = 2.361, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( follows(D, B), follows(E, A) )
%   | then return -0.15455067220580257;  // std dev = 0.039, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( follows(F, A), tweets(F, G) )
%   | | then if ( follows(A, H), follows(H, F) )
%   | | | then return 0.5516176204959972;  // std dev = 3.563, 95.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=80 */
%   | | | else return 0.3855845650264703;  // std dev = 2.911, 37.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=24 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.13133922452290106;  // std dev = 2.704, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.15558452481034327;  // std dev = 2.234, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then return -0.13123572704381903;  // std dev = 0.313, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   else if ( follows(D, A), follows(E, D) )
%   | then if ( follows(A, E), tweets(D, F) )
%   | | then if ( tweets(E, F) )
%   | | | then return 0.31947560947689246;  // std dev = 4.453, 102.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=75 */
%   | | | else return 0.4360763502929956;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.3350319707837541;  // std dev = 2.456, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | | else return 0.6611276280396937;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I), follows(I, J) )
%   | | | then return 0.6197214017343461;  // std dev = 0.952, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.7088628880728527;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.47401543594175255;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5728598937065972;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.09022852616347278;  // std dev = 4.08e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( follows(D, A), follows(E, D) )
%   | then if ( follows(E, A), tweets(E, F) )
%   | | then if ( follows(A, D), tweets(A, G) )
%   | | | then return 0.10473975826520798;  // std dev = 4.080, 114.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=52 */
%   | | | else return 0.16263024759612985;  // std dev = 2.386, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | else if ( follows(A, E), follows(D, E) )
%   | | | then return 0.09514805073509211;  // std dev = 2.304, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.02364163156282729;  // std dev = 2.762, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I), follows(I, J) )
%   | | | then return 0.10811299201015098;  // std dev = 1.871, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.014424247942554076;  // std dev = 1.398, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return -0.050963585809164436;  // std dev = 1.388, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.06718800144472409;  // std dev = 1.596, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08309065739691028;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), tweets(A, F) )
%   | | then if ( tweets(E, F), follows(E, G) )
%   | | | then return 0.06904699096190833;  // std dev = 4.980, 186.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=74 */
%   | | | else return 0.020154428508569758;  // std dev = 1.116, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( follows(A, H), follows(H, A) )
%   | | | then return 0.10333418170829735;  // std dev = 2.303, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | | else return 0.16753917950648123;  // std dev = 1.658, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( follows(I, B) )
%   | | then return -0.14958459571836166;  // std dev = 0.042, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.30002249823042765;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.34094522261551846;  // std dev = 1.503, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.0769756134245618;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( follows(D, B) )
%   | then return -0.1394276788601055;  // std dev = 0.109, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( tweets(A, E) )
%   | | then if ( follows(A, F), tweets(F, E) )
%   | | | then return 0.23181260084444283;  // std dev = 4.619, 115.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=87 */
%   | | | else return 0.39813586564836984;  // std dev = 0.965, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.07968394903998233;  // std dev = 2.727, 32.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   | | | else return 0.25703977769757363;  // std dev = 1.504, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07168147236268128;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( follows(D, B) )
%   | then return -0.12263977478143494;  // std dev = 0.093, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( tweets(A, E), follows(F, A) )
%   | | then if ( follows(A, G), follows(G, F) )
%   | | | then return 0.13907570000116423;  // std dev = 4.182, 90.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=66 */
%   | | | else return 0.2397213766763507;  // std dev = 2.067, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | else if ( follows(H, A), follows(A, H) )
%   | | | then return 0.06725811364297568;  // std dev = 2.636, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return 0.1333211396353504;  // std dev = 2.562, 31.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06705556261119393;  // std dev = 7.45e-09, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( follows(D, A) )
%   | then if ( tweets(A, E), follows(A, F) )
%   | | then if ( follows(A, G), follows(F, G) )
%   | | | then return 0.029479606877141195;  // std dev = 4.419, 160.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=70 */
%   | | | else return -0.039451927450403455;  // std dev = 1.737, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( follows(A, H) )
%   | | | then return 0.06462547500082116;  // std dev = 2.456, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.04326679214452272;  // std dev = 1.199, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( follows(I, B) )
%   | | then return -0.10490933112664762;  // std dev = 0.032, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.08948052469753982;  // std dev = 1.873, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.23086070162289501;  // std dev = 1.270, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.06298045856196886;  // std dev = 1.29e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( follows(D, B) )
%   | then return -0.11170759558337291;  // std dev = 0.141, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else if ( follows(E, A), follows(A, F) )
%   | | then if ( tweets(A, G), follows(A, E) )
%   | | | then return 0.13191314192985984;  // std dev = 4.173, 95.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=72 */
%   | | | else return 0.33022928384835;  // std dev = 1.399, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else if ( tweets(A, H) )
%   | | | then return -0.04888508352830366;  // std dev = 2.809, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | | | else return 0.047223855710401726;  // std dev = 1.675, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.958', 'seconds']
Refined model CLL: -0.269419


******************************************
Best model found
******************************************
Results 

CLL : -0.395346 

AUC ROC : 0.841772 

AUC PR : 0.019608 

Precision : 0.019608 

Recall : 1.0 

F1 : 0.038462 

Total Learning Time : 11.726 

Total Inference Time : 3.4730916023254395 

Total revision time: 21.154872915267944
Best scored revision CLL: -0.264274


Results 

CLL : -0.395346 

AUC ROC : 0.841772 

AUC PR : 0.019608 

Precision : 0.019608 

Recall : 1.0 

F1 : 0.038462 

Total Learning Time : 21.21237971496582 

Total Inference Time : 3.4730916023254395 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.856
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return 0.2552077586289204;  // std dev = 8.070, 272.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=108 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(G, B) )
%   | | then return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else return 0.5156831816748553;  // std dev = 4.054, 73.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=48 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.1254446385283916;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A), follows(G, B) )
%   | then if ( follows(F, H) )
%   | | then return -0.1758397034629694;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.29625929162705433;  // std dev = 0.489, 330.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.1123163781936063;  // std dev = 4.56e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( follows(D, B), follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return -0.1517897830786629;  // std dev = 4.94e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3002790323206486;  // std dev = 0.485, 298.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.1494587691244956;  // std dev = 0.041, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then return 0.3674704780006517;  // std dev = 6.177, 167.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=108 */
%   | else return 0.2888491830732585;  // std dev = 4.252, 77.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=48 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08874377328379669;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( follows(D, A) )
%   | then return 0.13930098577123048;  // std dev = 6.960, 262.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=108 */
%   | else return 0.024700372958204417;  // std dev = 4.922, 150.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=48 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.08182429076691151;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A) )
%   | then return 0.09337373027468523;  // std dev = 7.090, 272.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=108 */
%   | else if ( follows(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, B) )
%   | | | then return -0.18693180171722903;  // std dev = 6.14e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0.25001468900642826;  // std dev = 4.054, 73.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=48 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.0758834973130168;  // std dev = 2.36e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( follows(D, B) )
%   | then if ( follows(D, E) )
%   | | then return -0.14929608600579888;  // std dev = 0.107, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1770698145295871;  // std dev = 7.823, 257.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.0707304672250535;  // std dev = 1.05e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( follows(D, B) )
%   | then return -0.1309359179081707;  // std dev = 0.091, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | else if ( follows(E, A), follows(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14747652466003078;  // std dev = 0.485, 251.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06622033718595914;  // std dev = 1.75e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.011347825744697568;  // std dev = 6.975, 290.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=108 */
%   | else if ( follows(E, B) )
%   | | then return -0.1259519415780162;  // std dev = 4.71e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0.04267639889964737;  // std dev = 4.422, 81.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=48 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.06224133988717461;  // std dev = 9.13e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( follows(D, B) )
%   | then return -0.11304864407647873;  // std dev = 0.003, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( follows(E, B), follows(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(G, A) )
%   | | | then return 0.16972026831209977;  // std dev = 6.000, 162.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=108 */
%   | | | else return 0.024910943357187274;  // std dev = 4.461, 82.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.821', 'seconds']
Parameter learned model CLL:-0.319049 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)', 'false,true': 'follows(E, F)', 'false,false': 'follows(G, B)'}, {'true,true': [5.05e-08, 48, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [8.07, 164, 108], 'false,true,false': [0.0, 0, 0], 'false,false,true': [7.74e-08, 81, 0], 'false,false,false': [4.054, 25, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A), follows(G, B)', 'false,true': 'follows(F, H)'}, {'true,true': [0.0, 61, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 95, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.489, 174, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B), follows(E, A)', 'false,true': 'follows(E, F)'}, {'true': [4.56e-09, 52, 0], 'false,true,true': [4.94e-08, 79, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.485, 142, 156]}]
['accounttype(A, B)', {'': 'follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)'}, {'true,true': [0.041, 231, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.177, 59, 108], 'false,false': [4.252, 29, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)'}, {'true': [0.0, 59, 0], 'false,true': [6.96, 154, 108], 'false,false': [4.922, 102, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A)', 'false,false': 'follows(G, A)', 'false,false,false': 'follows(H, B)'}, {'true,true': [0.0, 31, 0], 'true,false': [0.0, 0, 0], 'false,true': [7.09, 164, 108], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.14e-08, 56, 0], 'false,false,false,false': [4.054, 25, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,true': 'follows(D, E)'}, {'true': [2.36e-08, 56, 0], 'false,true,true': [0.107, 172, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [7.823, 101, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,false': 'follows(E, A), follows(E, B)'}, {'true': [1.05e-08, 46, 0], 'false,true': [0.091, 158, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.485, 95, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)', 'false,true': 'follows(D, B)', 'false,false': 'follows(E, B)'}, {'true': [1.75e-08, 44, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [6.975, 182, 108], 'false,false,true': [4.71e-08, 53, 0], 'false,false,false': [4.422, 33, 48]}]
['accounttype(A, B)', {'': 'follows(C, B), follows(C, A)', 'false': 'follows(D, B)', 'false,false': 'follows(E, B), follows(F, A)', 'false,false,false': 'follows(G, A)'}, {'true': [9.13e-09, 57, 0], 'false,true': [0.003, 165, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.0, 54, 108], 'false,false,false,false': [4.461, 34, 48]}]
{'': [5.3198186596622086e-17, 0.23209680618925005], 'false': [0.23940311418685395, 0.2145387080452024], 'false,true': [0.23940311418685395, nan], 'false,false': [7.401486830834377e-17, 0.22518296115593933], 'true': [5.3198186596622086e-17, nan]}
{'': [-4.186086814160426e-17, 0.22415288180769352], 'false': [-9.349246523159212e-17, 0.23886207393220518], 'true': [-4.186086814160426e-17, nan], 'false,true': [-9.349246523159212e-17, nan]}
{'': [2.1350442781253012e-17, 0.21990125216017156], 'false': [3.091760321740942e-17, 0.23537247130883485], 'false,true': [3.091760321740942e-17, nan]}
{'': [0.0016604801198963532, 0.23180069958921565], 'false': [0.22847717738176312, 0.23477820880418315], 'true': [0.0016604801198963532, nan]}
{'': [-3.7634678800852764e-18, 0.1794305719172743], 'false': [0.18491500809973327, 0.1614993310233549]}
{'': [-2.6860234466737657e-18, 0.18167435096129556], 'false': [0.18480595792680685, 0.17433075205665863], 'false,false': [nan, 0.17433075205665863], 'false,false,false': [6.740639792367021e-17, 0.22518296115593947], 'true': [-2.6860234466737657e-18, nan]}
{'': [9.912705577010326e-18, 0.1682579468104357], 'false': [6.658087535046608e-05, 0.2381166233560854], 'false,true': [6.658087535046608e-05, nan]}
{'': [2.413528314402514e-18, 0.16278051365439103], 'false': [5.2002851063913795e-05, 0.23527110786451907], 'false,false': [nan, 0.2352711078645183]}
{'': [6.938893903907228e-18, 0.1632752926907239], 'false': [0.16775009343849975, 0.15273547114260638], 'false,true': [nan, 0.16775009343849975], 'false,false': [4.1895208476421005e-17, 0.24142661179698188]}
{'': [1.460819769243627e-18, 0.1526620617980397], 'false': [6.079872077844867e-08, 0.23378724059393471], 'false,false': [nan, 0.23378724059393471], 'false,false,false': [0.2222222222222212, 0.2427126710291494]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
0;false;follows(E, A).;true;true
0;false,false;follows(G, B).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
1;false;follows(F, A), follows(G, B).;true;true
2;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
2;false;follows(D, B), follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, B).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;false;follows(F, A).;true;true
5;false,false;follows(H, B).;true;true
6;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
6;false;follows(D, B).;true;true
7;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
7;false;follows(D, B).;true;true
8;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
8;false;follows(D, A).;true;true
8;false,false;follows(E, B).;true;true
9;;accounttype(A, B) :- follows(C, B), follows(C, A).;true;true
9;false;follows(D, B).;true;true


Refining candidate
***************************
Model training time 8.001
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( tweets(A, F), tweets(E, F) )
%   | | | then return 0.26919187988478965;  // std dev = 6.282, 163.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=67 */
%   | | | else return 0.24276431971489698;  // std dev = 3.038, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( follows(A, G), tweets(A, H) )
%   | | | then return 0.12481560176617904;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.21814893509951236;  // std dev = 3.394, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | else if ( follows(I, B) )
%   | | then return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.4395442839367207;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.5346195233348057;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.12544463852839152;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( follows(D, A), follows(E, B) )
%   | then return -0.17481535231299905;  // std dev = 0.054, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( follows(F, A), follows(A, G) )
%   | | then if ( follows(G, H), follows(F, G) )
%   | | | then return 0.5049577779330402;  // std dev = 5.023, 116.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=79 */
%   | | | else return 0.42955715431057556;  // std dev = 2.182, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.34461802932812957;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.20076639357276835;  // std dev = 5.175, 127.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=48 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360628;  // std dev = 4.59e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( follows(D, B), follows(E, A) )
%   | then return -0.14990656603321068;  // std dev = 0.055, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( follows(F, A) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.35057057449016676;  // std dev = 5.641, 134.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=82 */
%   | | | else return 0.28169547972557396;  // std dev = 3.570, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | | else if ( tweets(A, G), follows(A, H) )
%   | | | then return 0.15667052508959614;  // std dev = 3.462, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | | | else return 0.13691752137657986;  // std dev = 3.931, 78.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then return -0.13581806394080348;  // std dev = 0.386, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   else if ( follows(A, D), follows(D, A) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then if ( follows(D, F), follows(F, A) )
%   | | | then return 0.25858898123998614;  // std dev = 4.364, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.3310726322321391;  // std dev = 2.707, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | | else if ( follows(A, G), follows(D, G) )
%   | | | then return 0.1683736682355986;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.21866994139826273;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(A, I), follows(H, I) )
%   | | | then return 0.3221951636888318;  // std dev = 2.890, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.505334703202173;  // std dev = 2.336, 32.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | | else if ( tweets(A, J), follows(K, A) )
%   | | | then return 0.282227460473487;  // std dev = 2.482, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.3066256349915326;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08985307995655843;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E), tweets(D, F) )
%   | | then if ( follows(E, G), tweets(G, F) )
%   | | | then return 0.12677922595855906;  // std dev = 6.051, 206.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=87 */
%   | | | else return 0.010149904678851617;  // std dev = 1.274, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( follows(D, H), follows(H, A) )
%   | | | then return 0.1712111035790629;  // std dev = 2.521, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.19881554221197983;  // std dev = 1.223, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( follows(A, I), tweets(A, J) )
%   | | then if ( follows(I, K) )
%   | | | then return 0.10417457516676881;  // std dev = 3.029, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.28858159725709615;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(A, L), follows(L, M) )
%   | | | then return 0.07130738759328503;  // std dev = 2.612, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.09049202407497545;  // std dev = 2.544, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08277071032294092;  // std dev = 1.49e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E) )
%   | | then if ( tweets(A, F) )
%   | | | then return 0.07957726222267994;  // std dev = 5.748, 194.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else return 0.14842267961836456;  // std dev = 2.406, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.032808715759820785;  // std dev = 2.728, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return -0.029719199041145894;  // std dev = 1.310, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( follows(H, B) )
%   | | then return -0.16420536162734983;  // std dev = 0.064, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.27738703227110173;  // std dev = 2.915, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | | else return 0.15643759600679444;  // std dev = 3.257, 42.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=23 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07669989834653233;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( follows(D, B) )
%   | then return -0.14225398734117536;  // std dev = 0.086, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( follows(E, A), follows(A, E) )
%   | | then if ( follows(A, F), follows(F, E) )
%   | | | then return 0.10194983963411082;  // std dev = 5.533, 124.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=69 */
%   | | | else return 0.025207180858061867;  // std dev = 2.674, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.3263005205190836;  // std dev = 2.677, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | | | else return 0.20340567160318349;  // std dev = 4.152, 75.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=48 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07144154089561552;  // std dev = 1.05e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( follows(D, B) )
%   | then return -0.12521317442316562;  // std dev = 0.072, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( follows(A, E), tweets(A, F) )
%   | | then if ( follows(G, A), follows(G, E) )
%   | | | then return 0.0848311141593086;  // std dev = 5.414, 119.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=67 */
%   | | | else return 0.12487296641579575;  // std dev = 3.416, 49.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=30 */
%   | | else if ( follows(H, A), tweets(A, I) )
%   | | | then return 0.20169881832008357;  // std dev = 2.161, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0.11773831908775363;  // std dev = 4.290, 76.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06684496483762062;  // std dev = 1.90e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(F, A), tweets(F, G) )
%   | | | then return 0.02392123323485931;  // std dev = 6.223, 234.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=90 */
%   | | | else return -0.2603303662219239;  // std dev = 0.898, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.09389210845057074;  // std dev = 2.175, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return -0.0044068550342028735;  // std dev = 1.227, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( follows(I, B) )
%   | | then return -0.11238553693209975;  // std dev = 0.029, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.10318613984163379;  // std dev = 3.694, 59.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=37 */
%   | | | else return 0.3569132038712755;  // std dev = 1.302, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.06279419074966029;  // std dev = 1.49e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( follows(D, B) )
%   | then return -0.11054482689800117;  // std dev = 0.109, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( tweets(A, E), follows(A, F) )
%   | | then if ( follows(F, G) )
%   | | | then return 0.07459338125752102;  // std dev = 6.210, 158.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=93 */
%   | | | else return 0.42553415966324915;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return -0.04826387409316806;  // std dev = 3.922, 61.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | | else return 0.04012244882863303;  // std dev = 3.510, 51.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.499', 'seconds']
Refined model CLL: -0.311049


******************************************
Best model found
******************************************
Results 

CLL : -0.21688 

AUC ROC : 0.910156 

AUC PR : 0.041667 

Precision : 0.041667 

Recall : 0.880952 

F1 : 0.07957 

Total Learning Time : 8.001 

Total Inference Time : 3.5867674350738525 

Total revision time: 17.870972759246825
Best scored revision CLL: -0.311049


Results 

CLL : -0.21688 

AUC ROC : 0.910156 

AUC PR : 0.041667 

Precision : 0.041667 

Recall : 0.880952 

F1 : 0.07957 

Total Learning Time : 17.9284795589447 

Total Inference Time : 3.5867674350738525 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.932
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.14185106490048766;  // std dev = 6.32e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return 0.28153603187370235;  // std dev = 7.781, 248.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=105 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(G, B) )
%   | | then return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0.6081489350995117;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A), follows(G, B) )
%   | then if ( follows(F, H) )
%   | | then return -0.1796878192834559;  // std dev = 1.01e-07, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4531497100387016;  // std dev = 0.468, 200.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.1123163781936063;  // std dev = 4.93e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( follows(D, B), follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return -0.15470680645422766;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.386207736421876;  // std dev = 0.463, 197.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.148169054505972;  // std dev = 0.052, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then return 0.4299626107969024;  // std dev = 4.952, 137.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=105 */
%   | else return 0.2872221439991833;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08884812566747075;  // std dev = 4.59e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( follows(D, A) )
%   | then return 0.166357531498877;  // std dev = 5.837, 217.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=105 */
%   | else return -0.013586626244444181;  // std dev = 3.054, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.0819133900917712;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A) )
%   | then return 0.09234230207016703;  // std dev = 5.988, 253.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=105 */
%   | else if ( follows(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, B) )
%   | | | then return -0.22024326640530748;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0.17595431512487453;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07596040871195398;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( follows(D, B) )
%   | then if ( follows(D, E) )
%   | | then return -0.15833897031313351;  // std dev = 0.168, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20954448506424575;  // std dev = 5.991, 176.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07079749614746332;  // std dev = 2.36e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( follows(D, B) )
%   | then return -0.13979738205303185;  // std dev = 0.167, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( follows(E, A), follows(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16599622923284027;  // std dev = 0.447, 174.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06627924857936118;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.041032709454254496;  // std dev = 5.582, 236.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=105 */
%   | else if ( follows(E, B) )
%   | | then return -0.14397881943794058;  // std dev = 5.37e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0.2589923081406615;  // std dev = 1.620, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.06229350633476036;  // std dev = 1.67e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( follows(D, B) )
%   | then return -0.12116754803793651;  // std dev = 0.043, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else if ( follows(E, B), follows(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(G, A) )
%   | | | then return 0.04319913381251724;  // std dev = 6.078, 162.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=105 */
%   | | | else return 0.19983730447232317;  // std dev = 1.620, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.528', 'seconds']
Parameter learned model CLL:-0.262849 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)', 'false,true': 'follows(E, F)', 'false,false': 'follows(G, B)'}, {'true,true': [6.32e-08, 63, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [7.781, 143, 105], 'false,true,false': [0.0, 0, 0], 'false,false,true': [3.49e-08, 35, 0], 'false,false,false': [2.291, 7, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A), follows(G, B)', 'false,true': 'follows(F, H)'}, {'true,true': [0.0, 54, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [1.01e-07, 115, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.468, 74, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B), follows(E, A)', 'false,true': 'follows(E, F)'}, {'true': [4.93e-09, 54, 0], 'false,true,true': [0.0, 132, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.463, 71, 126]}]
['accounttype(A, B)', {'': 'follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)'}, {'true,true': [0.052, 198, 0], 'true,false': [0.0, 0, 0], 'false,true': [4.952, 32, 105], 'false,false': [2.51, 9, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)'}, {'true': [4.59e-08, 73, 0], 'false,true': [5.837, 112, 105], 'false,false': [3.054, 42, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A)', 'false,false': 'follows(G, A)', 'false,false,false': 'follows(H, B)'}, {'true,true': [0.0, 65, 0], 'true,false': [0.0, 0, 0], 'false,true': [5.988, 148, 105], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 37, 0], 'false,false,false,false': [2.687, 11, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,true': 'follows(D, E)'}, {'true': [0.0, 67, 0], 'false,true,true': [0.168, 115, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [5.991, 50, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,false': 'follows(E, A), follows(E, B)'}, {'true': [2.36e-08, 72, 0], 'false,true': [0.167, 128, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.447, 48, 126]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)', 'false,true': 'follows(D, B)', 'false,false': 'follows(E, B)'}, {'true': [0.0, 58, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [5.582, 131, 105], 'false,false,true': [5.37e-08, 46, 0], 'false,false,false': [1.62, 3, 21]}]
['accounttype(A, B)', {'': 'follows(C, B), follows(C, A)', 'false': 'follows(D, B)', 'false,false': 'follows(E, B), follows(F, A)', 'false,false,false': 'follows(G, A)'}, {'true': [1.67e-08, 65, 0], 'false,true': [0.043, 161, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.078, 57, 105], 'false,false,false,false': [1.62, 3, 21]}]
{'': [6.344131569286608e-17, 0.2410024710249088], 'false': [0.244130463059316, 0.22222222222222235], 'false,true': [0.244130463059316, nan], 'false,false': [3.489272363107635e-17, 0.18750000000000025], 'true': [6.344131569286608e-17, nan]}
{'': [-3.700743415417188e-17, 0.23200866039687892], 'false': [8.881784197001253e-17, 0.21920543717386073], 'false,true': [8.881784197001253e-17, nan], 'true': [-3.700743415417188e-17, nan]}
{'': [2.4671622769447922e-17, 0.1984251492825671], 'false': [-1.3457248783335231e-17, 0.21398892381554707], 'false,true': [-1.3457248783335231e-17, nan]}
{'': [0.00272003265721281, 0.18758675532643596], 'false': [0.17901859449091617, 0.21000000000000021], 'true': [0.00272003265721281, nan]}
{'': [2.889621570942188e-17, 0.16064795952176383], 'false': [0.15702037273013728, 0.1480485582658082]}
{'': [-6.832141690000964e-18, 0.1449456128915285], 'false': [0.14173996786909343, 0.1436566305302817], 'false,false': [nan, 0.1436566305302817], 'false,false,false': [-2.400482215405744e-17, 0.2255859374999999], 'true': [-6.832141690000964e-18, nan]}
{'': [-4.9711478714559245e-18, 0.15578346731428913], 'false': [0.0002461877862004343, 0.2039287568289281], 'false,true': [0.0002461877862004343, nan]}
{'': [7.709882115452476e-18, 0.13805906591776876], 'false': [0.00021757681191266615, 0.19982643738973782], 'false,false': [nan, 0.19982643738973807]}
{'': [-3.828355257328126e-18, 0.11917696477685341], 'false': [0.13204914900415712, 0.07408649909118672], 'false,true': [nan, 0.13204914900415712], 'false,false': [6.275173617446536e-17, 0.10937499999999993]}
{'': [4.270088556250602e-18, 0.12398931843551274], 'false': [1.1351378749807938e-05, 0.21549632196925644], 'false,false': [nan, 0.21549632196925644], 'false,false,false': [0.22805212620027393, 0.10937499999999989]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
0;false;follows(E, A).;true;true
0;false,false;follows(G, B).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
1;false;follows(F, A), follows(G, B).;true;true
2;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
2;false;follows(D, B), follows(E, A).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;false;follows(F, A).;true;true
5;false,false;follows(H, B).;true;true
6;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
6;false;follows(D, B).;true;true
7;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
7;false;follows(D, B).;true;true
8;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
8;false;follows(D, A).;true;true
8;false,false;follows(E, B).;true;true
9;;accounttype(A, B) :- follows(C, B), follows(C, A).;true;true
9;false;follows(D, B).;true;true


Refining candidate
***************************
Model training time 9.64
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( follows(D, A) )
%   | then if ( tweets(A, E), follows(A, F) )
%   | | then if ( follows(G, A), follows(F, G) )
%   | | | then return 0.2867203636709421;  // std dev = 6.141, 154.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=66 */
%   | | | else return 0.1637044906550679;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( follows(A, H), follows(H, A) )
%   | | | then return 0.21000078695136415;  // std dev = 3.509, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return 0.2494532829255993;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( follows(I, B) )
%   | | then return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.6081489350995123;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( follows(D, A), follows(E, B) )
%   | then return -0.17636345903628114;  // std dev = 0.060, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( follows(F, A), follows(G, F) )
%   | | then if ( tweets(F, H), tweets(A, H) )
%   | | | then return 0.5235613871305326;  // std dev = 4.885, 114.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=80 */
%   | | | else return 0.6303320228805536;  // std dev = 2.187, 30.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.15288464839133803;  // std dev = 2.641, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.13705764232870377;  // std dev = 2.435, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360633;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( follows(D, B), follows(E, A) )
%   | then return -0.15171681119857555;  // std dev = 0.060, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( follows(F, A) )
%   | | then if ( tweets(A, G), tweets(F, H) )
%   | | | then return 0.393868137826631;  // std dev = 5.336, 127.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=84 */
%   | | | else return 0.5631033649552587;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.06192260645180106;  // std dev = 2.613, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.15326215025219125;  // std dev = 2.353, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( tweets(A, D) )
%   | then if ( tweets(C, D) )
%   | | then if ( follows(A, E), follows(C, E) )
%   | | | then return 0.08156333384664181;  // std dev = 5.484, 197.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=62 */
%   | | | else return 0.13554333293089488;  // std dev = 1.699, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return 0.027996366720911863;  // std dev = 0.354, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else return 0.10228925136776663;  // std dev = 0.375, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   else if ( tweets(A, F) )
%   | then if ( follows(A, G), tweets(G, F) )
%   | | then if ( follows(A, H), follows(G, H) )
%   | | | then return 0.08007834881346113;  // std dev = 1.974, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.15937792222443042;  // std dev = 2.145, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return 0.08481018038650678;  // std dev = 0.375, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then return 0.2213375381342678;  // std dev = 0.438, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.11571047079177027;  // std dev = 0.420, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.1096300118982948;  // std dev = 0.016, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( tweets(A, D), follows(E, A) )
%   | then if ( follows(E, F), follows(F, A) )
%   | | then if ( follows(A, F), tweets(F, D) )
%   | | | then return 0.1919372842235004;  // std dev = 4.407, 112.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=53 */
%   | | | else return 0.26227092484002346;  // std dev = 1.770, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( tweets(E, G), follows(H, E) )
%   | | | then return 0.06410157168219888;  // std dev = 3.126, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0.2693066643699811;  // std dev = 0.802, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(A, J), follows(J, K) )
%   | | | then return 0.06818913238240401;  // std dev = 2.130, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.0056173258371656;  // std dev = 1.566, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( follows(L, A), follows(A, L) )
%   | | | then return 0.09191417929707942;  // std dev = 2.722, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return 0.1394923342187291;  // std dev = 2.203, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.09959233645738777;  // std dev = 0.016, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( follows(D, A) )
%   | then if ( tweets(A, E) )
%   | | then if ( tweets(F, E), follows(F, A) )
%   | | | then return 0.12725735783795666;  // std dev = 5.618, 187.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=81 */
%   | | | else return -0.01069563962851653;  // std dev = 1.407, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0.06589167187364639;  // std dev = 0.370, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | else if ( follows(G, B) )
%   | | then return -0.18815191600995912;  // std dev = 0.063, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.3152253596629033;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0.5779579619600439;  // std dev = 0.947, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.09101398785515052;  // std dev = 0.013, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( follows(D, B) )
%   | then return -0.17394037433578194;  // std dev = 0.178, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( follows(E, A) )
%   | | then if ( follows(A, F), tweets(E, G) )
%   | | | then return 0.3220126861173841;  // std dev = 4.741, 125.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=96 */
%   | | | else return 0.13952781796130637;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.534698045313008;  // std dev = 0.966, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.3599077994000681;  // std dev = 1.276, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08378259956744451;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( follows(D, B) )
%   | then return -0.15020824822699186;  // std dev = 0.176, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( tweets(A, E) )
%   | | then if ( follows(A, F), tweets(F, E) )
%   | | | then return 0.2566381361723188;  // std dev = 4.416, 112.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=87 */
%   | | | else return 0.5084012856011135;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.07717100510145469;  // std dev = 2.732, 32.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   | | | else return 0.051546860833921244;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07753324687232904;  // std dev = 0.015, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.013464929362386914;  // std dev = 5.534, 223.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=91 */
%   | | | else return -0.05820837876574947;  // std dev = 1.676, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else return 0.07144369901534553;  // std dev = 0.310, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( follows(F, B) )
%   | | then return -0.12157929317484427;  // std dev = 0.043, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.043777790403227476;  // std dev = 2.102, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0.43881640970306296;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.07196061862211933;  // std dev = 0.005, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( follows(D, B) )
%   | then return -0.12902421765989153;  // std dev = 0.207, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | else if ( follows(E, A), tweets(E, F) )
%   | | then if ( follows(A, G), follows(G, A) )
%   | | | then return 0.17074873723059475;  // std dev = 4.689, 119.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=90 */
%   | | | else return 0.05296268083335041;  // std dev = 2.216, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.24686326603202383;  // std dev = 1.298, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.19600240568668056;  // std dev = 1.287, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.771', 'seconds']
Refined model CLL: -0.269797


******************************************
Best model found
******************************************
Results 

CLL : -0.403147 

AUC ROC : 0.841772 

AUC PR : 0.019608 

Precision : 0.019608 

Recall : 1.0 

F1 : 0.038462 

Total Learning Time : 9.64 

Total Inference Time : 4.452220678329468 

Total revision time: 20.122387382507327
Best scored revision CLL: -0.262849


Results 

CLL : -0.403147 

AUC ROC : 0.841772 

AUC PR : 0.019608 

Precision : 0.019608 

Recall : 1.0 

F1 : 0.038462 

Total Learning Time : 20.143856975555423 

Total Inference Time : 4.452220678329468 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.853
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return 0.26569610491082946;  // std dev = 7.999, 265.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=108 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(G, B) )
%   | | then return -0.14185106490048766;  // std dev = 6.32e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return 0.47353355048412826;  // std dev = 4.297, 78.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=48 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.12544463852839155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A), follows(G, B) )
%   | then if ( follows(F, H) )
%   | | then return -0.17736484704031996;  // std dev = 3.65e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.28925552435778235;  // std dev = 0.488, 336.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360629;  // std dev = 5.27e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( follows(D, B), follows(E, A) )
%   | then if ( follows(E, F) )
%   | | then return -0.15294739749908398;  // std dev = 7.60e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24326253326115202;  // std dev = 0.485, 337.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then if ( follows(C, D) )
%   | then return -0.14961023637614326;  // std dev = 0.037, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(E, A) )
%   | then return 0.3704628051094027;  // std dev = 6.244, 169.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=108 */
%   | else return 0.2962734342097918;  // std dev = 4.340, 79.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=48 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08873152514521136;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( follows(D, A) )
%   | then return 0.1171870939092383;  // std dev = 7.257, 280.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=108 */
%   | else return 0.05597188319257735;  // std dev = 4.882, 144.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then if ( follows(D, E) )
%   | then return -0.0818138319724642;  // std dev = 1.67e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(F, A) )
%   | then return 0.10267914403599843;  // std dev = 7.156, 274.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=108 */
%   | else if ( follows(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(H, B) )
%   | | | then return -0.18198277405208726;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return 0.32508267485015313;  // std dev = 3.689, 67.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=48 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07587446846400517;  // std dev = 1.05e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( follows(D, B) )
%   | then if ( follows(D, E) )
%   | | then return -0.14846003450128975;  // std dev = 0.087, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1766956908269617;  // std dev = 7.944, 261.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.0707225979592092;  // std dev = 1.49e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( follows(D, B) )
%   | then return -0.13038762236473553;  // std dev = 0.085, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | else if ( follows(E, A), follows(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1287468186054031;  // std dev = 0.490, 264.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06621342049938492;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04916048620681371;  // std dev = 6.792, 271.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=108 */
%   | else if ( follows(E, B) )
%   | | then return -0.12305619517064688;  // std dev = 1.49e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0.07631085232643826;  // std dev = 4.252, 77.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=48 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.062235214776263564;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( follows(D, B) )
%   | then return -0.11362727995731672;  // std dev = 0.043, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else if ( follows(E, B), follows(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(G, A) )
%   | | | then return 0.13135247949849227;  // std dev = 6.430, 175.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=108 */
%   | | | else return -0.0011917839689786548;  // std dev = 4.571, 85.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.944', 'seconds']
Parameter learned model CLL:-0.310012 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)', 'false,true': 'follows(E, F)', 'false,false': 'follows(G, B)'}, {'true,true': [5.37e-08, 50, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [7.999, 157, 108], 'false,true,false': [0.0, 0, 0], 'false,false,true': [6.32e-08, 63, 0], 'false,false,false': [4.297, 30, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A), follows(G, B)', 'false,true': 'follows(F, H)'}, {'true,true': [0.0, 49, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [3.65e-08, 84, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.488, 180, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B), follows(E, A)', 'false,true': 'follows(E, F)'}, {'true': [5.27e-09, 56, 0], 'false,true,true': [7.6e-08, 98, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.485, 181, 156]}]
['accounttype(A, B)', {'': 'follows(C, B)', 'true': 'follows(C, D)', 'false': 'follows(E, A)'}, {'true,true': [0.037, 203, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.244, 61, 108], 'false,false': [4.34, 31, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)'}, {'true': [0.0, 50, 0], 'false,true': [7.257, 172, 108], 'false,false': [4.882, 96, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'true': 'follows(D, E)', 'false': 'follows(F, A)', 'false,false': 'follows(G, A)', 'false,false,false': 'follows(H, B)'}, {'true,true': [1.67e-08, 41, 0], 'true,false': [0.0, 0, 0], 'false,true': [7.156, 166, 108], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 64, 0], 'false,false,false,false': [3.689, 19, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,true': 'follows(D, E)'}, {'true': [1.05e-08, 64, 0], 'false,true,true': [0.087, 162, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [7.944, 105, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, B)', 'false,false': 'follows(E, A), follows(E, B)'}, {'true': [1.49e-08, 52, 0], 'false,true': [0.085, 193, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.49, 108, 156]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, B)', 'false': 'follows(D, A)', 'false,true': 'follows(D, B)', 'false,false': 'follows(E, B)'}, {'true': [0.0, 55, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [6.792, 163, 108], 'false,false,true': [1.49e-08, 69, 0], 'false,false,false': [4.252, 29, 48]}]
['accounttype(A, B)', {'': 'follows(C, B), follows(C, A)', 'false': 'follows(D, B)', 'false,false': 'follows(E, B), follows(F, A)', 'false,false,false': 'follows(G, A)'}, {'true': [0.0, 50, 0], 'false,true': [0.043, 183, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.43, 67, 108], 'false,false,false,false': [4.571, 37, 48]}]
{'': [5.773159728050814e-17, 0.23659880123274238], 'false': [0.241452474190106, 0.22453598913535608], 'false,true': [0.241452474190106, nan], 'false,false': [6.344131569286608e-17, 0.2366863905325445], 'true': [5.773159728050814e-17, nan]}
{'': [-3.172065784643304e-17, 0.22529428797738604], 'false': [1.586032892321652e-17, 0.2380709457709912], 'false,true': [1.586032892321652e-17, nan], 'true': [-3.172065784643304e-17, nan]}
{'': [2.7755575615628914e-17, 0.2097110894319498], 'false': [5.890979314337566e-17, 0.23532919371759445], 'false,true': [5.890979314337566e-17, nan]}
{'': [0.0014057292245764214, 0.2343306491998752], 'false': [0.23066419243023753, 0.2384233295946167], 'true': [0.0014057292245764214, nan]}
{'': [-6.661338147750939e-18, 0.18127026347288], 'false': [0.18810637830361027, 0.16550318455721097]}
{'': [6.769652589177784e-18, 0.18097290088719764], 'false': [0.1868946690216782, 0.16815307286251854], 'false,false': [nan, 0.16815307286251854], 'false,false,false': [-8.326672684688674e-17, 0.2031632880374247], 'true': [6.769652589177784e-18, nan]}
{'': [1.734723475976807e-18, 0.17419947263393062], 'false': [4.7253133303513135e-05, 0.24180305108951422], 'false,true': [4.7253133303513135e-05, nan]}
{'': [4.270088556250602e-18, 0.1552995320609715], 'false': [3.758888648747844e-05, 0.2404463915049585], 'false,false': [nan, 0.24044639150495842]}
{'': [-5.046468293750712e-18, 0.15848480382145516], 'false': [0.1702472035353666, 0.13372835434690483], 'false,true': [nan, 0.1702472035353666], 'false,false': [3.2180377525366857e-18, 0.2347782088041833]}
{'': [-4.996003610813204e-18, 0.15263399715467235], 'false': [9.979427648228884e-06, 0.24326069361854438], 'false,false': [nan, 0.24326069361854438], 'false,false,false': [0.23627755102040734, 0.2458131487889271]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
0;false;follows(E, A).;true;true
0;false,false;follows(G, B).;true;true
1;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
1;false;follows(F, A), follows(G, B).;true;true
2;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
2;false;follows(D, B), follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, B).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
5;false;follows(F, A).;true;true
5;false,false;follows(H, B).;true;true
6;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
6;false;follows(D, B).;true;true
7;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
7;false;follows(D, B).;true;true
8;;accounttype(A, B) :- follows(C, A), follows(C, B).;true;true
8;false;follows(D, A).;true;true
8;false,false;follows(E, B).;true;true
9;;accounttype(A, B) :- follows(C, B), follows(C, A).;true;true
9;false;follows(D, B).;true;true


Refining candidate
***************************
Model training time 11.818
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.14185106490048768;  // std dev = 4.94e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( follows(D, A) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(F, A), follows(G, F) )
%   | | | then return 0.2712944750056138;  // std dev = 7.186, 213.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=88 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( follows(A, H) )
%   | | | then return 0.1642713840791042;  // std dev = 3.226, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( follows(I, B) )
%   | | then return -0.14185106490048766;  // std dev = 6.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.5308762078267839;  // std dev = 3.480, 55.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=37 */
%   | | | else return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( follows(D, A), follows(E, B) )
%   | then return -0.17494506451663105;  // std dev = 0.059, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( follows(F, A) )
%   | | then if ( follows(A, G), tweets(A, H) )
%   | | | then return 0.44506113142514175;  // std dev = 5.356, 122.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=76 */
%   | | | else return 0.39023075113533445;  // std dev = 3.746, 57.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=32 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.13522963904159674;  // std dev = 3.888, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | | | else return 0.16418971683857855;  // std dev = 3.640, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.11231637819360633;  // std dev = 2.36e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( follows(D, B), follows(E, A) )
%   | then return -0.15128866353645817;  // std dev = 0.058, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( follows(F, A) )
%   | | then if ( follows(A, G), follows(H, F) )
%   | | | then return 0.35801354776758804;  // std dev = 5.921, 147.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=89 */
%   | | | else return 0.4888472803041303;  // std dev = 2.264, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.17124349807004147;  // std dev = 4.221, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
%   | | | else return 0.07435241955636313;  // std dev = 3.054, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, B) )
%   then return -0.1328989018207095;  // std dev = 0.332, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(G, A), follows(G, E) )
%   | | | then return 0.30302239814390936;  // std dev = 5.351, 122.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=76 */
%   | | | else return 0.5586740116904778;  // std dev = 1.581, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | else if ( follows(H, A), follows(H, D) )
%   | | | then return 0.4232845875445516;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.21925936935098153;  // std dev = 3.640, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | else if ( tweets(A, I), follows(J, A) )
%   | | then return 0.1913877973669484;  // std dev = 0.500, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | else if ( follows(A, K), tweets(A, L) )
%   | | | then return 0.028317245968406377;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.32190674069493264;  // std dev = 2.490, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.09009209358455991;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( tweets(A, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( tweets(F, D), follows(A, F) )
%   | | | then return 0.0722914447978059;  // std dev = 5.968, 195.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=74 */
%   | | | else return 0.11864386966172942;  // std dev = 2.937, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | else if ( follows(G, A), tweets(G, D) )
%   | | | then return 0.11710289972411547;  // std dev = 2.637, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.08489081467187817;  // std dev = 1.849, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( follows(H, A), follows(A, H) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.2598915978794369;  // std dev = 1.783, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.057790453353985936;  // std dev = 1.517, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.05410133537781642;  // std dev = 2.802, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return 0.12885055672035584;  // std dev = 2.309, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.08297441411264433;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( follows(D, A) )
%   | then if ( follows(E, A), follows(F, E) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.12045738541518318;  // std dev = 5.196, 156.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=67 */
%   | | | else return 0.053453468875443895;  // std dev = 4.260, 116.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=39 */
%   | | else return -0.01926669158917525;  // std dev = 0.385, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( follows(G, B) )
%   | | then return -0.15502406725839926;  // std dev = 0.041, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.2115006186374621;  // std dev = 3.706, 56.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=33 */
%   | | | else return 0.3526886961468661;  // std dev = 2.065, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07687545673480944;  // std dev = 2.69e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( follows(D, B) )
%   | then return -0.13885192282831582;  // std dev = 0.087, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | else if ( follows(E, A), tweets(E, F) )
%   | | then if ( follows(A, E) )
%   | | | then return 0.16003755877801365;  // std dev = 5.757, 138.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=82 */
%   | | | else return 0.0616079300307704;  // std dev = 3.517, 49.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   | | else if ( tweets(A, G), follows(A, H) )
%   | | | then return 0.2315705285965599;  // std dev = 2.694, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | | | else return 0.16653758129965301;  // std dev = 3.357, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.07159432686939572;  // std dev = 1.67e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( follows(D, B) )
%   | then return -0.122434601580185;  // std dev = 0.082, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else if ( follows(E, A), tweets(E, F) )
%   | | then if ( tweets(A, F) )
%   | | | then return 0.11779063286402013;  // std dev = 6.002, 149.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=88 */
%   | | | else return 0.04740656193498236;  // std dev = 3.047, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.1401717404364815;  // std dev = 3.079, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | | | else return 0.21306931694938988;  // std dev = 2.727, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, B) )
%   then return -0.06697908101967942;  // std dev = 1.58e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(F, A), follows(G, F) )
%   | | | then return 0.05564177451067745;  // std dev = 5.891, 214.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=89 */
%   | | | else return -0.0022180942906344678;  // std dev = 0.904, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( tweets(A, H) )
%   | | | then return -0.06241140323671115;  // std dev = 2.785, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.029012887310526085;  // std dev = 1.041, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( follows(I, B) )
%   | | then return -0.10722000527934243;  // std dev = 0.030, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.03587528336993282;  // std dev = 4.085, 67.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=37 */
%   | | | else return 0.17698322285083945;  // std dev = 1.736, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, B), follows(C, A) )
%   then return -0.06291282030946112;  // std dev = 7.45e-09, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( follows(D, B) )
%   | then return -0.10901465685653747;  // std dev = 0.133, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else if ( follows(E, A), follows(F, E) )
%   | | then if ( follows(A, E) )
%   | | | then return 0.09331061268326804;  // std dev = 5.667, 135.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=82 */
%   | | | else return 0.1652589350013785;  // std dev = 2.906, 37.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=24 */
%   | | else if ( follows(A, G) )
%   | | | then return 0.034668194943542466;  // std dev = 4.160, 70.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   | | | else return -0.016916148878505455;  // std dev = 2.153, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.786', 'seconds']
Refined model CLL: -0.311145


******************************************
Best model found
******************************************
Results 

CLL : -0.21521 

AUC ROC : 0.910156 

AUC PR : 0.041667 

Precision : 0.041667 

Recall : 1.0 

F1 : 0.08 

Total Learning Time : 11.818 

Total Inference Time : 4.377507209777832 

Total revision time: 22.391938444137573
Best scored revision CLL: -0.310012


Results 

CLL : -0.21521 

AUC ROC : 0.910156 

AUC PR : 0.041667 

Precision : 0.041667 

Recall : 1.0 

F1 : 0.08 

Total Learning Time : 22.41340803718567 

Total Inference Time : 4.377507209777832 

