Starting experiment 39_twitter_uwcse 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.651
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.474, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2514073620658031;  // std dev = 4.608, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.485, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15489905131960452;  // std dev = 4.842, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17752533461395031;  // std dev = 0.484, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.09849133382409385;  // std dev = 0.469, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09336337965955162;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.06291477615791766;  // std dev = 4.853, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.477, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.08054463037290498;  // std dev = 4.743, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '848', 'milliseconds']
Parameter learned model CLL:-0.3634 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.608, 54, 35]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.842, 71, 35]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.484, 58, 35]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.469, 72, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.807, 68, 35]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.853, 72, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.743, 63, 35], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23860623658629113], 'false': [nan, 0.23860623658629113], 'false,false': [nan, 0.23860623658629113]}
{}
{'': [nan, 0.22116411534353805], 'false': [nan, 0.22116411534353805]}
{'': [nan, 0.23470921493814353]}
{'': [0.22010655952484884, nan]}
{'': [nan, 0.22433782637383357]}
{'': [0.2201065595248503, nan]}
{}
{'': [0.22959183673469344, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 17.582
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A) )
%   | | then if ( projectmember(E, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.14185106490048766;  // std dev = 6.66e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.40183959525913954;  // std dev = 3.425, 55.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=35 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, C) )
%   | | then return 0.6318150858629668;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5031546427922321;  // std dev = 0.789, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(G, H), tempadvisedby(H, I) )
%   | | | then return 0.5324819557669629;  // std dev = 0.820, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1952876044729611;  // std dev = 1.707, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.3659052906456415;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5328812860458111;  // std dev = 1.295, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.11231637819360635;  // std dev = 2.36e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(A), professor(B) )
%   | | then if ( publication(F, B), publication(F, A) )
%   | | | then return 0.5184343163700735;  // std dev = 0.165, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.13660036395487252;  // std dev = 3.026, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | else return -0.10159632948783634;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.39159654535463406;  // std dev = 0.160, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | | then return -0.17694785496500104;  // std dev = 0.808, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2555072849147148;  // std dev = 2.397, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.1745372341852132;  // std dev = 0.944, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.23525554912999885;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.36239434511903934;  // std dev = 0.919, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.1737312657858593;  // std dev = 2.037, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | else return -0.0851847513883968;  // std dev = 2.11e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.25253548045586943;  // std dev = 0.107, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.09073976226417271;  // std dev = 1.699, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.07706585022462324;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3123077114820496;  // std dev = 1.327, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return -0.07877675473109179;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, B), tempadvisedby(F, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.20599121163552958;  // std dev = 0.090, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.0865126374662557;  // std dev = 1.457, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.41307097019447114;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1727560747555749;  // std dev = 1.615, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else return -0.07324622576333704;  // std dev = 1.29e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then return 0.1744357282952706;  // std dev = 0.080, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(E, A) )
%   | | then if ( publication(E, F), tempadvisedby(F, G) )
%   | | | then return 0.10386604265075511;  // std dev = 0.638, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.5381670514502751;  // std dev = 0.202, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(H, B) )
%   | | | then return -0.0049011365870943084;  // std dev = 1.434, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.3333620353079252;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( publication(I, B), ta(J, A, K) )
%   | then if ( professor(B) )
%   | | then return -0.22371718993579723;  // std dev = 1.156, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( student(A), professor(B) )
%   | | then return 0.01722460833053579;  // std dev = 0.468, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else return -0.06842697784420276;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( tempadvisedby(E, B), publication(F, B) )
%   | then if ( publication(F, A) )
%   | | then return 0.15079425596461882;  // std dev = 0.071, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(G, E) )
%   | | | then return -0.13220751650797796;  // std dev = 0.815, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.18888112957266812;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(H, B), publication(I, A) )
%   | | then if ( ta(J, A, K) )
%   | | | then return -0.283761141506958;  // std dev = 1.063, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.07898150211896617;  // std dev = 0.939, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.06028008533658396;  // std dev = 1.842, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return -0.06419184008202623;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.692', 'seconds']
Refined model CLL: -0.21107


******************************************
Best model found
******************************************
Results 

CLL : -0.206257 

AUC ROC : 0.948902 

AUC PR : 0.412209 

Precision : 0.232727 

Recall : 0.820513 

F1 : 0.362606 

Total Learning Time : 17.582 

Total Inference Time : 2.673649787902832 

Total revision time: 21.680803258895875
Best scored revision CLL: -0.21107


Results 

CLL : -0.206257 

AUC ROC : 0.948902 

AUC PR : 0.412209 

Precision : 0.232727 

Recall : 0.820513 

F1 : 0.362606 

Total Learning Time : 21.698094089508057 

Total Inference Time : 2.673649787902832 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.596
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.471, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16117923812981516;  // std dev = 3.734, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.465, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19451727155903667;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11681249477574633;  // std dev = 0.462, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.11829416563824179;  // std dev = 0.469, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04793458427775038;  // std dev = 3.801, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.08414264094981645;  // std dev = 3.681, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.479, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.07381736081130677;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.060', 'seconds']
Parameter learned model CLL:-0.367959 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.734, 46, 20]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.586, 36, 20]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.462, 45, 20]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.469, 41, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.801, 52, 20]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.681, 42, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.666, 41, 20], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2112029384756653], 'false': [nan, 0.2112029384756653], 'false,false': [nan, 0.2112029384756653]}
{}
{'': [nan, 0.22959183673469385], 'false': [nan, 0.22959183673469385]}
{'': [nan, 0.21301775147928964]}
{'': [0.22037086804622444, nan]}
{'': [nan, 0.20061728395061723]}
{'': [0.21852237252861553, nan]}
{}
{'': [0.22037086804622386, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 6.846
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.4578235113507611;  // std dev = 2.321, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.6186984707990123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.3217678604028353;  // std dev = 0.727, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6623817383235999;  // std dev = 0.120, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(I, A), publication(J, B) )
%   | | | then return -0.2720933603895185;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.23039539235971032;  // std dev = 1.305, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), publication(F, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.4663830624521027;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.12350382595124602;  // std dev = 1.884, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( publication(G, A), professor(B) )
%   | | | then return -0.0634824326241425;  // std dev = 0.870, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.10732447575310308;  // std dev = 0.180, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.10293776257258755;  // std dev = 0.984, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5079504909310009;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.33760362070206656;  // std dev = 0.731, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.5056405261602381;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09283495710617336;  // std dev = 0.021, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return 0.19490087200880502;  // std dev = 0.694, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.3717671974496688;  // std dev = 0.206, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.26037886955961825;  // std dev = 0.754, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.09068720092305571;  // std dev = 0.095, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( student(A), professor(B) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.33153228379205135;  // std dev = 0.173, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.008085961916087181;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23320201989132464;  // std dev = 0.748, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return -0.08224444035560391;  // std dev = 0.089, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( publication(E, A), publication(E, B) )
%   | then if ( student(A), professor(B) )
%   | | then return 0.19478154225877542;  // std dev = 0.045, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.09191743537615774;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | then return 0.13671103417283845;  // std dev = 0.782, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return -0.24012499262952938;  // std dev = 1.185, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.06691966109463125;  // std dev = 1.113, 38.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.16606868565330035;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.061417092326870315;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( ta(E, A, F) )
%   | | then return 0.06188779684566472;  // std dev = 0.897, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.3908131280314887;  // std dev = 0.192, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.067799226983493;  // std dev = 0.005, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( tempadvisedby(E, B), student(A) )
%   | then if ( publication(F, E) )
%   | | then return 0.00481785178787042;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(G, B), publication(G, A) )
%   | | | then return 0.1349929364680348;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23672237775673913;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(H, B), publication(I, A) )
%   | | then if ( professor(B), student(A) )
%   | | | then return 0.17628195615693684;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.06960431207749365;  // std dev = 0.056, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( professor(B), student(A) )
%   | | | then return -0.22195925520023296;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06385295301662336;  // std dev = 0.003, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.156', 'seconds']
Refined model CLL: -0.194393


******************************************
Best model found
******************************************
Results 

CLL : -0.269218 

AUC ROC : 0.949046 

AUC PR : 0.303295 

Precision : 0.13767 

Recall : 0.978495 

F1 : 0.241379 

Total Learning Time : 6.846 

Total Inference Time : 1.110626459121704 

Total revision time: 9.075166790008545
Best scored revision CLL: -0.194393


Results 

CLL : -0.269218 

AUC ROC : 0.949046 

AUC PR : 0.303295 

Precision : 0.13767 

Recall : 0.978495 

F1 : 0.241379 

Total Learning Time : 9.092457620620728 

Total Inference Time : 1.110626459121704 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.51
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13939893509951237;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.458, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1306412530127617;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23109134322815536;  // std dev = 0.492, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.21421591515012814;  // std dev = 0.495, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17594485431308252;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.03416421669035604;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.458, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.027118793351627774;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.251', 'seconds']
Parameter learned model CLL:-0.432905 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.543, 23, 9]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.527, 22, 9]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.492, 13, 9]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.495, 12, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [2.268, 12, 9]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [2.471, 19, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [2.471, 19, 9], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2021484375000001], 'false': [nan, 0.2021484375000001], 'false,false': [nan, 0.2021484375000001]}
{}
{'': [nan, 0.20603537981269504], 'false': [nan, 0.20603537981269504]}
{'': [nan, 0.24173553719008298]}
{'': [0.24489795918367352, nan]}
{'': [nan, 0.2448979591836732]}
{'': [0.2181122448979589, nan]}
{}
{'': [0.21811224489795894, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 1.814
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.6194734122109542;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.3799035947890409;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.5799035947890409;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B) )
%   | | then return 0.4580388703892979;  // std dev = 0.074, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then return 0.34860128776270555;  // std dev = 0.068, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.09760605609684941;  // std dev = 0.056, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | then return 0.2964696634502757;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(H, B), ta(I, A, J) )
%   | | then return -0.19059143508638554;  // std dev = 0.719, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.10316596303390983;  // std dev = 0.884, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.09088362564482734;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( ta(D, A, E), professor(B) )
%   | then return 0.2525415954109166;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(F, B) )
%   | | then return -0.47458740214763473;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( professor(B) )
%   | | | then return 0.23733756488699398;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07732230699071299;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F) )
%   | | then return -0.121218227543245;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.23351036778804007;  // std dev = 0.163, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07684121841982428;  // std dev = 0.085, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( ta(C, A, D), tempadvisedby(E, B) )
%   then return 0.21552139207938692;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( ta(F, A, G), publication(H, B) )
%   | then return -0.26385102817790573;  // std dev = 0.896, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( professor(B), student(A) )
%   | | then return 0.05048093296833974;  // std dev = 0.807, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.06835068120595358;  // std dev = 0.011, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( tempadvisedby(E, B) )
%   | then if ( publication(F, A) )
%   | | then return 0.011242538929724127;  // std dev = 0.208, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.16520299743848924;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( professor(B) )
%   | | then return 0.18931666475678127;  // std dev = 0.149, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.06343445744797441;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.538', 'seconds']
Refined model CLL: -0.159333


******************************************
Best model found
******************************************
Results 

CLL : -0.338043 

AUC ROC : 0.90385 

AUC PR : 0.116784 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 1.814 

Total Inference Time : 0.47991037368774414 

Total revision time: 3.215440391540527
Best scored revision CLL: -0.159333


Results 

CLL : -0.338043 

AUC ROC : 0.90385 

AUC PR : 0.116784 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 3.23273122215271 

Total Inference Time : 0.47991037368774414 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.686
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.468, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20189893509951096;  // std dev = 4.654, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.483, 89.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15528222717152543;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1796773019612517;  // std dev = 0.483, 89.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.08797764654454478;  // std dev = 0.462, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08446549379658348;  // std dev = 4.736, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.0689015607195819;  // std dev = 4.736, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.462, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.07552863884749411;  // std dev = 4.666, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '936', 'milliseconds']
Parameter learned model CLL:-0.348529 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.654, 63, 33]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.725, 69, 33]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.483, 56, 33]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.462, 74, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.736, 70, 33]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.736, 70, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.666, 64, 33], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.22558593750000142], 'false': [nan, 0.22558593750000142], 'false,false': [nan, 0.22558593750000142]}
{}
{'': [nan, 0.21885813148789007], 'false': [nan, 0.21885813148789007]}
{'': [nan, 0.2333038757732613]}
{'': [0.21329373744431854, nan]}
{'': [nan, 0.2177396550098975]}
{'': [0.21773965500989786, nan]}
{}
{'': [0.22446593686895597, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 10.445
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(H, A, I) )
%   | | then if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( publication(L, A) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.14185106490048768;  // std dev = 4.94e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.5534696342695895;  // std dev = 2.601, 42.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=33 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.296438609878155;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6222292539910491;  // std dev = 0.094, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(F, B) )
%   | | then if ( publication(G, A), tempadvisedby(H, B) )
%   | | | then return 0.016853204225441;  // std dev = 1.173, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3036951241122928;  // std dev = 2.445, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | | else return -0.09751632282548126;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.11231637819360632;  // std dev = 2.98e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.2307803428845325;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | | | else return 0.4192302693690496;  // std dev = 1.554, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return -0.10159632948783627;  // std dev = 2.11e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), publication(D, B) )
%   | then if ( student(A), publication(D, A) )
%   | | then return 0.42668274386831145;  // std dev = 0.151, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.2131818373842883;  // std dev = 1.786, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0.005717553029294945;  // std dev = 1.869, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( student(B) )
%   | | then return -0.09269127618926101;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.1610204915731386;  // std dev = 0.863, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.3275861942782108;  // std dev = 0.137, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.0659256333698651;  // std dev = 2.050, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.19536812753030502;  // std dev = 1.702, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else return -0.0872416658482931;  // std dev = 0.047, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.28032635801932065;  // std dev = 0.079, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.06146393128322666;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return -0.06439356565145432;  // std dev = 2.256, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.11364342245182513;  // std dev = 1.784, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else return -0.08160780466351335;  // std dev = 0.060, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then return 0.41529178880488293;  // std dev = 0.343, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.1856039191677903;  // std dev = 1.584, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.07179012662698227;  // std dev = 1.941, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | else return -0.07498763706981042;  // std dev = 0.041, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then return 0.3275757184316067;  // std dev = 0.308, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.19907360341924818;  // std dev = 0.064, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | | then return 0.240204947935677;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.029185207516819075;  // std dev = 2.283, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   else return -0.06910745311777153;  // std dev = 0.032, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F), publication(G, B) )
%   | | then if ( ta(E, H, I), publication(J, H) )
%   | | | then return 0.04466422017779324;  // std dev = 1.759, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.3748566000379264;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | | then return 0.11050166779253372;  // std dev = 0.971, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3195489604760082;  // std dev = 0.418, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.06549757838400405;  // std dev = 0.036, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.974', 'seconds']
Refined model CLL: -0.238466


******************************************
Best model found
******************************************
Results 

CLL : -0.225954 

AUC ROC : 0.953278 

AUC PR : 0.515108 

Precision : 0.160356 

Recall : 0.9 

F1 : 0.272212 

Total Learning Time : 10.445 

Total Inference Time : 1.298652172088623 

Total revision time: 13.209880071640015
Best scored revision CLL: -0.238466


Results 

CLL : -0.225954 

AUC ROC : 0.953278 

AUC PR : 0.515108 

Precision : 0.160356 

Recall : 0.9 

F1 : 0.272212 

Total Learning Time : 13.227170902252197 

Total Inference Time : 1.298652172088623 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.543
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.447, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15444523139580865;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.457, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16481997152352412;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09538529619712464;  // std dev = 0.449, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.19984877950876587;  // std dev = 0.490, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12957176991614008;  // std dev = 3.191, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.08973788125943669;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.447, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.06478517857487529;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.183', 'seconds']
Parameter learned model CLL:-0.380699 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.355, 38, 16]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.283, 33, 16]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.449, 41, 16]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.49, 24, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.191, 28, 16]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.23, 30, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.249, 31, 16], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.20850480109739317], 'false': [nan, 0.20850480109739317], 'false,false': [nan, 0.20850480109739317]}
{}
{'': [nan, 0.2199083715118705], 'false': [nan, 0.2199083715118705]}
{'': [nan, 0.20190827947060688]}
{'': [0.2399999999999997, nan]}
{'': [nan, 0.23140495867768573]}
{'': [0.22684310018903633, nan]}
{}
{'': [0.22453598913535489, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 17.701
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, A) )
%   | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( ta(H, I, F), publication(J, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( student(A), professor(B) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(B, G), student(A) )
%   | | | then return 0.3679453857230008;  // std dev = 2.392, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return -0.10159890941296969;  // std dev = 0.951, 35.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then if ( ta(F, C, E) )
%   | | then return 0.18555707596899157;  // std dev = 1.037, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(G, H, E), publication(I, H) )
%   | | | then return 0.46877227944392813;  // std dev = 0.848, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3617314445321979;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(J, B) )
%   | | then return 0.3747413141541867;  // std dev = 0.466, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.7087264047844247;  // std dev = 0.169, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11471589990932383;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.136978792846049;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.504111973788971;  // std dev = 0.920, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.10357061478600477;  // std dev = 1.29e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tempadvisedby(D, B), student(A) )
%   | then if ( publication(E, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.6048552168088127;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.44879497490721854;  // std dev = 0.133, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.012154510653296239;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( professor(B), student(A) )
%   | | then if ( ta(F, A, G) )
%   | | | then return -0.07565155312797944;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.25024498482938123;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.09434189616964665;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( hasposition(B, E), student(A) )
%   | then if ( publication(F, B), publication(F, A) )
%   | | then return 0.45307861550218387;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.3463041224757335;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15724174343962505;  // std dev = 1.206, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( professor(B), student(A) )
%   | | then return -0.16905564870606088;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.08658384114522505;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( ta(D, A, E), projectmember(F, B) )
%   | | then return -0.31172669723666663;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.228983681791602;  // std dev = 0.896, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.4372602755000744;  // std dev = 0.199, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07997680501650083;  // std dev = 1.05e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( projectmember(E, B), student(A) )
%   | then return 0.25864105181308716;  // std dev = 0.131, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.16547455039014344;  // std dev = 0.420, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(G, B), student(A) )
%   | | | then return -0.23034835180473928;  // std dev = 1.561, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.05527871034365901;  // std dev = 0.919, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25297837244875154;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( projectmember(D, B), ta(E, A, F) )
%   | | then return -0.3271487879652933;  // std dev = 0.787, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.1938815105710172;  // std dev = 0.872, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.02613610050045832;  // std dev = 1.049, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07129704386358003;  // std dev = 0.016, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( publication(E, B), ta(F, A, G) )
%   | then if ( ta(H, I, G), publication(J, I) )
%   | | then if ( ta(F, I, K) )
%   | | | then return -0.004481268376148456;  // std dev = 0.796, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24674227059778361;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3263360689116095;  // std dev = 0.084, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(L, A, M), professor(B) )
%   | | then return -0.46046091368044423;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(N, B), professor(B) )
%   | | | then return -0.15251367661765305;  // std dev = 1.083, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.020602173861249046;  // std dev = 0.646, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.849', 'seconds']
Refined model CLL: -0.258074


******************************************
Best model found
******************************************
Results 

CLL : -0.266608 

AUC ROC : 0.945437 

AUC PR : 0.19419 

Precision : 0.121483 

Recall : 0.979381 

F1 : 0.216155 

Total Learning Time : 17.701 

Total Inference Time : 0.9888153076171875 

Total revision time: 19.762780946731567
Best scored revision CLL: -0.258074


Results 

CLL : -0.266608 

AUC ROC : 0.945437 

AUC PR : 0.19419 

Precision : 0.121483 

Recall : 0.979381 

F1 : 0.216155 

Total Learning Time : 19.78007177734375 

Total Inference Time : 0.9888153076171875 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.734
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.485, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15987307303054538;  // std dev = 4.944, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.478, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13927634558422414;  // std dev = 4.944, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1542397646613995;  // std dev = 0.473, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.1824638747303024;  // std dev = 0.487, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12666875234296995;  // std dev = 4.716, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.06855180731605254;  // std dev = 4.842, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.474, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.097245876834913;  // std dev = 4.687, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '903', 'milliseconds']
Parameter learned model CLL:-0.365923 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.944, 81, 35]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.944, 81, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.473, 69, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.487, 55, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.716, 61, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.842, 71, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.687, 59, 35], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.21068668252080994], 'false': [nan, 0.21068668252080994], 'false,false': [nan, 0.21068668252080994]}
{}
{'': [nan, 0.210686682520809], 'false': [nan, 0.210686682520809]}
{'': [nan, 0.2232803254437871]}
{'': [0.23765432098765432, nan]}
{'': [nan, 0.23166232638888784]}
{'': [0.22116411534353894, nan]}
{}
{'': [0.23370303304662665, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 7.064
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(I, B) )
%   | | then if ( publication(J, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.324815601766179;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   else return -0.14185106490048774;  // std dev = 2.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.4740058642934808;  // std dev = 3.137, 50.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=35 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.6271433436820454;  // std dev = 0.088, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, E) )
%   | | | then return -0.15598461610932565;  // std dev = 0.904, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.12494923333920942;  // std dev = 1.458, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.7210243031454266;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.30321310954992514;  // std dev = 2.179, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   else return -0.11231637819360639;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(A), professor(B) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.37034276537951355;  // std dev = 1.870, 30.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | | else return 0.24533741851896076;  // std dev = 2.006, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.2007523415892007;  // std dev = 0.828, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.38567649295859957;  // std dev = 0.098, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(G, A) )
%   | | | then return -0.042619536677240354;  // std dev = 1.804, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.2422398432505086;  // std dev = 2.152, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( projectmember(E, B) )
%   | | then return 0.4580729514402442;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, B), publication(F, A) )
%   | | | then return 0.3108892462366481;  // std dev = 0.122, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.0727369164098298;  // std dev = 2.716, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( publication(G, A), publication(G, B) )
%   | | | then return 0.23110311196461603;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.12618933346141478;  // std dev = 1.043, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.1414232020946498;  // std dev = 0.929, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2633464638577273;  // std dev = 1.924, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), ta(F, A, G) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.2259900890234448;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16470284075302924;  // std dev = 1.036, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(H, B), publication(H, A) )
%   | | | then return 0.03218192957519505;  // std dev = 1.284, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.25228280443812034;  // std dev = 1.830, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | else return -0.07324622576333704;  // std dev = 1.29e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), tempadvisedby(D, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.1878516790521814;  // std dev = 0.047, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(E, A) )
%   | | | then return -0.4274381476016406;  // std dev = 0.183, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.02443003459151813;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( ta(F, A, G) )
%   | | then return 0.3937881169999463;  // std dev = 0.206, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.29737634856095296;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07938191739857496;  // std dev = 1.598, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else return -0.0684269778442027;  // std dev = 1.29e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( tempadvisedby(E, B), student(A) )
%   | then if ( publication(F, E) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.15542709137496152;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.3175633238835586;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(H, A), ta(I, E, J) )
%   | | | then return 0.037541176813108104;  // std dev = 0.415, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2828669877237566;  // std dev = 0.298, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( ta(K, A, L), publication(M, A) )
%   | | then if ( professor(B) )
%   | | | then return -0.29643212021445436;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.028584974472462568;  // std dev = 1.747, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return -0.06419184008202623;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.238', 'seconds']
Refined model CLL: -0.233315


******************************************
Best model found
******************************************
Results 

CLL : -0.229656 

AUC ROC : 0.948084 

AUC PR : 0.334231 

Precision : 0.200581 

Recall : 0.884615 

F1 : 0.327014 

Total Learning Time : 7.064 

Total Inference Time : 1.5379467010498047 

Total revision time: 10.163973472595215
Best scored revision CLL: -0.233315


Results 

CLL : -0.229656 

AUC ROC : 0.948084 

AUC PR : 0.334231 

Precision : 0.200581 

Recall : 0.884615 

F1 : 0.327014 

Total Learning Time : 10.24489154624939 

Total Inference Time : 1.5379467010498047 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.556
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.462, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21529179224236922;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.479, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19350664550431437;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17814248700566107;  // std dev = 0.485, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.10982282040570433;  // std dev = 0.473, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04937345372286441;  // std dev = 3.746, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.0640966180156098;  // std dev = 3.681, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.465, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.01889680912435362;  // std dev = 3.769, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.103', 'seconds']
Parameter learned model CLL:-0.374968 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.586, 36, 20]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.568, 35, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.485, 33, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.473, 39, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.746, 47, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.681, 42, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.769, 49, 20], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.22959183673469347], 'false': [nan, 0.22959183673469347], 'false,false': [nan, 0.22959183673469347]}
{}
{'': [nan, 0.23140495867768554], 'false': [nan, 0.23140495867768554]}
{'': [nan, 0.23495906016375948]}
{'': [0.22407354208560737, nan]}
{'': [nan, 0.2094007574069948]}
{'': [0.2185223725286158, nan]}
{}
{'': [0.20583910943079228, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 5.836
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.5080700365755022;  // std dev = 2.101, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.6067761807219005;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15370095059863004;  // std dev = 1.033, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.6324066953640725;  // std dev = 0.169, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.08105774952741042;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.1123163781936064;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), publication(F, B) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.5449008257238179;  // std dev = 0.277, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2627263443439606;  // std dev = 1.153, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( publication(I, A), professor(B) )
%   | | | then return 0.04717268983473962;  // std dev = 0.760, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.11171251258381354;  // std dev = 0.272, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( ta(D, A, E), professor(B) )
%   | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then return 0.32410780949456924;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4595894267083742;  // std dev = 0.199, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(I, B), publication(I, A) )
%   | | then if ( tempadvisedby(J, B) )
%   | | | then return 0.14276092180664599;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2836902606394695;  // std dev = 0.461, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | | then return 0.08369026063946958;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.10274927086970626;  // std dev = 0.946, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, B), publication(E, A) )
%   | | then return 0.31746006741143196;  // std dev = 0.127, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( ta(F, A, G), publication(H, A) )
%   | | | then return 0.40646173024460913;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12656874613911195;  // std dev = 1.343, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else return -0.09043440403081118;  // std dev = 0.107, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( ta(D, A, E), publication(F, A) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.0693944391382251;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.029264725317387774;  // std dev = 0.597, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(H, B), publication(I, A) )
%   | | | then return 0.05818611892622759;  // std dev = 0.635, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.31668562535670985;  // std dev = 0.408, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.08101429434152936;  // std dev = 0.070, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( tempadvisedby(E, B), student(A) )
%   | then if ( ta(F, E, G), ta(H, A, I) )
%   | | then return -0.11977170659344161;  // std dev = 0.839, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.3015530152372721;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07966493937142542;  // std dev = 1.006, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( publication(L, A), publication(L, B) )
%   | | then if ( professor(B), student(A) )
%   | | | then return 0.1976565574227732;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11100150670200652;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( professor(B), student(A) )
%   | | | then return -0.1868055149531133;  // std dev = 1.323, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.07139056200256544;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, A, E), ta(F, C, G) )
%   | | then return -0.04741794274144173;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(H, C, I) )
%   | | | then return 0.2590701178744037;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10731176694521781;  // std dev = 0.473, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(J, A), publication(J, B) )
%   | | then return 0.1681765972135681;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4082597850208689;  // std dev = 0.305, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07024437662533098;  // std dev = 0.082, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), publication(E, A) )
%   | then if ( publication(E, F), professor(F) )
%   | | then if ( publication(E, B), student(A) )
%   | | | then return 0.17739262742017445;  // std dev = 0.106, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.2974295600909311;  // std dev = 0.452, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.31763300676213435;  // std dev = 0.282, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(G, B), student(A) )
%   | | then if ( ta(H, A, I) )
%   | | | then return -0.05938306996627368;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20965078058952424;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( professor(B) )
%   | | | then return -0.2329121135697113;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06331671225224265;  // std dev = 0.023, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.369', 'seconds']
Refined model CLL: -0.181967


******************************************
Best model found
******************************************
Results 

CLL : -0.231743 

AUC ROC : 0.945294 

AUC PR : 0.221042 

Precision : 0.169102 

Recall : 0.870968 

F1 : 0.283217 

Total Learning Time : 5.836 

Total Inference Time : 0.9670846462249756 

Total revision time: 7.891456644058228
Best scored revision CLL: -0.181967


Results 

CLL : -0.231743 

AUC ROC : 0.945294 

AUC PR : 0.221042 

Precision : 0.169102 

Recall : 0.870968 

F1 : 0.283217 

Total Learning Time : 7.972374717712403 

Total Inference Time : 0.9670846462249756 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.478
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.458, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23314893509951237;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.458, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.277334239218108;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09441022326950624;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.26765313166249616;  // std dev = 0.500, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06271221060103599;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.13222171528314575;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.476, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return -0.024642074336843917;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.155', 'seconds']
Parameter learned model CLL:-0.452724 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.372, 15, 9]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.225, 11, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.463, 20, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.5, 9, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [2.426, 17, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [2.268, 12, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [2.51, 21, 9], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23437500000000003], 'false': [nan, 0.23437500000000003], 'false,false': [nan, 0.23437500000000003]}
{}
{'': [nan, 0.2475000000000001], 'false': [nan, 0.2475000000000001]}
{'': [nan, 0.21403091557669468]}
{'': [0.24999999999999975, nan]}
{'': [nan, 0.22633136094674533]}
{'': [0.24489795918367332, nan]}
{}
{'': [0.20999999999999988, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 2.119
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.5376552303927724;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.5996953357065603;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3496953357065603;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.2762168204962022;  // std dev = 0.854, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5136217531377891;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.10159632948783631;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.38421009381343857;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return -0.22186979196256143;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22052764078219403;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( student(A), professor(B) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then return 0.2981911362234656;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3636227863209805;  // std dev = 0.149, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.09507021895392892;  // std dev = 0.098, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( student(A), professor(B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return -0.010262200743498151;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.25654666411986554;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.09385254758804024;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( publication(G, B), publication(H, A) )
%   | | then return -0.1392277676278605;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0780623373292674;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B) )
%   | then if ( publication(E, A) )
%   | | then return -0.09089642943848508;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.10745399582830106;  // std dev = 0.756, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24284874719280347;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07242544388792949;  // std dev = 0.004, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then return 0.2875536495891139;  // std dev = 0.186, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( ta(D, A, E) )
%   | then if ( ta(F, G, E), tempadvisedby(G, H) )
%   | | then return -0.2506691200312665;  // std dev = 0.633, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.06789660668267938;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.02174004218587115;  // std dev = 0.220, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( professor(B), student(A) )
%   | | then return 0.21574753606213481;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07164529833236084;  // std dev = 0.051, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return 0.06300026442626883;  // std dev = 0.785, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.18478404118494998;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.062144642935483455;  // std dev = 0.022, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.686', 'seconds']
Refined model CLL: -0.170831


******************************************
Best model found
******************************************
Results 

CLL : -0.327256 

AUC ROC : 0.905669 

AUC PR : 0.119057 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.119 

Total Inference Time : 0.5186142921447754 

Total revision time: 3.5494466991424565
Best scored revision CLL: -0.170831


Results 

CLL : -0.327256 

AUC ROC : 0.905669 

AUC PR : 0.119057 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 3.6303647727966313 

Total Inference Time : 0.5186142921447754 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.617
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.471, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15544623239680821;  // std dev = 4.816, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.463, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20894013417246182;  // std dev = 4.557, 89.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21518188567709676;  // std dev = 0.491, 81.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.08346027480381267;  // std dev = 0.463, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07140887823564074;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.083958314083468;  // std dev = 4.666, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.470, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.07849025446601178;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '908', 'milliseconds']
Parameter learned model CLL:-0.359849 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.816, 78, 33]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.557, 56, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.491, 48, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.463, 73, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.757, 72, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.666, 64, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.628, 61, 33], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.20891161431702107], 'false': [nan, 0.20891161431702107], 'false,false': [nan, 0.20891161431702107]}
{}
{'': [nan, 0.2333038757732603], 'false': [nan, 0.2333038757732603]}
{'': [nan, 0.2414266117969818]}
{'': [0.21440014239942953, nan]}
{'': [nan, 0.2155102040816325]}
{'': [0.22446593686895489, nan]}
{}
{'': [0.22781801720235365, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 7.887
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(G, H), tempadvisedby(H, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.40360348055405776;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   else return -0.14185106490048774;  // std dev = 2.36e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.5425064656218538;  // std dev = 2.693, 43.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=33 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.6129843870795925;  // std dev = 0.078, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(C, D), ta(E, D, F) )
%   | | | then return 0.3545752446631492;  // std dev = 2.004, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.5775615660960318;  // std dev = 0.937, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.06813648380027508;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.11231637819360632;  // std dev = 2.98e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, B), publication(F, A) )
%   | | | then return 0.3931486429727196;  // std dev = 0.934, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.16702707153463944;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | | else return -0.10159632948783631;  // std dev = 2.11e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( student(A), professor(B) )
%   | then if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.3703760091661034;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.0867217648582286;  // std dev = 1.903, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.5544752874141389;  // std dev = 0.179, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.323336603810058;  // std dev = 0.826, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( publication(E, B), professor(B) )
%   | then if ( professor(A) )
%   | | then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( publication(E, F), student(F) )
%   | | | then return 0.26393452037657367;  // std dev = 1.976, 35.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | | | else return -0.124649092337065;  // std dev = 1.050, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( professor(B) )
%   | | then return -0.2988046185083818;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.0851847513883968;  // std dev = 2.17e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( ta(D, A, E) )
%   | | then if ( publication(F, A), publication(G, B) )
%   | | | then return 0.13140173649542092;  // std dev = 1.135, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.27053934344173447;  // std dev = 1.382, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( publication(H, B), publication(H, A) )
%   | | | then return 0.22792871825852531;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.0216773120512451;  // std dev = 1.562, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else return -0.07820981876203652;  // std dev = 0.020, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( publication(E, B), publication(E, A) )
%   | then if ( professor(B), student(A) )
%   | | then return 0.20206583004520168;  // std dev = 0.070, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.07328471937860344;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( ta(F, A, G), professor(B) )
%   | | then if ( publication(H, A) )
%   | | | then return 0.20000453002415922;  // std dev = 0.944, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.05444164482971096;  // std dev = 2.059, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( publication(I, A), professor(B) )
%   | | | then return -0.1979102995090283;  // std dev = 1.186, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.05714009795945531;  // std dev = 1.168, 51.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), ta(D, A, E) )
%   then if ( publication(F, A) )
%   | then return 0.2850580001988893;  // std dev = 0.229, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.10401012901181118;  // std dev = 1.162, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( publication(G, B), publication(G, A) )
%   | then if ( professor(B), student(A) )
%   | | then return 0.16238164533890634;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.06846067094085388;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( tempadvisedby(H, B), publication(I, A) )
%   | | then return -0.2135909868191613;  // std dev = 0.339, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( publication(J, A), ta(K, A, L) )
%   | | | then return 0.04065342421547528;  // std dev = 0.461, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.08929789309481383;  // std dev = 2.306, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.14571835389164117;  // std dev = 0.031, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( ta(F, A, G), publication(H, A) )
%   | | | then return 0.12889028181840584;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.01131182328883333;  // std dev = 2.498, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else return -0.06322072784105094;  // std dev = 0.039, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.917', 'seconds']
Refined model CLL: -0.229758


******************************************
Best model found
******************************************
Results 

CLL : -0.195691 

AUC ROC : 0.950393 

AUC PR : 0.39918 

Precision : 0.205479 

Recall : 0.75 

F1 : 0.322581 

Total Learning Time : 7.887 

Total Inference Time : 1.621769666671753 

Total revision time: 10.84480934524536
Best scored revision CLL: -0.229758


Results 

CLL : -0.195691 

AUC ROC : 0.950393 

AUC PR : 0.39918 

Precision : 0.205479 

Recall : 0.75 

F1 : 0.322581 

Total Learning Time : 10.925727418899536 

Total Inference Time : 1.621769666671753 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.551
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.479, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2137044906550679;  // std dev = 3.211, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.466, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1500942686630695;  // std dev = 3.298, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14829123432386662;  // std dev = 0.474, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.09148553368465356;  // std dev = 0.462, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08788810645862245;  // std dev = 3.298, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.09228167609133345;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.476, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.089797972320393;  // std dev = 3.211, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.163', 'seconds']
Parameter learned model CLL:-0.37464 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.211, 29, 16]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.298, 34, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.474, 31, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.462, 36, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.298, 34, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.249, 31, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.211, 29, 16], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2291358024691353], 'false': [nan, 0.2291358024691353], 'false,false': [nan, 0.2291358024691353]}
{}
{'': [nan, 0.21760000000000052], 'false': [nan, 0.21760000000000052]}
{'': [nan, 0.22453598913535547]}
{'': [0.21301775147928945, nan]}
{'': [nan, 0.2176000000000005]}
{'': [0.224535989135356, nan]}
{}
{'': [0.2291358024691356, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 6.047
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( publication(F, G), inphase(G, H) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.3872306101669095;  // std dev = 2.351, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, A, E), ta(D, C, F) )
%   | | then return 0.6460140326428205;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.49247994398432604;  // std dev = 0.910, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.20364682534286524;  // std dev = 1.501, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.6626620291343632;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.1123163781936064;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( tempadvisedby(F, B), student(A) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.5018845282256592;  // std dev = 0.869, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.2318290704327797;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.08114930677304177;  // std dev = 1.290, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(B, D), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.3913699436364045;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20216789977715383;  // std dev = 1.397, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return 0.4889669377970349;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(G, A, H) )
%   | | then if ( ta(I, J, H), publication(K, J) )
%   | | | then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.22756009966073454;  // std dev = 0.330, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( professor(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.05615710620713383;  // std dev = 0.516, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( student(A), tempadvisedby(E, B) )
%   | then if ( ta(F, A, G), ta(H, E, G) )
%   | | then return 0.055748350125781644;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( projectmember(I, B), publication(J, B) )
%   | | | then return 0.1068161252975655;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.29448749672360086;  // std dev = 0.908, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( professor(B), publication(K, A) )
%   | | then return -8.132846597104226E-4;  // std dev = 0.377, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( ta(L, A, M), professor(B) )
%   | | | then return -0.09157591352767057;  // std dev = 0.928, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0841158839204802;  // std dev = 0.783, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(B, D), student(A) )
%   | then if ( publication(E, A), ta(F, A, G) )
%   | | then return -0.05058606370253419;  // std dev = 0.711, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.39365732181255225;  // std dev = 0.149, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.17257381432712915;  // std dev = 0.859, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( ta(J, A, K) )
%   | | then if ( ta(L, B, M) )
%   | | | then return -0.07576883060320284;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.2568369212112728;  // std dev = 0.357, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( professor(B) )
%   | | | then return 0.016102976499185483;  // std dev = 0.541, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.08499420929747276;  // std dev = 0.022, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | then if ( projectmember(H, B) )
%   | | then return -0.3219591429171859;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.010921813889781732;  // std dev = 0.583, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2989776705465293;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( projectmember(J, B) )
%   | | then return 0.1456559066315327;  // std dev = 0.419, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(K, B), student(A) )
%   | | | then return -0.3721370170677817;  // std dev = 0.755, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.06877939972036977;  // std dev = 1.205, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), projectmember(C, B) )
%   then return 0.3066859597158421;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( professor(B), ta(D, A, E) )
%   | then if ( tempadvisedby(F, B), ta(G, F, E) )
%   | | then return -0.1610561601675893;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.23048415861958035;  // std dev = 0.099, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13578974157530455;  // std dev = 0.443, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( student(A), publication(I, A) )
%   | | then return 0.19699315430203926;  // std dev = 0.327, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(J, B), student(A) )
%   | | | then return -0.3259639530057047;  // std dev = 0.534, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.03827484111752438;  // std dev = 0.580, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( hasposition(B, E), student(A) )
%   | then if ( ta(F, A, G) )
%   | | then if ( ta(H, I, G), publication(J, I) )
%   | | | then return 0.22648837384050866;  // std dev = 0.147, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2850754237241644;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.12238999098748621;  // std dev = 0.666, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( ta(K, A, L) )
%   | | then if ( professor(B) )
%   | | | then return -0.38358538666513436;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06517692917448836;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( professor(A) )
%   | | | then return -0.07279390490004341;  // std dev = 0.026, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.0457131190212267;  // std dev = 0.545, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.360', 'seconds']
Refined model CLL: -0.266813


******************************************
Best model found
******************************************
Results 

CLL : -0.247699 

AUC ROC : 0.941312 

AUC PR : 0.182335 

Precision : 0.148148 

Recall : 0.989691 

F1 : 0.257718 

Total Learning Time : 6.047 

Total Inference Time : 0.8463277816772461 

Total revision time: 8.01702184486389
Best scored revision CLL: -0.266813


Results 

CLL : -0.247699 

AUC ROC : 0.941312 

AUC PR : 0.182335 

Precision : 0.148148 

Recall : 0.989691 

F1 : 0.257718 

Total Learning Time : 8.097939918518065 

Total Inference Time : 0.8463277816772461 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.822
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.487, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2189736773675522;  // std dev = 4.730, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.470, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17934982118325357;  // std dev = 4.770, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1326384684937929;  // std dev = 0.470, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.09031254382001339;  // std dev = 0.462, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1112532194060871;  // std dev = 4.782, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.10125877143257292;  // std dev = 4.743, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.456, 119.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.08518886696109494;  // std dev = 4.730, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.415', 'seconds']
Parameter learned model CLL:-0.363353 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.73, 62, 35]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.77, 65, 35]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.47, 71, 35]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.462, 78, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.782, 66, 35]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.743, 63, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.73, 62, 35], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23063024763524434], 'false': [nan, 0.23063024763524434], 'false,false': [nan, 0.23063024763524434]}
{}
{'': [nan, 0.22749999999999987], 'false': [nan, 0.22749999999999987]}
{'': [nan, 0.22116411534353908]}
{'': [0.21379904456104676, nan]}
{'': [nan, 0.2264483874129979]}
{'': [0.22959183673469488, nan]}
{}
{'': [0.23063024763524362, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 28.237
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then if ( ta(F, H, I), publication(J, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4692600462106234;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else return -0.1418510649004877;  // std dev = 4.21e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.4926571173233971;  // std dev = 2.970, 47.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   | | | else return -0.12544463852839136;  // std dev = 1.49e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.6167056931779259;  // std dev = 0.084, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.3895524293188317;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.23557917993218014;  // std dev = 1.372, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.6104475706811683;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3158064885376765;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(A), professor(B) )
%   | | then if ( publication(F, B), publication(F, A) )
%   | | | then return 0.3980130246788234;  // std dev = 0.977, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.17321749478288848;  // std dev = 2.891, 36.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.3689619139801232;  // std dev = 0.090, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(E, A) )
%   | | | then return -0.15022546609469056;  // std dev = 1.188, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.3330644118774601;  // std dev = 1.530, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else if ( projectmember(F, B) )
%   | | then return 0.41715313065269854;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, A), student(A) )
%   | | | then return -0.18013960741631535;  // std dev = 1.171, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | | else return -0.043742120645338556;  // std dev = 1.264, 45.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, B) )
%   | | then if ( publication(E, A), ta(F, A, G) )
%   | | | then return -0.023027647536891793;  // std dev = 1.057, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.28083738290052085;  // std dev = 1.623, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | else if ( projectmember(H, B), publication(I, A) )
%   | | | then return 0.32046748824731075;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.003622921173475897;  // std dev = 1.802, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return -0.089898839945122;  // std dev = 0.111, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( student(A), professor(B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.25071772822857785;  // std dev = 0.111, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | | then return -0.24803270655276471;  // std dev = 1.091, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.15499752136093184;  // std dev = 2.331, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | else return -0.08278044304821584;  // std dev = 0.094, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.19070685035008084;  // std dev = 0.550, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.04295835948769726;  // std dev = 1.402, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.12906458599257217;  // std dev = 1.361, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.4432721265850604;  // std dev = 0.195, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.07539703965827195;  // std dev = 0.078, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( projectmember(C, B) )
%   then return 0.2652072124784761;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( publication(D, B), publication(D, A) )
%   | then if ( professor(B) )
%   | | then return 0.1804042482427844;  // std dev = 0.113, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.0666571013012412;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then if ( ta(H, A, I) )
%   | | | then return -0.42834129424292855;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.19540004180922227;  // std dev = 1.044, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | | then return -0.25943666979458113;  // std dev = 0.359, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.020039513902610485;  // std dev = 2.210, 66.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B) )
%   | | then if ( publication(F, B), publication(F, A) )
%   | | | then return 0.14973444853983697;  // std dev = 0.067, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1159912462584965;  // std dev = 2.126, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return 0.07103348729718975;  // std dev = 1.015, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3777801286622449;  // std dev = 0.308, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.06644818331116692;  // std dev = 0.062, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.753', 'seconds']
Refined model CLL: -0.218326


******************************************
Best model found
******************************************
Results 

CLL : -0.211432 

AUC ROC : 0.950792 

AUC PR : 0.410062 

Precision : 0.236607 

Recall : 0.679487 

F1 : 0.350993 

Total Learning Time : 28.237 

Total Inference Time : 5.693531274795532 

Total revision time: 35.843132242202756
Best scored revision CLL: -0.218326


Results 

CLL : -0.211432 

AUC ROC : 0.950792 

AUC PR : 0.410062 

Precision : 0.236607 

Recall : 0.679487 

F1 : 0.350993 

Total Learning Time : 35.87518475914001 

Total Inference Time : 5.693531274795532 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.573
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.467, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20902612808196822;  // std dev = 3.603, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.469, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20112344627767556;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12314900854456581;  // std dev = 0.467, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.08786986972679257;  // std dev = 0.462, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08219796529550409;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.100506001997563;  // std dev = 3.603, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.469, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.07512411997749503;  // std dev = 3.620, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.415', 'seconds']
Parameter learned model CLL:-0.386153 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.603, 37, 20]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.549, 34, 20]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.467, 42, 20]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.462, 45, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.695, 43, 20]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.603, 37, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.62, 38, 20], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.22776238842720795], 'false': [nan, 0.22776238842720795], 'false,false': [nan, 0.22776238842720795]}
{}
{'': [nan, 0.23319615912208538], 'false': [nan, 0.23319615912208538]}
{'': [nan, 0.2185223725286161]}
{'': [0.2130177514792896, nan]}
{'': [nan, 0.216679264298312]}
{'': [0.2277623884272081, nan]}
{}
{'': [0.22592152199762194, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 7.635
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(D, F), publication(E, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.14185106490048777;  // std dev = 1.05e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.49532695574188856;  // std dev = 2.172, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return -0.12544463852839133;  // std dev = 1.83e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(D, A), tempadvisedby(E, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.6098124926505653;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.10848428502937009;  // std dev = 0.970, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.6380503127856947;  // std dev = 0.084, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( student(B) )
%   | then return -0.11231637819360643;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 7.500057454369324E-4;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(A), professor(B) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.33707616095417847;  // std dev = 1.362, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.4947250185221253;  // std dev = 0.199, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.1063693267958803;  // std dev = 0.124, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), publication(D, B) )
%   | then if ( student(A) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.35379529355777106;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.14944593795509292;  // std dev = 1.632, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return -0.17445424199212187;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( student(B) )
%   | | then return -0.09229064862210568;  // std dev = 1.67e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.18036692694139023;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, A) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.29856096527192544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08279975408180028;  // std dev = 1.068, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.3748696937230336;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.18168769778146127;  // std dev = 1.129, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return -0.0851528171452959;  // std dev = 0.011, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), publication(D, B) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then return 0.3779631097137354;  // std dev = 0.302, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(D, A) )
%   | | | then return 0.23226680382476386;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.02728628506023004;  // std dev = 1.198, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( publication(H, A), professor(B) )
%   | | then return -0.015260833376680327;  // std dev = 0.719, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(I, B) )
%   | | | then return -0.07846234041850077;  // std dev = 5.27e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.12493370416275654;  // std dev = 0.348, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), ta(E, A, F) )
%   | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | then return 0.20613071650776582;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3350328579783652;  // std dev = 0.230, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( student(A), professor(B) )
%   | | then if ( tempadvisedby(J, B), publication(K, A) )
%   | | | then return -0.17136761989278984;  // std dev = 0.953, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.27546929579779983;  // std dev = 0.329, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.07686926029737066;  // std dev = 0.116, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B) )
%   then if ( ta(D, C, E) )
%   | then return 0.21563476164213224;  // std dev = 0.094, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.31733814965539053;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( publication(F, B), publication(F, A) )
%   | then return 0.1491625188440508;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(G, A, H), professor(B) )
%   | | then return -0.33580896890559836;  // std dev = 1.048, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( professor(B), publication(I, A) )
%   | | | then return 0.051804873971824816;  // std dev = 0.502, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.06700166366220019;  // std dev = 0.007, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B) )
%   | | then if ( publication(F, A), ta(G, E, H) )
%   | | | then return -0.09896717852442023;  // std dev = 0.800, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09507078034076046;  // std dev = 1.001, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( publication(I, B), publication(I, A) )
%   | | | then return 0.1312060176408875;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.37275428051460224;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06787109608814713;  // std dev = 0.143, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.799', 'seconds']
Refined model CLL: -0.207261


******************************************
Best model found
******************************************
Results 

CLL : -0.290496 

AUC ROC : 0.943571 

AUC PR : 0.239026 

Precision : 0.128388 

Recall : 0.967742 

F1 : 0.2267 

Total Learning Time : 7.635 

Total Inference Time : 0.9574532508850098 

Total revision time: 9.755730684280396
Best scored revision CLL: -0.207261


Results 

CLL : -0.290496 

AUC ROC : 0.943571 

AUC PR : 0.239026 

Precision : 0.128388 

Recall : 0.967742 

F1 : 0.2267 

Total Learning Time : 9.787783201217652 

Total Inference Time : 0.9574532508850098 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.525
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.467, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10814893509951237;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13479001848091704;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21723557553154293;  // std dev = 0.488, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.20155214781751668;  // std dev = 0.492, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06770730559187363;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.11970454179755946;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.433, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.08128839473541113;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.830', 'seconds']
Parameter learned model CLL:-0.428306 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.598, 27, 9]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.527, 22, 9]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.488, 14, 9]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.492, 13, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [2.491, 20, 9]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [2.372, 15, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [2.4, 16, 9], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.1875000000000001], 'false': [nan, 0.1875000000000001], 'false,false': [nan, 0.1875000000000001]}
{}
{'': [nan, 0.20603537981269482], 'false': [nan, 0.20603537981269482]}
{'': [nan, 0.23818525519848768]}
{'': [0.24173553719008256, nan]}
{'': [nan, 0.21403091557669454]}
{'': [0.23437499999999986, nan]}
{}
{'': [0.23040000000000002, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 1.869
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B) )
%   | | | then return 0.6381200704202566;  // std dev = 0.906, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.25514353705310727;  // std dev = 1.179, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.42181020371977396;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1195464773479404;  // std dev = 0.098, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B) )
%   | | then return 0.5073815795843494;  // std dev = 0.123, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.1009383039994063;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.41440658033733885;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.11809118479851952;  // std dev = 0.434, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return -0.10505036676051234;  // std dev = 0.187, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B) )
%   | then return 0.3338685405302782;  // std dev = 0.098, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.0837210160964345;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then return 0.2644280115858794;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return -0.2489617817972286;  // std dev = 0.210, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07751841678670247;  // std dev = 9.13e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( student(A), professor(B) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return 0.017585430041250814;  // std dev = 0.876, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.219219092931685;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(F, A) )
%   | | then return -0.21185186437488301;  // std dev = 0.171, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07062937544686167;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return -0.009090716245841257;  // std dev = 0.915, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.19596462213456012;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06486188841240895;  // std dev = 0.015, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), ta(E, A, F) )
%   | then return 0.19668952909045;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( professor(B) )
%   | | then return 0.005798363676752442;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.06135356135092587;  // std dev = 0.013, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.446', 'seconds']
Refined model CLL: -0.197469


******************************************
Best model found
******************************************
Results 

CLL : -0.386583 

AUC ROC : 0.904398 

AUC PR : 0.119107 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 1.869 

Total Inference Time : 0.47685861587524414 

Total revision time: 3.302158302307129
Best scored revision CLL: -0.197469


Results 

CLL : -0.386583 

AUC ROC : 0.904398 

AUC PR : 0.119107 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 3.334210819244385 

Total Inference Time : 0.47685861587524414 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.833
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.464, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20189893509951096;  // std dev = 4.654, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.485, 87.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14307357012380073;  // std dev = 4.767, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12505667896960118;  // std dev = 0.464, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.10814349964595736;  // std dev = 0.465, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09277331276437169;  // std dev = 4.736, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.11050298620047298;  // std dev = 4.614, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.481, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.06142293236959594;  // std dev = 4.714, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.686', 'seconds']
Parameter learned model CLL:-0.34574 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.654, 63, 33]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.767, 73, 33]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.464, 72, 33]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.465, 71, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.736, 70, 33]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.614, 60, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.714, 68, 33], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.22558593750000142], 'false': [nan, 0.22558593750000142], 'false,false': [nan, 0.22558593750000142]}
{}
{'': [nan, 0.21440014239943117], 'false': [nan, 0.21440014239943117]}
{'': [nan, 0.21551020408163213]}
{'': [0.2166235207100603, nan]}
{'': [nan, 0.21773965500989606]}
{'': [0.22892819979188261, nan]}
{}
{'': [0.2199784334869141, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 56.243
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.35814893509951223;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.5724346493852266;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.14185106490048768;  // std dev = 5.16e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.5243014946868242;  // std dev = 2.762, 44.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=33 */
%   | | | else return -0.12544463852839152;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( ta(F, G, D), publication(E, G) )
%   | | then return 0.6561947632836509;  // std dev = 0.149, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.22257533516047578;  // std dev = 1.417, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.6689110133854147;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(I, B), publication(I, A) )
%   | | then if ( tempadvisedby(J, B) )
%   | | | then return 0.43623006843830625;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.602896735104973;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | | then return 0.43031889772742565;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.03039279768953865;  // std dev = 1.628, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else return -0.11231637819360642;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(A), professor(B) )
%   | | then if ( publication(F, A), publication(F, B) )
%   | | | then return 0.4657163600384544;  // std dev = 0.086, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.25899349714986747;  // std dev = 2.577, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.46619604894434197;  // std dev = 0.279, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.4601718529672542;  // std dev = 0.193, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21323317315967688;  // std dev = 2.511, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), ta(E, A, F) )
%   | then if ( ta(E, G, H), publication(I, G) )
%   | | then if ( publication(I, B), publication(I, A) )
%   | | | then return 0.2611012243290657;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4605500280637349;  // std dev = 0.221, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return -0.12071145296072061;  // std dev = 1.140, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.05891437665145297;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( professor(B), publication(K, B) )
%   | | then if ( publication(L, A) )
%   | | | then return -0.006747229820921403;  // std dev = 1.801, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.4694103583836454;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( student(A), publication(M, A) )
%   | | | then return -0.13272829448882548;  // std dev = 0.571, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08518475138839683;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A), publication(E, B) )
%   | | | then return 0.061328591349018836;  // std dev = 1.349, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.10493222477509416;  // std dev = 2.213, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( publication(F, A), publication(F, B) )
%   | | | then return 0.2853386186390125;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07113892428850815;  // std dev = 1.720, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else return -0.07905649928863058;  // std dev = 0.055, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.26132690832355204;  // std dev = 0.155, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.0076787439216738996;  // std dev = 1.895, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( ta(G, A, H), publication(I, B) )
%   | | | then return 0.20253833655569017;  // std dev = 0.899, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.3560742427063278;  // std dev = 0.352, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.0733827319625414;  // std dev = 0.021, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(C, B) )
%   then if ( professor(B), student(A) )
%   | then return 0.20054478931789788;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.07151770955562092;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( publication(D, B), publication(E, A) )
%   | then if ( student(A), professor(B) )
%   | | then if ( publication(D, F), student(F) )
%   | | | then return -0.23876193084051806;  // std dev = 1.731, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.5019030534477356;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06845638496035633;  // std dev = 0.011, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( professor(B), publication(G, B) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.1120843904650607;  // std dev = 1.271, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.27613041125620497;  // std dev = 0.774, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(K, A), ta(L, A, M) )
%   | | | then return 0.08189098743635102;  // std dev = 0.361, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0796900337162549;  // std dev = 0.407, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( publication(E, A), professor(B) )
%   | then if ( professor(A) )
%   | | then return -0.06894096122691398;  // std dev = 0.000197, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(E, F), professor(F) )
%   | | | then return 0.15937512219885075;  // std dev = 1.000, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.03184425368163965;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(G, B), ta(H, A, I) )
%   | | | then return 0.02363290428991533;  // std dev = 1.415, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.07161892614001368;  // std dev = 1.776, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return -0.06329268940194435;  // std dev = 0.013, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.262', 'seconds']
Refined model CLL: -0.23912


******************************************
Best model found
******************************************
Results 

CLL : -0.228077 

AUC ROC : 0.945287 

AUC PR : 0.436475 

Precision : 0.171958 

Recall : 0.8125 

F1 : 0.283843 

Total Learning Time : 56.243 

Total Inference Time : 5.810631513595581 

Total revision time: 63.88447477912903
Best scored revision CLL: -0.23912


Results 

CLL : -0.228077 

AUC ROC : 0.945287 

AUC PR : 0.436475 

Precision : 0.171958 

Recall : 0.8125 

F1 : 0.283843 

Total Learning Time : 63.916527296066285 

Total Inference Time : 5.810631513595581 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.606
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.454, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1914822684328457;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.469, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23320549123154902;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10592937787279208;  // std dev = 0.462, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.10063708583934325;  // std dev = 0.466, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1033437660528528;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.11581454566141304;  // std dev = 3.170, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.449, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.0475628185612065;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.481', 'seconds']
Parameter learned model CLL:-0.380548 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.266, 32, 16]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.098, 24, 16]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.462, 36, 16]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.466, 34, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.249, 31, 16]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.17, 27, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.283, 33, 16], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.22222222222222174], 'false': [nan, 0.22222222222222174], 'false,false': [nan, 0.22222222222222174]}
{}
{'': [nan, 0.2399999999999995], 'false': [nan, 0.2399999999999995]}
{'': [nan, 0.21301775147929017]}
{'': [0.21759999999999963, nan]}
{'': [nan, 0.22453598913535483]}
{'': [0.23363980530016254, nan]}
{}
{'': [0.21990837151186993, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 41.576
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( projectmember(D, B), ta(E, A, F) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | then if ( publication(H, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( professor(B) )
%   | then if ( professor(A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.5272234841492969;  // std dev = 1.891, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( publication(E, B) )
%   | | then if ( publication(E, F), inphase(F, G) )
%   | | | then return 0.44811932423557865;  // std dev = 1.221, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1059360699950119;  // std dev = 1.110, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.2532611705000999;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.6390434867050423;  // std dev = 0.136, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.11231637819360642;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( tempadvisedby(F, B), student(A) )
%   | | then if ( publication(G, A), ta(H, A, I) )
%   | | | then return 0.07096142300816176;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.48456354099176663;  // std dev = 0.779, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.11586143699286575;  // std dev = 1.232, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(B, D), ta(E, A, F) )
%   | then if ( tempadvisedby(G, B), publication(H, B) )
%   | | then if ( ta(E, G, I) )
%   | | | then return 0.4672570767850302;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3569537590681522;  // std dev = 0.821, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.022189577543711023;  // std dev = 0.897, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(J, A), publication(J, B) )
%   | | then return 0.14004598516369615;  // std dev = 0.469, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( projectmember(K, B), student(A) )
%   | | | then return 0.3556087326179684;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16506146223230528;  // std dev = 1.254, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( projectmember(E, B) )
%   | | then return 0.34279925728260485;  // std dev = 0.227, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, A), publication(F, B) )
%   | | | then return 0.3508744229954627;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12316827097045857;  // std dev = 1.555, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else return -0.08299539299485963;  // std dev = 0.047, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), publication(D, B) )
%   | then if ( publication(E, A), ta(F, A, G) )
%   | | then return -0.0014286634980256914;  // std dev = 0.700, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(D, H), inphase(H, I) )
%   | | | then return 0.2917009348978098;  // std dev = 0.446, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.0018825838874824362;  // std dev = 1.041, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( tempadvisedby(J, B), student(A) )
%   | | then return -0.19778301702135187;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( student(B) )
%   | | | then return -0.07383187249553774;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.09877973518364946;  // std dev = 0.612, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | then if ( ta(H, E, G) )
%   | | then return 0.07555104519089163;  // std dev = 0.504, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3274612818993568;  // std dev = 0.188, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(I, B), projectmember(J, B) )
%   | | then return -0.4116763260919795;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(B), ta(K, A, L) )
%   | | | then return -0.1617009725398975;  // std dev = 1.004, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.039262674573749386;  // std dev = 0.989, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, B), ta(D, A, E) )
%   then if ( ta(F, G, E), publication(C, G) )
%   | then return 0.08990149685777868;  // std dev = 0.314, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( ta(D, H, I), publication(J, H) )
%   | | then return 0.3185484809642972;  // std dev = 0.130, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.28862339653842695;  // std dev = 0.178, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(K, B), tempadvisedby(L, B) )
%   | then if ( publication(M, A) )
%   | | then return -0.00854090979962432;  // std dev = 0.244, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.2580752959097423;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( professor(B), student(A) )
%   | | then return 0.13798155574073753;  // std dev = 0.713, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.0676557695144707;  // std dev = 0.019, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( ta(E, A, F), publication(G, B) )
%   | then if ( ta(H, I, F), publication(G, I) )
%   | | then return 0.12924989743010193;  // std dev = 0.249, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(E, J, K), publication(L, J) )
%   | | | then return 0.25514595599287115;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23464072943314726;  // std dev = 0.156, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(M, B), tempadvisedby(N, B) )
%   | | then return -0.2038891375216084;  // std dev = 1.000, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( professor(B) )
%   | | | then return 0.16969666032655825;  // std dev = 0.643, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.06493672133431062;  // std dev = 0.027, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '59.788', 'seconds']
Refined model CLL: -0.257788


******************************************
Best model found
******************************************
Results 

CLL : -0.271353 

AUC ROC : 0.932429 

AUC PR : 0.183052 

Precision : 0.125495 

Recall : 0.979381 

F1 : 0.222482 

Total Learning Time : 41.576 

Total Inference Time : 1.8070716857910156 

Total revision time: 44.54211600494385
Best scored revision CLL: -0.257788


Results 

CLL : -0.271353 

AUC ROC : 0.932429 

AUC PR : 0.183052 

Precision : 0.125495 

Recall : 0.979381 

F1 : 0.222482 

Total Learning Time : 44.574168521881106 

Total Inference Time : 1.8070716857910156 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.703
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.462, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1678834483738472;  // std dev = 4.915, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.470, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15464119704647475;  // std dev = 4.885, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14129374878523138;  // std dev = 0.469, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.1642017321201678;  // std dev = 0.483, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1066399556336884;  // std dev = 4.795, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.08351551264420258;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.476, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.10790485082929654;  // std dev = 4.657, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '881', 'milliseconds']
Parameter learned model CLL:-0.365305 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.915, 78, 35]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.885, 75, 35]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.469, 72, 35]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.483, 59, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.795, 67, 35]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.807, 68, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.657, 57, 35], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.21379904456104767], 'false': [nan, 0.21379904456104767], 'false,false': [nan, 0.21379904456104767]}
{}
{'': [nan, 0.21694214876033152], 'false': [nan, 0.21694214876033152]}
{'': [nan, 0.22010655952484906]}
{'': [0.23370303304662873, nan]}
{'': [nan, 0.2253940792003063]}
{'': [0.22433782637383376, nan]}
{}
{'': [0.23570415879016998, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 6.766
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(C, F), ta(G, F, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(I, A), publication(J, B) )
%   | | then if ( tempadvisedby(K, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   else return -0.14185106490048774;  // std dev = 2.58e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(B) )
%   | | | then return -0.12544463852839127;  // std dev = 3.49e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0.4467725857762806;  // std dev = 3.206, 52.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6343859591055602;  // std dev = 0.077, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.7010329107460102;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2603649590830243;  // std dev = 0.134, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return -0.1403476977792645;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3663122756155511;  // std dev = 2.308, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   else return -0.12018796936554936;  // std dev = 0.149, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(A), professor(B) )
%   | | then if ( publication(F, B), publication(F, A) )
%   | | | then return 0.4118797782784764;  // std dev = 0.984, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.24204797750596088;  // std dev = 2.709, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | else return -0.11187648484171436;  // std dev = 0.196, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.37916201240357755;  // std dev = 0.080, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tempadvisedby(E, B), publication(F, B) )
%   | | | then return -0.0029629421866302053;  // std dev = 1.591, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.3332782773101092;  // std dev = 1.809, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else return -0.10078305306806394;  // std dev = 0.164, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.29492935375435547;  // std dev = 0.071, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return -0.15356581892547144;  // std dev = 1.250, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2135490644102379;  // std dev = 2.196, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return -0.09211120773462322;  // std dev = 0.168, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.2375778791992634;  // std dev = 0.063, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | | then return -0.11148192118747544;  // std dev = 0.821, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.11169880266880379;  // std dev = 2.437, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | else return -0.08419909102982853;  // std dev = 0.150, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F) )
%   | | then if ( publication(G, A), publication(G, B) )
%   | | | then return 0.18803081917482042;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.39725125615522483;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.15177783715736123;  // std dev = 1.619, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | | else return -0.016277521979058296;  // std dev = 1.706, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.07459497147089708;  // std dev = 0.092, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then if ( tempadvisedby(F, B) )
%   | | then return 0.19167582918736586;  // std dev = 0.137, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.3383675436028466;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | then if ( publication(I, A), publication(I, B) )
%   | | | then return 0.18959254044668275;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.10845964366228691;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.3214695356766218;  // std dev = 0.384, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.16945445410978857;  // std dev = 1.275, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.0699643256328809;  // std dev = 0.097, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.1432859137285354;  // std dev = 0.061, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.17513251549454148;  // std dev = 1.725, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.11505223740134836;  // std dev = 1.807, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | else return -0.0670821483363046;  // std dev = 0.113, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.399', 'seconds']
Refined model CLL: -0.223365


******************************************
Best model found
******************************************
Results 

CLL : -0.233872 

AUC ROC : 0.953144 

AUC PR : 0.426375 

Precision : 0.198864 

Recall : 0.897436 

F1 : 0.325581 

Total Learning Time : 6.766 

Total Inference Time : 1.5149834156036377 

Total revision time: 9.782921689987182
Best scored revision CLL: -0.223365


Results 

CLL : -0.233872 

AUC ROC : 0.953144 

AUC PR : 0.426375 

Precision : 0.198864 

Recall : 0.897436 

F1 : 0.325581 

Total Learning Time : 9.801358121871948 

Total Inference Time : 1.5149834156036377 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.557
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.458, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1860177875585285;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.452, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1514238478864033;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15090670898897968;  // std dev = 0.473, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.09548171406483806;  // std dev = 0.462, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08388882802614181;  // std dev = 3.708, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.09524267563679469;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.464, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.13043502932874232;  // std dev = 3.487, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.082', 'seconds']
Parameter learned model CLL:-0.389477 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.666, 41, 20]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.695, 43, 20]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.473, 39, 20]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.462, 45, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.708, 44, 20]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.636, 39, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.487, 31, 20], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2203708680462237], 'false': [nan, 0.2203708680462237], 'false,false': [nan, 0.2203708680462237]}
{}
{'': [nan, 0.21667926429831189], 'false': [nan, 0.21667926429831189]}
{'': [nan, 0.22407354208560737]}
{'': [0.21301775147928997, nan]}
{'': [nan, 0.2148437499999996]}
{'': [0.22407354208560787, nan]}
{}
{'': [0.238369857747021, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 11.358
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.14185106490048777;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.5143746249453;  // std dev = 2.115, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(D, A) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.6052709048691572;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.14056494900441788;  // std dev = 1.233, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.6423165852702867;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.0034914342448412925;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.11231637819360642;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( ta(F, A, G), publication(H, A) )
%   | | | then return 0.5685956643974532;  // std dev = 0.207, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1846535322127639;  // std dev = 1.936, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.3881774236808116;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.008018828153324992;  // std dev = 0.942, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(F, A), publication(F, B) )
%   | | | then return 0.39261535980523654;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.465945850466928;  // std dev = 0.174, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.092691276189261;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( tempadvisedby(E, B) )
%   | then if ( ta(F, E, G), ta(H, A, I) )
%   | | then return 0.10196854226004427;  // std dev = 0.686, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.44954542789894414;  // std dev = 0.150, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3237548089151986;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(L, A), publication(L, B) )
%   | | then return 0.23936572369154704;  // std dev = 0.362, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( student(B) )
%   | | | then return -0.0851847513883968;  // std dev = 2.24e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.15099123534264075;  // std dev = 1.300, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.12528785780674548;  // std dev = 1.022, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.13987703966310308;  // std dev = 1.103, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.3283460225082364;  // std dev = 0.296, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.0840025380933216;  // std dev = 0.062, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( publication(E, B), professor(B) )
%   | then if ( publication(E, A), student(A) )
%   | | then return 0.21484090967575714;  // std dev = 0.092, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.1539275611410685;  // std dev = 1.190, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.1494844028653567;  // std dev = 0.902, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( student(B) )
%   | | then return -0.07559291848739418;  // std dev = 0.041, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.2866805574803176;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B) )
%   then if ( ta(D, C, E), ta(F, A, G) )
%   | then return -0.00920308807768197;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( ta(H, A, I) )
%   | | then return 0.33159223304570556;  // std dev = 0.176, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2160283340092365;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(J, A), professor(B) )
%   | then if ( publication(J, B), student(A) )
%   | | then return 0.1670432656471626;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.03543661125123455;  // std dev = 0.963, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( professor(B) )
%   | | then return -0.3014175175934304;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.06957788028723909;  // std dev = 0.032, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( ta(E, A, F), publication(G, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.06491082348668246;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(H, A), professor(B) )
%   | | | then return 0.34473007483615975;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19491334662315205;  // std dev = 0.326, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(I, B), publication(I, A) )
%   | | then if ( professor(A) )
%   | | | then return -0.09244768788529618;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.16285477639010587;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( professor(B), publication(J, B) )
%   | | | then return -0.21765985090185963;  // std dev = 1.027, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.06802074082597083;  // std dev = 0.794, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.136', 'seconds']
Refined model CLL: -0.184368


******************************************
Best model found
******************************************
Results 

CLL : -0.251028 

AUC ROC : 0.945502 

AUC PR : 0.227887 

Precision : 0.158607 

Recall : 0.88172 

F1 : 0.268852 

Total Learning Time : 11.358 

Total Inference Time : 1.0300498008728027 

Total revision time: 13.481783905029298
Best scored revision CLL: -0.184368


Results 

CLL : -0.251028 

AUC ROC : 0.945502 

AUC PR : 0.227887 

Precision : 0.158607 

Recall : 0.88172 

F1 : 0.268852 

Total Learning Time : 13.500220336914063 

Total Inference Time : 1.0300498008728027 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.514
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.458, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.24945328292559932;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.484, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23408358983107289;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17989700902951541;  // std dev = 0.488, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.09038194977308625;  // std dev = 0.471, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06147005327268868;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.04947116916803883;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.0084603345727067;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.165', 'seconds']
Parameter learned model CLL:-0.416896 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.341, 14, 9]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.306, 13, 9]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.488, 14, 9]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.471, 18, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [2.471, 19, 9]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [2.471, 19, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [2.527, 22, 9], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23818525519848777], 'false': [nan, 0.23818525519848777], 'false,false': [nan, 0.23818525519848777]}
{}
{'': [nan, 0.24173553719008264], 'false': [nan, 0.24173553719008264]}
{'': [nan, 0.23818525519848774]}
{'': [0.222222222222222, nan]}
{'': [nan, 0.21811224489795916]}
{'': [0.21811224489795902, nan]}
{}
{'': [0.20603537981269526, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 2.062
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B) )
%   | | | then return 0.6387463734164045;  // std dev = 0.930, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.6231886673475422;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.33719814818784777;  // std dev = 0.427, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.4700150297194708;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17477889421914988;  // std dev = 1.380, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( professor(A) )
%   | | | then return -0.23723839921447012;  // std dev = 0.332, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.0537317366775655;  // std dev = 1.133, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.4579331323500678;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(E, B) )
%   | | then return -0.17916675186513187;  // std dev = 0.312, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08999264593321304;  // std dev = 0.016, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then return 0.3566766313857049;  // std dev = 0.093, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(E, A), publication(E, B) )
%   | | then return -0.29660735597676774;  // std dev = 0.267, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07988004602930988;  // std dev = 0.018, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( ta(D, A, E) )
%   | | then return -0.05243054711949965;  // std dev = 1.145, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.2814687572707574;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(F, B), publication(G, A) )
%   | | then return -0.13125436521338013;  // std dev = 0.237, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07675329756163873;  // std dev = 0.013, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( student(A), professor(B) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then return 0.02927175211812061;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.243080011502233;  // std dev = 0.105, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( professor(A), publication(H, B) )
%   | | then return -0.22421534068256532;  // std dev = 0.205, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07197885228720946;  // std dev = 0.012, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), ta(D, A, E) )
%   then return 0.2734182002891128;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( publication(F, A), publication(G, B) )
%   | then return -0.2014952802144915;  // std dev = 0.671, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( professor(B) )
%   | | then return 0.04592009016759393;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.06663082540970265;  // std dev = 0.013, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( student(A), publication(E, A) )
%   | then return 0.032237398187264045;  // std dev = 0.317, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( tempadvisedby(F, B) )
%   | | then if ( ta(G, A, H) )
%   | | | then return -0.11076589938881894;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.24592475735710667;  // std dev = 0.708, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(I, A, J), publication(K, B) )
%   | | | then return -0.15123527927527686;  // std dev = 0.730, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.025140829918229423;  // std dev = 0.367, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.335', 'seconds']
Refined model CLL: -0.169996


******************************************
Best model found
******************************************
Results 

CLL : -0.342157 

AUC ROC : 0.901104 

AUC PR : 0.112526 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.062 

Total Inference Time : 0.5080127716064453 

Total revision time: 3.510662580490112
Best scored revision CLL: -0.169996


Results 

CLL : -0.342157 

AUC ROC : 0.901104 

AUC PR : 0.112526 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 3.5290990123748776 

Total Inference Time : 0.5080127716064453 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.653
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.467, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14020021715079295;  // std dev = 4.867, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.458, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20284848709260708;  // std dev = 4.586, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09802246223147391;  // std dev = 0.452, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.1357917355101623;  // std dev = 0.474, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10261514916880078;  // std dev = 4.702, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.06540627448215057;  // std dev = 4.767, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.475, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.1491634458476686;  // std dev = 4.422, 81.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '982', 'milliseconds']
Parameter learned model CLL:-0.359093 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.867, 84, 33]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.586, 58, 33]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.452, 82, 33]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.474, 64, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.702, 67, 33]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.767, 73, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.422, 48, 33], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.20249835634451155], 'false': [nan, 0.20249835634451155], 'false,false': [nan, 0.20249835634451155]}
{}
{'': [nan, 0.23113150585678027], 'false': [nan, 0.23113150585678027]}
{'': [nan, 0.20461247637051097]}
{'': [0.22446593686895563, nan]}
{'': [nan, 0.2211000000000004]}
{'': [0.21440014239943136, nan]}
{}
{'': [0.24142661179698202, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 18.893
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.4945125714631487;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.14185106490048768;  // std dev = 4.59e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.45802071119605775;  // std dev = 3.086, 48.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=33 */
%   | | | else return -0.12544463852839152;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.6186519481619676;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.22023193503280689;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.1404022902151067;  // std dev = 0.969, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( ta(H, A, I), tempadvisedby(J, B) )
%   | | | then return 0.5000354587626779;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3383482030481451;  // std dev = 1.827, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.11231637819360632;  // std dev = 2.98e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(A), professor(B) )
%   | | then if ( publication(F, B), publication(F, A) )
%   | | | then return 0.4663455636201394;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.1436537537885024;  // std dev = 3.058, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.010385392750025202;  // std dev = 1.106, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.34041936464048095;  // std dev = 1.761, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return 0.16670587896270084;  // std dev = 1.926, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.3131836406770766;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.07433569383776399;  // std dev = 1.870, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( publication(G, A), ta(H, A, I) )
%   | | | then return 0.039419152129276755;  // std dev = 1.371, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.37761430503939447;  // std dev = 1.030, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return -0.0851847513883968;  // std dev = 2.11e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.37045751052085335;  // std dev = 0.201, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.4063589674343369;  // std dev = 0.337, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10947287378832533;  // std dev = 2.571, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( publication(E, B), professor(B) )
%   | then if ( ta(F, A, G), publication(H, A) )
%   | | then if ( ta(I, J, G), publication(E, J) )
%   | | | then return 0.18838079874837865;  // std dev = 1.117, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.4937970360693403;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( professor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.22600502352324778;  // std dev = 1.769, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | else if ( student(B) )
%   | | then return -0.07324622576333704;  // std dev = 1.18e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( professor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.38300193055431364;  // std dev = 0.946, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, C), ta(E, A, F) )
%   | | then return -0.34546416046873274;  // std dev = 0.909, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(G, A), publication(G, B) )
%   | | | then return 0.0635128718600826;  // std dev = 0.945, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.07779995085566087;  // std dev = 1.945, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), professor(I) )
%   | | | then return 0.1357014202416339;  // std dev = 0.940, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.18142732419393384;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.30848856969769317;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06842697784420272;  // std dev = 5.27e-09, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), ta(E, A, F) )
%   | then if ( publication(G, A), publication(G, B) )
%   | | then return -0.026991513862099505;  // std dev = 0.814, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(E, H, I), tempadvisedby(H, J) )
%   | | | then return 0.1794106544064713;  // std dev = 0.881, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.4217663014852779;  // std dev = 0.244, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( professor(B), publication(K, B) )
%   | | then if ( professor(A) )
%   | | | then return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.059686516989590904;  // std dev = 1.676, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else if ( student(A), student(B) )
%   | | | then return -0.06419184008202623;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.10010501163775104;  // std dev = 0.449, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.651', 'seconds']
Refined model CLL: -0.233039


******************************************
Best model found
******************************************
Results 

CLL : -0.213203 

AUC ROC : 0.957598 

AUC PR : 0.509168 

Precision : 0.194366 

Recall : 0.8625 

F1 : 0.317241 

Total Learning Time : 18.893 

Total Inference Time : 1.9973487854003906 

Total revision time: 22.271061655044555
Best scored revision CLL: -0.233039


Results 

CLL : -0.213203 

AUC ROC : 0.957598 

AUC PR : 0.509168 

Precision : 0.194366 

Recall : 0.8625 

F1 : 0.317241 

Total Learning Time : 22.28949808692932 

Total Inference Time : 1.9973487854003906 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.577
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.469, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17814893509951235;  // std dev = 3.298, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.474, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1157520104854661;  // std dev = 3.392, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15890789912342873;  // std dev = 0.474, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.21472266864764808;  // std dev = 0.494, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09671969373026044;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.039915692747067376;  // std dev = 3.342, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.474, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.05676914028655816;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.171', 'seconds']
Parameter learned model CLL:-0.371639 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.298, 34, 16]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.392, 41, 16]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.474, 31, 16]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.494, 22, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.249, 31, 16]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.342, 37, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.283, 33, 16], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2175999999999995], 'false': [nan, 0.2175999999999995], 'false,false': [nan, 0.2175999999999995]}
{}
{'': [nan, 0.20190827947060624], 'false': [nan, 0.20190827947060624]}
{'': [nan, 0.22453598913535608]}
{'': [0.243767313019391, nan]}
{'': [nan, 0.22453598913535527]}
{'': [0.21075115699537178, nan]}
{}
{'': [0.21990837151186993, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 4.633
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), projectmember(E, B) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.5854216623722396;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.14185106490048774;  // std dev = 1.29e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(B, G), student(A) )
%   | | | then return 0.5906796833156377;  // std dev = 1.560, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.10761950012112347;  // std dev = 0.867, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, C, E), ta(D, A, F) )
%   | | then return 0.6083026435408004;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.45880209156444396;  // std dev = 0.819, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.14468440557579537;  // std dev = 1.562, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.6574460650678032;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11410588867050969;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), ta(F, A, G) )
%   | | then if ( ta(F, H, I), publication(J, H) )
%   | | | then return 0.03520801822168175;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.573373387033639;  // std dev = 0.139, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(K, A), publication(L, B) )
%   | | | then return 0.13325107090622415;  // std dev = 0.653, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.094470938879098;  // std dev = 1.539, 38.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tempadvisedby(D, B), student(A) )
%   | then if ( ta(E, A, F) )
%   | | then if ( ta(G, H, F), publication(I, H) )
%   | | | then return 0.318971409746497;  // std dev = 0.799, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.527368838621056;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5190627444688735;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( student(A), professor(B) )
%   | | then if ( ta(J, A, K), hasposition(B, L) )
%   | | | then return -0.04969608548380239;  // std dev = 0.939, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1553070339146211;  // std dev = 0.873, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.09982259687630422;  // std dev = 0.049, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, A) )
%   | | then return 0.02034851707662213;  // std dev = 0.946, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.4098816318184857;  // std dev = 0.219, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.26491367051633014;  // std dev = 0.884, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.09051021909498573;  // std dev = 0.047, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(B, D), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.35993023660582474;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0637337477143327;  // std dev = 1.604, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return 0.3177012218696018;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(G, A, H) )
%   | | then if ( ta(I, B, J) )
%   | | | then return -0.0810865464501178;  // std dev = 0.018, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.23258779536678095;  // std dev = 0.646, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( professor(A) )
%   | | | then return -0.08934565382173726;  // std dev = 0.035, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0133215594801619;  // std dev = 0.562, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F), projectmember(G, B) )
%   | | then return -0.27010696300987386;  // std dev = 0.706, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(H, A, I), tempadvisedby(J, B) )
%   | | | then return 0.10166730955098688;  // std dev = 1.211, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.30986518456680356;  // std dev = 0.269, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.08002686926635844;  // std dev = 0.044, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(E, G, H), publication(C, G) )
%   | | | then return -0.0760077249938953;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.31721071523458827;  // std dev = 0.174, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( ta(I, A, J) )
%   | | | then return -0.13485585266131817;  // std dev = 0.855, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.01502768792250056;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2768455508901561;  // std dev = 0.203, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06875736888533696;  // std dev = 0.025, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | then if ( ta(H, I, F), publication(J, I) )
%   | | then return 0.08489452463338858;  // std dev = 0.940, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.2605498126010557;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(K, A), student(A) )
%   | | then if ( student(B) )
%   | | | then return -0.0715599893587586;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.30329264001983697;  // std dev = 0.944, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.08927109507072391;  // std dev = 1.031, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.0659093838044981;  // std dev = 0.033, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.365', 'seconds']
Refined model CLL: -0.294659


******************************************
Best model found
******************************************
Results 

CLL : -0.282463 

AUC ROC : 0.921996 

AUC PR : 0.13386 

Precision : 0.122166 

Recall : 1.0 

F1 : 0.217733 

Total Learning Time : 4.633 

Total Inference Time : 0.7666158676147461 

Total revision time: 6.489649496078491
Best scored revision CLL: -0.294659


Results 

CLL : -0.282463 

AUC ROC : 0.921996 

AUC PR : 0.13386 

Precision : 0.122166 

Recall : 1.0 

F1 : 0.217733 

Total Learning Time : 6.508085927963257 

Total Inference Time : 0.7666158676147461 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.649
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.485, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1522665821583344;  // std dev = 4.971, 119.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.477, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18858448001852213;  // std dev = 4.770, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1415911517774805;  // std dev = 0.470, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.10409041411616302;  // std dev = 0.465, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0650295325431261;  // std dev = 4.971, 119.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.055835635761709586;  // std dev = 4.962, 118.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.475, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.08540987826959932;  // std dev = 4.819, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '862', 'milliseconds']
Parameter learned model CLL:-0.330398 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.971, 84, 35]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.77, 65, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.47, 71, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.465, 76, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.971, 84, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.962, 83, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.819, 69, 35], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.20761245674740622], 'false': [nan, 0.20761245674740622], 'false,false': [nan, 0.20761245674740622]}
{}
{'': [nan, 0.2274999999999999], 'false': [nan, 0.2274999999999999]}
{'': [nan, 0.2211641153435381]}
{'': [0.2158915672429186, nan]}
{'': [nan, 0.20761245674740522]}
{'': [0.2086325768457338, nan]}
{}
{'': [0.22328032544378631, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 9.17
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B), ta(F, A, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | then return 0.0010060779566550668;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.6816783468642181;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.14185106490048774;  // std dev = 3.33e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.49692917593718317;  // std dev = 3.008, 48.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=35 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.6345948139969947;  // std dev = 0.097, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.09157611857846208;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2027033821792891;  // std dev = 0.966, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.6969069152138244;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3087154974205218;  // std dev = 2.252, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(A), professor(B) )
%   | | then if ( publication(F, B), publication(F, A) )
%   | | | then return 0.47984547002630584;  // std dev = 0.105, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.18993429832982456;  // std dev = 2.882, 37.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(D, B) )
%   | | | then return 0.36571322943155693;  // std dev = 0.095, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.07511769851725503;  // std dev = 2.120, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.25066630130691947;  // std dev = 0.686, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4004219027232425;  // std dev = 1.410, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, A) )
%   | | then if ( projectmember(G, B) )
%   | | | then return 0.572800338285628;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13707190622548845;  // std dev = 1.111, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else if ( ta(H, A, I), tempadvisedby(J, B) )
%   | | | then return -0.12481511983172267;  // std dev = 0.727, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3340853700316844;  // std dev = 1.623, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tempadvisedby(D, B), publication(E, A) )
%   | then if ( publication(E, B), student(A) )
%   | | then return 0.25883434090501123;  // std dev = 0.079, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(F, B) )
%   | | | then return -0.3107397296268128;  // std dev = 0.271, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.4324395454516468;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(G, A, H) )
%   | | then if ( professor(B), publication(I, A) )
%   | | | then return -0.3103046903721417;  // std dev = 1.022, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.12322498148556926;  // std dev = 1.111, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( professor(B), publication(J, A) )
%   | | | then return 0.3244586433392065;  // std dev = 0.513, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.04905481120694671;  // std dev = 2.142, 66.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, B), publication(F, A) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.14467081826676767;  // std dev = 0.675, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.45313515293105366;  // std dev = 0.318, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | | then return -0.20165604693593123;  // std dev = 1.244, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.12210882207686553;  // std dev = 2.100, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | else return -0.07519836608163535;  // std dev = 0.065, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then return 0.18929196727385658;  // std dev = 0.064, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return -0.41569740323522897;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.04758934418777001;  // std dev = 1.386, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.3469300621488147;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12068769991278873;  // std dev = 0.721, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( publication(I, A), professor(B) )
%   | then if ( publication(I, B) )
%   | | then return -0.4791671560981139;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(J, B) )
%   | | | then return -0.07572561592206198;  // std dev = 1.115, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.23683564412418137;  // std dev = 0.839, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.05975743375509377;  // std dev = 0.206, 60.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=7 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( tempadvisedby(E, B), student(A) )
%   | then if ( publication(F, B), publication(F, A) )
%   | | then return 0.16198341837187546;  // std dev = 0.057, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(G, A) )
%   | | | then return -0.11313452638432073;  // std dev = 1.138, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.02783073905603203;  // std dev = 1.586, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( publication(H, B), professor(B) )
%   | | then if ( student(A), publication(I, A) )
%   | | | then return -0.26154876689943235;  // std dev = 1.466, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.11048450235024221;  // std dev = 1.613, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( publication(J, A), professor(B) )
%   | | | then return -0.09632515667865027;  // std dev = 0.755, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.06172022872821732;  // std dev = 0.828, 56.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.013', 'seconds']
Refined model CLL: -0.203268


******************************************
Best model found
******************************************
Results 

CLL : -0.186589 

AUC ROC : 0.943893 

AUC PR : 0.394105 

Precision : 0.220833 

Recall : 0.679487 

F1 : 0.333333 

Total Learning Time : 9.17 

Total Inference Time : 1.828512191772461 

Total revision time: 12.428367370605468
Best scored revision CLL: -0.203268


Results 

CLL : -0.186589 

AUC ROC : 0.943893 

AUC PR : 0.394105 

Precision : 0.220833 

Recall : 0.679487 

F1 : 0.333333 

Total Learning Time : 12.509197706222533 

Total Inference Time : 1.828512191772461 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.559
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.473, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2355074256655498;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.481, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11271134899183625;  // std dev = 3.780, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17390877857228143;  // std dev = 0.481, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.16670278678549033;  // std dev = 0.487, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08021596036213996;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.0760837994644236;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.483, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.044674144047234084;  // std dev = 3.681, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.227', 'seconds']
Parameter learned model CLL:-0.388644 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.529, 33, 20]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.78, 50, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.481, 35, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.487, 32, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.666, 41, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.636, 39, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.681, 42, 20], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23495906016375898], 'false': [nan, 0.23495906016375898], 'false,false': [nan, 0.23495906016375898]}
{}
{'': [nan, 0.2040816326530615], 'false': [nan, 0.2040816326530615]}
{'': [nan, 0.23140495867768587]}
{'': [0.23668639053254378, nan]}
{'': [nan, 0.22037086804622438]}
{'': [0.22407354208560715, nan]}
{}
{'': [0.21852237252861648, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 6.663
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(C, F), tempadvisedby(F, G) )
%   | | | then return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.1418510649004877;  // std dev = 2.36e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.5185612940806531;  // std dev = 2.106, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.43481016653912646;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.03694649546511314;  // std dev = 1.113, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( publication(E, B) )
%   | | then return 0.6336355522304556;  // std dev = 0.134, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.08170685174630365;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.4154521996625963;  // std dev = 1.242, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.06601078399028464;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.4132468895370597;  // std dev = 0.100, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | | then return -0.08880585420855136;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.20439198010058846;  // std dev = 1.239, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, A) )
%   | | then if ( publication(G, E) )
%   | | | then return -0.23826818823019727;  // std dev = 0.760, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.14826532587884828;  // std dev = 1.060, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.3143874480062477;  // std dev = 0.094, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.00985816942477602;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.0851847513883968;  // std dev = 2.24e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.21394544389704415;  // std dev = 0.741, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.09973697041407155;  // std dev = 1.051, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(H, A), ta(I, A, J) )
%   | | | then return 0.04038482399708735;  // std dev = 0.449, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2909089402436773;  // std dev = 0.406, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( publication(E, B), publication(E, A) )
%   | then if ( professor(B) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.3179148940197547;  // std dev = 0.169, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20961439865415352;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( ta(G, A, H), publication(I, B) )
%   | | then if ( professor(B) )
%   | | | then return 0.166552451633192;  // std dev = 0.827, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | | then return 0.03876996324655593;  // std dev = 0.599, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.10792924897029349;  // std dev = 1.120, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(D, A), tempadvisedby(E, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.2551608783385529;  // std dev = 0.151, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1974690797312285;  // std dev = 1.046, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.18277972608558818;  // std dev = 0.073, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( publication(F, A) )
%   | then if ( student(A), student(B) )
%   | | then return -0.06682974848255277;  // std dev = 0.004, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.013441380702895722;  // std dev = 0.740, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( student(A), student(B) )
%   | | then return -0.0664667418094505;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.21663603966998307;  // std dev = 0.301, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( publication(E, A), publication(E, B) )
%   | then if ( professor(B), student(A) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.21095311781108483;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1519247402428037;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07895341277480403;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( ta(G, A, H), publication(I, B) )
%   | | then if ( professor(B) )
%   | | | then return 0.13805072681862202;  // std dev = 0.818, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.0642972144967189;  // std dev = 2.86e-05, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( publication(J, B), professor(B) )
%   | | | then return -0.3832332931511618;  // std dev = 1.285, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.05513430395279121;  // std dev = 0.778, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.633', 'seconds']
Refined model CLL: -0.179448


******************************************
Best model found
******************************************
Results 

CLL : -0.267139 

AUC ROC : 0.942667 

AUC PR : 0.26975 

Precision : 0.151341 

Recall : 0.849462 

F1 : 0.256911 

Total Learning Time : 6.663 

Total Inference Time : 1.0624496936798096 

Total revision time: 8.86332881164551
Best scored revision CLL: -0.179448


Results 

CLL : -0.267139 

AUC ROC : 0.942667 

AUC PR : 0.26975 

Precision : 0.151341 

Recall : 0.849462 

F1 : 0.256911 

Total Learning Time : 8.944159147262575 

Total Inference Time : 1.0624496936798096 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.525
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.480, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20430278125335852;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.471, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284472411704123;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13032455938369236;  // std dev = 0.467, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.08793586346276776;  // std dev = 0.458, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09429923042297718;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.1308929378815025;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.450, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.09094057613442916;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.117', 'seconds']
Parameter learned model CLL:-0.420477 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.426, 17, 9]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.471, 19, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.467, 19, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.458, 21, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [2.471, 19, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [2.372, 15, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [2.4, 16, 9], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.22633136094674564], 'false': [nan, 0.22633136094674564], 'false,false': [nan, 0.22633136094674564]}
{}
{'': [nan, 0.2181122448979589], 'false': [nan, 0.2181122448979589]}
{'': [nan, 0.21811224489795938]}
{'': [0.20999999999999985, nan]}
{'': [nan, 0.2181122448979593]}
{'': [0.23437499999999997, nan]}
{}
{'': [0.23039999999999974, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 1.962
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.6645537383074929;  // std dev = 0.965, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.4209927874462512;  // std dev = 0.908, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.6313424656154847;  // std dev = 0.099, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.27655113572591505;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.48273923740349883;  // std dev = 0.114, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | then return 0.4575408539994843;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( professor(B), student(A) )
%   | | then return 0.1303886666025712;  // std dev = 0.411, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( student(A), professor(B) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then return 0.09801239578843765;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3369502405229931;  // std dev = 0.106, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | then return 0.3261170980782727;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(G, A, H) )
%   | | then if ( publication(I, B) )
%   | | | then return -0.1290444511142871;  // std dev = 0.710, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( professor(B) )
%   | | | then return 0.0896957642406342;  // std dev = 0.884, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B) )
%   | then return 0.25827875987491494;  // std dev = 0.133, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.07261999785107225;  // std dev = 0.005, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return -0.03754590244916878;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.21233631751405938;  // std dev = 0.119, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07268758632893334;  // std dev = 0.053, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( ta(E, A, F), publication(G, A) )
%   | then return -0.15827849362892785;  // std dev = 0.696, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return -0.11452934617449102;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17940379243552398;  // std dev = 0.106, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.06397386379722446;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.617', 'seconds']
Refined model CLL: -0.182549


******************************************
Best model found
******************************************
Results 

CLL : -0.377846 

AUC ROC : 0.900518 

AUC PR : 0.114245 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 1.962 

Total Inference Time : 0.521256685256958 

Total revision time: 3.4330179805755616
Best scored revision CLL: -0.182549


Results 

CLL : -0.377846 

AUC ROC : 0.900518 

AUC PR : 0.114245 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 3.513848316192627 

Total Inference Time : 0.521256685256958 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.647
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.470, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1724346493852252;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.454, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15936525495359796;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09483493732568417;  // std dev = 0.450, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.19078044432377173;  // std dev = 0.488, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12410787609551373;  // std dev = 4.600, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.08976778051958365;  // std dev = 4.641, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.470, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.087499473418099;  // std dev = 4.586, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '922', 'milliseconds']
Parameter learned model CLL:-0.365741 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.757, 72, 33]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.725, 69, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.45, 84, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.488, 51, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.6, 59, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.641, 62, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.586, 58, 33], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.21551020408163402], 'false': [nan, 0.21551020408163402], 'false,false': [nan, 0.21551020408163402]}
{}
{'': [nan, 0.21885813148789013], 'false': [nan, 0.21885813148789013]}
{'': [nan, 0.20249835634451144]}
{'': [0.23852040816326614, nan]}
{'': [nan, 0.23003308128544434]}
{'': [0.22670360110803267, nan]}
{}
{'': [0.23113150585678124, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 10.674
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.016851064900487787;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( tempadvisedby(I, B), ta(J, A, K) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.14185106490048768;  // std dev = 4.94e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.5635929446853658;  // std dev = 2.480, 41.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=33 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.5934529141091276;  // std dev = 2.11e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.3425398307929247;  // std dev = 1.383, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.10010542881714686;  // std dev = 1.245, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( publication(H, A), ta(I, A, J) )
%   | | then return 0.48681429054027775;  // std dev = 0.797, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.6319487253502394;  // std dev = 0.165, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.11231637819360635;  // std dev = 1.83e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, A), publication(F, B) )
%   | | | then return 0.44552404120431416;  // std dev = 0.032, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.221172044077764;  // std dev = 2.553, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | else return -0.10159632948783628;  // std dev = 1.83e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), ta(E, A, F) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.3466631872430991;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5302948075320173;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.2664939282163681;  // std dev = 1.485, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.1113263362390839;  // std dev = 1.940, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( publication(F, A) )
%   | | then if ( publication(E, A), student(A) )
%   | | | then return 0.2876868316761186;  // std dev = 0.054, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.11511337142076015;  // std dev = 1.647, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( publication(E, G), ta(H, G, I) )
%   | | | then return 0.3207956694282771;  // std dev = 0.896, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.38316819981736205;  // std dev = 0.553, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( professor(B) )
%   | | then return -0.27614829196819096;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.08518475138839679;  // std dev = 1.97e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( ta(D, A, E), publication(F, A) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.2196320191843097;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.437049259476847;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | | then return 0.03894089292308854;  // std dev = 1.125, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.15541178051503102;  // std dev = 1.902, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | else return -0.07863052170549259;  // std dev = 0.004, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.210440965409128;  // std dev = 0.064, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return -0.13904167872975975;  // std dev = 1.588, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.1662566745557863;  // std dev = 1.540, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return -0.07348917106457938;  // std dev = 0.035, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | | then return -0.29489609640266123;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(I, A), publication(J, B) )
%   | | | then return 0.08829480579776948;  // std dev = 0.579, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.35032238157270923;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | then return -0.025520115039020314;  // std dev = 0.523, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(M, B), ta(N, M, P) )
%   | | | then return 0.038192577660490314;  // std dev = 0.601, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1847679637064779;  // std dev = 1.328, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else return -0.06880500944718183;  // std dev = 0.037, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( ta(E, A, F), professor(B) )
%   | then if ( ta(G, H, F), publication(I, H) )
%   | | then if ( publication(I, B) )
%   | | | then return 0.22162664509605814;  // std dev = 0.250, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.2234392332389261;  // std dev = 1.291, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.2841877313772551;  // std dev = 0.157, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(J, A), publication(J, B) )
%   | | then if ( tempadvisedby(K, B), student(A) )
%   | | | then return 0.17343737326768235;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08641762046384786;  // std dev = 0.259, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(L, B), publication(M, A) )
%   | | | then return -0.23644455767358863;  // std dev = 0.820, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.06318859736359295;  // std dev = 1.381, 56.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.714', 'seconds']
Refined model CLL: -0.240918


******************************************
Best model found
******************************************
Results 

CLL : -0.238567 

AUC ROC : 0.953372 

AUC PR : 0.427429 

Precision : 0.161863 

Recall : 0.9125 

F1 : 0.274953 

Total Learning Time : 10.674 

Total Inference Time : 1.871345043182373 

Total revision time: 13.922917505264282
Best scored revision CLL: -0.240918


Results 

CLL : -0.238567 

AUC ROC : 0.953372 

AUC PR : 0.427429 

Precision : 0.161863 

Recall : 0.9125 

F1 : 0.274953 

Total Learning Time : 14.003747840881347 

Total Inference Time : 1.871345043182373 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.573
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.488, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.221785298735876;  // std dev = 3.191, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.449, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13083831997184933;  // std dev = 3.342, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21985073833995875;  // std dev = 0.492, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.09338521052125887;  // std dev = 0.466, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10442827855612995;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.08468617400910261;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.471, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.027806070762914876;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.041', 'seconds']
Parameter learned model CLL:-0.376859 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.191, 28, 16]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.342, 37, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.492, 23, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.466, 34, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.23, 30, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.23, 30, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.328, 36, 16], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23140495867768546], 'false': [nan, 0.23140495867768546], 'false,false': [nan, 0.23140495867768546]}
{}
{'': [nan, 0.21075115699537267], 'false': [nan, 0.21075115699537267]}
{'': [nan, 0.2419460880999339]}
{'': [0.21759999999999946, nan]}
{'': [nan, 0.2268431001890363]}
{'': [0.22684310018903642, nan]}
{}
{'': [0.2130177514792901, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 4.773
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B), ta(D, A, E) )
%   | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | then if ( publication(G, H), inphase(H, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.14185106490048774;  // std dev = 1.29e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(B, G), student(A) )
%   | | | then return 0.6292493100160474;  // std dev = 1.299, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return -0.10819450458587404;  // std dev = 0.868, 31.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( ta(F, G, E), publication(H, G) )
%   | | then return 0.6024273323608361;  // std dev = 0.136, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.41065364009865074;  // std dev = 0.942, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( projectmember(I, B) )
%   | | then return 0.4062977115814115;  // std dev = 0.775, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1568484847139578;  // std dev = 1.178, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.11404777681774211;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.16003023602900235;  // std dev = 1.791, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.5633172852873325;  // std dev = 0.208, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.10302157784196038;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.39444570821951896;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, B), ta(F, A, G) )
%   | | | then return 0.2163143549388966;  // std dev = 1.320, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.0696066500504528;  // std dev = 1.406, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return -0.0938833561394897;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( student(A), professor(B) )
%   | then if ( projectmember(E, B), ta(F, A, G) )
%   | | then return -0.07508394918772544;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.36335296664993133;  // std dev = 0.172, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.18122147173188655;  // std dev = 1.153, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return -0.08619553160022837;  // std dev = 1.05e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B) )
%   | then if ( ta(D, A, E), projectmember(F, B) )
%   | | then return -0.07286641283455676;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.1614389130208258;  // std dev = 1.282, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.39596752066673635;  // std dev = 0.194, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07964400262995237;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( projectmember(E, B), student(A) )
%   | then return 0.37863196611769145;  // std dev = 0.306, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( hasposition(B, F), ta(G, A, H) )
%   | | then if ( publication(I, A) )
%   | | | then return -0.07420629974314281;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.268344603636746;  // std dev = 0.120, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(J, B), student(A) )
%   | | | then return -0.30863343911883995;  // std dev = 0.683, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05994848782919825;  // std dev = 0.740, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( ta(C, A, D), hasposition(B, E) )
%   then if ( tempadvisedby(F, B), ta(G, F, D) )
%   | then return -0.11520450354884171;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( ta(H, I, D), publication(J, I) )
%   | | then return 0.21846980867712543;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.31686277139756974;  // std dev = 0.238, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(B), publication(K, B) )
%   | then if ( publication(K, L), projectmember(M, L) )
%   | | then return -0.3007879334387419;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.04569873637854405;  // std dev = 0.760, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(N, A) )
%   | | then if ( professor(A), student(B) )
%   | | | then return -0.06999368828127434;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.14105548756087524;  // std dev = 0.421, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( ta(P, A, Q) )
%   | | | then return -0.11041158275095919;  // std dev = 0.383, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.029475104610411203;  // std dev = 0.562, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.24724644729347073;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, B), projectmember(G, B) )
%   | | | then return 0.08781505568658295;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1051319333109413;  // std dev = 1.782, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else return -0.0681416997861231;  // std dev = 0.023, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.810', 'seconds']
Refined model CLL: -0.247136


******************************************
Best model found
******************************************
Results 

CLL : -0.269685 

AUC ROC : 0.935867 

AUC PR : 0.205999 

Precision : 0.124514 

Recall : 0.989691 

F1 : 0.221198 

Total Learning Time : 4.773 

Total Inference Time : 0.8220982551574707 

Total revision time: 6.741041465759277
Best scored revision CLL: -0.247136


Results 

CLL : -0.269685 

AUC ROC : 0.935867 

AUC PR : 0.205999 

Precision : 0.124514 

Recall : 0.989691 

F1 : 0.221198 

Total Learning Time : 6.821871801376343 

Total Inference Time : 0.8220982551574707 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.901
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.485, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1547591045910363;  // std dev = 4.962, 118.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.467, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.202830139346547;  // std dev = 4.716, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16597055038859607;  // std dev = 0.479, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.12498046633640313;  // std dev = 0.475, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05892274243356133;  // std dev = 4.953, 117.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.09539380702477598;  // std dev = 4.782, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.476, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.08763938218812094;  // std dev = 4.743, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.434', 'seconds']
Parameter learned model CLL:-0.355632 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.962, 83, 35]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.716, 61, 35]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.479, 63, 35]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.475, 67, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.953, 82, 35]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.782, 66, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.743, 63, 35], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.20863257684573536], 'false': [nan, 0.20863257684573536], 'false,false': [nan, 0.20863257684573536]}
{}
{'': [nan, 0.23166232638888928], 'false': [nan, 0.23166232638888928]}
{'': [nan, 0.22959183673469263]}
{'': [0.22539407920030793, nan]}
{'': [nan, 0.20965738914456794]}
{'': [0.22644838741299933, nan]}
{}
{'': [0.22959183673469344, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 145.046
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( ta(G, A, H), publication(I, A) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4581489350995123;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   else return -0.1418510649004877;  // std dev = 4.21e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.5080691102000149;  // std dev = 2.952, 48.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=35 */
%   | | | else return -0.12544463852839136;  // std dev = 1.83e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6067764017540023;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.19251009575532144;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.19715400990429716;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.7243958992445765;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.40780041454994653;  // std dev = 1.871, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.11231637819360636;  // std dev = 1.83e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, B), ta(G, A, H) )
%   | | | then return 0.06170512351370714;  // std dev = 1.527, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.31050211731826616;  // std dev = 2.622, 40.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | else return -0.10159632948783634;  // std dev = 1.05e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( student(A), tempadvisedby(D, B) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.39993946945643766;  // std dev = 0.100, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(F, D) )
%   | | | then return -0.016628908229218736;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.26457496643291406;  // std dev = 1.652, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else if ( professor(B), publication(G, B) )
%   | | then if ( professor(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.2560805555956347;  // std dev = 1.431, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( student(B) )
%   | | | then return -0.09269127618926107;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.1333150935686979;  // std dev = 1.415, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F), publication(G, B) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.34645939503484946;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1651424672468681;  // std dev = 1.089, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.24131763926560756;  // std dev = 1.218, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.43505778015506585;  // std dev = 0.900, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return -0.08501181464807159;  // std dev = 0.005, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tempadvisedby(D, B), student(A) )
%   | then if ( ta(E, A, F), publication(G, B) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.2726738845134088;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2902585595833775;  // std dev = 0.223, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.3942242572618368;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1394499047944255;  // std dev = 1.475, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | else if ( publication(I, B), professor(B) )
%   | | then if ( professor(A) )
%   | | | then return -0.07878930583366138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.07948259635950818;  // std dev = 1.587, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( professor(B), publication(J, A) )
%   | | | then return -0.2964608465554957;  // std dev = 0.893, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.07638332111505691;  // std dev = 1.002, 55.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=2 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( tempadvisedby(E, B), publication(F, A) )
%   | then if ( publication(G, E), publication(G, B) )
%   | | then return 0.09513559239904548;  // std dev = 0.347, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.3157317528251819;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19532396903933982;  // std dev = 0.265, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( student(A), professor(B) )
%   | | then if ( ta(I, A, J), publication(K, B) )
%   | | | then return 0.16932148190291793;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.015655784465610067;  // std dev = 2.552, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | else return -0.07341673188511792;  // std dev = 0.000162, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, A) )
%   | | then return 0.18873973265586813;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.20822289148190692;  // std dev = 1.072, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.20922765744321206;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.016797680633751012;  // std dev = 1.392, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.3764357222022022;  // std dev = 0.106, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.21665227873857495;  // std dev = 0.838, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06875840110743855;  // std dev = 0.009, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( tempadvisedby(E, B), publication(F, B) )
%   | then if ( student(A) )
%   | | then if ( ta(G, E, H) )
%   | | | then return 0.07273538131386036;  // std dev = 1.029, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.2229794283610978;  // std dev = 0.208, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.08232751043033047;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( projectmember(I, B), publication(J, A) )
%   | | then return 0.2549515022444541;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(K, B), student(A) )
%   | | | then return -0.24453967308358496;  // std dev = 1.210, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.03912218436778166;  // std dev = 1.911, 67.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.182', 'seconds']
Refined model CLL: -0.225375


******************************************
Best model found
******************************************
Results 

CLL : -0.211738 

AUC ROC : 0.938235 

AUC PR : 0.354889 

Precision : 0.190184 

Recall : 0.794872 

F1 : 0.306931 

Total Learning Time : 145.046 

Total Inference Time : 6.560622215270996 

Total revision time: 153.623367521286
Best scored revision CLL: -0.225375


Results 

CLL : -0.211738 

AUC ROC : 0.938235 

AUC PR : 0.354889 

Precision : 0.190184 

Recall : 0.794872 

F1 : 0.306931 

Total Learning Time : 153.65624544334412 

Total Inference Time : 6.560622215270996 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.577
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.479, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16117923812981516;  // std dev = 3.734, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.462, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1822020006230761;  // std dev = 3.620, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11870728599684734;  // std dev = 0.462, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.1492891316404434;  // std dev = 0.479, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.094363433399802;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.0881659043401042;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.465, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.09589121207076652;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.388', 'seconds']
Parameter learned model CLL:-0.388642 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.734, 46, 20]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.62, 38, 20]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.462, 45, 20]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.479, 36, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.666, 41, 20]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.636, 39, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.568, 35, 20], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2112029384756653], 'false': [nan, 0.2112029384756653], 'false,false': [nan, 0.2112029384756653]}
{}
{'': [nan, 0.22592152199762186], 'false': [nan, 0.22592152199762186]}
{'': [nan, 0.21301775147929022]}
{'': [0.22959183673469433, nan]}
{'': [nan, 0.22037086804622483]}
{'': [0.22407354208560717, nan]}
{}
{'': [0.23140495867768635, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 16.978
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(E, B), publication(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.1418510649004877;  // std dev = 3.94e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), publication(G, B) )
%   | | | then return 0.4920190807926842;  // std dev = 1.999, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return -0.10646514552020558;  // std dev = 0.909, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6105992859229391;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.110599285922939;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.6560568609880015;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.35277855931620755;  // std dev = 1.072, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11666794543503455;  // std dev = 0.075, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return 0.5082330909607554;  // std dev = 0.146, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.29762743674157105;  // std dev = 1.547, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else return -0.107043797026301;  // std dev = 0.096, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.3819615944213546;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( tempadvisedby(E, B), publication(F, A) )
%   | | | then return -0.04214982535286638;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12806956546200246;  // std dev = 1.625, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else return -0.09503907165979612;  // std dev = 0.064, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A) )
%   | | then if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.39856668123106664;  // std dev = 0.171, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22020044966605712;  // std dev = 1.068, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.19678597561432695;  // std dev = 0.991, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.19096155921934885;  // std dev = 1.026, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.09371871256260197;  // std dev = 0.137, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H), ta(G, I, F) )
%   | | | then return -0.22894364028026096;  // std dev = 0.914, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.15796786328753054;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.14495678036510418;  // std dev = 0.867, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.26678782785767985;  // std dev = 0.701, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.08039655451486796;  // std dev = 0.055, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( ta(F, A, G) )
%   | | then if ( ta(H, I, G), tempadvisedby(I, J) )
%   | | | then return 0.3549071239705641;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.26231790596945603;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(E, A), student(A) )
%   | | | then return 0.21855475118414525;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.02824552873092465;  // std dev = 0.959, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( professor(B), student(A) )
%   | | then return -0.13765287153519992;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.07302110484727925;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then return 0.1917657814726248;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(E, A, F) )
%   | | then return 0.252912861167419;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3515835518435506;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( publication(G, B), publication(G, A) )
%   | then if ( publication(G, H), tempadvisedby(I, H) )
%   | | then return 0.17411733373770868;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.013073179607178584;  // std dev = 0.199, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(J, A), ta(K, A, L) )
%   | | then return -0.20565018680716132;  // std dev = 0.823, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( student(B) )
%   | | | then return -0.06822988911444193;  // std dev = 7.45e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.040089712444150806;  // std dev = 0.795, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( ta(E, A, F), professor(B) )
%   | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | then return 0.16852879596980128;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.24095258758158875;  // std dev = 0.132, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(J, A), student(A) )
%   | | then if ( tempadvisedby(K, B) )
%   | | | then return -0.19029711495132018;  // std dev = 0.941, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.0055686563066482085;  // std dev = 0.700, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( professor(B), publication(L, B) )
%   | | | then return -0.13634864154097154;  // std dev = 1.015, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.06469843963214454;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.878', 'seconds']
Refined model CLL: -0.186064


******************************************
Best model found
******************************************
Results 

CLL : -0.247243 

AUC ROC : 0.940833 

AUC PR : 0.228021 

Precision : 0.157428 

Recall : 0.763441 

F1 : 0.261029 

Total Learning Time : 16.978 

Total Inference Time : 1.2766859531402588 

Total revision time: 19.38909285545349
Best scored revision CLL: -0.186064


Results 

CLL : -0.247243 

AUC ROC : 0.940833 

AUC PR : 0.228021 

Precision : 0.157428 

Recall : 0.763441 

F1 : 0.261029 

Total Learning Time : 19.421970777511596 

Total Inference Time : 1.2766859531402588 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.529
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.471, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.24945328292559932;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.476, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11531526138532507;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09803770933525276;  // std dev = 0.454, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.09202807525779481;  // std dev = 0.458, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03360475113013453;  // std dev = 2.586, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.10390835264895734;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.495, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.18026264702843933;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.698', 'seconds']
Parameter learned model CLL:-0.416779 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.341, 14, 9]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.527, 22, 9]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.454, 22, 9]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.458, 21, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [2.586, 26, 9]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [2.449, 18, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [2.268, 12, 9], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23818525519848777], 'false': [nan, 0.23818525519848777], 'false,false': [nan, 0.23818525519848777]}
{}
{'': [nan, 0.20603537981269507], 'false': [nan, 0.20603537981269507]}
{'': [nan, 0.206035379812695]}
{'': [0.2100000000000001, nan]}
{'': [nan, 0.19102040816326538]}
{'': [0.22222222222222207, nan]}
{}
{'': [0.24489795918367332, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 2.01
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(F, B) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B) )
%   | | | then return 0.6514003679601833;  // std dev = 0.954, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.388195925366095;  // std dev = 0.868, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.6376514816253117;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.17664393417708557;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.49038796983619165;  // std dev = 0.130, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( student(A), professor(B) )
%   | then return 0.3829725787753577;  // std dev = 0.141, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( professor(A), publication(D, B) )
%   | | then return -0.28633736517742087;  // std dev = 0.237, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F) )
%   | | then return 0.29993239121184495;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.14456195811478423;  // std dev = 0.840, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then return -0.20164504095812383;  // std dev = 0.233, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.2411252894640266;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2676686450823255;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07620748247563115;  // std dev = 0.024, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then return -0.05659707943992698;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.21697638945791234;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07201558542709859;  // std dev = 0.013, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.2175154963215272;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16921425684153882;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( tempadvisedby(D, A) )
%   | then return -0.1732370449026931;  // std dev = 0.256, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06712950174216618;  // std dev = 0.012, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( student(A), professor(B) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return 0.18291148156488263;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.14678369519702952;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( professor(A), publication(F, B) )
%   | | then return -0.1563360294951626;  // std dev = 0.258, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06374609303274059;  // std dev = 0.009, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.968', 'seconds']
Refined model CLL: -0.204493


******************************************
Best model found
******************************************
Results 

CLL : -0.421942 

AUC ROC : 0.905845 

AUC PR : 0.120341 

Precision : 0.118316 

Recall : 1.0 

F1 : 0.211597 

Total Learning Time : 2.01 

Total Inference Time : 0.5075240135192871 

Total revision time: 3.4574377193450925
Best scored revision CLL: -0.204493


Results 

CLL : -0.421942 

AUC ROC : 0.905845 

AUC PR : 0.120341 

Precision : 0.118316 

Recall : 1.0 

F1 : 0.211597 

Total Learning Time : 3.490315641403198 

Total Inference Time : 0.5075240135192871 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.794
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.465, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18814893509951094;  // std dev = 4.702, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.468, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1479539381406812;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20498514948430066;  // std dev = 0.488, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.22478469981305943;  // std dev = 0.497, 74.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09255398155619536;  // std dev = 4.614, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.056152040160015716;  // std dev = 4.678, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.462, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.034677050794885;  // std dev = 4.714, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.650', 'seconds']
Parameter learned model CLL:-0.3741 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.702, 67, 33]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.757, 72, 33]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.488, 51, 33]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.497, 41, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.614, 60, 33]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.678, 65, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.714, 68, 33], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2211000000000014], 'false': [nan, 0.2211000000000014], 'false,false': [nan, 0.2211000000000014]}
{}
{'': [nan, 0.21551020408163318], 'false': [nan, 0.21551020408163318]}
{'': [nan, 0.23852040816326397]}
{'': [0.24707815924032214, nan]}
{'': [nan, 0.22892819979188356]}
{'': [0.22334443981674285, nan]}
{}
{'': [0.2199784334869125, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 55.879
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( tempadvisedby(G, B), ta(H, A, I) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.14185106490048768;  // std dev = 5.16e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.4741557299577842;  // std dev = 2.989, 46.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=33 */
%   | | | else return -0.12544463852839152;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(D, E), ta(F, E, G) )
%   | | then if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.36483812822810313;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5772900701470381;  // std dev = 0.854, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( publication(C, B) )
%   | | | then return 0.2148381282281031;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.12006494114235322;  // std dev = 0.964, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( tempadvisedby(I, B), ta(J, A, K) )
%   | | then if ( ta(J, L, M), publication(N, L) )
%   | | | then return 0.4551849082752115;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11018171762209002;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.6361295699016069;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1123163781936064;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, A), publication(F, B) )
%   | | | then return 0.4357004617361055;  // std dev = 0.954, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.2534529548999951;  // std dev = 2.398, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), publication(D, B) )
%   | then if ( publication(D, A), student(A) )
%   | | then return 0.39881475296705354;  // std dev = 0.132, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.27970324125362045;  // std dev = 1.574, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return -0.008596353823889694;  // std dev = 1.735, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( ta(G, A, H), publication(I, A) )
%   | | then return -0.015719706039841543;  // std dev = 0.204, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( student(B) )
%   | | | then return -0.092691276189261;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.36221444065744457;  // std dev = 0.351, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return -0.03834240188949304;  // std dev = 0.780, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22754765908615449;  // std dev = 0.996, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | | then return -0.06386732799288926;  // std dev = 1.224, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.14932128753932505;  // std dev = 2.270, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | else return -0.08735765693390185;  // std dev = 0.023, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H), ta(E, I, H) )
%   | | | then return 0.05096253536319484;  // std dev = 0.554, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.33954577860200263;  // std dev = 0.898, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( publication(J, A), ta(K, A, L) )
%   | | | then return -0.03858926969522647;  // std dev = 1.061, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.093195968667477;  // std dev = 2.241, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | else return -0.07951430228945876;  // std dev = 0.026, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( ta(E, A, F), professor(B) )
%   | then if ( ta(E, G, H), tempadvisedby(G, I) )
%   | | then if ( ta(E, J, F), ta(E, J, H) )
%   | | | then return 0.1392580977303556;  // std dev = 0.947, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.08924695131479968;  // std dev = 1.063, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(K, A), publication(L, B) )
%   | | | then return 0.21393100967843998;  // std dev = 0.714, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3892429084401615;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(M, B), publication(M, A) )
%   | | then if ( student(A), professor(B) )
%   | | | then return 0.25383557468291584;  // std dev = 0.093, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.07681192781947468;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( publication(N, B), tempadvisedby(P, B) )
%   | | | then return -0.03486563991280085;  // std dev = 1.163, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.08764873030159284;  // std dev = 1.444, 58.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( ta(F, G, D), publication(E, G) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return -0.04154167485876353;  // std dev = 0.968, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.30881664583065743;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.3395207076333952;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.34118729464686365;  // std dev = 1.331, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( tempadvisedby(J, B) )
%   | | then if ( ta(K, J, L) )
%   | | | then return 0.14360879136769067;  // std dev = 0.779, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.034276271033915895;  // std dev = 1.181, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( publication(M, A), publication(M, B) )
%   | | | then return 0.19457889107891557;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2642004281652918;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.0690191304038222;  // std dev = 0.026, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), publication(E, A) )
%   | then if ( publication(E, B) )
%   | | then return 0.19645585189144948;  // std dev = 0.119, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return -0.07428707483904022;  // std dev = 0.993, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.14629792529258806;  // std dev = 0.857, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( ta(H, A, I), publication(J, B) )
%   | | then if ( professor(B) )
%   | | | then return 0.05946197986022686;  // std dev = 1.469, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return -0.06521709636986145;  // std dev = 0.007, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( student(B) )
%   | | | then return -0.06343131565929991;  // std dev = 0.006, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.21624842243962794;  // std dev = 1.467, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.654', 'seconds']
Refined model CLL: -0.221188


******************************************
Best model found
******************************************
Results 

CLL : -0.213534 

AUC ROC : 0.950794 

AUC PR : 0.403605 

Precision : 0.182278 

Recall : 0.9 

F1 : 0.303158 

Total Learning Time : 55.879 

Total Inference Time : 6.654285907745361 

Total revision time: 64.32795157241821
Best scored revision CLL: -0.221188


Results 

CLL : -0.213534 

AUC ROC : 0.950794 

AUC PR : 0.403605 

Precision : 0.182278 

Recall : 0.9 

F1 : 0.303158 

Total Learning Time : 64.36082949447632 

Total Inference Time : 6.654285907745361 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.636
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.483, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1914822684328457;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.466, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13509228368437914;  // std dev = 3.342, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1540030109116634;  // std dev = 0.474, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.08538189533221621;  // std dev = 0.457, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16476888348491892;  // std dev = 3.123, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.1347022831129997;  // std dev = 3.123, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.483, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.008910483320457532;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.292', 'seconds']
Parameter learned model CLL:-0.374831 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.266, 32, 16]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.342, 37, 16]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.474, 31, 16]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.457, 38, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.123, 25, 16]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.123, 25, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.368, 39, 16], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.22222222222222174], 'false': [nan, 0.22222222222222174], 'false,false': [nan, 0.22222222222222174]}
{}
{'': [nan, 0.21075115699537164], 'false': [nan, 0.21075115699537164]}
{'': [nan, 0.22453598913535552]}
{'': [0.2085048010973932, nan]}
{'': [nan, 0.2379535990481858]}
{'': [0.2379535990481851, nan]}
{}
{'': [0.20628099173553674, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 18.28
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), tempadvisedby(E, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(D, F), inphase(F, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( ta(H, A, I) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( student(A), professor(B) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.14185106490048782;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(B, G), student(A) )
%   | | | then return 0.47175100122518027;  // std dev = 2.041, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return -0.10159890941296969;  // std dev = 0.951, 35.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then if ( ta(D, F, E), tempadvisedby(F, G) )
%   | | then return -0.013111485790321065;  // std dev = 0.841, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(D, C, H) )
%   | | | then return 0.6154074398476872;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2113595590803962;  // std dev = 1.280, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( projectmember(I, B) )
%   | | then return 0.6726290513906749;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.4112826113725494;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15951817427964984;  // std dev = 1.293, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.11471589990932383;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( projectmember(F, B), ta(G, A, H) )
%   | | | then return -0.08654569226400483;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.38119822372285644;  // std dev = 1.706, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else return -0.10357061478600474;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), projectmember(E, B) )
%   | | then return -0.04632012095525343;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.3375435792202637;  // std dev = 1.228, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.5325682049224699;  // std dev = 0.282, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09434189616964665;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( hasposition(B, E), student(A) )
%   | then if ( ta(F, A, G), publication(H, A) )
%   | | then return -0.06671800595937023;  // std dev = 0.736, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.3371025566073327;  // std dev = 0.986, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.10578307984584187;  // std dev = 1.142, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( publication(K, A), student(A) )
%   | | then return -0.1384596753509576;  // std dev = 0.232, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( professor(B) )
%   | | | then return -0.017835032867700152;  // std dev = 0.763, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.08658384114522504;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(G, H, E), publication(I, H) )
%   | | | then return 0.19311442193624292;  // std dev = 0.690, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.14736373874508707;  // std dev = 1.289, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.16444293911470478;  // std dev = 0.589, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4023329202476542;  // std dev = 0.313, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.08090504064853996;  // std dev = 0.012, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( tempadvisedby(E, B), publication(F, B) )
%   | then if ( ta(G, E, H), ta(G, A, I) )
%   | | then return 0.01444387286345436;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.38837910808701964;  // std dev = 0.260, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.18950624325618393;  // std dev = 0.329, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( ta(L, A, M) )
%   | | then if ( professor(B) )
%   | | | then return -0.24076702665359032;  // std dev = 1.026, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.07390547387303698;  // std dev = 0.003, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.34026971360305686;  // std dev = 0.301, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07470889769554033;  // std dev = 0.007, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, A), projectmember(D, B) )
%   then return -0.4431979786034342;  // std dev = 0.516, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( projectmember(E, B) )
%   | then return 0.11595003465585536;  // std dev = 0.763, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.1600586313192122;  // std dev = 0.442, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(G, B), student(A) )
%   | | | then return -0.2766448979949234;  // std dev = 1.575, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.03301510583044244;  // std dev = 0.920, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( publication(E, B), publication(E, A) )
%   | then return 0.13888570106825376;  // std dev = 0.406, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( publication(F, A), professor(B) )
%   | | then return -0.25768165135968435;  // std dev = 0.432, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(G, B), ta(H, A, I) )
%   | | | then return 0.036617744318875704;  // std dev = 1.517, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.08424847633519936;  // std dev = 1.119, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.064', 'seconds']
Refined model CLL: -0.233508


******************************************
Best model found
******************************************
Results 

CLL : -0.252286 

AUC ROC : 0.945211 

AUC PR : 0.24974 

Precision : 0.124654 

Recall : 0.927835 

F1 : 0.21978 

Total Learning Time : 18.28 

Total Inference Time : 1.518301248550415 

Total revision time: 21.02046000099182
Best scored revision CLL: -0.233508


Results 

CLL : -0.252286 

AUC ROC : 0.945211 

AUC PR : 0.24974 

Precision : 0.124654 

Recall : 0.927835 

F1 : 0.21978 

Total Learning Time : 21.053337923049927 

Total Inference Time : 1.518301248550415 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.749
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.451, 123.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2189736773675522;  // std dev = 4.730, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.466, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1595385004285366;  // std dev = 4.842, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14211001557491604;  // std dev = 0.473, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.1188823082720541;  // std dev = 0.473, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09475607115140265;  // std dev = 4.830, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.06785990274051071;  // std dev = 4.864, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.465, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.01064146362478504;  // std dev = 5.020, 125.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '869', 'milliseconds']
Parameter learned model CLL:-0.335398 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.73, 62, 35]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.842, 71, 35]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.473, 69, 35]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.473, 69, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.83, 70, 35]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.864, 73, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [5.02, 90, 35], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23063024763524434], 'false': [nan, 0.23063024763524434], 'false,false': [nan, 0.23063024763524434]}
{}
{'': [nan, 0.22116411534353844], 'false': [nan, 0.22116411534353844]}
{'': [nan, 0.22328032544378712]}
{'': [0.22328032544378681, nan]}
{'': [nan, 0.22222222222222204]}
{'': [0.21905006858710668, nan]}
{}
{'': [0.20159999999999925, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 32.535
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.46529179224236944;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   else return -0.1418510649004877;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.5613289275063683;  // std dev = 2.538, 44.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=35 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5939990299495681;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.09167018789999522;  // std dev = 0.859, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return 0.10721612586636842;  // std dev = 1.058, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.38620096291395795;  // std dev = 2.236, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.11231637819360642;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( ta(F, A, G), publication(H, B) )
%   | | | then return 0.13432473352630825;  // std dev = 1.381, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.4133414795325239;  // std dev = 1.795, 34.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=29 */
%   | | else return -0.10159632948783633;  // std dev = 1.49e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( student(A), professor(B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D), publication(E, B) )
%   | | | then return 0.06019295032725928;  // std dev = 1.222, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.4080726029888483;  // std dev = 0.270, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.1767484749819357;  // std dev = 1.647, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.006540417470721982;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B) )
%   | | then if ( publication(F, B), publication(F, A) )
%   | | | then return 0.2976665900080543;  // std dev = 0.182, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.01155671466891261;  // std dev = 1.997, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.4778044972021505;  // std dev = 0.206, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3445541485151254;  // std dev = 0.960, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.16634301885067174;  // std dev = 1.007, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.056236479031444325;  // std dev = 1.447, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.37333391100513047;  // std dev = 0.195, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.18096947818617912;  // std dev = 1.249, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( tempadvisedby(E, B), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then if ( publication(H, E), publication(F, A) )
%   | | | then return 0.22353658211370636;  // std dev = 0.131, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.07962303545603487;  // std dev = 0.504, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.3628679055434301;  // std dev = 0.511, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( publication(I, A), professor(B) )
%   | | then if ( ta(J, A, K) )
%   | | | then return -0.371088161323384;  // std dev = 1.185, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.06764281162974281;  // std dev = 1.253, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.08701807451507709;  // std dev = 1.536, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return -0.07324622576333704;  // std dev = 1.05e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), publication(D, A) )
%   then if ( publication(D, B) )
%   | then return 0.18450386167476088;  // std dev = 0.123, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.09068658520706632;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( publication(E, A), professor(B) )
%   | then if ( publication(F, B) )
%   | | then if ( publication(E, G), publication(F, G) )
%   | | | then return -0.4754568038563316;  // std dev = 0.747, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.08925655723003945;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.3981127596105649;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( professor(B), student(A) )
%   | | then if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return -0.22980466051105797;  // std dev = 1.018, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.02658102404761121;  // std dev = 1.927, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | else return -0.06842697784420272;  // std dev = 5.27e-09, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( projectmember(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.08566658651519737;  // std dev = 0.829, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.41881530997942473;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(G, A, H), publication(I, A) )
%   | | | then return -0.013491647400496909;  // std dev = 0.991, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.17181724395378095;  // std dev = 1.584, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | else return -0.06461210811482491;  // std dev = 0.050, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.834', 'seconds']
Refined model CLL: -0.233937


******************************************
Best model found
******************************************
Results 

CLL : -0.228092 

AUC ROC : 0.943646 

AUC PR : 0.400344 

Precision : 0.195531 

Recall : 0.897436 

F1 : 0.321101 

Total Learning Time : 32.535 

Total Inference Time : 2.679335117340088 

Total revision time: 36.811613162994384
Best scored revision CLL: -0.233937


Results 

CLL : -0.228092 

AUC ROC : 0.943646 

AUC PR : 0.400344 

Precision : 0.195531 

Recall : 0.897436 

F1 : 0.321101 

Total Learning Time : 36.83000405693054 

Total Inference Time : 2.679335117340088 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.597
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.458, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17560925255982957;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.497, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18022736394347838;  // std dev = 3.620, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05909854738994365;  // std dev = 0.433, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.12767205589181485;  // std dev = 0.469, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11191029625574282;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.11582766425707262;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.473, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.04454127765266233;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.105', 'seconds']
Parameter learned model CLL:-0.371864 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.695, 43, 20]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.62, 38, 20]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.433, 60, 20]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.469, 41, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.651, 40, 20]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.586, 36, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.721, 45, 20], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2166792642983115], 'false': [nan, 0.2166792642983115], 'false,false': [nan, 0.2166792642983115]}
{}
{'': [nan, 0.22592152199762208], 'false': [nan, 0.22592152199762208]}
{'': [nan, 0.18750000000000003]}
{'': [0.22037086804622366, nan]}
{'': [nan, 0.22222222222222227]}
{'': [0.22959183673469402, nan]}
{}
{'': [0.2130177514792896, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 6.176
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.1418510649004877;  // std dev = 3.16e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B) )
%   | | | then return 0.46256996681282025;  // std dev = 2.308, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), publication(G, A) )
%   | | | then return 0.7117060217151042;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6300928091222735;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.6175781021875136;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.13009280912227347;  // std dev = 1.257, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.04908856447915296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.12316373397772608;  // std dev = 0.135, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.5204012701499127;  // std dev = 0.220, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3669073055354581;  // std dev = 1.189, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return -0.10873532214363865;  // std dev = 0.126, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( student(A), professor(B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.35799572132275675;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.298354390961071;  // std dev = 0.894, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.053815913981516736;  // std dev = 1.440, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return -0.09444341129111607;  // std dev = 0.085, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return 0.12791095374347164;  // std dev = 0.927, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(G, A), publication(G, B) )
%   | | | then return 0.2824766015694621;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3971936263972442;  // std dev = 0.281, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.08525657219849199;  // std dev = 0.057, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.23034239287334415;  // std dev = 0.047, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( ta(E, A, F), publication(G, A) )
%   | | | then return 0.30831830810493693;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.046362570794468524;  // std dev = 1.713, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else return -0.08171264816209915;  // std dev = 0.089, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return 0.35441656618085055;  // std dev = 0.237, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.22404478483840923;  // std dev = 0.115, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.02924069118752093;  // std dev = 1.335, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | else return -0.07171709543109685;  // std dev = 7.45e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( publication(D, A), ta(E, A, F) )
%   | then return -0.03704189961564899;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(G, A) )
%   | | then return 0.16610669257332553;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.30526945554213186;  // std dev = 0.246, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(H, B), publication(H, A) )
%   | then return 0.1381470122254134;  // std dev = 0.290, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( professor(B) )
%   | | then if ( publication(I, B), publication(J, A) )
%   | | | then return -0.047379128740028344;  // std dev = 0.242, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.2424062464963855;  // std dev = 1.070, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.0670868233663155;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( student(A), publication(E, B) )
%   | then if ( professor(B), publication(E, A) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return -0.05914067377137742;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.17042360800521988;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(G, B), publication(E, G) )
%   | | | then return -0.2992170776908184;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.017368153633473486;  // std dev = 1.148, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(H, A), tempadvisedby(I, B) )
%   | | | then return -0.15595342527343178;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1368149926229976;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.06378805917670646;  // std dev = 0.013, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.284', 'seconds']
Refined model CLL: -0.203438


******************************************
Best model found
******************************************
Results 

CLL : -0.267094 

AUC ROC : 0.940918 

AUC PR : 0.225188 

Precision : 0.136725 

Recall : 0.924731 

F1 : 0.238227 

Total Learning Time : 6.176 

Total Inference Time : 0.9892029762268066 

Total revision time: 8.308203695297241
Best scored revision CLL: -0.203438


Results 

CLL : -0.267094 

AUC ROC : 0.940918 

AUC PR : 0.225188 

Precision : 0.136725 

Recall : 0.924731 

F1 : 0.238227 

Total Learning Time : 8.326594589233398 

Total Inference Time : 0.9892029762268066 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.498
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.499, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.471, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15463406266011975;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18559541492586099;  // std dev = 0.484, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.07077216505527088;  // std dev = 0.454, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1966540434038213;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.031228033303657317;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.04647511408026648;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.199', 'seconds']
Parameter learned model CLL:-0.417599 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.449, 18, 9]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.471, 19, 9]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.484, 15, 9]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.454, 22, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [2.268, 12, 9]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [2.51, 21, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [2.471, 19, 9], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2222222222222223], 'false': [nan, 0.2222222222222223], 'false,false': [nan, 0.2222222222222223]}
{}
{'': [nan, 0.21811224489795905], 'false': [nan, 0.21811224489795905]}
{'': [nan, 0.23437500000000022]}
{'': [0.20603537981269532, nan]}
{'': [nan, 0.2448979591836735]}
{'': [0.20999999999999988, nan]}
{}
{'': [0.21811224489795908, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 1.545
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B) )
%   | | | then return 0.6194734122109542;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.24657026145570757;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.5799035947890409;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1180873551245476;  // std dev = 0.095, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.13029558127461985;  // std dev = 0.852, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4715308949558937;  // std dev = 0.109, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.10107079611903048;  // std dev = 8.33e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.43035393813686657;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.10449137347405688;  // std dev = 0.429, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return -0.09705937461878243;  // std dev = 0.118, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B) )
%   | then return 0.3287200011963401;  // std dev = 0.107, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.08443856573122545;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then return 0.2609773405832215;  // std dev = 0.095, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.0898458192133498;  // std dev = 0.170, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B) )
%   | then return 0.2140626826784255;  // std dev = 0.083, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.07190437807953784;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.18038276728415617;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( professor(A) )
%   | then return -0.1375082606722362;  // std dev = 0.172, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06725114173014989;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), ta(E, A, F) )
%   | then return -0.17025471259119707;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( student(B) )
%   | | then return -0.062145539884822465;  // std dev = 0.008, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.14896160480285067;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.049', 'seconds']
Refined model CLL: -0.199176


******************************************
Best model found
******************************************
Results 

CLL : -0.415349 

AUC ROC : 0.900479 

AUC PR : 0.112983 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 1.545 

Total Inference Time : 0.48294782638549805 

Total revision time: 2.9438824825286867
Best scored revision CLL: -0.199176


Results 

CLL : -0.415349 

AUC ROC : 0.900479 

AUC PR : 0.112983 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.962273376464844 

Total Inference Time : 0.48294782638549805 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.699
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.477, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2207862977368736;  // std dev = 4.586, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.481, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1998796470705847;  // std dev = 4.557, 89.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13909021086639697;  // std dev = 0.474, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.11581264161838806;  // std dev = 0.474, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09855973367308922;  // std dev = 4.654, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.08717854126675709;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.484, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.05904174488874265;  // std dev = 4.666, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.011', 'seconds']
Parameter learned model CLL:-0.366164 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.586, 58, 33]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.557, 56, 33]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.474, 64, 33]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.474, 64, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.654, 63, 33]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.628, 61, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.666, 64, 33], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23113150585678202], 'false': [nan, 0.23113150585678202], 'false,false': [nan, 0.23113150585678202]}
{}
{'': [nan, 0.23330387577326145], 'false': [nan, 0.23330387577326145]}
{'': [nan, 0.22446593686895608]}
{'': [0.2244659368689552, nan]}
{'': [nan, 0.2255859375000007]}
{'': [0.22781801720235428, nan]}
{}
{'': [0.2244659368689553, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 10.222
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(D, E), ta(F, E, G) )
%   | | then if ( tempadvisedby(H, B), ta(I, H, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( publication(C, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( tempadvisedby(J, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7470378239884012;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.14185106490048768;  // std dev = 5.37e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.4368443887509699;  // std dev = 3.100, 48.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=33 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6481629603080441;  // std dev = 0.114, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.23108322452634092;  // std dev = 1.522, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.06168719128206172;  // std dev = 1.139, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( ta(I, A, J), publication(K, A) )
%   | | | then return 0.41675360424113794;  // std dev = 0.717, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3008403611319184;  // std dev = 1.837, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   else return -0.11231637819360642;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, A), publication(F, B) )
%   | | | then return 0.4914642314455152;  // std dev = 0.126, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.23099760273962713;  // std dev = 2.588, 32.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   | | else return -0.1015963294878363;  // std dev = 1.05e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.09190951764211423;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3624316023292558;  // std dev = 0.086, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return 0.3371687656918173;  // std dev = 0.937, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.059708238937010605;  // std dev = 2.494, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(F, B) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.1643667965992916;  // std dev = 1.370, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.056158558520837294;  // std dev = 1.590, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.04336332953240934;  // std dev = 1.569, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.3130634972554635;  // std dev = 1.267, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return -0.08518475138839679;  // std dev = 1.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.2688944600104254;  // std dev = 0.163, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | | then return -0.005980086309651452;  // std dev = 1.582, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.18294938886807113;  // std dev = 1.881, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | else return -0.0787767547310917;  // std dev = 2.36e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B) )
%   | | then if ( publication(F, A), publication(F, B) )
%   | | | then return 0.23137252888547502;  // std dev = 0.129, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.0722488058981174;  // std dev = 2.102, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.13089836261190974;  // std dev = 1.082, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.2731640525033164;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.07324622576333704;  // std dev = 1.29e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(E, A) )
%   | | then return -0.07360245087161914;  // std dev = 0.571, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.31448322550214014;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(G, H), student(H) )
%   | | | then return 0.11811827036143929;  // std dev = 1.482, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.2537731549766391;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | | then return 0.10516292098112205;  // std dev = 1.348, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.32272597670629355;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06842697784420271;  // std dev = 7.45e-09, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), tempadvisedby(F, B) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.18194619267529677;  // std dev = 0.095, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.05577398036388158;  // std dev = 1.012, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | | then return 0.27396592414741966;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.16502289875980503;  // std dev = 1.412, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.672', 'seconds']
Refined model CLL: -0.233004


******************************************
Best model found
******************************************
Results 

CLL : -0.247582 

AUC ROC : 0.944413 

AUC PR : 0.339011 

Precision : 0.161765 

Recall : 0.9625 

F1 : 0.276978 

Total Learning Time : 10.222 

Total Inference Time : 1.414038896560669 

Total revision time: 13.058029647827148
Best scored revision CLL: -0.233004


Results 

CLL : -0.247582 

AUC ROC : 0.944413 

AUC PR : 0.339011 

Precision : 0.161765 

Recall : 0.9625 

F1 : 0.276978 

Total Learning Time : 13.076420541763305 

Total Inference Time : 1.414038896560669 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.541
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.469, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18467954734441033;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.483, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1819748385035036;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10371836231991204;  // std dev = 0.457, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.18102287362421515;  // std dev = 0.488, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16951231886821083;  // std dev = 3.072, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.09902104718068001;  // std dev = 3.170, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.474, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.05466302329800877;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.200', 'seconds']
Parameter learned model CLL:-0.399876 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.283, 33, 16]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.23, 30, 16]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.457, 38, 16]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.488, 25, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.072, 23, 16]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.17, 27, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.23, 30, 16], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.21990837151186954], 'false': [nan, 0.21990837151186954], 'false,false': [nan, 0.21990837151186954]}
{}
{'': [nan, 0.2268431001890354], 'false': [nan, 0.2268431001890354]}
{'': [nan, 0.20850480109739372]}
{'': [0.23795359904818586, nan]}
{'': [nan, 0.2419460880999342]}
{'': [0.23363980530016193, nan]}
{}
{'': [0.22684310018903622, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 9.177
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(G, H, E), publication(I, H) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.14185106490048774;  // std dev = 2.11e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.35652446468361254;  // std dev = 2.503, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7147689792588992;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( publication(F, G), projectmember(H, G) )
%   | | | then return 0.3089588004736428;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5334407823916786;  // std dev = 0.887, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(I, B) )
%   | | | then return -0.10770786619302386;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.25332971344970917;  // std dev = 1.066, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360636;  // std dev = 1.29e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.4873330763873722;  // std dev = 0.869, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.23170275798521167;  // std dev = 1.373, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(B, D), student(A) )
%   | then if ( publication(E, B), publication(E, A) )
%   | | then return 0.4454694468805722;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.3270984358801748;  // std dev = 0.831, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.017648672311769184;  // std dev = 1.671, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( professor(B), student(A) )
%   | | then return -0.22494746438953417;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( student(A), professor(B) )
%   | then if ( publication(E, B), tempadvisedby(F, B) )
%   | | then if ( publication(E, G), inphase(G, H) )
%   | | | then return 0.38668851362006684;  // std dev = 0.149, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.16409100922326997;  // std dev = 0.922, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.18521273898067217;  // std dev = 0.697, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1253184411284541;  // std dev = 1.284, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return -0.08518475138839685;  // std dev = 1.18e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(E, D, G) )
%   | | | then return 0.28344699463295775;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.067390977672122;  // std dev = 1.405, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.08789687015102414;  // std dev = 0.625, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.44077568580499865;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( publication(E, B), ta(F, A, G) )
%   | then if ( tempadvisedby(H, B), ta(F, H, I) )
%   | | then return 0.23017236359162765;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.35176996343052674;  // std dev = 0.098, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( professor(B), ta(J, A, K) )
%   | | then return -0.5626192732640309;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.19607405828439656;  // std dev = 0.934, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, B), professor(B) )
%   then if ( publication(D, A), tempadvisedby(E, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.11433296315560101;  // std dev = 0.213, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.3334919669409172;  // std dev = 0.533, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( tempadvisedby(F, B), student(A) )
%   | | then return 0.28236614185406667;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.19652414902150933;  // std dev = 0.320, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( student(A), publication(G, A) )
%   | then return -0.2298780749346227;  // std dev = 0.356, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( professor(B) )
%   | | then return 0.051454694071206064;  // std dev = 0.906, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.07494287688150296;  // std dev = 0.050, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( hasposition(B, E), student(A) )
%   | then if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | then if ( ta(I, J, H), publication(K, J) )
%   | | | then return 0.20384691728549437;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18359203389838166;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( projectmember(L, B) )
%   | | | then return 0.2509248738626125;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23037611087871498;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(M, A, N) )
%   | | then if ( ta(P, Q, N), publication(R, Q) )
%   | | | then return -0.06971431156809542;  // std dev = 0.042, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.12530635801465956;  // std dev = 0.337, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( professor(A) )
%   | | | then return -0.06510623563286028;  // std dev = 0.018, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.007210422978460383;  // std dev = 0.414, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.074', 'seconds']
Refined model CLL: -0.269269


******************************************
Best model found
******************************************
Results 

CLL : -0.256302 

AUC ROC : 0.947727 

AUC PR : 0.347384 

Precision : 0.144013 

Recall : 0.917526 

F1 : 0.248951 

Total Learning Time : 9.177 

Total Inference Time : 0.8863964080810547 

Total revision time: 11.143567865371704
Best scored revision CLL: -0.269269


Results 

CLL : -0.256302 

AUC ROC : 0.947727 

AUC PR : 0.347384 

Precision : 0.144013 

Recall : 0.917526 

F1 : 0.248951 

Total Learning Time : 11.161958759307861 

Total Inference Time : 0.8863964080810547 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.701
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.471, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23858371770820663;  // std dev = 4.657, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.466, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14765740377572564;  // std dev = 4.875, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16518288284124816;  // std dev = 0.480, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.0787773998058146;  // std dev = 0.459, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10291443429678042;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.026261982573060918;  // std dev = 5.012, 124.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.458, 117.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.09611289524318738;  // std dev = 4.743, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '866', 'milliseconds']
Parameter learned model CLL:-0.346369 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.657, 57, 35]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.875, 74, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.48, 62, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.459, 81, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.807, 68, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [5.012, 89, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.743, 63, 35], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23570415879017165], 'false': [nan, 0.23570415879017165], 'false,false': [nan, 0.23570415879017165]}
{}
{'': [nan, 0.21799511825603948], 'false': [nan, 0.21799511825603948]}
{'': [nan, 0.23063024763524312]}
{'': [0.21068668252080752, nan]}
{'': [nan, 0.2243378263738342]}
{'': [0.20258844953173774, nan]}
{}
{'': [0.22959183673469374, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 6.642
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( projectmember(H, B), publication(I, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3196873966379738;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else return -0.14185106490048774;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.4382773117427391;  // std dev = 3.271, 52.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=35 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.6232988081787361;  // std dev = 2.11e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.6232988081787361;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.37329880817873606;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | then return -0.1389080624149598;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.1417574856762952;  // std dev = 1.444, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.4262589708057307;  // std dev = 2.075, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   else return -0.11231637819360638;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, B), publication(F, A) )
%   | | | then return 0.48347979123764195;  // std dev = 0.096, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.16505732891312583;  // std dev = 3.004, 40.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=21 */
%   | | else return -0.10159632948783631;  // std dev = 1.97e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), ta(E, A, F) )
%   | | then return 0.43795880683887756;  // std dev = 0.250, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(G, B), ta(H, A, I) )
%   | | | then return -0.0755371539062414;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.23658129359887722;  // std dev = 2.660, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B) )
%   | | then if ( publication(F, A), publication(G, B) )
%   | | | then return 0.19366584677311682;  // std dev = 1.028, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.3227603339668269;  // std dev = 1.452, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.239190867304933;  // std dev = 1.047, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.14733506489374196;  // std dev = 1.590, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else return -0.0851847513883968;  // std dev = 1.67e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.2617648185653375;  // std dev = 0.092, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return -0.20211600165287763;  // std dev = 1.125, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.09660817464888645;  // std dev = 2.584, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( publication(H, B), publication(H, A) )
%   | | | then return 0.19302307278276756;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1687065004568649;  // std dev = 1.088, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.01412084915297851;  // std dev = 1.097, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.24332294644251623;  // std dev = 1.851, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else return -0.07324622576333704;  // std dev = 1.49e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( publication(D, B), publication(D, C) )
%   | then if ( publication(E, A) )
%   | | then return 0.17475000889288997;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.30369222456983486;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( publication(F, B), publication(G, A) )
%   | | then if ( ta(H, C, I), publication(F, A) )
%   | | | then return 0.19205748982562276;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.10880683961346277;  // std dev = 0.639, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3883398397023507;  // std dev = 0.103, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( professor(B), publication(J, B) )
%   | then if ( publication(J, K), tempadvisedby(K, L) )
%   | | then if ( publication(M, A) )
%   | | | then return -0.12459723448788602;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.04125624946376325;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.3328967046758681;  // std dev = 0.158, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09328958386223839;  // std dev = 0.188, 63.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), publication(E, A) )
%   | then if ( publication(E, B) )
%   | | then return 0.1691968591010828;  // std dev = 0.109, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.23221600772767062;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14267872322658104;  // std dev = 1.219, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( ta(G, A, H), publication(I, B) )
%   | | then return 0.0740865104292715;  // std dev = 0.335, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(J, B), tempadvisedby(K, B) )
%   | | | then return -0.1798600807982403;  // std dev = 1.666, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.03429673094894911;  // std dev = 1.705, 68.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.012', 'seconds']
Refined model CLL: -0.225103


******************************************
Best model found
******************************************
Results 

CLL : -0.231062 

AUC ROC : 0.936107 

AUC PR : 0.361769 

Precision : 0.178161 

Recall : 0.794872 

F1 : 0.29108 

Total Learning Time : 6.642 

Total Inference Time : 1.5511150360107422 

Total revision time: 9.678813760757446
Best scored revision CLL: -0.225103


Results 

CLL : -0.231062 

AUC ROC : 0.936107 

AUC PR : 0.361769 

Precision : 0.178161 

Recall : 0.794872 

F1 : 0.29108 

Total Learning Time : 9.758447235107422 

Total Inference Time : 1.5511150360107422 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.529
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.467, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2503057978446101;  // std dev = 3.487, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.490, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1325618684309219;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15576565611490045;  // std dev = 0.477, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.22370572844554992;  // std dev = 0.497, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05585875002760662;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.039965665643704185;  // std dev = 3.708, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.481, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.0420511244682043;  // std dev = 3.681, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.144', 'seconds']
Parameter learned model CLL:-0.391066 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.487, 31, 20]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.721, 45, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.477, 37, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.497, 25, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.695, 43, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.708, 44, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.681, 42, 20], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23836985774702002], 'false': [nan, 0.23836985774702002], 'false,false': [nan, 0.23836985774702002]}
{}
{'': [nan, 0.21301775147928942], 'false': [nan, 0.21301775147928942]}
{'': [nan, 0.2277623884272078]}
{'': [0.24691358024691334, nan]}
{'': [nan, 0.21667926429831202]}
{'': [0.21484375000000003, nan]}
{}
{'': [0.21852237252861553, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 6.368
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( publication(C, B), professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( professor(B), student(A) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.5143729809124065;  // std dev = 2.073, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | | else return -0.13025411958101255;  // std dev = 0.112, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.6052712976582;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.27193796432486667;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6596013710862202;  // std dev = 0.099, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | | then return 0.3779088282532084;  // std dev = 0.788, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.11906263636927136;  // std dev = 0.978, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.11403732089073138;  // std dev = 0.074, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.49980725800071824;  // std dev = 0.310, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.24831999532612897;  // std dev = 1.249, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return -0.10796296307054314;  // std dev = 0.145, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( student(A), professor(B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.3367970626978832;  // std dev = 2.11e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( ta(E, A, F), publication(G, B) )
%   | | | then return 0.3106475914019592;  // std dev = 0.857, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.0513330030682001;  // std dev = 1.465, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return -0.10478652818539941;  // std dev = 0.253, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.266120128559878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.15577730189170388;  // std dev = 1.183, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.021919408336234486;  // std dev = 1.531, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return -0.0898134987435577;  // std dev = 0.158, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.034101394419660445;  // std dev = 1.023, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.31010842364149205;  // std dev = 0.158, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.11430772686032224;  // std dev = 1.191, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | else return -0.07934032794943645;  // std dev = 0.106, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, B), ta(F, A, G) )
%   | | then if ( ta(H, I, G), publication(E, I) )
%   | | | then return 0.2071202534351979;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.28997995618279154;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(J, A), publication(J, B) )
%   | | | then return 0.20216461213227527;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.10727252615343787;  // std dev = 1.489, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return -0.07648716115643649;  // std dev = 0.110, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return -0.15086262186727672;  // std dev = 1.171, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( publication(E, B), ta(F, A, G) )
%   | | then if ( ta(H, I, G), publication(E, I) )
%   | | | then return 0.17565323097668298;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2199769319051441;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(J, A), publication(J, B) )
%   | | | then return 0.16840272413929414;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.029499014687016656;  // std dev = 1.282, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.06770617212095113;  // std dev = 0.048, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), tempadvisedby(F, B) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.1572014844697267;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.251796742195029;  // std dev = 0.873, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.18474064398709583;  // std dev = 0.907, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.01084637418138292;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( professor(B), publication(H, B) )
%   | | then return -0.1528735123714158;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06225500274577539;  // std dev = 8.33e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.296', 'seconds']
Refined model CLL: -0.169734


******************************************
Best model found
******************************************
Results 

CLL : -0.23423 

AUC ROC : 0.940807 

AUC PR : 0.257126 

Precision : 0.181303 

Recall : 0.688172 

F1 : 0.286996 

Total Learning Time : 6.368 

Total Inference Time : 0.8673114776611328 

Total revision time: 8.322825119018555
Best scored revision CLL: -0.169734


Results 

CLL : -0.23423 

AUC ROC : 0.940807 

AUC PR : 0.257126 

Precision : 0.181303 

Recall : 0.688172 

F1 : 0.286996 

Total Learning Time : 8.40245859336853 

Total Inference Time : 0.8673114776611328 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.493
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.488, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.24945328292559932;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.445, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1464212521687352;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09316030215188793;  // std dev = 0.454, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.21624604628449406;  // std dev = 0.495, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05961414755602888;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.048249230429570654;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.471, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.1197707724928726;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.125', 'seconds']
Parameter learned model CLL:-0.428817 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.341, 14, 9]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.471, 19, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.454, 22, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.495, 12, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [2.491, 20, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [2.491, 20, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [2.341, 14, 9], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23818525519848777], 'false': [nan, 0.23818525519848777], 'false,false': [nan, 0.23818525519848777]}
{}
{'': [nan, 0.21811224489795913], 'false': [nan, 0.21811224489795913]}
{'': [nan, 0.20603537981269535]}
{'': [0.24489795918367316, nan]}
{'': [nan, 0.2140309155766946]}
{'': [0.21403091557669437, nan]}
{}
{'': [0.23818525519848796, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 2.299
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1328294932550892;  // std dev = 0.151, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.11158220303993581;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 7.382346097361785E-4;  // std dev = 1.338, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.27837110187830444;  // std dev = 0.856, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(H, A), publication(H, B) )
%   | | | then return -0.23291549180744794;  // std dev = 0.162, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10099089834857577;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.437975939217632;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19828048653678051;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.09068952027535211;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then return 0.08511550898942546;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3218506536238765;  // std dev = 0.068, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( professor(A) )
%   | | then return -0.13657037030666025;  // std dev = 0.179, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08487017691687547;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then return -0.002374285691260044;  // std dev = 0.843, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.26035754928620214;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(E, B), professor(A) )
%   | | then return -0.2011340533458437;  // std dev = 0.155, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07744920803902357;  // std dev = 0.009, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), ta(E, A, F) )
%   | then return 0.2677237889589261;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( professor(B) )
%   | | then return 0.05108204037261188;  // std dev = 0.939, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.07167271733682773;  // std dev = 0.007, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), tempadvisedby(C, B) )
%   then return 0.22598933274788377;  // std dev = 0.100, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( professor(A), hasposition(B, D) )
%   | then return -0.23614989090001828;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( ta(E, A, F) )
%   | | then return -0.15725631185162636;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( professor(B) )
%   | | | then return 0.21834165573073827;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06677405340271635;  // std dev = 0.008, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( tempadvisedby(E, B) )
%   | then return 0.18938387375037216;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(F, A, G) )
%   | | then if ( ta(H, I, G), tempadvisedby(I, J) )
%   | | | then return -0.24730928154704157;  // std dev = 0.652, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.023258253882462426;  // std dev = 0.202, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(B) )
%   | | | then return 0.1837723698352383;  // std dev = 0.084, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06386157137648626;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.805', 'seconds']
Refined model CLL: -0.192741


******************************************
Best model found
******************************************
Results 

CLL : -0.382577 

AUC ROC : 0.90048 

AUC PR : 0.113146 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.299 

Total Inference Time : 0.5074081420898438 

Total revision time: 3.7339922828674315
Best scored revision CLL: -0.192741


Results 

CLL : -0.382577 

AUC ROC : 0.90048 

AUC PR : 0.113146 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 3.813625757217407 

Total Inference Time : 0.5074081420898438 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.625
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.484, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17545662740720325;  // std dev = 4.746, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.478, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17215545756501016;  // std dev = 4.678, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1103656644091621;  // std dev = 0.458, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.14388613290080832;  // std dev = 0.477, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10152637659685237;  // std dev = 4.690, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.11226169702575223;  // std dev = 4.586, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.478, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.027970110870967735;  // std dev = 4.806, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '998', 'milliseconds']
Parameter learned model CLL:-0.345932 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.746, 71, 33]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.678, 65, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.458, 77, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.477, 61, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.69, 66, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.586, 58, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.806, 77, 33], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.21662352071006058], 'false': [nan, 0.21662352071006058], 'false,false': [nan, 0.21662352071006058]}
{}
{'': [nan, 0.22334443981674357], 'false': [nan, 0.22334443981674357]}
{'': [nan, 0.20999999999999971]}
{'': [0.22781801720235315, nan]}
{'': [nan, 0.22222222222222202]}
{'': [0.23113150585678102, nan]}
{}
{'': [0.20999999999999935, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 12.147
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.5640312880406888;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.3966104735610508;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.14185106490048768;  // std dev = 5.16e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.44506097045089316;  // std dev = 3.180, 49.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=33 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then return 0.6762844127825517;  // std dev = 0.117, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(F, B), publication(F, A) )
%   | | then if ( publication(F, G), tempadvisedby(H, G) )
%   | | | then return 0.6217046954952591;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.42170469549525924;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.3519305359939929;  // std dev = 2.115, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.21409682382289533;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.28420833685663377;  // std dev = 2.906, 46.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=32 */
%   | | | else return -0.13055991598926248;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.10159632948783631;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.30924440806639325;  // std dev = 1.367, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.04634069268226679;  // std dev = 1.396, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( ta(I, A, J), publication(K, B) )
%   | | | then return 0.2907383185686438;  // std dev = 1.457, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.4326019312328338;  // std dev = 0.904, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( publication(F, A) )
%   | | then if ( publication(E, A), student(A) )
%   | | | then return 0.34419513043864153;  // std dev = 0.108, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.08560667036476004;  // std dev = 1.660, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( publication(E, G), ta(H, G, I) )
%   | | | then return 0.4440265324134247;  // std dev = 0.101, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.20205223315781626;  // std dev = 1.419, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( student(B) )
%   | | then return -0.08518475138839679;  // std dev = 2.24e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( ta(J, A, K) )
%   | | | then return -0.12051581975061502;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.2695169522361726;  // std dev = 0.369, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), publication(D, B) )
%   | then if ( publication(D, E), ta(F, E, G) )
%   | | then if ( tempadvisedby(H, B), student(A) )
%   | | | then return 0.25168091435142276;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15919668896848302;  // std dev = 0.725, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.2826311384961423;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(I, A) )
%   | | then if ( ta(J, A, K) )
%   | | | then return 0.03587543059545321;  // std dev = 1.219, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.15072520183604066;  // std dev = 1.431, 36.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.15670307382026963;  // std dev = 1.819, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return -0.0847752379674396;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( professor(A) )
%   | | then return -0.08097434990660728;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.25825108593577384;  // std dev = 1.076, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.08980726823872252;  // std dev = 1.741, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( professor(B), student(A) )
%   | | then return -0.22158706259713937;  // std dev = 0.885, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.0710709190735306;  // std dev = 0.030, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.19200484048100458;  // std dev = 0.120, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(C, E), professor(E) )
%   | | | then return -0.2484133097526258;  // std dev = 1.431, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.015295386310694895;  // std dev = 0.938, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | then if ( ta(G, I, H), tempadvisedby(I, J) )
%   | | | then return -0.22070209945125194;  // std dev = 0.888, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.16818145796781309;  // std dev = 1.115, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.31235970037503535;  // std dev = 0.147, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.30205707032096807;  // std dev = 0.188, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06786038228192968;  // std dev = 0.057, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then if ( ta(F, H, I), ta(J, E, I) )
%   | | | then return -0.05683196547263301;  // std dev = 0.481, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2851183184847791;  // std dev = 0.805, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return -0.014317248883745956;  // std dev = 1.169, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.14432918560955957;  // std dev = 1.486, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else return -0.06278175844736326;  // std dev = 0.030, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.427', 'seconds']
Refined model CLL: -0.23351


******************************************
Best model found
******************************************
Results 

CLL : -0.226489 

AUC ROC : 0.94946 

AUC PR : 0.393437 

Precision : 0.191045 

Recall : 0.8 

F1 : 0.308434 

Total Learning Time : 12.147 

Total Inference Time : 1.669912576675415 

Total revision time: 15.238179847717285
Best scored revision CLL: -0.23351


Results 

CLL : -0.226489 

AUC ROC : 0.94946 

AUC PR : 0.393437 

Precision : 0.191045 

Recall : 0.8 

F1 : 0.308434 

Total Learning Time : 15.317813322067261 

Total Inference Time : 1.669912576675415 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.536
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.479, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13885068948547727;  // std dev = 3.392, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.457, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15411771419026116;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1205076653173246;  // std dev = 0.459, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.14786281560875045;  // std dev = 0.476, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07721766849673749;  // std dev = 3.342, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.16159489772224872;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.479, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.01674308626362472;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.120', 'seconds']
Parameter learned model CLL:-0.361406 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.392, 41, 16]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.314, 35, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.459, 37, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.476, 30, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.342, 37, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.098, 24, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.381, 40, 16], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.20190827947060583], 'false': [nan, 0.20190827947060583], 'false,false': [nan, 0.20190827947060583]}
{}
{'': [nan, 0.21530180699730853], 'false': [nan, 0.21530180699730853]}
{'': [nan, 0.21075115699537217]}
{'': [0.22684310018903578, nan]}
{'': [nan, 0.2107511569953723]}
{'': [0.2400000000000003, nan]}
{}
{'': [0.2040816326530617, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 4.799
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(E, B), tempadvisedby(F, B) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048774;  // std dev = 2.36e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( hasposition(B, G) )
%   | | | then return 0.35184826911504086;  // std dev = 2.318, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | | else return -0.10251263554323387;  // std dev = 0.903, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), publication(E, B) )
%   | then if ( publication(E, A) )
%   | | then return 0.6783712741418749;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, F), inphase(F, G) )
%   | | | then return 0.2297967101620313;  // std dev = 1.266, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.41961990240069336;  // std dev = 0.900, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.670045473405984;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(H, A) )
%   | then return -0.13676362744646828;  // std dev = 0.153, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( professor(B) )
%   | | then return 0.04431169147274188;  // std dev = 0.849, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.11462313805293921;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, A), publication(F, B) )
%   | | | then return 0.5218192336087318;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20818822226490533;  // std dev = 2.121, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | else return -0.10948118823302978;  // std dev = 0.090, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.5149994059223486;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, A), publication(E, B) )
%   | | | then return 0.39434468663493943;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16344977756975504;  // std dev = 1.699, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else return -0.1004847710224586;  // std dev = 0.086, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), ta(F, A, G) )
%   | | then return -0.28007748179091596;  // std dev = 1.002, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.4374125518740188;  // std dev = 0.200, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.23474815150444753;  // std dev = 0.991, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.09117356481753756;  // std dev = 0.089, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(B, D), student(A) )
%   | then if ( ta(E, A, F) )
%   | | then return 0.3497440506631843;  // std dev = 0.119, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.1517815906677882;  // std dev = 0.759, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( ta(G, A, H) )
%   | | then if ( ta(I, B, J) )
%   | | | then return -0.07870117447405857;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.18674582713783497;  // std dev = 0.265, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( professor(A) )
%   | | | then return -0.08297267208264023;  // std dev = 0.051, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.010779713037635863;  // std dev = 0.748, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( publication(E, B), publication(E, A) )
%   | then if ( professor(A) )
%   | | then return -0.09888530549792995;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.24867212553631393;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(F, A, G), projectmember(H, B) )
%   | | then return -0.5166045242897336;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( hasposition(B, I), ta(J, A, K) )
%   | | | then return 0.16344252065369025;  // std dev = 0.956, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.07531272761705408;  // std dev = 1.266, 42.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( projectmember(D, B) )
%   | then return 0.290037060366935;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(E, A) )
%   | | then return 0.2051693073295609;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return -0.019620030673986846;  // std dev = 1.209, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.14920458820018956;  // std dev = 0.762, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( ta(I, A, J) )
%   | then if ( ta(K, B, L) )
%   | | then return -0.0709606595135623;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( publication(M, A) )
%   | | | then return -0.060407931053210843;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.15501817045289204;  // std dev = 0.323, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( professor(A) )
%   | | then return -0.0702207851905304;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.048270687474657105;  // std dev = 0.669, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( projectmember(E, B), ta(F, A, G) )
%   | then return -0.43396744729925035;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( hasposition(B, H), student(A) )
%   | | then if ( publication(I, A), tempadvisedby(J, B) )
%   | | | then return -0.019642847659132157;  // std dev = 0.682, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24891089201337752;  // std dev = 0.140, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( ta(K, A, L) )
%   | | | then return -0.14338856878567963;  // std dev = 0.285, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.029046121760849725;  // std dev = 0.699, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.871', 'seconds']
Refined model CLL: -0.264029


******************************************
Best model found
******************************************
Results 

CLL : -0.280231 

AUC ROC : 0.94455 

AUC PR : 0.313607 

Precision : 0.12125 

Recall : 1.0 

F1 : 0.216276 

Total Learning Time : 4.799 

Total Inference Time : 0.8204960823059082 

Total revision time: 6.70517846107483
Best scored revision CLL: -0.264029


Results 

CLL : -0.280231 

AUC ROC : 0.94455 

AUC PR : 0.313607 

Precision : 0.12125 

Recall : 1.0 

F1 : 0.216276 

Total Learning Time : 6.7848119354248055 

Total Inference Time : 0.8204960823059082 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.839
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.475, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.182223009173585;  // std dev = 4.864, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.465, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1880236749956058;  // std dev = 4.757, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10858701453712362;  // std dev = 0.459, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.14291103675468733;  // std dev = 0.478, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1578923776476278;  // std dev = 4.608, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.021928525307954642;  // std dev = 4.996, 122.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.479, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.048932462282277746;  // std dev = 4.885, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.375', 'seconds']
Parameter learned model CLL:-0.345069 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.864, 73, 35]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.757, 64, 35]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.459, 81, 35]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.478, 64, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.608, 54, 35]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.996, 87, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.885, 75, 35], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.21905006858710704], 'false': [nan, 0.21905006858710704], 'false,false': [nan, 0.21905006858710704]}
{}
{'': [nan, 0.2285481073359859], 'false': [nan, 0.2285481073359859]}
{'': [nan, 0.21068668252080947]}
{'': [0.22854810733598704, nan]}
{'': [nan, 0.23860623658628927]}
{'': [0.2045821015855958, nan]}
{}
{'': [0.21694214876033036, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 40.603
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.14185106490048768;  // std dev = 4.21e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.4912169871938958;  // std dev = 2.939, 47.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.6107899810247022;  // std dev = 5.96e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( ta(D, A, E), publication(F, A) )
%   | | then return 0.19143797777061178;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.14416579225422665;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4010649955781815;  // std dev = 2.098, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   else return -0.1123163781936064;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(A), professor(B) )
%   | | then if ( publication(F, A), publication(F, B) )
%   | | | then return 0.46004638824083527;  // std dev = 2.11e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.2341428341967412;  // std dev = 2.522, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), projectmember(E, B) )
%   | | then return 0.47141240722804806;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, A), publication(F, B) )
%   | | | then return 0.34973544476753915;  // std dev = 1.49e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.2127794335325752;  // std dev = 2.286, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | else return -0.092691276189261;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( tempadvisedby(E, B) )
%   | then if ( publication(F, B), publication(F, A) )
%   | | then return 0.27489291285498085;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(G, B), publication(H, A) )
%   | | | then return -0.22668438665577292;  // std dev = 0.173, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.20537897650455642;  // std dev = 1.608, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(I, B) )
%   | | | then return -0.033795444391154755;  // std dev = 1.899, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.1006617032134697;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.22774511640718534;  // std dev = 0.056, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tempadvisedby(E, B), publication(F, A) )
%   | | | then return -0.16458863957867859;  // std dev = 1.046, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.16024609306402024;  // std dev = 2.284, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return -0.07885407520047444;  // std dev = 0.027, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( tempadvisedby(E, B), student(A) )
%   | then if ( publication(F, E), publication(F, B) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.04741933358470157;  // std dev = 0.341, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.23950557316436508;  // std dev = 1.014, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.15447808762218126;  // std dev = 0.736, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.39294056366675456;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(J, A) )
%   | | then if ( professor(B), student(A) )
%   | | | then return -0.23290896096162242;  // std dev = 1.557, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.07381368177881419;  // std dev = 0.030, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( professor(B) )
%   | | | then return 0.2883717515153827;  // std dev = 0.944, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.07324097732902433;  // std dev = 3.73e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, A), publication(F, B) )
%   | | then return 0.16423435361921968;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( ta(D, G, H), publication(I, G) )
%   | | | then return -0.3086767731885317;  // std dev = 0.398, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.013853319177688358;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(J, B) )
%   | | then if ( publication(J, K), tempadvisedby(K, L) )
%   | | | then return 0.3152360393357567;  // std dev = 0.308, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.13213112122694184;  // std dev = 1.036, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( tempadvisedby(M, B) )
%   | | | then return 0.31696953009660583;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4089847733106147;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07069111779483098;  // std dev = 0.070, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, B), publication(E, A) )
%   | | then if ( ta(F, A, G) )
%   | | | then return -0.04232080617194911;  // std dev = 0.821, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.15793431488231494;  // std dev = 0.108, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(H, B), tempadvisedby(I, B) )
%   | | | then return -0.1725208689360831;  // std dev = 1.423, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.07148688893372815;  // std dev = 1.882, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | else return -0.0666753786089231;  // std dev = 0.089, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.368', 'seconds']
Refined model CLL: -0.236839


******************************************
Best model found
******************************************
Results 

CLL : -0.217966 

AUC ROC : 0.947906 

AUC PR : 0.426138 

Precision : 0.194521 

Recall : 0.910256 

F1 : 0.320542 

Total Learning Time : 40.603 

Total Inference Time : 8.684218883514404 

Total revision time: 51.23823532295227
Best scored revision CLL: -0.236839


Results 

CLL : -0.217966 

AUC ROC : 0.947906 

AUC PR : 0.426138 

Precision : 0.194521 

Recall : 0.910256 

F1 : 0.320542 

Total Learning Time : 51.27119669151306 

Total Inference Time : 8.684218883514404 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.561
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.481, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18072958026080244;  // std dev = 3.681, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.456, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16256333965570383;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1813988849031605;  // std dev = 0.483, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.12647765534468264;  // std dev = 0.475, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09263057878505458;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.11233405383105231;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.475, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.022910193846167375;  // std dev = 3.734, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.693', 'seconds']
Parameter learned model CLL:-0.386164 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.681, 42, 20]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.666, 41, 20]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.483, 34, 20]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.475, 38, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.651, 40, 20]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.549, 34, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.734, 46, 20], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2185223725286156], 'false': [nan, 0.2185223725286156], 'false,false': [nan, 0.2185223725286156]}
{}
{'': [nan, 0.22037086804622377], 'false': [nan, 0.22037086804622377]}
{'': [nan, 0.23319615912208558]}
{'': [0.2259215219976215, nan]}
{'': [nan, 0.2222222222222224]}
{'': [0.2331961591220855, nan]}
{}
{'': [0.21120293847566615, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 10.917
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, C), publication(E, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, B), publication(F, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4735335504841277;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.1418510649004877;  // std dev = 3.80e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), publication(G, B) )
%   | | | then return 0.622405382160253;  // std dev = 1.579, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return -0.12351385229405598;  // std dev = 0.913, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.61647170489514;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.012292848570738627;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return 0.6690875472775276;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return 0.5791891548479224;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.35553935318324;  // std dev = 0.758, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12119151042394549;  // std dev = 0.163, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.5163403939436714;  // std dev = 0.259, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2596042693834602;  // std dev = 1.503, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else return -0.11065878784037254;  // std dev = 0.148, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, B), professor(B) )
%   | then if ( tempadvisedby(E, B), publication(F, A) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.46488775020944795;  // std dev = 0.193, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0490029619923027;  // std dev = 0.933, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.3819744610877187;  // std dev = 0.145, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( ta(I, A, J), publication(K, A) )
%   | | then return -0.1514247235278084;  // std dev = 0.329, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( publication(L, B) )
%   | | | then return -0.09135385842324313;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.05767957411247333;  // std dev = 0.754, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( publication(E, F), tempadvisedby(F, B) )
%   | | then return -0.08753791591719097;  // std dev = 1.189, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | | then return 0.07761490286484446;  // std dev = 1.068, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.29219441576465355;  // std dev = 0.115, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(I, A), ta(J, A, K) )
%   | | then return -0.21356975899695624;  // std dev = 0.367, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( publication(L, A) )
%   | | | then return -0.06250369670671187;  // std dev = 0.761, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.14342755568603321;  // std dev = 0.260, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tempadvisedby(D, B), student(A) )
%   | then if ( ta(E, D, F), publication(G, A) )
%   | | then if ( publication(H, D) )
%   | | | then return -0.13527635765562732;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11294592871436451;  // std dev = 0.629, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(I, D, J) )
%   | | | then return 0.3012738578590153;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.35265849277235356;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(K, A), student(A) )
%   | | then if ( publication(K, B), professor(B) )
%   | | | then return 0.2240969994875015;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.07634425989970017;  // std dev = 1.097, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( student(B) )
%   | | | then return -0.07816417543592308;  // std dev = 0.013, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.23473278940696016;  // std dev = 0.684, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.3390326592962973;  // std dev = 0.280, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.23213956369545397;  // std dev = 0.102, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.18122974789870305;  // std dev = 0.711, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.23243712127478758;  // std dev = 0.673, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( tempadvisedby(H, A), publication(I, B) )
%   | | then return -0.18962747604875488;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06881422409010653;  // std dev = 0.034, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, E), ta(F, E, G) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return 0.2770788448630386;  // std dev = 0.253, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15923594997270943;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.0542429819707679;  // std dev = 0.838, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | then return 0.2025578456937001;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3607875163711404;  // std dev = 0.333, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06785760788378561;  // std dev = 0.089, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then if ( publication(H, E) )
%   | | | then return 0.273398331919017;  // std dev = 0.179, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16953158642671803;  // std dev = 0.113, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | | then return -0.20645448069131903;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13491892240388012;  // std dev = 0.739, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( professor(B) )
%   | | then return -0.14726255462641802;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06330825671345656;  // std dev = 0.025, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '42.686', 'seconds']
Refined model CLL: -0.221901


******************************************
Best model found
******************************************
Results 

CLL : -0.321022 

AUC ROC : 0.920484 

AUC PR : 0.180921 

Precision : 0.122333 

Recall : 0.924731 

F1 : 0.21608 

Total Learning Time : 10.917 

Total Inference Time : 1.0428698062896729 

Total revision time: 13.072647645950317
Best scored revision CLL: -0.221901


Results 

CLL : -0.321022 

AUC ROC : 0.920484 

AUC PR : 0.180921 

Precision : 0.122333 

Recall : 0.924731 

F1 : 0.21608 

Total Learning Time : 13.105609014511108 

Total Inference Time : 1.0428698062896729 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.497
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23314893509951237;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.437, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.127334239218108;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06552267511915474;  // std dev = 0.437, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.17302470224178815;  // std dev = 0.484, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14369719806927606;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.15125983288330938;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.14075491601306436;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.670', 'seconds']
Parameter learned model CLL:-0.450875 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.372, 15, 9]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.51, 21, 9]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.437, 26, 9]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.484, 15, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [2.372, 15, 9]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [2.306, 13, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [2.268, 12, 9], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23437500000000003], 'false': [nan, 0.23437500000000003], 'false,false': [nan, 0.23437500000000003]}
{}
{'': [nan, 0.2100000000000001], 'false': [nan, 0.2100000000000001]}
{'': [nan, 0.19102040816326565]}
{'': [0.23437499999999997, nan]}
{'': [nan, 0.23437500000000025]}
{'': [0.2417355371900829, nan]}
{}
{'': [0.2448979591836735, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 2.019
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B) )
%   | | | then return 0.6505511758931248;  // std dev = 0.921, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.29161915773858993;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.606153150495512;  // std dev = 0.103, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.12523093996805673;  // std dev = 0.137, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.5034157234769481;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18279593046064813;  // std dev = 1.138, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.11157448072331994;  // std dev = 0.126, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.40655900425758373;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.14967353314656218;  // std dev = 0.427, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return -0.09751366091362475;  // std dev = 0.084, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B) )
%   | then if ( ta(E, A, F) )
%   | | then return 0.012719871530867325;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.3447264708032554;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.0830496439144624;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B) )
%   | then if ( publication(D, A) )
%   | | then return 0.06349349558730925;  // std dev = 0.694, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.33180396247445015;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.255890776971619;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07694027779858004;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | then return 0.2641780682378459;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(H, B), student(A) )
%   | | then return -0.4942448612359586;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.11235029755722929;  // std dev = 0.853, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.07948791737697394;  // std dev = 0.153, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return -0.01797760220698134;  // std dev = 0.760, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.20645859813326736;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.23221793194753293;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( tempadvisedby(E, A) )
%   | then return -0.11592322822089372;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06654013775669863;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | then return 0.19879172574095316;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(H, A, I), publication(J, B) )
%   | | then return -0.13018027746716468;  // std dev = 0.731, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.06550385442281899;  // std dev = 0.775, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.06929915241506596;  // std dev = 0.138, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.702', 'seconds']
Refined model CLL: -0.170298


******************************************
Best model found
******************************************
Results 

CLL : -0.329829 

AUC ROC : 0.904567 

AUC PR : 0.120851 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.019 

Total Inference Time : 0.504561185836792 

Total revision time: 3.461037841796875
Best scored revision CLL: -0.170298


Results 

CLL : -0.329829 

AUC ROC : 0.904567 

AUC PR : 0.120851 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 3.493999210357666 

Total Inference Time : 0.504561185836792 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.799
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.474, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21298764477693033;  // std dev = 4.614, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.484, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18125917687492607;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14330142972036408;  // std dev = 0.474, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.10297728567516265;  // std dev = 0.468, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0696484238609039;  // std dev = 4.777, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.05676017717160706;  // std dev = 4.777, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.478, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.09620549740798894;  // std dev = 4.600, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.588', 'seconds']
Parameter learned model CLL:-0.350965 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.614, 60, 33]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.628, 61, 33]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.474, 64, 33]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.468, 69, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.777, 74, 33]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.777, 74, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.6, 59, 33], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2289281997918849], 'false': [nan, 0.2289281997918849], 'false,false': [nan, 0.2289281997918849]}
{}
{'': [nan, 0.22781801720235537], 'false': [nan, 0.22781801720235537]}
{'': [nan, 0.22446593686895477]}
{'': [0.21885813148789007, nan]}
{'': [nan, 0.21329373744431887]}
{'': [0.21329373744431807, nan]}
{}
{'': [0.23003308128544517, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 26.492
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.016851064900487787;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.14185106490048768;  // std dev = 5.16e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), publication(G, B) )
%   | | | then return 0.47394464091192146;  // std dev = 2.868, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | | | else return -0.11249606378418718;  // std dev = 0.958, 42.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.4148881154784285;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.6148881154784284;  // std dev = 2.11e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(F, A, G), publication(H, A) )
%   | | then return 0.5448697467992621;  // std dev = 0.921, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.060883663855716134;  // std dev = 1.175, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3419344051902205;  // std dev = 2.055, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else return -0.12030906192021536;  // std dev = 0.140, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, A), publication(F, B) )
%   | | | then return 0.40972447515559746;  // std dev = 0.934, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.14403030657583082;  // std dev = 3.018, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | else return -0.11486751795257429;  // std dev = 0.202, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.0784238099765298;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.37293669704193083;  // std dev = 0.061, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( publication(H, A), publication(I, B) )
%   | | | then return 0.037774484646997744;  // std dev = 1.711, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.23390408640081503;  // std dev = 2.113, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | else return -0.09604228672047319;  // std dev = 0.104, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( student(A), professor(B) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then if ( ta(H, E, I), ta(F, J, I) )
%   | | | then return -0.16022096029242866;  // std dev = 1.020, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.11656429772195386;  // std dev = 1.575, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.13162697366403206;  // std dev = 1.748, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | | else return 0.3120223253229039;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return -0.09354961412249042;  // std dev = 0.159, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( publication(G, A), ta(H, F, I) )
%   | | | then return 0.4964591815105033;  // std dev = 0.159, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13923119332195463;  // std dev = 1.797, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( ta(J, A, K), publication(L, A) )
%   | | | then return 0.4506072558686071;  // std dev = 0.188, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1711180806656569;  // std dev = 1.912, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | else return -0.08195636102533493;  // std dev = 0.115, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( ta(H, I, F), publication(J, I) )
%   | | | then return 0.1855380516620274;  // std dev = 1.142, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.4429259738206557;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | | then return -0.1591545885917448;  // std dev = 0.956, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.09856479043734341;  // std dev = 2.231, 30.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | else return -0.07510931869582112;  // std dev = 0.084, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.22482831742423576;  // std dev = 0.114, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.28234770205537063;  // std dev = 0.976, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.32937507760185725;  // std dev = 1.166, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( publication(I, A), publication(J, B) )
%   | | | then return 0.0152833395528085;  // std dev = 1.187, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16818448112453988;  // std dev = 1.301, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.07106305356174682;  // std dev = 0.101, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.18825931271780666;  // std dev = 0.101, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return -0.07796942278408406;  // std dev = 1.593, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.1398250444311229;  // std dev = 1.669, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | else return -0.06843040014402202;  // std dev = 0.110, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.971', 'seconds']
Refined model CLL: -0.217628


******************************************
Best model found
******************************************
Results 

CLL : -0.215388 

AUC ROC : 0.94972 

AUC PR : 0.35236 

Precision : 0.181572 

Recall : 0.8375 

F1 : 0.298441 

Total Learning Time : 26.492 

Total Inference Time : 3.5839426517486572 

Total revision time: 31.892903676986695
Best scored revision CLL: -0.217628


Results 

CLL : -0.215388 

AUC ROC : 0.94972 

AUC PR : 0.35236 

Precision : 0.181572 

Recall : 0.8375 

F1 : 0.298441 

Total Learning Time : 31.925865045547486 

Total Inference Time : 3.5839426517486572 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.597
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.449, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19857446701440598;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.479, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21316990969287583;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13364695065472065;  // std dev = 0.471, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.16834052724737136;  // std dev = 0.488, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10323389343932905;  // std dev = 3.211, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.11795376563160578;  // std dev = 3.123, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.464, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.10372101949118043;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.278', 'seconds']
Parameter learned model CLL:-0.416985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.249, 31, 16]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.147, 26, 16]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.471, 32, 16]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.488, 25, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.211, 29, 16]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.123, 25, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.098, 24, 16], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.22453598913535486], 'false': [nan, 0.22453598913535486], 'false,false': [nan, 0.22453598913535486]}
{}
{'': [nan, 0.23582766439909256], 'false': [nan, 0.23582766439909256]}
{'': [nan, 0.22222222222222163]}
{'': [0.23795359904818594, nan]}
{'': [nan, 0.2291358024691361]}
{'': [0.23795359904818572, nan]}
{}
{'': [0.23999999999999977, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 8.027
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), projectmember(F, B) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.42957750652808374;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   else return -0.14185106490048777;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.3989141139599983;  // std dev = 2.427, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, B), ta(E, A, F) )
%   | then if ( tempadvisedby(G, B), ta(H, G, F) )
%   | | then return 0.3611118193058223;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194055568732789;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(I, A, J) )
%   | | then return -0.22977119376505592;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( projectmember(K, B) )
%   | | | then return 0.6884616027573446;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17895770510450587;  // std dev = 0.907, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( professor(B), student(A) )
%   | then return 0.058753381041788365;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11231637819360638;  // std dev = 1.49e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, B), projectmember(G, B) )
%   | | | then return -0.07786623865444138;  // std dev = 1.132, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.35739346060419347;  // std dev = 1.699, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( ta(D, A, E), publication(F, A) )
%   | | then return -0.03438648773181603;  // std dev = 0.899, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | | then return 0.26658195192808914;  // std dev = 1.233, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.5007181291633713;  // std dev = 0.172, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.09269127618926093;  // std dev = 1.29e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( hasposition(B, E), student(A) )
%   | then if ( publication(F, A), ta(G, A, H) )
%   | | then return 0.13792796943647193;  // std dev = 0.697, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( projectmember(I, B) )
%   | | | then return 0.40898382355347945;  // std dev = 0.208, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.30893466721815;  // std dev = 0.865, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( ta(J, A, K) )
%   | | then if ( ta(J, L, K), tempadvisedby(L, M) )
%   | | | then return -0.21890401625015066;  // std dev = 0.328, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( professor(B) )
%   | | | then return 0.11442931708318267;  // std dev = 0.489, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, B), ta(E, A, F) )
%   | then if ( tempadvisedby(G, B), ta(E, G, H) )
%   | | then return 0.3708622975954774;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.20625640160619452;  // std dev = 0.962, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1058997231411544;  // std dev = 0.360, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(J, B), student(A) )
%   | | then if ( projectmember(K, B) )
%   | | | then return -0.12653249667597086;  // std dev = 1.012, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.367066156544117;  // std dev = 0.781, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( professor(A) )
%   | | | then return -0.0861309267796022;  // std dev = 0.030, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.05722057680811551;  // std dev = 0.582, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( projectmember(E, B), ta(F, A, G) )
%   | | then return -0.17514468692731466;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.0935898235572611;  // std dev = 1.544, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.3244468404474903;  // std dev = 0.171, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08026378560394765;  // std dev = 0.036, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), ta(D, A, E) )
%   then if ( publication(F, A) )
%   | then return 0.011364213768887596;  // std dev = 0.674, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3123815817322998;  // std dev = 0.186, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( tempadvisedby(G, B) )
%   | then if ( projectmember(H, B), student(A) )
%   | | then return 0.2738307803524546;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.15391980888904502;  // std dev = 0.753, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( student(B) )
%   | | then return -0.07357475439656466;  // std dev = 0.028, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( ta(I, A, J) )
%   | | | then return -0.31896204674017975;  // std dev = 0.974, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.029090309476684763;  // std dev = 0.766, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( projectmember(E, B), publication(F, A) )
%   | then return -0.5326536842146016;  // std dev = 0.569, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( hasposition(B, G), student(A) )
%   | | then if ( publication(H, A), publication(H, B) )
%   | | | then return 0.30341277080113777;  // std dev = 0.135, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04389073950570232;  // std dev = 1.466, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( professor(A), student(B) )
%   | | | then return -0.06302920601915295;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06942879451144233;  // std dev = 0.623, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.965', 'seconds']
Refined model CLL: -0.240915


******************************************
Best model found
******************************************
Results 

CLL : -0.24545 

AUC ROC : 0.934717 

AUC PR : 0.222604 

Precision : 0.161034 

Recall : 0.835052 

F1 : 0.27 

Total Learning Time : 8.027 

Total Inference Time : 1.1968872547149658 

Total revision time: 10.39298670196533
Best scored revision CLL: -0.240915


Results 

CLL : -0.24545 

AUC ROC : 0.934717 

AUC PR : 0.222604 

Precision : 0.161034 

Recall : 0.835052 

F1 : 0.27 

Total Learning Time : 10.425948070526122 

Total Inference Time : 1.1968872547149658 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.653
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.458, 117.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19468739663797247;  // std dev = 4.819, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.475, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18275958559141384;  // std dev = 4.770, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12392015526355964;  // std dev = 0.466, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.12214326766798853;  // std dev = 0.473, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11431603663215313;  // std dev = 4.770, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.12354047855240699;  // std dev = 4.657, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.483, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.03413877851670161;  // std dev = 4.895, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '914', 'milliseconds']
Parameter learned model CLL:-0.356978 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.819, 69, 35]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.77, 65, 35]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.466, 75, 35]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.473, 69, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.77, 65, 35]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.657, 57, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.895, 76, 35], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.22328032544378842], 'false': [nan, 0.22328032544378842], 'false,false': [nan, 0.22328032544378842]}
{}
{'': [nan, 0.22750000000000045], 'false': [nan, 0.22750000000000045]}
{'': [nan, 0.21694214876033102]}
{'': [0.22328032544378779, nan]}
{'': [nan, 0.22749999999999965]}
{'': [0.23570415879017037, nan]}
{}
{'': [0.2158915672429186, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 8.627
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( ta(G, A, H), publication(I, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6816783468642181;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.1418510649004877;  // std dev = 4.47e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.42480217103443446;  // std dev = 3.335, 53.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   | | | else return -0.12544463852839133;  // std dev = 2.79e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.6264574404702137;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A) )
%   | | then if ( projectmember(E, B) )
%   | | | then return 0.6892987172378394;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.028000086054563916;  // std dev = 1.450, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return 0.07650199840604803;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5082598116469486;  // std dev = 1.611, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(A), professor(B) )
%   | | then if ( publication(F, A), publication(F, B) )
%   | | | then return 0.40600844834261224;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.20051022274877497;  // std dev = 2.774, 37.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   | | else return -0.10159632948783634;  // std dev = 1.05e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.37392451651181796;  // std dev = 3.65e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | | then return -0.09328446518029716;  // std dev = 0.863, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.25793807164183297;  // std dev = 2.265, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F) )
%   | | then if ( publication(G, A), publication(G, B) )
%   | | | then return 0.29124573504254037;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.05272225835215175;  // std dev = 1.446, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.1669883746987543;  // std dev = 2.076, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | | else return 0.43865731139432435;  // std dev = 0.146, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.08518475138839682;  // std dev = 1.97e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), publication(D, E) )
%   | | | then return 0.09522034120432608;  // std dev = 0.868, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.27894726032659656;  // std dev = 1.424, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else if ( projectmember(F, B), publication(G, A) )
%   | | | then return 0.3538485398154299;  // std dev = 0.155, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.05160091826315203;  // std dev = 1.560, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then if ( ta(G, E, H), publication(I, A) )
%   | | | then return 0.20433794871156136;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.10719588327834337;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.014742722156020259;  // std dev = 1.799, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.1408651239529561;  // std dev = 1.816, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then return 0.20112567895762656;  // std dev = 0.103, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( projectmember(D, B) )
%   | | | then return 0.2772056869977117;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1758252046099988;  // std dev = 1.418, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return -0.0973720700245165;  // std dev = 0.891, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(G, B), tempadvisedby(H, B) )
%   | | | then return 0.17965674367521228;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.31968826867021816;  // std dev = 0.117, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0684269778442027;  // std dev = 1.49e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( tempadvisedby(E, B), student(A) )
%   | then if ( publication(F, B), ta(G, A, H) )
%   | | then return 0.017257162742050403;  // std dev = 0.705, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(I, E, J) )
%   | | | then return 0.11366838563689226;  // std dev = 0.848, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.29899675033765205;  // std dev = 0.468, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(K, B) )
%   | | then if ( professor(B), student(A) )
%   | | | then return 0.03049983797625379;  // std dev = 1.480, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( professor(B), student(A) )
%   | | | then return -0.3487727590107198;  // std dev = 1.470, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.06419184008202618;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.045', 'seconds']
Refined model CLL: -0.221267


******************************************
Best model found
******************************************
Results 

CLL : -0.213302 

AUC ROC : 0.951978 

AUC PR : 0.405929 

Precision : 0.204334 

Recall : 0.846154 

F1 : 0.329177 

Total Learning Time : 8.627 

Total Inference Time : 1.781836986541748 

Total revision time: 11.864510564804078
Best scored revision CLL: -0.221267


Results 

CLL : -0.213302 

AUC ROC : 0.951978 

AUC PR : 0.405929 

Precision : 0.204334 

Recall : 0.846154 

F1 : 0.329177 

Total Learning Time : 11.882764129638673 

Total Inference Time : 1.781836986541748 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.565
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.471, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16117923812981516;  // std dev = 3.734, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.469, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23737441441617946;  // std dev = 3.464, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19457016449317496;  // std dev = 0.488, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.05960083143326196;  // std dev = 0.454, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10989008993075126;  // std dev = 3.603, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.16387709044475196;  // std dev = 3.390, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.469, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.008505453770602658;  // std dev = 3.734, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.140', 'seconds']
Parameter learned model CLL:-0.399319 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.734, 46, 20]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.464, 30, 20]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.488, 31, 20]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.454, 49, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.603, 37, 20]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.39, 27, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.734, 46, 20], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2112029384756653], 'false': [nan, 0.2112029384756653], 'false,false': [nan, 0.2112029384756653]}
{}
{'': [nan, 0.24], 'false': [nan, 0.24]}
{'': [nan, 0.23836985774702]}
{'': [0.20583910943079164, nan]}
{'': [nan, 0.22776238842720886]}
{'': [0.2444545043005879, nan]}
{}
{'': [0.21120293847566524, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 7.391
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( publication(G, A), tempadvisedby(H, B) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.5101909371493539;  // std dev = 2.107, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return -0.12544463852839133;  // std dev = 2.11e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then return 0.6062700218540447;  // std dev = 2.11e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.7052446160961745;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.6729551895501992;  // std dev = 0.122, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.11043871264284708;  // std dev = 0.905, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), publication(F, B) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.3936815582267725;  // std dev = 1.022, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.07523839979502536;  // std dev = 1.944, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( ta(I, A, J), publication(K, A) )
%   | | | then return -0.1539981784169165;  // std dev = 0.234, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08623634235539358;  // std dev = 0.792, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.35146569380097015;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.49179962494850765;  // std dev = 0.132, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.1527262558298054;  // std dev = 0.863, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.44877273174370025;  // std dev = 0.253, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.09457615237317608;  // std dev = 0.022, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( student(A), publication(E, A) )
%   | | then return 0.3163345399878573;  // std dev = 0.068, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return -0.08348288735982456;  // std dev = 1.493, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.24779992614953547;  // std dev = 0.746, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( ta(I, A, J), professor(B) )
%   | | then return -0.3933393594393449;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( professor(B) )
%   | | | then return 0.004015715437920897;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08552455258270625;  // std dev = 0.010, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( publication(F, D) )
%   | | | then return -0.3639119835660028;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1641639952879055;  // std dev = 0.716, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.05882963137523097;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.28210813053872796;  // std dev = 0.643, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.07935516568452994;  // std dev = 0.021, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( publication(E, B), publication(E, A) )
%   | then if ( student(A), professor(B) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.2465054000888183;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20489277794063784;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.08458666452599978;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( publication(G, A), professor(B) )
%   | | then if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return -0.41649399320683794;  // std dev = 0.415, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.15596916980826023;  // std dev = 1.311, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.07772365856324912;  // std dev = 1.276, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.08309098913359483;  // std dev = 0.745, 40.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | then return 0.27767458221612107;  // std dev = 0.177, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.14384379532621555;  // std dev = 0.269, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.37544394194688646;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( student(A), publication(J, A) )
%   | | | then return 0.1753077704308826;  // std dev = 0.039, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.08221065288615215;  // std dev = 0.493, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( publication(K, A) )
%   | then if ( publication(K, L), professor(L) )
%   | | then return -0.09789650836040878;  // std dev = 0.107, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( publication(M, B) )
%   | | | then return -0.06691804527448417;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.12932271106110269;  // std dev = 0.475, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11773036662096445;  // std dev = 0.100, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | then return 0.2267052701523581;  // std dev = 0.153, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(H, A), publication(H, B) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return -0.058846776346930064;  // std dev = 0.822, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08385403326059497;  // std dev = 0.280, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( publication(J, B), publication(K, A) )
%   | | | then return -0.1496606784691305;  // std dev = 0.757, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.04850424173607524;  // std dev = 1.314, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.310', 'seconds']
Refined model CLL: -0.175812


******************************************
Best model found
******************************************
Results 

CLL : -0.236847 

AUC ROC : 0.935622 

AUC PR : 0.248543 

Precision : 0.143451 

Recall : 0.741935 

F1 : 0.240418 

Total Learning Time : 7.391 

Total Inference Time : 1.141066312789917 

Total revision time: 9.646452575683593
Best scored revision CLL: -0.175812


Results 

CLL : -0.236847 

AUC ROC : 0.935622 

AUC PR : 0.248543 

Precision : 0.143451 

Recall : 0.741935 

F1 : 0.240418 

Total Learning Time : 9.664706140518188 

Total Inference Time : 1.141066312789917 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.509
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.488, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.30814893509951236;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.476, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19135594474848885;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.022760404423702738;  // std dev = 0.425, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.1282177743653314;  // std dev = 0.476, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23310688378214442;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.1056144136741415;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.467, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return -0.026470974724959982;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.219', 'seconds']
Parameter learned model CLL:-0.435049 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.225, 11, 9]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.372, 15, 9]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.425, 29, 9]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.476, 17, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [2.176, 10, 9]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [2.341, 14, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [2.543, 23, 9], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2475], 'false': [nan, 0.2475], 'false,false': [nan, 0.2475]}
{}
{'': [nan, 0.2343750000000002], 'false': [nan, 0.2343750000000002]}
{'': [nan, 0.18074792243767324]}
{'': [0.2263313609467456, nan]}
{'': [nan, 0.24930747922437663]}
{'': [0.23818525519848754, nan]}
{}
{'': [0.20214843750000017, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 1.622
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.1667528039849601;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.10159632948783631;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.36663912273963123;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.10515730384476088;  // std dev = 0.417, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return -0.09269127618926093;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return 0.29028429075013384;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3251021278103342;  // std dev = 0.120, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08918970522728921;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.05767187659362516;  // std dev = 0.790, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.26021658185441743;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07848660118653586;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F) )
%   | | then return 0.22326409669608738;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.21380254530635812;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08152127019135952;  // std dev = 0.102, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return -0.07077116459208693;  // std dev = 0.896, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.18168029442917108;  // std dev = 0.084, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07145525321424186;  // std dev = 0.070, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( ta(E, A, F), professor(B) )
%   | then return 0.18887189596994633;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( professor(B) )
%   | | then return -0.013666002407700883;  // std dev = 0.928, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.06329556584708783;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.878', 'seconds']
Refined model CLL: -0.198169


******************************************
Best model found
******************************************
Results 

CLL : -0.37974 

AUC ROC : 0.904447 

AUC PR : 0.124486 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 1.622 

Total Inference Time : 0.4863302707672119 

Total revision time: 3.0409571704864504
Best scored revision CLL: -0.198169


Results 

CLL : -0.37974 

AUC ROC : 0.904447 

AUC PR : 0.124486 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 3.059210735321045 

Total Inference Time : 0.4863302707672119 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.653
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.457, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1501843333295994;  // std dev = 4.834, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.468, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14161842926913004;  // std dev = 4.797, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1423232956027143;  // std dev = 0.468, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.1300460421131771;  // std dev = 0.471, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12590079478949295;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.1187821879557904;  // std dev = 4.572, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.459, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.046621697866599816;  // std dev = 4.746, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '974', 'milliseconds']
Parameter learned model CLL:-0.348979 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.834, 80, 33]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.797, 76, 33]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.468, 69, 33]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.471, 66, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.628, 61, 33]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.572, 57, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.746, 71, 33], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.20675072441068348], 'false': [nan, 0.20675072441068348], 'false,false': [nan, 0.20675072441068348]}
{}
{'': [nan, 0.21109334231125415], 'false': [nan, 0.21109334231125415]}
{'': [nan, 0.21885813148788869]}
{'': [0.22222222222222227, nan]}
{'': [nan, 0.22781801720235473]}
{'': [0.23222222222222244, nan]}
{}
{'': [0.21662352071006033, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 10.211
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(D, F), ta(G, F, H) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( tempadvisedby(I, B), ta(J, A, K) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.14185106490048768;  // std dev = 5.58e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.4486895711153493;  // std dev = 3.079, 48.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=33 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.3708509161742859;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.045815750492380736;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6208509161742858;  // std dev = 3.65e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then if ( ta(I, A, J) )
%   | | | then return 0.2956132697557619;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.05088410359617021;  // std dev = 1.252, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( ta(K, A, L), tempadvisedby(M, B) )
%   | | | then return 0.25991855470273173;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.41123427822245007;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, B), tempadvisedby(G, B) )
%   | | | then return 0.4577574419155163;  // std dev = 1.257, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.19030127601206667;  // std dev = 2.491, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | else return -0.10159632948783623;  // std dev = 3.49e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.379893613665756;  // std dev = 0.081, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.454191699933844;  // std dev = 0.148, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.2335801287380379;  // std dev = 2.028, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return -0.0036155715282880324;  // std dev = 1.811, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return -0.092691276189261;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( student(A) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.32151210516970896;  // std dev = 1.436, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return 0.2003607126370434;  // std dev = 1.539, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( student(B) )
%   | | then return -0.0851847513883968;  // std dev = 1.97e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.2287510081115242;  // std dev = 0.895, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, B), publication(D, A) )
%   | then if ( professor(B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.2950273797702825;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2390630441112781;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | then if ( ta(I, A, J), publication(K, B) )
%   | | | then return -0.4066227560702466;  // std dev = 0.882, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.012791382829815812;  // std dev = 1.056, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( professor(B), publication(L, B) )
%   | | | then return 0.046780415101302805;  // std dev = 2.443, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return -0.08676148654321784;  // std dev = 0.315, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F), publication(G, B) )
%   | | then if ( ta(H, I, F), publication(G, I) )
%   | | | then return 0.2577927120177001;  // std dev = 0.868, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.15064736145908464;  // std dev = 1.909, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.11457872944898517;  // std dev = 1.518, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.38910017224352966;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07325568426957935;  // std dev = 0.016, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( ta(C, A, D), professor(B) )
%   then if ( ta(C, E, D), publication(F, E) )
%   | then if ( publication(F, B) )
%   | | then return 0.23085560386095172;  // std dev = 0.183, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.1812139899627497;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.2568103825762043;  // std dev = 1.030, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( ta(C, H, I), tempadvisedby(H, J) )
%   | | then return 0.3826840259235649;  // std dev = 0.158, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.17272569013251235;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( publication(K, B), publication(K, A) )
%   | then return 0.05942123364330448;  // std dev = 0.129, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( student(B) )
%   | | then return -0.06791914513478445;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( tempadvisedby(L, B), publication(M, L) )
%   | | | then return -0.5368636002230257;  // std dev = 0.263, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.05241185769186016;  // std dev = 1.636, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then return 0.1493004501466359;  // std dev = 0.739, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(H, A), ta(I, A, J) )
%   | | | then return -0.09191621426185424;  // std dev = 1.359, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.0497218103740573;  // std dev = 2.355, 32.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=23 */
%   | else return -0.06540008499732128;  // std dev = 0.037, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.585', 'seconds']
Refined model CLL: -0.216248


******************************************
Best model found
******************************************
Results 

CLL : -0.21499 

AUC ROC : 0.955517 

AUC PR : 0.462406 

Precision : 0.191257 

Recall : 0.875 

F1 : 0.313901 

Total Learning Time : 10.211 

Total Inference Time : 1.7854080200195312 

Total revision time: 13.418960012435914
Best scored revision CLL: -0.216248


Results 

CLL : -0.21499 

AUC ROC : 0.955517 

AUC PR : 0.462406 

Precision : 0.191257 

Recall : 0.875 

F1 : 0.313901 

Total Learning Time : 13.437213577270509 

Total Inference Time : 1.7854080200195312 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.543
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.483, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.25814893509951237;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.490, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15706698781743858;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14018377697936601;  // std dev = 0.474, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.10969708120597355;  // std dev = 0.471, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06443494297793487;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.05841144895458788;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.495, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.1544751121944064;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.157', 'seconds']
Parameter learned model CLL:-0.39161 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.098, 24, 16]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.266, 32, 16]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.474, 31, 16]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.471, 32, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.328, 36, 16]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.314, 35, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.044, 22, 16], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2399999999999995], 'false': [nan, 0.2399999999999995], 'false,false': [nan, 0.2399999999999995]}
{}
{'': [nan, 0.22222222222222265], 'false': [nan, 0.22222222222222265]}
{'': [nan, 0.22453598913535514]}
{'': [0.22222222222222254, nan]}
{'': [nan, 0.21301775147929058]}
{'': [0.21530180699730866, nan]}
{}
{'': [0.24376731301939025, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 9.988
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, A, E), ta(F, C, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( ta(I, A, J) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.4835577913932792;  // std dev = 2.091, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), projectmember(E, B) )
%   | then return -0.05405745150388489;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(F, B), publication(F, A) )
%   | | then return 0.6619617706884937;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.39159960216952167;  // std dev = 1.435, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.6686447572015624;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(B, F), student(A) )
%   | | then if ( ta(G, A, H), projectmember(I, B) )
%   | | | then return -0.041309289261206174;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4195587074765477;  // std dev = 1.257, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else if ( ta(J, A, K) )
%   | | | then return -0.13787339490841002;  // std dev = 0.308, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06207738576819708;  // std dev = 0.612, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.4002130739831652;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.5295788863965041;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.2012823876675679;  // std dev = 1.498, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.5398560908261676;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09453666707794213;  // std dev = 0.014, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( ta(E, G, H) )
%   | | | then return 0.32108993746627373;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05010472855598084;  // std dev = 1.303, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.37053063271856823;  // std dev = 0.111, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.08647932121366604;  // std dev = 0.010, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(B, D), ta(E, A, F) )
%   | then if ( tempadvisedby(G, B), ta(E, G, H) )
%   | | then return 0.25589247446822183;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(I, J, F), publication(K, J) )
%   | | | then return 0.03512700829266826;  // std dev = 0.840, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.22233465889643847;  // std dev = 0.905, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( projectmember(L, B), publication(M, A) )
%   | | then return -0.21675253838871966;  // std dev = 0.325, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( projectmember(N, B) )
%   | | | then return 0.04748321417124374;  // std dev = 0.834, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.11194033180103874;  // std dev = 1.205, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( publication(E, B), ta(F, A, G) )
%   | then if ( ta(F, H, I), tempadvisedby(H, J) )
%   | | then if ( publication(E, J) )
%   | | | then return 0.07922772439139907;  // std dev = 0.905, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.32042819262648425;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.2655104632171191;  // std dev = 0.963, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( ta(K, A, L) )
%   | | then if ( ta(M, B, N) )
%   | | | then return -0.06846941996275846;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.2330920821365971;  // std dev = 0.451, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( tempadvisedby(P, B), student(A) )
%   | | | then return 0.12867859793438466;  // std dev = 0.643, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.09905468157682992;  // std dev = 1.005, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, B), ta(D, A, E) )
%   then if ( publication(F, A) )
%   | then return -0.0517550655093849;  // std dev = 0.556, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( ta(D, G, H), publication(I, G) )
%   | | then return 0.2762371379371339;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(J, K, E), publication(L, K) )
%   | | | then return 0.18246788645078355;  // std dev = 0.305, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11092853002715423;  // std dev = 0.845, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( tempadvisedby(M, B), student(A) )
%   | then if ( inphase(A, N), inphase(M, N) )
%   | | then return -0.31716995643798723;  // std dev = 0.719, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.17615276378611147;  // std dev = 1.072, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( student(B) )
%   | | then return -0.0648626395098036;  // std dev = 0.019, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.07361927441195315;  // std dev = 0.483, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( student(A), publication(E, A) )
%   | then if ( publication(E, B) )
%   | | then return 0.23142399137031153;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1395464504329257;  // std dev = 0.194, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( projectmember(F, B), student(A) )
%   | | then return 0.10858260389936812;  // std dev = 0.937, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(G, A, H), hasposition(B, I) )
%   | | | then return 0.04007551473669832;  // std dev = 1.112, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.09249927957396918;  // std dev = 0.859, 34.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.580', 'seconds']
Refined model CLL: -0.230026


******************************************
Best model found
******************************************
Results 

CLL : -0.214536 

AUC ROC : 0.946902 

AUC PR : 0.259586 

Precision : 0.191388 

Recall : 0.824742 

F1 : 0.31068 

Total Learning Time : 9.988 

Total Inference Time : 0.8436994552612305 

Total revision time: 11.923066001892089
Best scored revision CLL: -0.230026


Results 

CLL : -0.214536 

AUC ROC : 0.946902 

AUC PR : 0.259586 

Precision : 0.191388 

Recall : 0.824742 

F1 : 0.31068 

Total Learning Time : 11.941319566726683 

Total Inference Time : 0.8436994552612305 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.68
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.466, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14740513344661832;  // std dev = 4.988, 121.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.473, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20006618799074033;  // std dev = 4.730, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11211143297157926;  // std dev = 0.459, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.09428268688233639;  // std dev = 0.459, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13377287476408678;  // std dev = 4.743, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.08910760164843784;  // std dev = 4.819, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.465, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.04810597040310955;  // std dev = 4.905, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '915', 'milliseconds']
Parameter learned model CLL:-0.338465 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.988, 86, 35]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.73, 62, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.459, 81, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.459, 81, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.743, 63, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.819, 69, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.905, 77, 35], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.20558705006488764], 'false': [nan, 0.20558705006488764], 'false,false': [nan, 0.20558705006488764]}
{}
{'': [nan, 0.23063024763524373], 'false': [nan, 0.23063024763524373]}
{'': [nan, 0.21068668252080733]}
{'': [0.2106866825208076, nan]}
{'': [nan, 0.2295918367346937]}
{'': [0.22328032544378715, nan]}
{}
{'': [0.21484374999999928, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 7.076
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, C) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.6081489350995123;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(F, A) )
%   | | then if ( publication(F, G), ta(H, G, I) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.1418510649004877;  // std dev = 3.65e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.5138757962035443;  // std dev = 2.858, 46.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=35 */
%   | | | else return -0.12544463852839136;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.6302028938715322;  // std dev = 0.107, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.14460992220776692;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.21405129246570917;  // std dev = 1.614, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.5303679304120333;  // std dev = 1.292, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(A), professor(B) )
%   | | then if ( publication(F, B), publication(F, A) )
%   | | | then return 0.42142017284708727;  // std dev = 0.804, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.273006232347002;  // std dev = 2.373, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.37411267538868265;  // std dev = 0.109, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | | then return -0.25899374682647225;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.09609217420124502;  // std dev = 2.731, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.11136988536077824;  // std dev = 0.924, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.29823058421630433;  // std dev = 0.077, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( projectmember(I, B), publication(J, A) )
%   | | | then return 0.4612840483795673;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03077079956621148;  // std dev = 2.751, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | else return -0.0851847513883968;  // std dev = 1.67e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.2463566847074393;  // std dev = 0.087, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | | then return -0.24627890095396587;  // std dev = 1.240, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.07481905041916496;  // std dev = 2.574, 31.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F) )
%   | | then if ( publication(G, A), publication(G, B) )
%   | | | then return 0.21590936630873053;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.45156768380915685;  // std dev = 0.220, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.3921999368322125;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.050708184611495906;  // std dev = 2.513, 37.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=24 */
%   | else return -0.07324622576333704;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.18816646482221464;  // std dev = 0.068, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return -0.4324521479345773;  // std dev = 0.209, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.04906949531116678;  // std dev = 1.023, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.14582757762036172;  // std dev = 1.576, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.018038444005571877;  // std dev = 1.825, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   else return -0.0684269778442027;  // std dev = 1.49e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B) )
%   | | then if ( publication(F, A), publication(G, E) )
%   | | | then return 0.14823943045799048;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.041948424582181905;  // std dev = 2.295, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | else if ( ta(H, A, I) )
%   | | | then return -0.09508785959377125;  // std dev = 1.037, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.22782732799089553;  // std dev = 1.185, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.722', 'seconds']
Refined model CLL: -0.210761


******************************************
Best model found
******************************************
Results 

CLL : -0.217514 

AUC ROC : 0.953286 

AUC PR : 0.378487 

Precision : 0.213622 

Recall : 0.884615 

F1 : 0.34414 

Total Learning Time : 7.076 

Total Inference Time : 1.3822574615478516 

Total revision time: 9.957265811920166
Best scored revision CLL: -0.210761


Results 

CLL : -0.217514 

AUC ROC : 0.953286 

AUC PR : 0.378487 

Precision : 0.213622 

Recall : 0.884615 

F1 : 0.34414 

Total Learning Time : 10.03890057182312 

Total Inference Time : 1.3822574615478516 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.554
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.462, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19148226843284544;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.465, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1721885420790067;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15271314788212978;  // std dev = 0.475, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.16042316857122688;  // std dev = 0.485, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0486981282744715;  // std dev = 3.757, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.07878408518357968;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.475, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.07504199396986141;  // std dev = 3.620, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.138', 'seconds']
Parameter learned model CLL:-0.38623 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.651, 40, 20]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.636, 39, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.475, 38, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.485, 33, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.757, 48, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.651, 40, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.62, 38, 20], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2222222222222218], 'false': [nan, 0.2222222222222218], 'false,false': [nan, 0.2222222222222218]}
{}
{'': [nan, 0.22407354208560712], 'false': [nan, 0.22407354208560712]}
{'': [nan, 0.2259215219976217]}
{'': [0.23495906016375945, nan]}
{'': [nan, 0.20761245674740478]}
{'': [0.2222222222222226, nan]}
{}
{'': [0.22592152199762225, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 7.711
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( publication(D, A), ta(E, A, F) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.43029093571163685;  // std dev = 2.429, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.4530634725504428;  // std dev = 0.933, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.01825175055853362;  // std dev = 1.121, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( publication(E, A) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.625172133896584;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6637027400264565;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.625172133896584;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.34321294206974723;  // std dev = 0.691, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.5696440287477277;  // std dev = 0.195, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.18622608313266523;  // std dev = 2.030, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.4645266913338274;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2754917243303014;  // std dev = 0.886, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(H, B), student(A) )
%   | | | then return 0.2565781151021892;  // std dev = 1.022, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.05008727143968332;  // std dev = 1.004, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( professor(B), publication(I, A) )
%   | | then return 0.03982180799643373;  // std dev = 0.719, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(J, A, K) )
%   | | | then return -0.12169604647091263;  // std dev = 0.217, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.3284082435219965;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.40962054276240356;  // std dev = 0.156, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(J, A), publication(J, B) )
%   | | | then return 0.3612044778722302;  // std dev = 0.073, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.02905524019370853;  // std dev = 1.294, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return -0.08676178779728137;  // std dev = 0.054, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.060594602727324275;  // std dev = 0.975, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.260325531708381;  // std dev = 0.796, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.03361045190782395;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.0813326725327677;  // std dev = 0.071, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( publication(F, A) )
%   | | then if ( publication(E, A), student(A) )
%   | | | then return 0.2418277238941689;  // std dev = 0.103, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1236101336724607;  // std dev = 1.013, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | | then return 0.2059469483312952;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3391178204091121;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( professor(B) )
%   | | then return -0.16535995233006523;  // std dev = 0.896, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.07220488912432506;  // std dev = 0.005, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.23134558996775234;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17585879231406637;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | then return -0.1544935518847848;  // std dev = 0.834, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.06350288005676692;  // std dev = 0.876, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2370418018347197;  // std dev = 0.646, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07113277420603732;  // std dev = 0.065, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F), publication(G, B) )
%   | | then if ( publication(H, A), tempadvisedby(I, B) )
%   | | | then return 0.2904386405165723;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19841110433429457;  // std dev = 0.148, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(J, B), publication(K, A) )
%   | | | then return -0.057217570918215686;  // std dev = 0.678, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1691133865817121;  // std dev = 0.684, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.06462078410898642;  // std dev = 0.038, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.573', 'seconds']
Refined model CLL: -0.192785


******************************************
Best model found
******************************************
Results 

CLL : -0.26826 

AUC ROC : 0.940711 

AUC PR : 0.216889 

Precision : 0.141831 

Recall : 0.849462 

F1 : 0.243077 

Total Learning Time : 7.711 

Total Inference Time : 0.9252233505249023 

Total revision time: 9.7470716381073
Best scored revision CLL: -0.192785


Results 

CLL : -0.26826 

AUC ROC : 0.940711 

AUC PR : 0.216889 

Precision : 0.141831 

Recall : 0.849462 

F1 : 0.243077 

Total Learning Time : 9.828706398010254 

Total Inference Time : 0.9252233505249023 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.5
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.488, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20430278125335852;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16474948602180314;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11739376813926451;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.12144058840411665;  // std dev = 0.471, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08854739821180264;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.12592766600474722;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.450, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.08663935455282372;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.118', 'seconds']
Parameter learned model CLL:-0.423954 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.426, 17, 9]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.449, 18, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.463, 20, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.471, 18, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [2.471, 19, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [2.372, 15, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [2.4, 16, 9], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.22633136094674564], 'false': [nan, 0.22633136094674564], 'false,false': [nan, 0.22633136094674564]}
{}
{'': [nan, 0.22222222222222196], 'false': [nan, 0.22222222222222196]}
{'': [nan, 0.21403091557669443]}
{'': [0.22222222222222207, nan]}
{'': [nan, 0.21811224489795905]}
{'': [0.23437499999999986, nan]}
{}
{'': [0.23039999999999977, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 2.196
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(F, B) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B) )
%   | | | then return 0.5730516335379934;  // std dev = 1.252, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( publication(C, A) )
%   | then return 0.18927157218646748;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.4145715433273798;  // std dev = 0.790, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.6307570877008869;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(B) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return 0.2526096784845521;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.523482913882456;  // std dev = 0.170, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.46449439376167956;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3712070135140664;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then return 0.33493195990998154;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.07932284261640697;  // std dev = 0.402, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( professor(A) )
%   | | then return -0.17695312597830337;  // std dev = 0.318, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | then return 0.2650114287838508;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(G, A), professor(B) )
%   | | then return -0.20531651113945515;  // std dev = 0.686, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(H, A, I), publication(J, B) )
%   | | | then return -0.16162062117777612;  // std dev = 0.726, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.05956145505029552;  // std dev = 1.054, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then return -0.036469163513816794;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3148267551261838;  // std dev = 0.149, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07176455705566587;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.06639085073506343;  // std dev = 0.828, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.23625220792311818;  // std dev = 0.099, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0675646985462094;  // std dev = 0.010, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B) )
%   | then if ( ta(E, A, F) )
%   | | then return 0.0025144479119299846;  // std dev = 0.911, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2223304807521267;  // std dev = 0.137, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.0644195581775206;  // std dev = 0.008, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.663', 'seconds']
Refined model CLL: -0.197513


******************************************
Best model found
******************************************
Results 

CLL : -0.38829 

AUC ROC : 0.905331 

AUC PR : 0.12007 

Precision : 0.082869 

Recall : 1.0 

F1 : 0.153054 

Total Learning Time : 2.196 

Total Inference Time : 0.5018911361694336 

Total revision time: 3.6253968677520754
Best scored revision CLL: -0.197513


Results 

CLL : -0.38829 

AUC ROC : 0.905331 

AUC PR : 0.12007 

Precision : 0.082869 

Recall : 1.0 

F1 : 0.153054 

Total Learning Time : 3.7070316276550295 

Total Inference Time : 0.5018911361694336 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.657
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.461, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18167834686421683;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.461, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17129822906399092;  // std dev = 4.678, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1095399133052758;  // std dev = 0.458, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.1896661625438125;  // std dev = 0.489, 83.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14734731502059767;  // std dev = 4.493, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.10193749958322469;  // std dev = 4.557, 89.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.462, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.058016265557754285;  // std dev = 4.641, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '904', 'milliseconds']
Parameter learned model CLL:-0.37695 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.725, 69, 33]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.678, 65, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.458, 77, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.489, 50, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.493, 52, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.557, 56, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.641, 62, 33], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.21885813148789068], 'false': [nan, 0.21885813148789068], 'false,false': [nan, 0.21885813148789068]}
{}
{'': [nan, 0.2233444398167427], 'false': [nan, 0.2233444398167427]}
{'': [nan, 0.2099999999999987]}
{'': [0.23951226593119548, nan]}
{'': [nan, 0.23750865051903122]}
{'': [0.2333038757732605, nan]}
{}
{'': [0.22670360110803273, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 15.845
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | then if ( publication(F, H), ta(I, H, J) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tempadvisedby(K, B), ta(L, A, M) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.5803711573217345;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.14185106490048768;  // std dev = 5.77e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.443505815641862;  // std dev = 3.247, 49.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=33 */
%   | | | else return -0.12544463852839152;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.6387877230781043;  // std dev = 0.141, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.4112205670634352;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03094072334066189;  // std dev = 0.826, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.7154367192150265;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3723439366029134;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.11231637819360633;  // std dev = 2.58e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(A), professor(B) )
%   | | then if ( publication(F, A), publication(F, B) )
%   | | | then return 0.48402180005542483;  // std dev = 0.161, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.24166799958213578;  // std dev = 2.626, 32.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.36725253252775225;  // std dev = 0.156, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(E, A) )
%   | | | then return -0.026522535503506996;  // std dev = 1.919, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.2571741337633333;  // std dev = 1.918, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(F, B) )
%   | | then if ( publication(F, G), ta(H, G, I) )
%   | | | then return 0.13716417383609722;  // std dev = 1.925, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return -0.07045149233006483;  // std dev = 1.133, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.39147586528525274;  // std dev = 0.998, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.0281038775507758;  // std dev = 1.348, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return -0.08518475138839682;  // std dev = 2.24e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( ta(D, A, E), publication(F, A) )
%   | | then if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.18695637271053298;  // std dev = 0.690, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.4457691954406213;  // std dev = 0.233, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(I, A, J), tempadvisedby(K, B) )
%   | | | then return -0.07592106918594996;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.12940276768799794;  // std dev = 2.150, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( publication(F, A) )
%   | | then if ( publication(E, A), ta(G, A, H) )
%   | | | then return -0.13514071705819963;  // std dev = 1.167, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.051547976577918;  // std dev = 1.702, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.226782560586966;  // std dev = 0.925, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.15771716585090045;  // std dev = 1.265, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( publication(J, A) )
%   | | then if ( ta(K, A, L) )
%   | | | then return 0.08543381551855152;  // std dev = 0.389, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07324622576333704;  // std dev = 7.45e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( student(A), student(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.2587742140233948;  // std dev = 0.454, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.017604706700487326;  // std dev = 0.924, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2459874925970403;  // std dev = 0.110, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(F, A) )
%   | | then if ( publication(F, G), ta(H, G, I) )
%   | | | then return 0.011381406421605266;  // std dev = 1.457, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.24019024751315188;  // std dev = 0.882, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return -0.08149666984433988;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.23681219408147125;  // std dev = 0.882, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.0707243950509075;  // std dev = 0.032, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( ta(E, A, F), professor(B) )
%   | then if ( ta(G, H, F), publication(I, H) )
%   | | then if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then return -0.14261023403019343;  // std dev = 1.413, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.17782172266444038;  // std dev = 1.067, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.30894404783223084;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(L, A), student(A) )
%   | | then if ( publication(L, B), professor(B) )
%   | | | then return 0.20352229256025053;  // std dev = 0.097, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.09570405426820444;  // std dev = 1.277, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( professor(B) )
%   | | | then return -0.07712819621317331;  // std dev = 1.305, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.06306076658469358;  // std dev = 0.017, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.687', 'seconds']
Refined model CLL: -0.219172


******************************************
Best model found
******************************************
Results 

CLL : -0.207932 

AUC ROC : 0.947834 

AUC PR : 0.373622 

Precision : 0.190981 

Recall : 0.9 

F1 : 0.315098 

Total Learning Time : 15.845 

Total Inference Time : 2.0795605182647705 

Total revision time: 19.323587562561038
Best scored revision CLL: -0.219172


Results 

CLL : -0.207932 

AUC ROC : 0.947834 

AUC PR : 0.373622 

Precision : 0.190981 

Recall : 0.9 

F1 : 0.315098 

Total Learning Time : 19.40522232246399 

Total Inference Time : 2.0795605182647705 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.606
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.488, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14386322081379807;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.459, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18014426164979142;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1776028745684292;  // std dev = 0.481, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.08745063029535245;  // std dev = 0.459, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05617934006206154;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.05128830734746649;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.471, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.06463545986414831;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.107', 'seconds']
Parameter learned model CLL:-0.349007 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.381, 40, 16]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.249, 31, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.481, 28, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.459, 37, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.381, 40, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.368, 39, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.314, 35, 16], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2040816326530607], 'false': [nan, 0.2040816326530607], 'false,false': [nan, 0.2040816326530607]}
{}
{'': [nan, 0.22453598913535527], 'false': [nan, 0.22453598913535527]}
{'': [nan, 0.23140495867768635]}
{'': [0.2107511569953725, nan]}
{'': [nan, 0.20408163265306187]}
{'': [0.20628099173553693, nan]}
{}
{'': [0.2153018069973082, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 8.161
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.6371277303749379;  // std dev = 1.197, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then return 0.11711779465650396;  // std dev = 0.924, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.6002386273922689;  // std dev = 0.172, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.11231637819360639;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, A), publication(F, B) )
%   | | | then return 0.4867092388463785;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10355782808400386;  // std dev = 2.041, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.24895100893127275;  // std dev = 0.681, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.02140296696780894;  // std dev = 0.898, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.4069220647026175;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.10768784979472285;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.09269127618926097;  // std dev = 7.45e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( projectmember(E, B), student(A) )
%   | then return 0.1169163161146301;  // std dev = 1.194, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( publication(F, A), hasposition(B, G) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.3108027521166675;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.4150779796739861;  // std dev = 0.404, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( hasposition(B, H), student(A) )
%   | | | then return -0.18165422059983236;  // std dev = 1.837, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.08699229150938655;  // std dev = 0.709, 43.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( ta(D, A, E), publication(F, A) )
%   | | then return -0.19007442448811498;  // std dev = 0.799, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | | then return 0.04823262192797811;  // std dev = 1.391, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.34852232464908117;  // std dev = 0.208, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.08047095053528973;  // std dev = 0.052, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( publication(E, B), student(A) )
%   | then if ( publication(E, A) )
%   | | then return 0.23976413388819723;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.03709662734125523;  // std dev = 1.391, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.0906826943136245;  // std dev = 1.043, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( ta(I, A, J), professor(B) )
%   | | then return -0.539645157862304;  // std dev = 0.397, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.33639670642881064;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.07756958328220949;  // std dev = 0.051, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, B), ta(D, A, E) )
%   then if ( professor(B) )
%   | then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | | then if ( publication(I, A) )
%   | | | then return 0.024373900759779594;  // std dev = 0.568, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3191158277169456;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.2885676709443047;  // std dev = 0.935, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.06710427844221585;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(J, B) )
%   | | then return 0.040575008475895326;  // std dev = 0.679, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(K, A) )
%   | | | then return -0.15491568695122307;  // std dev = 0.730, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.4855020159700973;  // std dev = 0.826, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.066452650155428;  // std dev = 0.024, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( tempadvisedby(E, B), publication(F, B) )
%   | then if ( publication(G, A) )
%   | | then return 0.052854260308026514;  // std dev = 0.517, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, H), inphase(H, I) )
%   | | | then return 0.2633195229172067;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.37247714231512347;  // std dev = 0.216, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(J, A, K), professor(B) )
%   | | then if ( ta(J, L, M), publication(N, L) )
%   | | | then return -0.12756933114879257;  // std dev = 0.465, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.34701743070518587;  // std dev = 0.734, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.2615171938138844;  // std dev = 0.132, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.062439146961574585;  // std dev = 0.023, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.880', 'seconds']
Refined model CLL: -0.239101


******************************************
Best model found
******************************************
Results 

CLL : -0.231191 

AUC ROC : 0.942639 

AUC PR : 0.328915 

Precision : 0.132824 

Recall : 0.896907 

F1 : 0.231383 

Total Learning Time : 8.161 

Total Inference Time : 1.0313327312469482 

Total revision time: 10.328887502670288
Best scored revision CLL: -0.239101


Results 

CLL : -0.231191 

AUC ROC : 0.942639 

AUC PR : 0.328915 

Precision : 0.132824 

Recall : 0.896907 

F1 : 0.231383 

Total Learning Time : 10.410522262573242 

Total Inference Time : 1.0313327312469482 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.907
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.477, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2189736773675522;  // std dev = 4.730, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.478, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17934982118325357;  // std dev = 4.770, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1524497892485098;  // std dev = 0.477, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.10124004672558794;  // std dev = 0.468, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06349080714696895;  // std dev = 4.934, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.10448669668650669;  // std dev = 4.743, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.467, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.06691585945001839;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.409', 'seconds']
Parameter learned model CLL:-0.354671 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.73, 62, 35]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.77, 65, 35]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.477, 65, 35]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.468, 73, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.934, 80, 35]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.743, 63, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.807, 68, 35], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23063024763524434], 'false': [nan, 0.23063024763524434], 'false,false': [nan, 0.23063024763524434]}
{}
{'': [nan, 0.22749999999999987], 'false': [nan, 0.22749999999999987]}
{'': [nan, 0.22750000000000054]}
{'': [0.2190500685871053, nan]}
{'': [nan, 0.21172022684310005]}
{'': [0.22959183673469477, nan]}
{}
{'': [0.22433782637383473, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 77.241
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5664822684328455;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   else return -0.1418510649004877;  // std dev = 3.94e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.4279205699823745;  // std dev = 3.304, 52.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=35 */
%   | | | else return -0.12544463852839133;  // std dev = 2.98e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.6257274212732378;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.6748097253682785;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, B), publication(G, A) )
%   | | | then return -0.026711386035851527;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.29891115192392625;  // std dev = 2.458, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, B), ta(G, A, H) )
%   | | | then return 0.08619373093556541;  // std dev = 1.488, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.32025561495643673;  // std dev = 2.568, 39.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=29 */
%   | | else return -0.10159632948783623;  // std dev = 3.94e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( ta(F, D, G), publication(H, A) )
%   | | | then return 0.4050417278406816;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.0065858259202684;  // std dev = 1.361, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.2949544747137804;  // std dev = 1.262, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.46635418664891143;  // std dev = 0.959, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, B), publication(E, A) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.4093597375307654;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3233057127109362;  // std dev = 0.084, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | | then return -0.057828466863369364;  // std dev = 0.959, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.19123037307885918;  // std dev = 2.090, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | else return -0.0851847513883968;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( student(A), professor(B) )
%   | then if ( publication(D, B), publication(E, A) )
%   | | then if ( publication(D, A), tempadvisedby(F, B) )
%   | | | then return 0.20690306998732858;  // std dev = 0.931, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.20088723881910653;  // std dev = 1.289, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return -0.16622020489886669;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2758411241481462;  // std dev = 1.361, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else return -0.0787767547310918;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( publication(E, B), publication(E, A) )
%   | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then if ( publication(I, F), student(A) )
%   | | | then return 0.20805684423961684;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14777860552220834;  // std dev = 0.255, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2772576412606728;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(J, A), projectmember(K, B) )
%   | | then return 0.3234943202611899;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(L, A), tempadvisedby(M, B) )
%   | | | then return -0.3038930179835754;  // std dev = 0.419, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.035755246218082064;  // std dev = 2.413, 81.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( student(A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( sameperson(A, D), tempadvisedby(G, B) )
%   | | | then return 0.2246585948850905;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.022385201972693277;  // std dev = 2.126, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | else return 0.24994482010448338;  // std dev = 0.145, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07503832659340766;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( publication(H, A), professor(B) )
%   | then return 0.06100111723720399;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( professor(B), student(A) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return -0.11049042211632573;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.17067510605022795;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.07133712847816176;  // std dev = 0.023, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F), publication(G, A) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.18809573939408922;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2705435561220696;  // std dev = 1.120, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.18176726867121612;  // std dev = 0.662, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.09012517203719747;  // std dev = 1.908, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | else return -0.06665995183587026;  // std dev = 0.039, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.923', 'seconds']
Refined model CLL: -0.225019


******************************************
Best model found
******************************************
Results 

CLL : -0.23182 

AUC ROC : 0.950209 

AUC PR : 0.36067 

Precision : 0.20354 

Recall : 0.884615 

F1 : 0.330935 

Total Learning Time : 77.241 

Total Inference Time : 12.15811038017273 

Total revision time: 91.38334274101257
Best scored revision CLL: -0.225019


Results 

CLL : -0.23182 

AUC ROC : 0.950209 

AUC PR : 0.36067 

Precision : 0.20354 

Recall : 0.884615 

F1 : 0.330935 

Total Learning Time : 91.4173600654602 

Total Inference Time : 12.15811038017273 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.643
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.477, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13592671287728994;  // std dev = 3.801, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.481, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17976708673827949;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17885848958225065;  // std dev = 0.481, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.12573344700113248;  // std dev = 0.473, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08235674120570284;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.05745696525961713;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.479, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.046523125791666765;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.426', 'seconds']
Parameter learned model CLL:-0.370082 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.801, 52, 20]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.636, 39, 20]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.481, 35, 20]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.473, 39, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.695, 43, 20]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.721, 45, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.721, 45, 20], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.20061728395061681], 'false': [nan, 0.20061728395061681], 'false,false': [nan, 0.20061728395061681]}
{}
{'': [nan, 0.22407354208560776], 'false': [nan, 0.22407354208560776]}
{'': [nan, 0.23140495867768565]}
{'': [0.22407354208560784, nan]}
{'': [nan, 0.21667926429831166]}
{'': [0.21301775147928995, nan]}
{}
{'': [0.21301775147929053, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 9.354
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( publication(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.14185106490048774;  // std dev = 1.83e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.5924029223271111;  // std dev = 1.673, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(C, D), tempadvisedby(D, E) )
%   | then if ( publication(F, A), publication(F, B) )
%   | | then return 0.5944043815117775;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2777723105868448;  // std dev = 1.204, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( publication(G, A), ta(H, A, I) )
%   | | then return 0.700812596028367;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.602325014488375;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( student(A), student(B) )
%   | then return -0.11231637819360642;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( student(B), publication(J, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.020217039625584635;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), ta(F, A, G) )
%   | | then if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.27347277270282805;  // std dev = 0.692, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.537847221602199;  // std dev = 0.207, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.09018584554659274;  // std dev = 1.902, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return -0.10516469370385566;  // std dev = 0.059, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.4475540062937212;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3963352008369075;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(F, B), publication(G, A) )
%   | | | then return -0.02423313234883273;  // std dev = 1.115, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.35339930392463115;  // std dev = 0.818, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.09862675345022655;  // std dev = 0.107, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A) )
%   | | then if ( publication(E, F), professor(F) )
%   | | | then return 0.24868387685479992;  // std dev = 0.707, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.44097239320779;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.18263718903949389;  // std dev = 0.900, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.10946288269248557;  // std dev = 0.945, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.08764028098603936;  // std dev = 0.074, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.2881323726776027;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25697548233248263;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return -0.1017694294754765;  // std dev = 0.899, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13038075297685248;  // std dev = 1.216, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else return -0.08223616365000179;  // std dev = 0.075, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( publication(E, B), publication(E, A) )
%   | then if ( professor(B), student(A) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.20596420051975184;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23281493152237703;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( professor(A) )
%   | | | then return -0.11492040828165546;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07220644262162021;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( publication(I, A), professor(B) )
%   | | then if ( ta(J, A, K), publication(L, B) )
%   | | | then return 0.06755104752226304;  // std dev = 0.929, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.3962388631780763;  // std dev = 0.929, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( tempadvisedby(M, B) )
%   | | | then return 0.1330135310960783;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.0787626824391209;  // std dev = 0.757, 42.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(D, B) )
%   | | | then return 0.19604511056069696;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17661462658607058;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3469629422012532;  // std dev = 0.124, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then return 0.2310169561897073;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.008105623270898329;  // std dev = 1.092, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( student(B) )
%   | then return -0.0676495506321559;  // std dev = 0.012, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.09534593577637875;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), ta(E, A, F) )
%   | then if ( ta(G, H, F), tempadvisedby(H, I) )
%   | | then return 0.289156742088617;  // std dev = 0.225, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17976479030122278;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( professor(B), publication(J, A) )
%   | | then if ( publication(J, B) )
%   | | | then return 0.16822297733646246;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1413273258351715;  // std dev = 0.640, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | | then return 0.2617470070229317;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08753128200197587;  // std dev = 0.686, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '58.258', 'seconds']
Refined model CLL: -0.195387


******************************************
Best model found
******************************************
Results 

CLL : -0.269454 

AUC ROC : 0.937204 

AUC PR : 0.205576 

Precision : 0.132428 

Recall : 0.83871 

F1 : 0.228739 

Total Learning Time : 9.354 

Total Inference Time : 1.1678247451782227 

Total revision time: 11.740655920028686
Best scored revision CLL: -0.195387


Results 

CLL : -0.269454 

AUC ROC : 0.937204 

AUC PR : 0.205576 

Precision : 0.132428 

Recall : 0.83871 

F1 : 0.228739 

Total Learning Time : 11.774673244476318 

Total Inference Time : 1.1678247451782227 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.505
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795775065280838;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.467, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1451982161671884;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11385015207169345;  // std dev = 0.458, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.0772329383074872;  // std dev = 0.450, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09349870107023026;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.15816030044563342;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.484, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.05882540760470464;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.816', 'seconds']
Parameter learned model CLL:-0.408044 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.471, 19, 9]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.491, 20, 9]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.458, 21, 9]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.45, 23, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [2.491, 20, 9]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [2.341, 14, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [2.471, 19, 9], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.21811224489795927], 'false': [nan, 0.21811224489795927], 'false,false': [nan, 0.21811224489795927]}
{}
{'': [nan, 0.2140309155766942], 'false': [nan, 0.2140309155766942]}
{'': [nan, 0.2100000000000001]}
{'': [0.20214843749999997, nan]}
{'': [nan, 0.2140309155766948]}
{'': [0.238185255198488, nan]}
{}
{'': [0.21811224489795925, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 2.152
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B) )
%   | | | then return 0.7366049332824657;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5728278417003819;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1292059347133081;  // std dev = 0.155, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.09215111172878383;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.43015843089290134;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.10006508334514869;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B) )
%   | then if ( publication(D, A) )
%   | | then return 0.08596932772073722;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.32951702570893265;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.09140770309266233;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), ta(E, A, F) )
%   | then return 0.3162173866045199;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(G, B) )
%   | | then return -0.38126753693317533;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(B) )
%   | | | then return 0.27521625635208496;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0840943153252376;  // std dev = 1.12e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.27741696276019534;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.22433444817411036;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(E, B) )
%   | | then return -0.14954197333969324;  // std dev = 0.176, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.077839609979889;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B) )
%   | then if ( ta(E, A, F) )
%   | | then return 0.20674270072367806;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.04694513720829002;  // std dev = 0.864, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.07184862184383903;  // std dev = 0.006, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), ta(D, A, E) )
%   then return 0.1809956136265111;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(B), ta(F, A, G) )
%   | then return -0.4777696910140145;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( professor(B), publication(H, A) )
%   | | then return -0.20080313398835536;  // std dev = 0.622, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( professor(B) )
%   | | | then return 0.18227738512442104;  // std dev = 0.084, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06592172614597812;  // std dev = 0.011, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then return -0.1007379443612676;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19176913884359562;  // std dev = 0.148, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(H, A) )
%   | | then return -0.105302247850384;  // std dev = 0.149, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0627831546971419;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.008', 'seconds']
Refined model CLL: -0.178296


******************************************
Best model found
******************************************
Results 

CLL : -0.349673 

AUC ROC : 0.904649 

AUC PR : 0.117674 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 2.152 

Total Inference Time : 0.491438627243042 

Total revision time: 3.581985885620117
Best scored revision CLL: -0.178296


Results 

CLL : -0.349673 

AUC ROC : 0.904649 

AUC PR : 0.117674 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 3.616003210067749 

Total Inference Time : 0.491438627243042 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.774
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.452, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16090122867749257;  // std dev = 4.797, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.476, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20407893644347636;  // std dev = 4.572, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15143225942561508;  // std dev = 0.475, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.10979251556329639;  // std dev = 0.469, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09383030545360155;  // std dev = 4.702, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.09385573443667213;  // std dev = 4.641, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.476, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.16831869624561213;  // std dev = 4.299, 75.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.621', 'seconds']
Parameter learned model CLL:-0.383362 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.797, 76, 33]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.572, 57, 33]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.475, 63, 33]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.469, 68, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.702, 67, 33]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.641, 62, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.299, 42, 33], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.21109334231125462], 'false': [nan, 0.21109334231125462], 'false,false': [nan, 0.21109334231125462]}
{}
{'': [nan, 0.2322222222222229], 'false': [nan, 0.2322222222222229]}
{'': [nan, 0.22558593750000058]}
{'': [0.21997843348691307, nan]}
{'': [nan, 0.22109999999999894]}
{'': [0.22670360110803253, nan]}
{}
{'': [0.24639999999999948, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 18.686
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004877;  // std dev = 2.98e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.5793600622469601;  // std dev = 2.243, 39.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=33 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.3896433015298391;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5896433015298391;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(F, B), publication(G, A) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.11680162120967762;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.3125867476227423;  // std dev = 0.179, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.10803425883868847;  // std dev = 2.421, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.496915114993022;  // std dev = 0.826, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1123163781936064;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(B) )
%   | | then return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( student(A), publication(F, B) )
%   | | | then return 0.3478654472234892;  // std dev = 2.249, 40.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=32 */
%   | | | else return -0.12391195276797005;  // std dev = 0.846, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.3777983023147278;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.10046377943254006;  // std dev = 1.277, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return 0.5390680250408628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22789923706855655;  // std dev = 1.936, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | else return -0.0925141567662229;  // std dev = 0.004, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( student(A), professor(B) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.1335954518561453;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.292133533230732;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(H, A) )
%   | | | then return -0.022204590274600467;  // std dev = 1.719, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.13544289878758953;  // std dev = 1.923, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | else return -0.08495669516435465;  // std dev = 0.005, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.14442040966611192;  // std dev = 0.930, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.33769022042610763;  // std dev = 0.771, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( publication(I, B), publication(I, A) )
%   | | | then return 0.23561686448690672;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.09992409284440283;  // std dev = 1.730, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return -0.0786278450342164;  // std dev = 0.004, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.21312085919489737;  // std dev = 0.104, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return -0.09543828008305445;  // std dev = 1.703, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.014045733598684343;  // std dev = 2.182, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | else return -0.07304502397630604;  // std dev = 0.004, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.3386603012304362;  // std dev = 0.364, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return -0.017357973248634917;  // std dev = 0.423, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15982406277382313;  // std dev = 1.066, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( ta(I, A, J) )
%   | | then if ( ta(I, K, L), publication(M, K) )
%   | | | then return -0.17558179308766456;  // std dev = 1.704, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.31642185434201864;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3533449618218395;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06829891455843222;  // std dev = 0.003, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B) )
%   | | then if ( ta(F, E, G), ta(H, A, I) )
%   | | | then return 0.28899481158465257;  // std dev = 0.290, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.04543803728154677;  // std dev = 1.839, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.2422486508037407;  // std dev = 0.336, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.10245685734678664;  // std dev = 1.274, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return -0.0640939488732784;  // std dev = 0.003, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.024', 'seconds']
Refined model CLL: -0.24056


******************************************
Best model found
******************************************
Results 

CLL : -0.243609 

AUC ROC : 0.952463 

AUC PR : 0.455843 

Precision : 0.168889 

Recall : 0.95 

F1 : 0.286792 

Total Learning Time : 18.686 

Total Inference Time : 3.62981915473938 

Total revision time: 24.13580819129944
Best scored revision CLL: -0.24056


Results 

CLL : -0.243609 

AUC ROC : 0.952463 

AUC PR : 0.455843 

Precision : 0.168889 

Recall : 0.95 

F1 : 0.286792 

Total Learning Time : 24.16982551574707 

Total Inference Time : 3.62981915473938 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.588
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.462, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16584124279182005;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.464, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1504640408284079;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18722302054651083;  // std dev = 0.483, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.17548447881796564;  // std dev = 0.488, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05046808544587479;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.025397382146858404;  // std dev = 3.392, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.483, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.11193006471868934;  // std dev = 3.170, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.319', 'seconds']
Parameter learned model CLL:-0.373033 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.328, 36, 16]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.314, 35, 16]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.483, 27, 16]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.488, 25, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.355, 38, 16]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.392, 41, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.17, 27, 16], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.21301775147928942], 'false': [nan, 0.21301775147928942], 'false,false': [nan, 0.21301775147928942]}
{}
{'': [nan, 0.2153018069973083], 'false': [nan, 0.2153018069973083]}
{'': [nan, 0.23363980530016176]}
{'': [0.2379535990481858, nan]}
{'': [nan, 0.20850480109739408]}
{'': [0.20190827947060702, nan]}
{}
{'': [0.2336398053001618, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 37.198
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), publication(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(F, A, G) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( student(A), professor(B) )
%   | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.6485133006434255;  // std dev = 1.236, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), tempadvisedby(D, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.5728130758096726;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(C, E), projectmember(F, E) )
%   | | | then return -0.05218692419032742;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.37281307580967255;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.6805840791083723;  // std dev = 0.118, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( ta(F, A, G), publication(H, A) )
%   | | | then return -0.022322359088881208;  // std dev = 0.908, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3526033487810963;  // std dev = 1.477, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return -0.10159632948783631;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(B, D), student(A) )
%   | then if ( ta(E, A, F), publication(G, A) )
%   | | then return -0.012804573831798186;  // std dev = 0.901, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.4390796630043291;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23986239088933994;  // std dev = 1.265, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( ta(I, A, J) )
%   | | then if ( ta(K, B, L) )
%   | | | then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.193884066565698;  // std dev = 0.351, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( professor(B) )
%   | | | then return -0.05459974079156025;  // std dev = 0.715, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( hasposition(B, E), student(A) )
%   | then if ( publication(F, A) )
%   | | then return 0.3746346426303081;  // std dev = 0.131, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.3367082638820701;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.024832371171253555;  // std dev = 1.550, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( ta(H, A, I) )
%   | | then if ( ta(J, B, K) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.20147110180920966;  // std dev = 0.429, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( professor(A) )
%   | | | then return -0.08719521484054665;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06265883640262009;  // std dev = 0.718, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(D, A), publication(D, B) )
%   | then return 0.2930613428371156;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( professor(B), publication(E, A) )
%   | | then return -0.530986641972667;  // std dev = 0.250, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( hasposition(B, F), ta(G, A, H) )
%   | | | then return 0.24905158831564206;  // std dev = 0.981, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.08351571491348465;  // std dev = 1.223, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.07962050909353707;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2803064653345268;  // std dev = 0.180, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.021627052306615303;  // std dev = 1.058, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.06853577702277167;  // std dev = 0.064, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), ta(C, A, D) )
%   then if ( ta(E, F, D), publication(G, F) )
%   | then return 0.25292903187697396;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.06023208667169879;  // std dev = 0.955, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( projectmember(H, B), student(A) )
%   | then return 0.25003818342511047;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(I, B), student(A) )
%   | | then return -0.3789188095296854;  // std dev = 0.643, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.09105099431795834;  // std dev = 0.712, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0656600721107626;  // std dev = 0.035, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( tempadvisedby(E, B), student(A) )
%   | then if ( ta(F, A, G), publication(H, B) )
%   | | then if ( ta(I, E, G) )
%   | | | then return -0.08340195283360304;  // std dev = 0.899, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.199839604495756;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(J, B) )
%   | | | then return -0.24550966542139108;  // std dev = 0.915, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.016028529814115233;  // std dev = 0.520, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( ta(K, A, L), professor(B) )
%   | | then return -0.22772906855427016;  // std dev = 0.922, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( professor(B) )
%   | | | then return 0.04036955195054441;  // std dev = 0.564, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.06343854880317101;  // std dev = 0.036, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.733', 'seconds']
Refined model CLL: -0.264812


******************************************
Best model found
******************************************
Results 

CLL : -0.248161 

AUC ROC : 0.941826 

AUC PR : 0.223869 

Precision : 0.135542 

Recall : 0.927835 

F1 : 0.236531 

Total Learning Time : 37.198 

Total Inference Time : 1.205369472503662 

Total revision time: 39.559210763931276
Best scored revision CLL: -0.264812


Results 

CLL : -0.248161 

AUC ROC : 0.941826 

AUC PR : 0.223869 

Precision : 0.135542 

Recall : 0.927835 

F1 : 0.236531 

Total Learning Time : 39.59322808837891 

Total Inference Time : 1.205369472503662 

Run: 5
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.66
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.462, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1522665821583344;  // std dev = 4.971, 119.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.474, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18511913348386866;  // std dev = 4.782, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1584668506148708;  // std dev = 0.476, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.12966941675984897;  // std dev = 0.475, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10709073922392012;  // std dev = 4.795, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.09409973085216582;  // std dev = 4.770, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.464, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.04984836450114258;  // std dev = 4.864, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '873', 'milliseconds']
Parameter learned model CLL:-0.351915 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.971, 84, 35]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.782, 66, 35]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.476, 66, 35]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.475, 67, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.795, 67, 35]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.77, 65, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.864, 73, 35], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.20761245674740622], 'false': [nan, 0.20761245674740622], 'false,false': [nan, 0.20761245674740622]}
{}
{'': [nan, 0.22644838741299858], 'false': [nan, 0.22644838741299858]}
{'': [nan, 0.22644838741299983]}
{'': [0.22539407920030627, nan]}
{'': [nan, 0.22539407920030752]}
{'': [0.22749999999999915, nan]}
{}
{'': [0.21905006858710652, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 6.937
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.39148226843284567;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   else return -0.14185106490048774;  // std dev = 2.58e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.4525778947870215;  // std dev = 3.256, 52.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=35 */
%   | | | else return -0.12544463852839136;  // std dev = 1.49e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6199351948550549;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.4158052203250291;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.2571198486896939;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.12230815682998361;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.41573033554437744;  // std dev = 2.227, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.11231637819360633;  // std dev = 2.79e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(A), professor(B) )
%   | | then if ( publication(F, B), publication(F, A) )
%   | | | then return 0.4007142216063166;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.2438966128570793;  // std dev = 2.758, 36.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   | | else return -0.10159632948783634;  // std dev = 1.05e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.3035292909956272;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.06686367612481889;  // std dev = 1.819, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.37050409068508;  // std dev = 1.489, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.560314942755746;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F), publication(G, A) )
%   | | then if ( tempadvisedby(H, B), publication(G, B) )
%   | | | then return 0.10260882032178804;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.13346189680478365;  // std dev = 1.220, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( projectmember(I, B) )
%   | | | then return 0.4728470356041148;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15438342790617404;  // std dev = 2.513, 38.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
%   | else return -0.0851847513883968;  // std dev = 1.49e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A), publication(E, B) )
%   | | | then return 0.2742372080877479;  // std dev = 0.017, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.0674454495063294;  // std dev = 2.283, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.457531284785346;  // std dev = 0.268, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.10389885913322956;  // std dev = 0.954, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( projectmember(E, B) )
%   | | then return 0.4255553812255377;  // std dev = 0.207, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.21554899282063467;  // std dev = 0.817, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.061303972141169574;  // std dev = 2.415, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.19642444153889296;  // std dev = 0.054, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.2750018383134706;  // std dev = 0.593, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.24508637407030454;  // std dev = 1.222, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return -0.13897000215515176;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.23839228349525873;  // std dev = 1.414, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.06842697784420271;  // std dev = 1.05e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, B), publication(E, A) )
%   | | then return 0.16728777219252258;  // std dev = 0.048, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(F, B), publication(G, A) )
%   | | | then return -0.17855805287651186;  // std dev = 1.083, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.03970556309329185;  // std dev = 2.334, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.652', 'seconds']
Refined model CLL: -0.208157


******************************************
Best model found
******************************************
Results 

CLL : -0.202725 

AUC ROC : 0.952714 

AUC PR : 0.447688 

Precision : 0.242424 

Recall : 0.820513 

F1 : 0.374269 

Total Learning Time : 6.937 

Total Inference Time : 1.6181766986846924 

Total revision time: 10.047584411621095
Best scored revision CLL: -0.208157


Results 

CLL : -0.202725 

AUC ROC : 0.952714 

AUC PR : 0.447688 

Precision : 0.242424 

Recall : 0.820513 

F1 : 0.374269 

Total Learning Time : 10.066513893127443 

Total Inference Time : 1.6181766986846924 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.555
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.471, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17064893509951212;  // std dev = 3.708, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.454, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13911102481023213;  // std dev = 3.734, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11914460158075557;  // std dev = 0.460, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.12542593294546;  // std dev = 0.469, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10441818421982622;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.08577816148288575;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.450, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.10546087394160787;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.090', 'seconds']
Parameter learned model CLL:-0.379585 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.708, 44, 20]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.734, 46, 20]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.46, 46, 20]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.469, 41, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.666, 41, 20]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.666, 41, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.568, 35, 20], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.21484374999999956], 'false': [nan, 0.21484374999999956], 'false,false': [nan, 0.21484374999999956]}
{}
{'': [nan, 0.21120293847566524], 'false': [nan, 0.21120293847566524]}
{'': [nan, 0.21120293847566576]}
{'': [0.22037086804622386, nan]}
{'': [nan, 0.2203708680462236]}
{'': [0.2203708680462242, nan]}
{}
{'': [0.23140495867768643, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 10.562
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( publication(E, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.14185106490048774;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.43731073995441416;  // std dev = 2.417, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | | else return -0.12544463852839136;  // std dev = 1.05e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6235257296637968;  // std dev = 2.11e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.3368048583880221;  // std dev = 0.702, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6943589771924257;  // std dev = 0.140, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.3735257296637966;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1383646531793804;  // std dev = 0.927, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.1123163781936064;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, A), publication(F, B) )
%   | | | then return 0.47028869376944005;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.24359272830451292;  // std dev = 1.755, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.0170425129097115;  // std dev = 1.123, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(F, B), ta(G, A, H) )
%   | | | then return 0.4465468414877592;  // std dev = 0.221, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.19211444524387808;  // std dev = 1.392, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else return -0.092691276189261;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( ta(F, A, G) )
%   | | then if ( ta(H, I, G), publication(E, I) )
%   | | | then return 0.29685403875645805;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.38962006094840024;  // std dev = 0.186, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | | then return -0.07627111511914825;  // std dev = 1.003, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.23642108349918686;  // std dev = 0.788, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( ta(L, A, M) )
%   | | then if ( publication(N, B) )
%   | | | then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.2959122652918856;  // std dev = 0.580, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( professor(B) )
%   | | | then return 0.09409542778329796;  // std dev = 0.621, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), publication(D, B) )
%   | then if ( publication(E, A) )
%   | | then if ( tempadvisedby(F, B), publication(D, F) )
%   | | | then return -0.2881762248903122;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1298460115429372;  // std dev = 1.048, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.27874442024723567;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.38454057058063795;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(J, B) )
%   | | | then return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.03220657572615777;  // std dev = 0.743, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( student(A), student(B) )
%   | | | then return -0.07722137753718028;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.24640628555061128;  // std dev = 0.411, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), publication(E, A) )
%   | then if ( student(A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.26591861470981193;  // std dev = 0.225, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1180409004085426;  // std dev = 0.966, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.08963846578926458;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then return 0.13047991587329877;  // std dev = 0.882, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return -0.41711090903626086;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0780989668965969;  // std dev = 0.512, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, C) )
%   | | then return 0.3272120652270352;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(E, C, F) )
%   | | | then return 0.2294408475341976;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.28082276252538024;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then return 0.1974720180901894;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.08188989617763254;  // std dev = 0.983, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07069869782070243;  // std dev = 0.101, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( ta(E, A, F), professor(B) )
%   | then if ( ta(G, H, F), tempadvisedby(H, I) )
%   | | then return 0.21840668160094176;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.013618681299822613;  // std dev = 0.902, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( publication(J, A), publication(J, B) )
%   | | then if ( professor(B), student(A) )
%   | | | then return 0.08795565156009648;  // std dev = 0.842, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.07024831225086546;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( professor(B), publication(K, B) )
%   | | | then return -0.32025540817489206;  // std dev = 1.202, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.05140791986010177;  // std dev = 0.738, 31.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.095', 'seconds']
Refined model CLL: -0.172503


******************************************
Best model found
******************************************
Results 

CLL : -0.246032 

AUC ROC : 0.940795 

AUC PR : 0.242214 

Precision : 0.166259 

Recall : 0.731183 

F1 : 0.270916 

Total Learning Time : 10.562 

Total Inference Time : 1.1297829151153564 

Total revision time: 12.78810276222229
Best scored revision CLL: -0.172503


Results 

CLL : -0.246032 

AUC ROC : 0.940795 

AUC PR : 0.242214 

Precision : 0.166259 

Recall : 0.731183 

F1 : 0.270916 

Total Learning Time : 12.807032243728637 

Total Inference Time : 1.1297829151153564 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.507
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.467, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16849376268571928;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.471, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16970920705412887;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14514070535344392;  // std dev = 0.471, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.07894744886133;  // std dev = 0.454, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08550978679978676;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.08134093174887314;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.484, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.10476007939575624;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.197', 'seconds']
Parameter learned model CLL:-0.409442 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.491, 20, 9]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.449, 18, 9]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.471, 18, 9]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.454, 22, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [2.491, 20, 9]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [2.471, 19, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [2.4, 16, 9], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2140309155766945], 'false': [nan, 0.2140309155766945], 'false,false': [nan, 0.2140309155766945]}
{}
{'': [nan, 0.22222222222222215], 'false': [nan, 0.22222222222222215]}
{'': [nan, 0.2222222222222223]}
{'': [0.20603537981269507, nan]}
{'': [nan, 0.2140309155766947]}
{'': [0.21811224489795888, nan]}
{}
{'': [0.23040000000000016, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 1.837
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.6381200704202566;  // std dev = 0.906, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.26826607232668437;  // std dev = 1.135, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.591101377441156;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | then return 0.5362997218056574;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( professor(B) )
%   | | | then return 0.12234509912632359;  // std dev = 1.419, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.08196428568540594;  // std dev = 1.115, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.4312296769111244;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926093;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then return 0.35412062554629303;  // std dev = 0.130, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.09178384994190832;  // std dev = 0.107, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B) )
%   | then return 0.27841271881645807;  // std dev = 0.115, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.07829918093946889;  // std dev = 6.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A) )
%   | | then return -0.05286920131044611;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21462335314218825;  // std dev = 0.066, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.08363224585920183;  // std dev = 0.160, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.22335647782856438;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.006200400813846937;  // std dev = 0.346, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.06738217602542794;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( publication(E, A), tempadvisedby(F, B) )
%   | then return -0.1830049866331793;  // std dev = 0.663, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( professor(B), student(A) )
%   | | then if ( ta(G, A, H) )
%   | | | then return -0.08488024714549786;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.18651154795401292;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.0700242414844797;  // std dev = 0.111, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.705', 'seconds']
Refined model CLL: -0.181481


******************************************
Best model found
******************************************
Results 

CLL : -0.33999 

AUC ROC : 0.902865 

AUC PR : 0.116111 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 1.837 

Total Inference Time : 0.5376460552215576 

Total revision time: 3.3026689472198485
Best scored revision CLL: -0.181481


Results 

CLL : -0.33999 

AUC ROC : 0.902865 

AUC PR : 0.116111 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 3.321598428726196 

Total Inference Time : 0.5376460552215576 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.647
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.461, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16370449065506648;  // std dev = 4.787, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.450, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2252655303798555;  // std dev = 4.493, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14767834752941814;  // std dev = 0.475, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.07163793108879474;  // std dev = 0.455, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1378339349128514;  // std dev = 4.557, 89.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.07825391826938154;  // std dev = 4.678, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.467, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.0810781368102441;  // std dev = 4.614, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.007', 'seconds']
Parameter learned model CLL:-0.362141 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.787, 75, 33]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.493, 52, 33]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.475, 63, 33]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.455, 80, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.557, 56, 33]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.678, 65, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [4.614, 60, 33], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.21219135802469272], 'false': [nan, 0.21219135802469272], 'false,false': [nan, 0.21219135802469272]}
{}
{'': [nan, 0.23750865051903072], 'false': [nan, 0.23750865051903072]}
{'': [nan, 0.22558593750000036]}
{'': [0.2067507244106823, nan]}
{'': [nan, 0.23330387577326162]}
{'': [0.22334443981674346, nan]}
{}
{'': [0.2289281997918837, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 7.605
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( publication(E, A), publication(F, B) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.4137044906550678;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.14185106490048768;  // std dev = 5.96e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.48218493575745086;  // std dev = 2.882, 45.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=33 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.2796016363705664;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6129349697038996;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then if ( publication(H, I), ta(J, I, K) )
%   | | | then return 0.29075326703740273;  // std dev = 1.254, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.10963826339212941;  // std dev = 0.894, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( ta(L, A, M), publication(N, B) )
%   | | | then return 0.27960163637056623;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.6920217889229463;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(A), professor(B) )
%   | | then if ( publication(F, B), publication(F, A) )
%   | | | then return 0.4022058044705531;  // std dev = 0.982, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.2674819160556015;  // std dev = 2.366, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( student(B) )
%   | then return -0.09269127618926104;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( student(A), publication(D, B) )
%   | | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | | then return 0.08419707343108943;  // std dev = 0.882, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3513287488278304;  // std dev = 1.784, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | else if ( professor(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.15240058365915052;  // std dev = 0.649, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then return 0.3868547864132119;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | | then return 0.3826142893548468;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10229309648576587;  // std dev = 2.572, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | else return -0.0851847513883968;  // std dev = 1.67e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.2682462601913835;  // std dev = 0.014, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( tempadvisedby(E, B), publication(F, B) )
%   | | | then return -0.01991564125894263;  // std dev = 1.789, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.2009333677447472;  // std dev = 1.505, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( publication(E, B), publication(E, A) )
%   | then if ( professor(B) )
%   | | then return 0.218954974070187;  // std dev = 0.012, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( publication(F, A) )
%   | | then if ( professor(B), student(A) )
%   | | | then return -0.1716751713026188;  // std dev = 1.865, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.07324622576333704;  // std dev = 7.45e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( professor(B), publication(G, B) )
%   | | | then return 0.11450767277834847;  // std dev = 1.766, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return -0.1318724007828379;  // std dev = 0.615, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, B), professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.18381538271408923;  // std dev = 0.010, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), publication(G, A) )
%   | | | then return -0.18440048948069032;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18932122376219832;  // std dev = 1.333, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( publication(H, A) )
%   | | | then return -0.019655153089700006;  // std dev = 1.089, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.19409288386408458;  // std dev = 1.393, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( student(B) )
%   | then return -0.06764214418108923;  // std dev = 0.012, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.3865169073074988;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( tempadvisedby(E, B), student(A) )
%   | then if ( ta(F, E, G), ta(H, A, I) )
%   | | then return -0.12221196261085143;  // std dev = 1.030, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.14039555984049373;  // std dev = 0.914, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.31372006787612544;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( professor(B), ta(K, A, L) )
%   | | then if ( ta(K, M, N), tempadvisedby(M, P) )
%   | | | then return -0.11496786362122835;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.22276928219386072;  // std dev = 1.405, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( professor(B) )
%   | | | then return -0.012335518493153999;  // std dev = 1.171, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.06340109751225495;  // std dev = 0.009, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.728', 'seconds']
Refined model CLL: -0.231747


******************************************
Best model found
******************************************
Results 

CLL : -0.215307 

AUC ROC : 0.955391 

AUC PR : 0.394437 

Precision : 0.19337 

Recall : 0.875 

F1 : 0.316742 

Total Learning Time : 7.605 

Total Inference Time : 1.558328628540039 

Total revision time: 10.585671092987061
Best scored revision CLL: -0.231747


Results 

CLL : -0.215307 

AUC ROC : 0.955391 

AUC PR : 0.394437 

Precision : 0.19337 

Recall : 0.875 

F1 : 0.316742 

Total Learning Time : 10.604600574493409 

Total Inference Time : 1.558328628540039 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.542
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.462, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2391013160518933;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.464, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18203782601307894;  // std dev = 3.211, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16244435036536645;  // std dev = 0.481, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.11925839353174458;  // std dev = 0.476, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07625785539077704;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.10724094509455569;  // std dev = 3.170, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.454, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then return 0.021440695155463464;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.242', 'seconds']
Parameter learned model CLL:-0.382954 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C)', 'false': 'sameproject(A, D), sameproject(E, D)', 'false,false': 'sameproject(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.147, 26, 16]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(A, C), sameproject(D, C)', 'false': 'sameproject(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.211, 29, 16]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.481, 28, 16]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [0.476, 30, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'sameproject(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.283, 33, 16]}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.17, 27, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'sameproject(C, D)'}, {'true': [3.328, 36, 16], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23582766439909247], 'false': [nan, 0.23582766439909247], 'false,false': [nan, 0.23582766439909247]}
{}
{'': [nan, 0.22913580246913545], 'false': [nan, 0.22913580246913545]}
{'': [nan, 0.23140495867768615]}
{'': [0.22684310018903553, nan]}
{'': [nan, 0.21990837151187037]}
{'': [0.23363980530016243, nan]}
{}
{'': [0.21301775147928975, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- sameproject(A, C).;true;true
1;false;sameproject(A, D), sameproject(E, D).;true;true
1;false,false;sameproject(A, F).;true;true
3;;advisedby(A, B) :- sameproject(A, C), sameproject(D, C).;true;true
3;false;sameproject(A, E).;true;true
4;;advisedby(A, B) :- sameproject(A, C).;true;true
5;;advisedby(A, B) :- sameproject(C, D).;true;true
6;;advisedby(A, B) :- sameproject(A, C).;true;true
7;;advisedby(A, B) :- sameproject(C, D).;true;true
9;;advisedby(A, B) :- sameproject(C, D).;true;true


Refining candidate
***************************
Model training time 8.732
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(E, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, D), sameproject(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameproject(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.5876060690123613;  // std dev = 1.584, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), projectmember(E, B) )
%   | then return -0.13286325387025877;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( ta(F, A, G) )
%   | | then if ( ta(F, H, I), tempadvisedby(H, B) )
%   | | | then return 0.6269667950213308;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2805267298325448;  // std dev = 1.389, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.6318906210349586;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( sameproject(A, C), sameproject(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameproject(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(B, F), student(A) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.10732637516408801;  // std dev = 2.129, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.5855024401530465;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(H, A, I) )
%   | | | then return -0.1470496890122268;  // std dev = 0.295, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09035291773324368;  // std dev = 0.665, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(B, D), student(A) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( projectmember(H, B) )
%   | | | then return -0.05330633780088693;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.33921162645441244;  // std dev = 1.000, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.42885433671474765;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(I, A, J) )
%   | | then if ( ta(K, B, L) )
%   | | | then return -0.08893878464859196;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.21348789484158;  // std dev = 0.258, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( professor(B) )
%   | | | then return 0.05868703494049056;  // std dev = 0.528, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.09364118278807523;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( ta(E, A, F), publication(G, B) )
%   | then if ( professor(B) )
%   | | then if ( ta(E, H, I), publication(J, H) )
%   | | | then return 0.38383873126422285;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2817314127046554;  // std dev = 0.773, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.08199078579126397;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( hasposition(B, K) )
%   | | then if ( publication(L, A), publication(L, B) )
%   | | | then return 0.12843672672643908;  // std dev = 0.454, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.31667679719104747;  // std dev = 1.441, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( publication(M, A) )
%   | | | then return -0.08540844898372647;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.03574087139222863;  // std dev = 0.561, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( sameproject(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F), ta(G, A, F) )
%   | | | then return -0.08453996778269758;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20875027387575731;  // std dev = 1.159, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0.3397249442461191;  // std dev = 0.202, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07893216929768622;  // std dev = 0.027, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( publication(E, A), ta(F, A, G) )
%   | then if ( tempadvisedby(H, B) )
%   | | then return -0.010080924171795588;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.3275178352984194;  // std dev = 0.727, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( hasposition(B, I), ta(J, A, K) )
%   | | then if ( ta(L, M, K), publication(N, M) )
%   | | | then return 0.06000229211384962;  // std dev = 0.868, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.329564625958505;  // std dev = 0.215, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( projectmember(P, B), student(A) )
%   | | | then return 0.0805054636441016;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.06295716529568639;  // std dev = 0.940, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( ta(D, A, E) )
%   | then if ( ta(D, C, F) )
%   | | then return 0.26572125258484897;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(G, H, E), publication(I, H) )
%   | | | then return -0.0558182751954445;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11531652896595061;  // std dev = 0.664, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3101918686753349;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( ta(J, A, K) )
%   | then if ( professor(B) )
%   | | then return -0.25371759406126726;  // std dev = 0.865, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.0648317417145088;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( professor(A) )
%   | | then return -0.07248193982741813;  // std dev = 0.039, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( ta(L, B, M) )
%   | | | then return -0.07219461361348989;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.21142580061192706;  // std dev = 0.367, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( sameproject(C, D) )
%   then if ( publication(E, B), student(A) )
%   | then if ( publication(E, A) )
%   | | then return 0.2350874595138608;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return -0.013122849057609964;  // std dev = 1.345, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.08504073511474945;  // std dev = 0.794, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | then return -0.2357706269410615;  // std dev = 0.536, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.1467448487916895;  // std dev = 0.254, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.06362098089286504;  // std dev = 0.545, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.181', 'seconds']
Refined model CLL: -0.252783


******************************************
Best model found
******************************************
Results 

CLL : -0.275019 

AUC ROC : 0.940152 

AUC PR : 0.299858 

Precision : 0.123537 

Recall : 0.979381 

F1 : 0.2194 

Total Learning Time : 8.732 

Total Inference Time : 0.8519642353057861 

Total revision time: 10.639325927734374
Best scored revision CLL: -0.252783


Results 

CLL : -0.275019 

AUC ROC : 0.940152 

AUC PR : 0.299858 

Precision : 0.123537 

Recall : 0.979381 

F1 : 0.2194 

Total Learning Time : 10.658255409240722 

Total Inference Time : 0.8519642353057861 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.733
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.474, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2189736773675522;  // std dev = 4.730, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.480, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13107395911428804;  // std dev = 4.944, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15652575604096258;  // std dev = 0.476, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.0890744394010415;  // std dev = 0.460, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08461342034539458;  // std dev = 4.895, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.09374607886280162;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.475, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.057239171285564404;  // std dev = 4.875, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '826', 'milliseconds']
Parameter learned model CLL:-0.340099 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.73, 62, 35]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.944, 81, 35]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.476, 66, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.46, 80, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.895, 76, 35]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.807, 68, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.875, 74, 35], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.23063024763524434], 'false': [nan, 0.23063024763524434], 'false,false': [nan, 0.23063024763524434]}
{}
{'': [nan, 0.2106866825208083], 'false': [nan, 0.2106866825208083]}
{'': [nan, 0.226448387412998]}
{'': [0.2117202268430992, nan]}
{'': [nan, 0.21589156724291958]}
{'': [0.22433782637383284, nan]}
{}
{'': [0.21799511825604012, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 12.917
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then if ( tempadvisedby(E, B), publication(F, A) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | then if ( publication(J, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.7914822684328456;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.14185106490048774;  // std dev = 2.98e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.5352155550407391;  // std dev = 2.720, 45.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=35 */
%   | | | else return -0.12544463852839133;  // std dev = 2.36e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.6149973342492968;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.616165038896425;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.37200497554018186;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, J), tempadvisedby(J, K) )
%   | | | then return 0.35082534293803236;  // std dev = 1.135, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.10837413501943502;  // std dev = 1.213, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( ta(L, A, M) )
%   | | | then return 0.23236119710850467;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4467161190719658;  // std dev = 1.602, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.11231637819360633;  // std dev = 2.58e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(B) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( student(A) )
%   | | | then return 0.2997476314288949;  // std dev = 2.788, 47.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.4053160708401933;  // std dev = 0.120, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | | then return -0.1525889649676706;  // std dev = 1.371, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.22949336596454495;  // std dev = 2.199, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.31280753731251687;  // std dev = 0.108, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return -0.32326549712899555;  // std dev = 0.940, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.13850670212274133;  // std dev = 2.456, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | else return -0.0851847513883968;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( projectmember(D, B) )
%   | | then return 0.4653302138630231;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.06577275207021017;  // std dev = 1.845, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | | else return 0.26907321836966114;  // std dev = 1.409, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( publication(E, B), publication(E, A) )
%   | then if ( tempadvisedby(F, B) )
%   | | then return 0.2352409663586177;  // std dev = 0.084, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.04197797527718583;  // std dev = 0.282, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( projectmember(G, B), publication(H, A) )
%   | | then return 0.2663616195575851;  // std dev = 0.392, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | | then return -0.32509565714697364;  // std dev = 0.438, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.04541797449635848;  // std dev = 2.611, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, A), publication(F, B) )
%   | | then return 0.18529174491273342;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( ta(G, A, H) )
%   | | | then return -0.3999853064102299;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11890649312757644;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(I, B) )
%   | | then if ( publication(J, A), publication(J, B) )
%   | | | then return 0.21230183670587052;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3564601515099943;  // std dev = 0.275, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(K, B), publication(L, A) )
%   | | | then return 0.042766893797375485;  // std dev = 1.058, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1453987108071373;  // std dev = 1.336, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07103047338249338;  // std dev = 0.044, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( publication(E, B), professor(B) )
%   | then if ( tempadvisedby(F, B) )
%   | | then if ( publication(E, A), student(A) )
%   | | | then return 0.09426150597415263;  // std dev = 0.979, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.12904738901841137;  // std dev = 1.438, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( publication(G, A), student(A) )
%   | | | then return 0.412484588141843;  // std dev = 0.196, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09973320587892731;  // std dev = 0.973, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( student(B) )
%   | | then return -0.0661018162828055;  // std dev = 0.011, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( projectmember(H, B), ta(I, A, J) )
%   | | | then return -0.39531813641247365;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14121842504399806;  // std dev = 1.903, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.853', 'seconds']
Refined model CLL: -0.223234


******************************************
Best model found
******************************************
Results 

CLL : -0.205091 

AUC ROC : 0.946375 

AUC PR : 0.406299 

Precision : 0.219231 

Recall : 0.730769 

F1 : 0.337278 

Total Learning Time : 12.917 

Total Inference Time : 2.343022108078003 

Total revision time: 16.795149946212767
Best scored revision CLL: -0.223234


Results 

CLL : -0.205091 

AUC ROC : 0.946375 

AUC PR : 0.406299 

Precision : 0.219231 

Recall : 0.730769 

F1 : 0.337278 

Total Learning Time : 16.87456645965576 

Total Inference Time : 2.343022108078003 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.571
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.490, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19713198594696973;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.481, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1549994932059262;  // std dev = 3.681, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12713049796294434;  // std dev = 0.465, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.15294083172843675;  // std dev = 0.481, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08020693435979442;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.042045326767356575;  // std dev = 3.757, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.473, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.03842594892062715;  // std dev = 3.746, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.075', 'seconds']
Parameter learned model CLL:-0.367148 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.636, 39, 20]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.681, 42, 20]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.465, 43, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.481, 35, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.695, 43, 20]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.757, 48, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.746, 47, 20], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.22407354208560717], 'false': [nan, 0.22407354208560717], 'false,false': [nan, 0.22407354208560717]}
{}
{'': [nan, 0.21852237252861564], 'false': [nan, 0.21852237252861564]}
{'': [nan, 0.216679264298312]}
{'': [0.2314049586776857, nan]}
{'': [nan, 0.21667926429831175]}
{'': [0.20761245674740486, nan]}
{}
{'': [0.20940075740699518, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 11.26
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6914822684328454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.5000700842465048;  // std dev = 2.124, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return -0.13061403683707987;  // std dev = 0.152, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.12134046451233342;  // std dev = 1.257, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( publication(E, A), publication(E, B) )
%   | | then return 0.6086833208667972;  // std dev = 2.11e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return 0.2752000487399232;  // std dev = 1.024, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5383533804020828;  // std dev = 0.826, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.11991096384709622;  // std dev = 0.197, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.5135019461823911;  // std dev = 0.267, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.20766303500355668;  // std dev = 1.473, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else return -0.1004372131343453;  // std dev = 1.05e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( student(A), professor(B) )
%   | then if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.14514126530024712;  // std dev = 1.238, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.48165723293876955;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.5275500183743843;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4607178295480625;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( professor(B) )
%   | | then return -0.28659246229473984;  // std dev = 0.173, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09171991372688026;  // std dev = 1.49e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( publication(E, B), professor(B) )
%   | then if ( publication(F, A), student(A) )
%   | | then if ( publication(F, G), ta(H, G, I) )
%   | | | then return 0.33194102225321015;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3045877628166834;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(J, B), publication(E, J) )
%   | | | then return 0.007907588615103878;  // std dev = 0.906, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.18087985340515358;  // std dev = 0.881, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( student(B) )
%   | | then return -0.08435974712613431;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.348564281085066;  // std dev = 0.929, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F), publication(G, A) )
%   | | | then return 0.2598092881850738;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.010788556680025199;  // std dev = 1.699, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( publication(H, A), publication(I, B) )
%   | | | then return 0.2468016434849877;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10693486814455484;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( student(B) )
%   | | then return -0.07806787669414854;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.30134385308601414;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( publication(E, B), publication(E, A) )
%   | then if ( tempadvisedby(F, B) )
%   | | then return 0.25579897564779;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.12193090198461777;  // std dev = 0.123, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | then if ( ta(I, H, J) )
%   | | | then return -0.6971481313689216;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09010880925559932;  // std dev = 0.765, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.3500206644956772;  // std dev = 0.181, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.08644017750579139;  // std dev = 1.216, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(D, A) )
%   | then if ( publication(C, A), student(A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.21079213461216487;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18097586157013548;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.13083759304465573;  // std dev = 0.953, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( publication(C, F), tempadvisedby(F, G) )
%   | | then return 0.3458225610230041;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.23319966990987903;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( ta(H, A, I) )
%   | then return -0.18546217385434477;  // std dev = 0.514, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( professor(B) )
%   | | then return 0.019133043491256923;  // std dev = 0.658, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.0686496934740985;  // std dev = 0.027, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( publication(E, B), professor(B) )
%   | then if ( ta(F, A, G) )
%   | | then if ( ta(H, I, G), publication(E, I) )
%   | | | then return 0.18328038839006702;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.24987690603013513;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.17226801144102502;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.19826056145372378;  // std dev = 0.939, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( student(B) )
%   | | then return -0.06325798431759201;  // std dev = 0.027, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.17098271475549448;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.251', 'seconds']
Refined model CLL: -0.187921


******************************************
Best model found
******************************************
Results 

CLL : -0.24694 

AUC ROC : 0.94714 

AUC PR : 0.297696 

Precision : 0.167364 

Recall : 0.860215 

F1 : 0.28021 

Total Learning Time : 11.26 

Total Inference Time : 1.0773911476135254 

Total revision time: 13.463015943527221
Best scored revision CLL: -0.187921


Results 

CLL : -0.24694 

AUC ROC : 0.94714 

AUC PR : 0.297696 

Precision : 0.167364 

Recall : 0.860215 

F1 : 0.28021 

Total Learning Time : 13.542432456970214 

Total Inference Time : 1.0773911476135254 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.486
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.484, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13939893509951237;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.480, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1617472437961718;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17740346544921043;  // std dev = 0.480, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.11085147813088043;  // std dev = 0.467, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06072747701600224;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.08091599837141225;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.437, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.19439821144633876;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.115', 'seconds']
Parameter learned model CLL:-0.427285 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.543, 23, 9]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.471, 19, 9]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.48, 16, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.467, 19, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [2.527, 22, 9]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [2.471, 19, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [2.225, 11, 9], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2021484375000001], 'false': [nan, 0.2021484375000001], 'false,false': [nan, 0.2021484375000001]}
{}
{'': [nan, 0.2181122448979591], 'false': [nan, 0.2181122448979591]}
{'': [nan, 0.23039999999999997]}
{'': [0.21811224489795908, nan]}
{'': [nan, 0.2060353798126948]}
{'': [0.21811224489795936, nan]}
{}
{'': [0.24749999999999997, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 1.946
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.5659077428311093;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.1409528334544568;  // std dev = 0.208, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.6272707533714179;  // std dev = 0.115, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.11826347685752177;  // std dev = 0.138, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then return 0.4743826639847627;  // std dev = 0.124, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.10696749671468515;  // std dev = 0.128, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.044142457384034994;  // std dev = 1.180, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.3415385129712208;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10269531576555284;  // std dev = 0.164, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then return 0.39257068142735196;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2774256397189078;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.08867816133837247;  // std dev = 0.111, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), ta(D, A, E) )
%   | then return 0.2945575335953936;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( professor(B) )
%   | | then return 0.05774432238052829;  // std dev = 0.875, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.07589966736284845;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( tempadvisedby(E, B), student(A) )
%   | then return 0.24620151409389343;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(F, A, G) )
%   | | then if ( ta(F, H, I), tempadvisedby(H, J) )
%   | | | then return -0.013960849901475027;  // std dev = 0.254, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.30943837633407595;  // std dev = 0.585, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.19743260132861828;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08413825319760553;  // std dev = 0.114, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B) )
%   then return 0.20340077165934833;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( publication(D, A) )
%   | then return -0.151717425324973;  // std dev = 0.678, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( professor(B) )
%   | | then return 0.17988307071922396;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.0585929569356902;  // std dev = 0.021, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B) )
%   | then return 0.16662699890164998;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.05698381458397577;  // std dev = 0.025, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.775', 'seconds']
Refined model CLL: -0.188132


******************************************
Best model found
******************************************
Results 

CLL : -0.410671 

AUC ROC : 0.906651 

AUC PR : 0.120666 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 1.946 

Total Inference Time : 0.5034644603729248 

Total revision time: 3.380671579360962
Best scored revision CLL: -0.188132


Results 

CLL : -0.410671 

AUC ROC : 0.906651 

AUC PR : 0.120666 

Precision : 0.119816 

Recall : 1.0 

F1 : 0.213992 

Total Learning Time : 3.460088092803955 

Total Inference Time : 0.5034644603729248 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.675
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.488, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17545662740720325;  // std dev = 4.746, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.468, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16875409702079247;  // std dev = 4.690, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17755447716473277;  // std dev = 0.482, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.10567856201539744;  // std dev = 0.468, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13439327347825242;  // std dev = 4.557, 89.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.08955922283033382;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.484, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.05416762553444813;  // std dev = 4.690, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '979', 'milliseconds']
Parameter learned model CLL:-0.362171 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.746, 71, 33]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.69, 66, 33]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.482, 57, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.468, 69, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.557, 56, 33]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.628, 61, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [4.69, 66, 33], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.21662352071006058], 'false': [nan, 0.21662352071006058], 'false,false': [nan, 0.21662352071006058]}
{}
{'': [nan, 0.2222222222222228], 'false': [nan, 0.2222222222222228]}
{'': [nan, 0.2322222222222229]}
{'': [0.2188581314878881, nan]}
{'': [nan, 0.2333038757732616]}
{'': [0.2278180172023533, nan]}
{}
{'': [0.22222222222222252, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 8.105
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(G, B), ta(H, A, I) )
%   | | then if ( ta(J, G, K), ta(H, L, K) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( publication(M, A) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.1418510649004877;  // std dev = 3.65e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.4891784655945606;  // std dev = 2.960, 46.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=33 */
%   | | | else return -0.1254446385283912;  // std dev = 5.96e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.6245449974927593;  // std dev = 0.087, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.3940822910446098;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.11117533773576083;  // std dev = 0.925, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.6767134566827075;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30764992974077643;  // std dev = 2.108, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.11231637819360649;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.2993705308564678;  // std dev = 2.736, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | | | else return -0.0630623063884988;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), ta(E, A, F) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.429765862781598;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5638236060180193;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | | then return 0.02637852163892898;  // std dev = 1.371, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.31130097856094613;  // std dev = 1.836, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | then if ( ta(G, E, H), publication(F, A) )
%   | | | then return 0.00942891108130676;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.35252526923938393;  // std dev = 0.976, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( publication(I, A), publication(I, B) )
%   | | | then return 0.30878614679764366;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11158453379349971;  // std dev = 1.974, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | else return -0.0851847513883968;  // std dev = 1.49e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return -0.053791406277051736;  // std dev = 1.212, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2780535573122581;  // std dev = 0.072, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.10317225485011469;  // std dev = 2.033, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return -0.15947910047178668;  // std dev = 1.814, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( ta(E, A, F) )
%   | | then if ( ta(E, G, H), tempadvisedby(G, I) )
%   | | | then return 0.3846158602185198;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.13002338380731682;  // std dev = 1.555, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( publication(J, A), publication(J, B) )
%   | | | then return 0.22592719303510173;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.05324469277199058;  // std dev = 1.714, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( ta(E, C, F) )
%   | | then return 0.3229593326635278;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(D, A) )
%   | | | then return 0.06924695639776265;  // std dev = 0.934, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.20166071067112037;  // std dev = 0.954, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( ta(G, A, H) )
%   | | then if ( ta(I, J, H), publication(K, J) )
%   | | | then return 0.11720148860178012;  // std dev = 1.237, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.2388780426466445;  // std dev = 1.049, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(L, A), publication(L, B) )
%   | | | then return 0.1686380153218967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1510363515934326;  // std dev = 1.044, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420271;  // std dev = 9.13e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.1092751228791413;  // std dev = 0.907, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.06918683142055927;  // std dev = 1.671, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return 0.11154459500189513;  // std dev = 1.023, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.24724379803399749;  // std dev = 0.898, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.770', 'seconds']
Refined model CLL: -0.240721


******************************************
Best model found
******************************************
Results 

CLL : -0.234546 

AUC ROC : 0.952448 

AUC PR : 0.384746 

Precision : 0.165198 

Recall : 0.9375 

F1 : 0.280899 

Total Learning Time : 8.105 

Total Inference Time : 1.3603532314300537 

Total revision time: 10.863462238311769
Best scored revision CLL: -0.240721


Results 

CLL : -0.234546 

AUC ROC : 0.952448 

AUC PR : 0.384746 

Precision : 0.165198 

Recall : 0.9375 

F1 : 0.280899 

Total Learning Time : 10.942878751754762 

Total Inference Time : 1.3603532314300537 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.549
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.469, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14386322081379807;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.481, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1474110374272055;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16669837201782836;  // std dev = 0.476, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.08911944025058861;  // std dev = 0.457, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14143919539207683;  // std dev = 3.191, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.10795838302221081;  // std dev = 3.211, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.481, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then return 0.12199209792636363;  // std dev = 3.123, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.071', 'seconds']
Parameter learned model CLL:-0.385601 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C)', 'false': 'courselevel(A, D), courselevel(E, D)', 'false,false': 'courselevel(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.381, 40, 16]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(A, C), courselevel(D, C)', 'false': 'courselevel(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.328, 36, 16]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.476, 30, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [0.457, 38, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'courselevel(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.191, 28, 16]}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.211, 29, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'courselevel(C, D)'}, {'true': [3.123, 25, 16], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2040816326530607], 'false': [nan, 0.2040816326530607], 'false,false': [nan, 0.2040816326530607]}
{}
{'': [nan, 0.21301775147928986], 'false': [nan, 0.21301775147928986]}
{'': [nan, 0.2268431001890355]}
{'': [0.208504801097394, nan]}
{'': [nan, 0.23140495867768635]}
{'': [0.22913580246913545, nan]}
{}
{'': [0.23795359904818578, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- courselevel(A, C).;true;true
1;false;courselevel(A, D), courselevel(E, D).;true;true
1;false,false;courselevel(A, F).;true;true
3;;advisedby(A, B) :- courselevel(A, C), courselevel(D, C).;true;true
3;false;courselevel(A, E).;true;true
4;;advisedby(A, B) :- courselevel(A, C).;true;true
5;;advisedby(A, B) :- courselevel(C, D).;true;true
6;;advisedby(A, B) :- courselevel(A, C).;true;true
7;;advisedby(A, B) :- courselevel(C, D).;true;true
9;;advisedby(A, B) :- courselevel(C, D).;true;true


Refining candidate
***************************
Model training time 24.118
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(E, A, F) )
%   | | then if ( ta(G, H, F), publication(I, H) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( student(A), professor(B) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, D), courselevel(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( courselevel(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.3441408319835343;  // std dev = 2.562, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6451322690554789;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), projectmember(F, B) )
%   | | then return -0.059336673681405855;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.7427763120539267;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17220128061825746;  // std dev = 2.044, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( courselevel(A, C), courselevel(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( courselevel(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( projectmember(F, B), ta(G, A, H) )
%   | | | then return -0.02468402772748199;  // std dev = 0.789, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5506813670801689;  // std dev = 0.898, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return -0.10159632948783631;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(B, D), ta(E, A, F) )
%   | then if ( projectmember(G, B) )
%   | | then return 0.05616528943945657;  // std dev = 0.745, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(E, H, I), publication(J, H) )
%   | | | then return 0.44446481103723723;  // std dev = 0.185, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.548641840016968;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( student(A), hasposition(B, K) )
%   | | then if ( tempadvisedby(L, B), publication(M, B) )
%   | | | then return -0.06309424605652945;  // std dev = 0.922, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.39184277710705745;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( professor(B), publication(N, A) )
%   | | | then return -0.12708487287899256;  // std dev = 0.257, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07539502799832654;  // std dev = 0.770, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( publication(E, B), ta(F, A, G) )
%   | then if ( ta(F, H, I), publication(J, H) )
%   | | then if ( publication(E, H), publication(K, A) )
%   | | | then return 0.14492239780842792;  // std dev = 0.283, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.040814335890580665;  // std dev = 1.108, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( ta(L, M, G), publication(N, M) )
%   | | | then return 0.18899474594495938;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.30086142464058957;  // std dev = 0.524, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( ta(P, A, Q) )
%   | | then if ( professor(B) )
%   | | | then return -0.319145806748338;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08654232517590298;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( professor(B), student(A) )
%   | | | then return -0.003825295993313304;  // std dev = 1.503, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.08597091791329203;  // std dev = 0.006, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( courselevel(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( hasposition(B, D), student(A) )
%   | then if ( ta(E, A, F), publication(G, A) )
%   | | then return -0.0770782155146319;  // std dev = 0.651, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.43804520545938963;  // std dev = 0.237, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14516807153172653;  // std dev = 1.368, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( ta(I, A, J) )
%   | | then if ( ta(K, B, L) )
%   | | | then return -0.0847315524022398;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1651967029176436;  // std dev = 0.214, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( professor(B) )
%   | | | then return 0.0675783976444373;  // std dev = 0.652, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.07998327072365988;  // std dev = 8.33e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then if ( ta(H, E, G) )
%   | | | then return -0.04903211770439494;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2675354091673569;  // std dev = 0.681, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.3063942304768159;  // std dev = 0.157, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3938648374920035;  // std dev = 0.291, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07559338344017442;  // std dev = 0.029, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(C, A), student(A) )
%   | then return 0.22735890967070158;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(C, D), projectmember(E, D) )
%   | | then return 0.1805188008936987;  // std dev = 0.552, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return -0.04857669577683234;  // std dev = 1.243, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.01498187932758747;  // std dev = 0.686, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( ta(G, A, H) )
%   | then if ( student(B) )
%   | | then return -0.0711123609664868;  // std dev = 0.026, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.29263989080926134;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( student(B) )
%   | | then return -0.0692575129608115;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.30203911702568964;  // std dev = 0.291, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( courselevel(C, D) )
%   then if ( publication(E, B), professor(B) )
%   | then if ( tempadvisedby(F, B), student(A) )
%   | | then if ( publication(E, G), ta(H, G, I) )
%   | | | then return -0.03266142320489249;  // std dev = 0.814, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.314189082195094;  // std dev = 0.124, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(E, A) )
%   | | | then return 2.3486873481900114E-4;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1895512421246641;  // std dev = 0.921, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( professor(B), ta(J, A, K) )
%   | | then return -0.25198562498737354;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( professor(B) )
%   | | | then return -0.1289160128495927;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.06656413527864875;  // std dev = 0.030, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.997', 'seconds']
Refined model CLL: -0.225494


******************************************
Best model found
******************************************
Results 

CLL : -0.22404 

AUC ROC : 0.942602 

AUC PR : 0.297779 

Precision : 0.136364 

Recall : 0.865979 

F1 : 0.235624 

Total Learning Time : 24.118 

Total Inference Time : 1.1578705310821533 

Total revision time: 26.383996192932127
Best scored revision CLL: -0.225494


Results 

CLL : -0.22404 

AUC ROC : 0.942602 

AUC PR : 0.297779 

Precision : 0.136364 

Recall : 0.865979 

F1 : 0.235624 

Total Learning Time : 26.46341270637512 

Total Inference Time : 1.1578705310821533 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos examples: 78
Target test neg examples: 2265

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.917
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.481, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1763307532813291;  // std dev = 4.885, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.482, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14780054233495224;  // std dev = 4.905, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19856314640827358;  // std dev = 0.487, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.11532410706877803;  // std dev = 0.471, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08279348577513182;  // std dev = 4.875, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.06744119995221169;  // std dev = 4.875, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.464, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.10570228035692779;  // std dev = 4.687, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.455', 'seconds']
Parameter learned model CLL:-0.356561 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.885, 75, 35]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.905, 77, 35]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.487, 56, 35]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.471, 70, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.875, 74, 35]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.875, 74, 35], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.687, 59, 35], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.216942148760332], 'false': [nan, 0.216942148760332], 'false,false': [nan, 0.216942148760332]}
{}
{'': [nan, 0.2148437499999995], 'false': [nan, 0.2148437499999995]}
{'': [nan, 0.23668639053254525]}
{'': [0.2222222222222215, nan]}
{'': [nan, 0.21799511825603812]}
{'': [0.21799511825603965, nan]}
{}
{'': [0.2337030330466268, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 39.873
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.630876207826785;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else return -0.14185106490048774;  // std dev = 2.58e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.5123995664994362;  // std dev = 2.813, 47.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   | | | else return -0.12544463852839133;  // std dev = 2.36e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6057426837113685;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return -0.193184161522037;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.26188991581971527;  // std dev = 0.910, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.5889656193284517;  // std dev = 0.899, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.4085241477491319;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else return -0.11231637819360639;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, A), publication(F, B) )
%   | | | then return 0.4560409933778506;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.29089764938882845;  // std dev = 2.355, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | else return -0.10159632948783634;  // std dev = 1.29e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | | then return 0.3469819116067457;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.20412476874960286;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | | then return -0.16942638135116292;  // std dev = 1.132, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.12365075876403467;  // std dev = 2.630, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( projectmember(E, B) )
%   | | then return 0.47679138101613744;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, B), publication(F, A) )
%   | | | then return 0.2855651665283952;  // std dev = 0.054, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.05546599616692739;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | else return -0.0851847513883968;  // std dev = 1.97e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tempadvisedby(D, B), student(A) )
%   | then if ( publication(E, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.22994328968419836;  // std dev = 0.045, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.04605085456325477;  // std dev = 1.465, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.40159325562208853;  // std dev = 0.159, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(F, A, G) )
%   | | then if ( student(B), publication(H, B) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.19811094523690576;  // std dev = 0.564, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(I, A), publication(J, B) )
%   | | | then return -0.08656592587545059;  // std dev = 0.956, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return -0.06770726111537928;  // std dev = 1.797, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, B), publication(E, A) )
%   | | then return 0.19681184344859817;  // std dev = 0.078, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return -0.3346203489555977;  // std dev = 0.869, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.028265634943721505;  // std dev = 2.759, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | else return -0.07510722351932278;  // std dev = 0.040, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.1631386839987391;  // std dev = 0.035, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.2697091418229076;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11346254235462903;  // std dev = 1.951, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( publication(F, A) )
%   | | then return 0.4341814679810182;  // std dev = 0.253, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.23320220559975377;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.12119944105246154;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06864365267266384;  // std dev = 0.004, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( tempadvisedby(E, B), student(A) )
%   | then if ( publication(F, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.14208342566892543;  // std dev = 0.031, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.012231748746137338;  // std dev = 1.523, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.28135283300617014;  // std dev = 0.223, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(G, A, H), professor(B) )
%   | | then return -0.31502741268770085;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(I, B), professor(B) )
%   | | | then return -0.15425022028122093;  // std dev = 1.744, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.0515553930595515;  // std dev = 0.950, 62.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.854', 'seconds']
Refined model CLL: -0.213942


******************************************
Best model found
******************************************
Results 

CLL : -0.198525 

AUC ROC : 0.943324 

AUC PR : 0.357079 

Precision : 0.189474 

Recall : 0.692308 

F1 : 0.297521 

Total Learning Time : 39.873 

Total Inference Time : 6.06017541885376 

Total revision time: 47.997873344421386
Best scored revision CLL: -0.213942


Results 

CLL : -0.198525 

AUC ROC : 0.943324 

AUC PR : 0.357079 

Precision : 0.189474 

Recall : 0.692308 

F1 : 0.297521 

Total Learning Time : 48.031880416870116 

Total Inference Time : 6.06017541885376 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos examples: 93
Target test neg examples: 3738

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.661
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.462, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16584124279181983;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.467, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22135393524771405;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11190026848789274;  // std dev = 0.462, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.09848717854977249;  // std dev = 0.464, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2234999964279713;  // std dev = 3.303, 44.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.025400810447822;  // std dev = 3.746, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.456, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.007536123774957613;  // std dev = 3.780, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.404', 'seconds']
Parameter learned model CLL:-0.380488 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.721, 45, 20]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.508, 32, 20]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.462, 45, 20]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.464, 44, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.303, 24, 20]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.746, 47, 20], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.78, 50, 20], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.21301775147928947], 'false': [nan, 0.21301775147928947], 'false,false': [nan, 0.21301775147928947]}
{}
{'': [nan, 0.236686390532544], 'false': [nan, 0.236686390532544]}
{'': [nan, 0.21301775147928984]}
{'': [0.21484375000000047, nan]}
{'': [nan, 0.2479338842975204]}
{'': [0.2094007574069947, nan]}
{}
{'': [0.2040816326530611, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 13.474
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.14185106490048774;  // std dev = 2.58e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.547216177291978;  // std dev = 1.977, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | then return 0.6708006832273578;  // std dev = 0.114, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(C, A), student(A) )
%   | | then return 0.5973979544409418;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(G, A) )
%   | | | then return -0.059966884145091784;  // std dev = 0.774, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.44411993525177873;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( publication(H, A), ta(I, A, J) )
%   | then return -0.16069732275451504;  // std dev = 0.265, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( publication(K, A), student(A) )
%   | | then if ( publication(K, L), ta(M, L, N) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.029626488333303235;  // std dev = 0.635, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( student(B) )
%   | | | then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.20907826731542367;  // std dev = 0.237, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( student(A), professor(B) )
%   | | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return 0.10452863086815563;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.40257262475642364;  // std dev = 1.278, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return -0.10618707574948415;  // std dev = 0.092, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A), ta(F, D, G) )
%   | | | then return 0.20423488500522727;  // std dev = 0.729, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.4550213571812095;  // std dev = 0.117, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(H, A), publication(I, B) )
%   | | | then return 0.379770660962692;  // std dev = 0.146, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.06025915235632712;  // std dev = 1.005, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.09575708442336199;  // std dev = 0.064, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( publication(E, A), student(A) )
%   | | then return 0.29364005583711184;  // std dev = 0.097, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.232673865781948;  // std dev = 0.943, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.1122515756136713;  // std dev = 1.137, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( ta(H, A, I), publication(J, A) )
%   | | then return -0.15412366764788357;  // std dev = 0.327, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( student(B) )
%   | | | then return -0.08735136716194238;  // std dev = 0.031, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.002246128311151322;  // std dev = 0.672, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), publication(D, B) )
%   | then if ( publication(D, E), tempadvisedby(E, B) )
%   | | then return -0.05994466817388403;  // std dev = 1.035, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.2564282944541115;  // std dev = 0.164, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.04172466613127901;  // std dev = 1.151, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( student(B) )
%   | | then return -0.0799013960626726;  // std dev = 0.034, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.19896000869765862;  // std dev = 0.815, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A), publication(F, B) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.11311389163691636;  // std dev = 0.844, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.23350381798213096;  // std dev = 1.178, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.28408426537596243;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11584658511558894;  // std dev = 1.119, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.07454924959605139;  // std dev = 0.052, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(D, A) )
%   | then if ( publication(C, E), publication(D, E) )
%   | | then if ( tempadvisedby(F, B), professor(E) )
%   | | | then return 0.2115946221585784;  // std dev = 0.100, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09441561837145442;  // std dev = 0.367, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.3275924919069774;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(G, A, H) )
%   | | then return 0.23047178642017654;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3624874631716522;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( publication(I, A), student(A) )
%   | then if ( publication(J, B) )
%   | | then return -0.06797086745820428;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.03217302562786468;  // std dev = 0.542, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( student(B) )
%   | | then return -0.0676501684970355;  // std dev = 6.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.17796084278472737;  // std dev = 0.289, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( ta(E, A, F), publication(G, A) )
%   | then if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | then return -0.4359815961445719;  // std dev = 0.684, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(K, B), professor(B) )
%   | | | then return 0.04314853082976668;  // std dev = 0.852, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.1365275238818682;  // std dev = 0.337, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( professor(B), student(A) )
%   | | then if ( tempadvisedby(L, B) )
%   | | | then return 0.1650732278151185;  // std dev = 0.528, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.013152016193836671;  // std dev = 1.214, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.0768294370757237;  // std dev = 0.088, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29.721', 'seconds']
Refined model CLL: -0.191584


******************************************
Best model found
******************************************
Results 

CLL : -0.26804 

AUC ROC : 0.944301 

AUC PR : 0.268894 

Precision : 0.132137 

Recall : 0.870968 

F1 : 0.229462 

Total Learning Time : 13.474 

Total Inference Time : 1.0053784847259521 

Total revision time: 15.714429149627685
Best scored revision CLL: -0.191584


Results 

CLL : -0.26804 

AUC ROC : 0.944301 

AUC PR : 0.268894 

Precision : 0.132137 

Recall : 0.870968 

F1 : 0.229462 

Total Learning Time : 15.748436222076416 

Total Inference Time : 1.0053784847259521 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos examples: 104
Target test neg examples: 3988

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.484
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.467, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14847151574467365;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.458, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19909752244522103;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05361552269885028;  // std dev = 0.429, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.16199584934774566;  // std dev = 0.480, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1663142805264091;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.03501558043936837;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.488, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.059407380597070035;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.031', 'seconds']
Parameter learned model CLL:-0.407598 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.527, 22, 9]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.4, 16, 9]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.429, 28, 9]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.48, 16, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [2.341, 14, 9]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [2.527, 22, 9], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [2.471, 19, 9], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2060353798126952], 'false': [nan, 0.2060353798126952], 'false,false': [nan, 0.2060353798126952]}
{}
{'': [nan, 0.23040000000000022], 'false': [nan, 0.23040000000000022]}
{'': [nan, 0.1840759678597519]}
{'': [0.2304, nan]}
{'': [nan, 0.2381852551984876]}
{'': [0.20603537981269524, nan]}
{}
{'': [0.21811224489795936, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 2.152
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(F, A, G) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.5656559222916893;  // std dev = 1.302, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.3429550908140261;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.03418877064273895;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.6538626801294677;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360636;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.50830924788806;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15984035597249382;  // std dev = 1.410, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return -0.10159632948783628;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then return -0.006006623241078007;  // std dev = 0.829, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.22022871584090395;  // std dev = 0.779, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4752293122097907;  // std dev = 0.147, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( publication(E, A) )
%   | | then return 0.1410888431582439;  // std dev = 0.658, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.3893145428129416;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3626334084943147;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839686;  // std dev = 8.33e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A) )
%   | | then return -0.0386289187461618;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.3037674858876726;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2851745997983748;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), ta(E, A, F) )
%   | then return 0.2738884698558042;  // std dev = 0.150, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return -0.25314939429592487;  // std dev = 0.736, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2513906981092071;  // std dev = 0.182, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return -0.0914793408873819;  // std dev = 1.101, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.14395282344971372;  // std dev = 0.598, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06975046154584452;  // std dev = 0.023, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( ta(E, A, F) )
%   | then if ( tempadvisedby(G, B) )
%   | | then return -0.04093074463055371;  // std dev = 0.917, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(H, B) )
%   | | | then return -0.15739054822414636;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06411238260617137;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( professor(B), student(A) )
%   | | then return 0.11809261472575942;  // std dev = 0.600, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.06691990555942677;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.700', 'seconds']
Refined model CLL: -0.149167


******************************************
Best model found
******************************************
Results 

CLL : -0.274287 

AUC ROC : 0.9024 

AUC PR : 0.115632 

Precision : 0.123794 

Recall : 0.740385 

F1 : 0.212121 

Total Learning Time : 2.152 

Total Inference Time : 0.53774094581604 

Total revision time: 3.5902553424835206
Best scored revision CLL: -0.149167


Results 

CLL : -0.274287 

AUC ROC : 0.9024 

AUC PR : 0.115632 

Precision : 0.123794 

Recall : 0.740385 

F1 : 0.212121 

Total Learning Time : 3.624262414932251 

Total Inference Time : 0.53774094581604 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos examples: 80
Target test neg examples: 2591

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.784
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.478, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20551735615214253;  // std dev = 4.641, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.471, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14256660000570776;  // std dev = 4.767, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12760083216324442;  // std dev = 0.465, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.10121950411449665;  // std dev = 0.463, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16546502042896086;  // std dev = 4.476, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.09330133603326521;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.451, 116.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=33 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.07505160527334494;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.655', 'seconds']
Parameter learned model CLL:-0.363559 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.641, 62, 33]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.767, 73, 33]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.465, 71, 33]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.463, 73, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [4.476, 51, 33]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.628, 61, 33], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [4.628, 61, 33], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.22670360110803467], 'false': [nan, 0.22670360110803467], 'false,false': [nan, 0.22670360110803467]}
{}
{'': [nan, 0.21440014239943078], 'false': [nan, 0.21440014239943078]}
{'': [nan, 0.21662352071005822]}
{'': [0.2144001423994311, nan]}
{'': [nan, 0.23852040816326484]}
{'': [0.2278180172023544, nan]}
{}
{'': [0.22781801720235373, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 36.826
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(D, A) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.7914822684328456;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.14185106490048774;  // std dev = 2.11e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.46370650242293254;  // std dev = 2.957, 47.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=33 */
%   | | | else return -0.12544463852839133;  // std dev = 2.58e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.21730964460113;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.6173096446011301;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(G, A, H) )
%   | | then if ( ta(G, I, J), tempadvisedby(I, K) )
%   | | | then return 0.4107086985448116;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2800688993142981;  // std dev = 1.725, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( tempadvisedby(L, B), ta(M, L, N) )
%   | | | then return 0.3493318719752219;  // std dev = 0.695, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03475901953843454;  // std dev = 1.599, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else return -0.11231637819360635;  // std dev = 2.11e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( professor(B), student(A) )
%   | | then if ( publication(F, B), publication(F, A) )
%   | | | then return 0.4882440211716349;  // std dev = 0.151, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.25146865928697254;  // std dev = 2.644, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | else return -0.10159632948783631;  // std dev = 1.83e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( publication(D, F), ta(G, F, H) )
%   | | | then return 0.5219606218163809;  // std dev = 0.327, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.06948533851963093;  // std dev = 0.993, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.05679965125815015;  // std dev = 1.570, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.1943763056035681;  // std dev = 2.119, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), student(A) )
%   | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then if ( ta(H, A, G) )
%   | | | then return -0.24445094694645977;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.27186367169283676;  // std dev = 0.837, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.2302432744033863;  // std dev = 1.519, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return 0.3189092661954912;  // std dev = 1.281, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return -0.0851847513883968;  // std dev = 1.67e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), ta(D, A, E) )
%   | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | then return -0.35829780236263026;  // std dev = 0.903, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(D, H, I), publication(J, H) )
%   | | | then return 0.32173710746404827;  // std dev = 0.889, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.1286100690407709;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(K, B), publication(K, A) )
%   | | then if ( tempadvisedby(L, B) )
%   | | | then return 0.1031000022065754;  // std dev = 0.901, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2588357282655923;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(M, B), publication(N, B) )
%   | | | then return -0.020638071370606206;  // std dev = 1.082, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.09147907409820495;  // std dev = 1.375, 51.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( publication(E, A), student(A) )
%   | | then return 0.2318356617681417;  // std dev = 0.121, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( tempadvisedby(F, B), student(A) )
%   | | | then return 0.1362253949498717;  // std dev = 1.428, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.08882003208077237;  // std dev = 2.271, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | else if ( ta(G, A, H) )
%   | | then if ( publication(I, B) )
%   | | | then return -0.07846408605230978;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.003648303273841003;  // std dev = 0.445, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( publication(J, A), student(B) )
%   | | | then return -0.07348221798645464;  // std dev = 0.027, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.22302375601003205;  // std dev = 0.420, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.19334416764192436;  // std dev = 0.107, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.3882147610304429;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return -0.155615938660091;  // std dev = 1.751, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.056870382650536073;  // std dev = 1.871, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else return -0.06789390903736744;  // std dev = 0.029, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( professor(B), publication(E, B) )
%   | then if ( professor(A) )
%   | | then return -0.06678254638180102;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.1609675992403809;  // std dev = 1.636, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return 0.018565217847429746;  // std dev = 1.734, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | else if ( student(B) )
%   | | then return -0.06449947656956964;  // std dev = 0.048, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.26489777994783864;  // std dev = 0.737, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.681', 'seconds']
Refined model CLL: -0.227198


******************************************
Best model found
******************************************
Results 

CLL : -0.211118 

AUC ROC : 0.946442 

AUC PR : 0.393712 

Precision : 0.185185 

Recall : 0.8125 

F1 : 0.301624 

Total Learning Time : 36.826 

Total Inference Time : 4.51036524772644 

Total revision time: 43.14705787658691
Best scored revision CLL: -0.227198


Results 

CLL : -0.211118 

AUC ROC : 0.946442 

AUC PR : 0.393712 

Precision : 0.185185 

Recall : 0.8125 

F1 : 0.301624 

Total Learning Time : 43.181064949035644 

Total Inference Time : 4.51036524772644 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos examples: 97
Target test neg examples: 3734

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.578
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.476, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15444523139580865;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.445, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2954322164214834;  // std dev = 2.947, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0653361039368619;  // std dev = 0.445, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.2043160658250793;  // std dev = 0.494, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.060308478718448806;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.06153474739017237;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   return 0;  // std dev = 0.459, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then return 0.008561140483449746;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.360', 'seconds']
Parameter learned model CLL:-0.369046 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C)', 'false': 'publication(A, D), publication(E, D)', 'false,false': 'publication(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.355, 38, 16]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(A, C), publication(D, C)', 'false': 'publication(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.947, 19, 16]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.445, 43, 16]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [0.494, 22, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {'': 'publication(A, C)'}, {'true': [0.0, 0, 0], 'false': [3.314, 35, 16]}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.283, 33, 16], 'false': [0.0, 0, 0]}]
['advisedby(A, B)', {}, {}]
['advisedby(A, B)', {'': 'publication(C, D)'}, {'true': [3.381, 40, 16], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.20850480109739317], 'false': [nan, 0.20850480109739317], 'false,false': [nan, 0.20850480109739317]}
{}
{'': [nan, 0.2481632653061231], 'false': [nan, 0.2481632653061231]}
{'': [nan, 0.19764435507038228]}
{'': [0.2437673130193901, nan]}
{'': [nan, 0.2153018069973084]}
{'': [0.21990837151187023, nan]}
{}
{'': [0.20408163265306187, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;advisedby(A, B) :- publication(A, C).;true;true
1;false;publication(A, D), publication(E, D).;true;true
1;false,false;publication(A, F).;true;true
3;;advisedby(A, B) :- publication(A, C), publication(D, C).;true;true
3;false;publication(A, E).;true;true
4;;advisedby(A, B) :- publication(A, C).;true;true
5;;advisedby(A, B) :- publication(C, D).;true;true
6;;advisedby(A, B) :- publication(A, C).;true;true
7;;advisedby(A, B) :- publication(C, D).;true;true
9;;advisedby(A, B) :- publication(C, D).;true;true


Refining candidate
***************************
Model training time 17.51
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), projectmember(E, B) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.5854216623722396;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, D), publication(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( publication(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( professor(B), student(A) )
%   | | | then return 0.4618448789590596;  // std dev = 2.112, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, C, E), ta(D, A, F) )
%   | | then return 0.6384242283895636;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.4166679173591888;  // std dev = 1.170, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.30509089505623027;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.6487616748402586;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(A, C), publication(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( publication(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( hasposition(B, F), student(A) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.3972688894851006;  // std dev = 1.208, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.1723135474099523;  // std dev = 1.348, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( ta(I, A, J) )
%   | | | then return -0.15665791753367025;  // std dev = 0.412, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06163152265688424;  // std dev = 0.539, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( professor(B), student(A) )
%   | then if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.40991414954804767;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1566636374708713;  // std dev = 1.526, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else return 0.4574148376668203;  // std dev = 0.087, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.09359877773116676;  // std dev = 0.016, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( publication(E, B), student(A) )
%   | then if ( publication(E, F), projectmember(G, F) )
%   | | then return 0.41416006613387885;  // std dev = 0.264, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(H, A), ta(I, A, J) )
%   | | | then return -0.3964759560011731;  // std dev = 0.386, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.15720755834218889;  // std dev = 1.207, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( ta(K, A, L) )
%   | | then if ( professor(B) )
%   | | | then return -0.5942336035963146;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08092322635287084;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( publication(M, A) )
%   | | | then return -0.1406286290837616;  // std dev = 0.497, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.06769589860013416;  // std dev = 0.662, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( projectmember(D, B), student(A) )
%   | then return 0.4029870880867654;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( publication(H, A) )
%   | | | then return -0.1272093607974973;  // std dev = 0.657, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.22189695795860084;  // std dev = 0.894, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(I, B), student(A) )
%   | | | then return -0.2613931008464255;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05709324951513273;  // std dev = 0.982, 37.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( publication(E, A), student(A) )
%   | then if ( publication(E, B) )
%   | | then return 0.28966234502846855;  // std dev = 0.165, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07123408852552;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( projectmember(F, B), ta(G, A, H) )
%   | | then return -0.32166303463461815;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(I, A, J), publication(K, B) )
%   | | | then return 0.023267195808127437;  // std dev = 1.457, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.08155199188309342;  // std dev = 1.176, 38.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( projectmember(D, B) )
%   | then return 0.3431771747428505;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( publication(H, A) )
%   | | | then return -0.1153121890971312;  // std dev = 0.583, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03481725111508587;  // std dev = 1.233, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.10911105901541773;  // std dev = 0.834, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( ta(I, A, J) )
%   | then if ( ta(K, B, L) )
%   | | then return -0.07421150577628617;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.15815186343568138;  // std dev = 0.319, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( professor(A) )
%   | | then return -0.07030638431016636;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.009623978817762604;  // std dev = 0.413, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, D) )
%   then if ( projectmember(E, B), ta(F, A, G) )
%   | then return -0.36706590657814203;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( projectmember(H, B) )
%   | | then return 0.12332150352067331;  // std dev = 0.344, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(I, B), publication(I, A) )
%   | | | then return 0.08469589745982226;  // std dev = 0.436, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.09709644825436126;  // std dev = 1.862, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '58.136', 'seconds']
Refined model CLL: -0.223285


******************************************
Best model found
******************************************
Results 

CLL : -0.221194 

AUC ROC : 0.937888 

AUC PR : 0.254921 

Precision : 0.165631 

Recall : 0.824742 

F1 : 0.275862 

Total Learning Time : 17.51 

Total Inference Time : 1.6244595050811768 

Total revision time: 20.289278924942018
Best scored revision CLL: -0.223285


Results 

CLL : -0.221194 

AUC ROC : 0.937888 

AUC PR : 0.254921 

Precision : 0.165631 

Recall : 0.824742 

F1 : 0.275862 

Total Learning Time : 20.323285997390748 

Total Inference Time : 1.6244595050811768 

