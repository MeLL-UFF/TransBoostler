Starting experiment 36_uwcse_imdb 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 

Starting experiment 36_uwcse_imdb 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 

Starting experiment 36_uwcse_imdb 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 

Starting experiment 36_uwcse_imdb 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.947
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06382269396476045;  // std dev = 4.800, 141.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05299806390051911;  // std dev = 4.808, 143.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05195814989937509;  // std dev = 4.791, 139.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.38171290045857575;  // std dev = 0.132, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02967018084452107;  // std dev = 4.837, 150.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32856077336742767;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then return -0.14210698865591895;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.026865907271010528;  // std dev = 4.833, 149.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26052099116724386;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12564717869758854;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.031247670147345055;  // std dev = 4.808, 143.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21352895729827073;  // std dev = 1.49e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11248022758137223;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06363327845840765;  // std dev = 4.696, 121.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1798576222272459;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.026221814742654743;  // std dev = 4.781, 137.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15483523714685482;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10173135887630036;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.008200867815708302;  // std dev = 4.873, 160.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13563762771303992;  // std dev = 2.58e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.09280432384330832;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.004650451091439702;  // std dev = 4.866, 158.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.510', 'seconds']
Parameter learned model CLL:-0.217831 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.58e-07, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.8, 112, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.808, 114, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.791, 110, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.132, 2, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.837, 121, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 27], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.833, 120, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.808, 114, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.49e-08, 0, 27], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.696, 92, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.98e-08, 0, 27], 'true,false': [0.0, 0, 0], 'false': [4.781, 108, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.873, 131, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [2.58e-08, 0, 27], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.866, 129, 29]}]
{'': [0.13183593750000117, 0.163372063779488], 'true': [9.210739167260557e-16, -2.7755575615628915e-18], 'true,true': [9.210739167260557e-16, nan], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [-2.7755575615628915e-18, nan]}
{'': [0.02458537734255049, 0.16167049733483302], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.631639762074445e-16, nan]}
{'': [0.015352817878677705, 0.16510532581129275], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.01730280087047356, 0.15595555555555557], 'true': [0.01730280087047356, nan], 'true,true': [0.01730280087047356, nan]}
{'': [0.01422416133083888, 0.1567496959596415], 'true': [-1.644774851296528e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.01342132698750782, 0.16167049733483313], 'true': [-4.11193712824132e-17, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,true': [-4.11193712824132e-17, nan]}
{'': [0.006824289400473274, 0.1822279898914008], 'true': [8.22387425648264e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [3.289549702593056e-17, 0.16687090415046163], 'true': [3.289549702593056e-17, nan]}
{'': [0.004226666566617207, 0.14839843749999995], 'true': [-1.2335811384723961e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.0033508075653592858, 0.1498557923409704], 'true': [2.4671622769447922e-17, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.467
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0.7936328060672536;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7323086016879355;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.2676913983120645;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12702515808154338;  // std dev = 0.141, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.11215889469606448;  // std dev = 3.33e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0.5418672678169337;  // std dev = 0.141, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10146651618019917;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42576385460156;  // std dev = 0.060, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14621987172575354;  // std dev = 0.200, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3189171430996716;  // std dev = 5.16e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.08900604658523109;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.09258257394197923;  // std dev = 4.59e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.33323881789872273;  // std dev = 4.21e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.29350712625273995;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25394724206481184;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.08204820033208873;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.08509248905273455;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else return 0.24702905197813632;  // std dev = 0.090, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20889201630435494;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.0760767574522136;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.07869752494848886;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.21860054777173912;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.28396272005629136;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.16762699584309784;  // std dev = 0.046, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( actor(B) )
%   | then return -0.07317748988605714;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.18355563714570702;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.22990424103870047;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15340563678851815;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.08276670668175094;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), director(B) )
%   | then return 0.145980836980236;  // std dev = 0.063, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else if ( actor(A) )
%   | | then return -0.06836680870195352;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else return -0.1933989453026774;  // std dev = 0.559, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1345234586200199;  // std dev = 1.49e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.0766964473119746;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06380344789477382;  // std dev = 0.016, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else return 0.11632062623333837;  // std dev = 0.087, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.475', 'seconds']
Refined model CLL: -0.068092


******************************************
Best model found
******************************************
Results 

CLL : -0.088488 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.467 

Total Inference Time : 0.9676244258880615 

Total revision time: 4.451436008453369
Best scored revision CLL: -0.068092


Results 

CLL : -0.088488 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 5.917530502319336 

Total Inference Time : 0.9676244258880615 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.869
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08845196540254241;  // std dev = 5.408, 165.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10379372039966685;  // std dev = 5.314, 148.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06201503165017834;  // std dev = 5.413, 166.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3136916014290806;  // std dev = 0.208, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08280090107092838;  // std dev = 5.308, 147.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34373799428974117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then return -0.13401446303985057;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.030372485824643917;  // std dev = 5.450, 174.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2708294477322767;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.11920975273453055;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04629450791883617;  // std dev = 5.378, 159.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22075916045604846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.107249936107622;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04358606782254071;  // std dev = 5.361, 156.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1851244669880136;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.09740515576458872;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03496941103965896;  // std dev = 5.367, 157.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15880700520328128;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08917096031332554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06450295655604374;  // std dev = 5.240, 137.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1387228294280986;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.013622779926605688;  // std dev = 5.383, 160.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.442', 'seconds']
Parameter learned model CLL:-0.266859 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.408, 127, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.3e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.314, 110, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 20], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.413, 128, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.208, 5, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.308, 109, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.45, 136, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.378, 121, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.361, 118, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 20], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.367, 119, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [1.05e-08, 0, 20], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.24, 99, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.383, 122, 38]}]
{'': [0.17751479289940847, 0.177263544536272], 'true': [-8.881784197001253e-17, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-8.881784197001253e-17, nan]}
{'': [0.03237580555397633, 0.19083272461650821], 'true': [2.6645352591003756e-16, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.05056336575040308, 0.17651328204383732], 'true': [-2.6645352591003756e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}
{'': [0.04311601639131364, 0.1916793928455736], 'true': [0.04311601639131364, nan], 'true,true': [0.04311601639131364, nan]}
{'': [0.01035135648455616, 0.17069626106487068], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}
{'': [0.01725488596228193, 0.18187571694157673], 'true': [-5.551115123125783e-17, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,true': [-5.551115123125783e-17, nan]}
{'': [0.00889173284533182, 0.18425378040762655], 'true': [-2.7755575615628914e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.006596941134936151, 0.18345571828471652], 'true': [-3.3306690738754695e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.00854070435857715, 0.20043689061750775], 'true': [5.551115123125783e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [-1.1102230246251566e-17, 0.18109374999999986], 'true': [-1.1102230246251566e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.64
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.14185106490048763;  // std dev = 8.69e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839133;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 8.16e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462843;  // std dev = 1.26e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783637;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926086;  // std dev = 6.91e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else return 0.3101117670742672;  // std dev = 0.065, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948945;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 1.67e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.08518475138839682;  // std dev = 4.34e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.257192110138914;  // std dev = 8.33e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.12227114522387963;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), director(B) )
%   | then return 0.19513717767710714;  // std dev = 0.070, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0787767547310918;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.0787767547310917;  // std dev = 3.25e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( female(B) )
%   | | | then return -0.0787767547310918;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08651834358069979;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.17253345290986868;  // std dev = 0.049, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333706;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07849222393514617;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1563716014936122;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.15113878818599247;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420274;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.06842697784420268;  // std dev = 2.47e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07661221285639229;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.12436731534838194;  // std dev = 0.043, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13683282303558553;  // std dev = 3.73e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.13275272611120104;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return -0.09481682123307093;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.482', 'seconds']
Refined model CLL: -0.066016


******************************************
Best model found
******************************************
Results 

CLL : -0.070908 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.64 

Total Inference Time : 1.0517606735229492 

Total revision time: 4.538025554656983
Best scored revision CLL: -0.066016


Results 

CLL : -0.070908 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.00412004852295 

Total Inference Time : 1.0517606735229492 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.357
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06855082635246616;  // std dev = 8.383, 423.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06989472130413017;  // std dev = 8.330, 404.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 4.15e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360642;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04271928671607837;  // std dev = 8.426, 440.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.26800992902822085;  // std dev = 0.235, 125.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058252512711448254;  // std dev = 8.313, 398.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3541152372119294;  // std dev = 1.88e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then return -0.12880096561470197;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.042456361459242656;  // std dev = 8.353, 412.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27785752913456213;  // std dev = 1.58e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.11502569034707658;  // std dev = 2.58e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.028693315104573482;  // std dev = 8.393, 427.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22566177052981257;  // std dev = 1.03e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10382501007970464;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.029935457873677532;  // std dev = 8.364, 416.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18867645508078304;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.09455423299588218;  // std dev = 1.67e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.011906259967273444;  // std dev = 8.436, 444.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16147288220750167;  // std dev = 8.43e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0867635638043107;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.015170174667039835;  // std dev = 8.409, 433.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.14078532545496344;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.08013076838363233;  // std dev = 9.13e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.017680159651873962;  // std dev = 8.383, 423.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.432', 'seconds']
Parameter learned model CLL:-0.237771 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.19e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.11e-08, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.383, 334, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [3.04e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.33, 315, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [4.15e-08, 0, 89], 'true,false,true,true': [0.0, 30, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.426, 351, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.235, 36, 89], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.313, 309, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [1.88e-07, 0, 89], 'true,false,true': [0.0, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.353, 323, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [1.58e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.58e-08, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.393, 338, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.03e-07, 0, 89], 'true,false,true,true': [0.0, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.364, 327, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 89], 'true,false,true': [1.67e-08, 29, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.436, 355, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [8.43e-08, 0, 89], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.409, 344, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 89], 'true,false,true': [9.13e-09, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.383, 334, 89]}]
{'': [0.17497164461247805, 0.16613293541013502], 'true': [1.5967252488991015e-16, 1.708035422500241e-17], 'true,true': [1.5967252488991015e-16, nan], 'true,false': [1.708035422500241e-17, nan], 'true,false,true': [1.708035422500241e-17, nan]}
{'': [0.13886679786222503, 0.17176624840701799], 'true': [1.037871411784416e-15, -6.938893903907228e-18], 'true,true': [1.037871411784416e-15, nan], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}
{'': [0.08405387412240486, 0.161358471074383], 'true': [1.7164796425665342e-15, -7.401486830834377e-18], 'true,false': [-7.401486830834377e-18, nan], 'true,false,true': [-7.401486830834377e-18, nan]}
{'': [0.05525748660710724, 0.17361304007474576], 'true': [0.05525748660710724, nan], 'true,true': [0.05525748660710724, nan]}
{'': [0.04837201676307361, 0.16935502874917502], 'true': [3.9918131222477537e-16, -9.00180830777154e-18], 'true,false': [-9.00180830777154e-18, nan]}
{'': [0.030025911780611828, 0.16498746770947065], 'true': [2.7942691855734276e-16, 2.0816681711721685e-17], 'true,true': [2.7942691855734276e-16, nan], 'true,false': [2.0816681711721685e-17, nan]}
{'': [0.021422012823011077, 0.16817099667159766], 'true': [1.197543936674326e-16, -6.7286243916676156e-18], 'true,false': [-6.7286243916676156e-18, nan], 'true,false,true': [-6.7286243916676156e-18, nan]}
{'': [0.014869782110535228, 0.1602700673646627], 'true': [-4.989766402809692e-18, 9.570888143320316e-18], 'true,false': [9.570888143320316e-18, nan]}
{'': [0.011618456285099754, 0.1632949133015808], 'true': [7.983626244495507e-17, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [nan, -2.7755575615628915e-18]}
{'': [0.010007536725514105, 0.1661329354101352], 'true': [-7.734137924355023e-17, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 2.058
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.14185106490048807;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.12544463852839133;  // std dev = 2.11e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.12544463852839177;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.11231637819360642;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.11231637819360674;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783623;  // std dev = 3.80e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.10159632948783655;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.09269127618926105;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.0926912761892607;  // std dev = 1.03e-07, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.0851847513883968;  // std dev = 2.04e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.0851847513883968;  // std dev = 2.04e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.08518475138839679;  // std dev = 8.94e-08, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.07877675473109147;  // std dev = 5.77e-08, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.07324622576333686;  // std dev = 8.82e-08, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06842697784420276;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.0684269778442028;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.423', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.058 

Total Inference Time : 1.0957636833190918 

Total revision time: 5.575333156585693
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 7.04142765045166 

Total Inference Time : 1.0957636833190918 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.751
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12799020494078192;  // std dev = 4.983, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1481499013975683;  // std dev = 4.856, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11675834039411319;  // std dev = 4.894, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3339815498988174;  // std dev = 0.196, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08199690454479786;  // std dev = 4.952, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3391755652905651;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07574401908586846;  // std dev = 4.928, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26773478154007896;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05361192770918228;  // std dev = 4.960, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21859366732211757;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.16688461354115575;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.019619489857314702;  // std dev = 5.044, 135.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18355063173270514;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.14495210237959008;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0523867053862019;  // std dev = 4.920, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1576225448110331;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06377316204768048;  // std dev = 4.847, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13780432229781417;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043569642731519226;  // std dev = 4.875, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.621', 'seconds']
Parameter learned model CLL:-0.323492 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.983, 92, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [4.21e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.856, 77, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false': [4.894, 81, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.196, 2, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.952, 88, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.98e-08, 0, 11], 'true,false': [0.0, 0, 0], 'false': [4.928, 85, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [1.05e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.96, 89, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.49e-08, 0, 11], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.044, 101, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 11], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.92, 84, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false': [4.847, 76, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false': [4.875, 79, 34]}]
{'': [-1.6148698540002277e-16, 0.19702695893172106], 'true': [-1.6148698540002277e-16, nan], 'true,true': [-1.6148698540002277e-16, nan]}
{'': [0.09657607578206272, 0.2124827530232936], 'true': [1.6148698540002277e-16, 0.0], 'true,true': [1.6148698540002277e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [-2.0185873175002846e-16, 0.2082419659735341], 'true': [-2.0185873175002846e-16, nan]}
{'': [0.038376804111409715, 0.20102123085192147], 'true': [0.038376804111409715, nan], 'true,true': [0.038376804111409715, nan]}
{'': [8.074349270001139e-17, 0.20408163265306034], 'true': [8.074349270001139e-17, nan]}
{'': [1.0092936587501423e-17, 0.20001321964439145], 'true': [1.0092936587501423e-17, nan], 'true,true': [1.0092936587501423e-17, nan]}
{'': [0.019343533197518956, 0.18842249657064472], 'true': [2.0185873175002847e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.008243434093831844, 0.20511347313990172], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}
{'': [-5.046468293750712e-18, 0.21355371900826434], 'true': [-5.046468293750712e-18, nan]}
{'': [-5.046468293750712e-18, 0.21035319915420125], 'true': [-5.046468293750712e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.392
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.7043027812533584;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.30e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7494530261603095;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.25054697383969043;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109548;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12762889133487965;  // std dev = 0.154, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5857065100863262;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.2064850786893834;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462844;  // std dev = 7.30e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1120987894507977;  // std dev = 3.33e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42311265119121805;  // std dev = 0.066, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12596169502414725;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10141696377416667;  // std dev = 4.08e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.29870889278804874;  // std dev = 0.137, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.31949328459926624;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.09066239406599154;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09385159706504866;  // std dev = 0.124, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.20313920315800219;  // std dev = 0.172, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( actor(B) )
%   | then return -0.08495532908977133;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.2543405799151675;  // std dev = 3.65e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.08346015794203039;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2378645204764127;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.23562033130725965;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20917006759237022;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.07729385705037718;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.08054530901351045;  // std dev = 0.166, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19745335715198742;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.19584583547855441;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.07294224219340896;  // std dev = 4.08e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17666536567537008;  // std dev = 4.21e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.07195827975547658;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.14011437997353562;  // std dev = 0.093, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.15241672237219603;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.06729842469961769;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06816254267301837;  // std dev = 0.000157, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.12128560518473934;  // std dev = 0.093, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( actor(A), director(B) )
%   | then return 0.12812453779909078;  // std dev = 0.033, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return -0.06395841019974076;  // std dev = 0.000148, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.468', 'seconds']
Refined model CLL: -0.066903


******************************************
Best model found
******************************************
Results 

CLL : -0.072417 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.392 

Total Inference Time : 0.8697879314422607 

Total revision time: 3.803252571105957
Best scored revision CLL: -0.066903


Results 

CLL : -0.072417 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.269347064971924 

Total Inference Time : 0.8697879314422607 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.805
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0803711573217345;  // std dev = 4.137, 99.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05178472646330417;  // std dev = 4.186, 108.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041288174172013234;  // std dev = 4.195, 110.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583099;  // std dev = 7.45e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06973984414665114;  // std dev = 4.105, 94.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2.98e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then return -0.1465277125760932;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03150348556562809;  // std dev = 4.181, 107.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694895;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12913526897575117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.037005732508620624;  // std dev = 4.154, 102.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253573;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.018762457665659354;  // std dev = 4.285, 133.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.1152948690182349;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 4.4465845114256407E-4;  // std dev = 4.243, 121.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936709;  // std dev = 2.58e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10404596413741511;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.00986479347714363;  // std dev = 4.218, 115.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0189255896622423;  // std dev = 4.190, 109.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.558', 'seconds']
Parameter learned model CLL:-0.218002 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [8.43e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.137, 77, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.96e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.186, 86, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 23], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.195, 88, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [7.45e-09, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.105, 72, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [2.98e-08, 0, 23], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.181, 85, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.154, 80, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.49e-08, 0, 23], 'true,false': [0.0, 0, 0], 'false': [4.285, 111, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 23], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.243, 99, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [2.58e-08, 0, 23], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.218, 93, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 23], 'true,false': [0.0, 0, 0], 'false': [4.19, 87, 22]}]
{'': [0.10207100591716042, 0.1728395061728395], 'true': [3.089316242435218e-16, 0.0], 'true,true': [3.089316242435218e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.07286711443801365, 0.16220850480109747], 'true': [1.544658121217609e-16, 0.0], 'true,true': [1.544658121217609e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.045503289281446285, 0.15999999999999986], 'true': [-2.703151712130816e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}
{'': [7.723290606088045e-17, 0.17926663648709834], 'true': [7.723290606088045e-17, nan], 'true,true': [7.723290606088045e-17, nan]}
{'': [0.008717351635760281, 0.16333304218709044], 'true': [3.8616453030440226e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.010870150588455, 0.16916570549788543], 'true': [-9.654113257610057e-18, 0.0], 'true,false': [0.0, nan], 'true,true': [-9.654113257610057e-18, nan]}
{'': [9.654113257610057e-18, 0.1380518966589406], 'true': [9.654113257610057e-18, nan]}
{'': [0.0034137714604690664, 0.14876033057851246], 'true': [-2.896233977283017e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.002633061275058831, 0.1547069943289226], 'true': [2.896233977283017e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.0, 0.16109755071121926], 'true': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), female(A).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.458
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return 0.7748156017661786;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return 0.6526478931012826;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6.83e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0.5485934841464848;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.4175135841583099;  // std dev = 4.21e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( actor(B) )
%   | then return -0.10159632948783616;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0.37276575963760417;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2.98e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.1465277125760932;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.36613758572662297;  // std dev = 4.71e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.6338624142733769;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926103;  // std dev = 3.16e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926103;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.2009255038060842;  // std dev = 0.484, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694895;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12913526897575117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.2527363635796804;  // std dev = 0.156, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839682;  // std dev = 5.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839691;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.2467826494521085;  // std dev = 0.416, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.18375350886047412;  // std dev = 0.088, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.07798183249897346;  // std dev = 0.017, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.2372715710631338;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109177;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.5418261975826666;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18091805100546973;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.13540300180912593;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.07216283861691254;  // std dev = 0.039, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.19702890723877076;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.4075435645926495;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15563675115802844;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12031919271699412;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.06816085203736545;  // std dev = 0.021, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0.1275641616701845;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.11670814602254413;  // std dev = 0.066, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.15064369931266652;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.3420642015495324;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.0642838514762694;  // std dev = 0.000178, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.2628569570289037;  // std dev = 0.486, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.05705163581983588;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.648', 'seconds']
Refined model CLL: -0.071943


******************************************
Best model found
******************************************
Results 

CLL : -0.090946 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.458 

Total Inference Time : 0.881798267364502 

Total revision time: 4.053153741836548
Best scored revision CLL: -0.071943


Results 

CLL : -0.090946 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 5.5192482357025145 

Total Inference Time : 0.881798267364502 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.836
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8073014774723939;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7120767418011796;  // std dev = 0.131, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   else return -0.1254446385283913;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5352158965510238;  // std dev = 0.182, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   else return -0.11231637819360625;  // std dev = 6.99e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.37002638885805145;  // std dev = 1.932, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   else return -0.10159632948783633;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.29788386289477253;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.09269127618926093;  // std dev = 5.67e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21778122040453382;  // std dev = 1.932, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   else return -0.08518475138839682;  // std dev = 5.87e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.22472407090866273;  // std dev = 0.991, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   else return -0.07877675473109155;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13676064106648164;  // std dev = 1.932, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   else return -0.07324622576333707;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11549497160790076;  // std dev = 1.932, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   else return -0.06842697784420267;  // std dev = 3.94e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1655823680549425;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06419184008202626;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.635', 'seconds']
Parameter learned model CLL:-0.124679 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.687, 3, 56], 'false': [8.16e-08, 109, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.131, 1, 56], 'false': [0.0, 117, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.182, 2, 56], 'false': [6.99e-08, 99, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.932, 4, 56], 'false': [0.0, 111, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.687, 3, 56], 'false': [5.67e-08, 111, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.932, 4, 56], 'false': [5.87e-08, 108, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.991, 1, 56], 'false': [6.66e-08, 115, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.932, 4, 56], 'false': [0.0, 94, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.932, 4, 56], 'false': [3.94e-08, 83, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 56], 'false': [0.0, 111, 0]}]
{'': [0.04826199367997677, 6.111319401606367e-17], 'true': [nan, 0.04826199367997677], 'true,false': [nan, 0.04826199367997677], 'true,false,false': [nan, 0.04826199367997677]}
{'': [0.017236072637735366, -3.795634272222758e-18], 'true': [nan, 0.017236072637735366], 'true,false': [nan, 0.017236072637735366]}
{'': [0.033293697978597554, 4.9343245538895844e-17], 'true': [nan, 0.033293697978597554], 'true,false': [nan, 0.033293697978597554]}
{'': [0.0622222222222223, -8.001607384685813e-18], 'true': [nan, 0.0622222222222223], 'true,false': [nan, 0.0622222222222223]}
{'': [0.048261993679976696, 2.900582676948607e-17], 'true': [nan, 0.048261993679976696], 'true,false': [nan, 0.048261993679976696]}
{'': [0.062222222222222054, 3.1867512743870234e-17], 'true': [nan, 0.062222222222222054], 'true,false': [nan, 0.062222222222222054], 'true,false,false': [nan, 0.062222222222222054]}
{'': [0.01723607263773475, 3.8616453030440226e-17], 'true': [nan, 0.01723607263773475], 'true,false': [nan, 0.01723607263773475]}
{'': [0.06222222222222215, -5.9054416203465774e-18], 'true': [nan, 0.06222222222222215], 'true,false': [nan, 0.06222222222222215], 'true,false,false': [nan, 0.06222222222222215]}
{'': [0.06222222222222221, 1.8726653427412278e-17], 'true': [nan, 0.06222222222222221], 'true,false': [nan, 0.06222222222222221], 'true,false,false': [nan, 0.06222222222222221]}
{'': [-1.586032892321652e-17, -1.6003214769371626e-17], 'true': [nan, -1.586032892321652e-17], 'true,false': [nan, -1.586032892321652e-17], 'true,false,false': [nan, -1.586032892321652e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.033
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6612032018151374;  // std dev = 0.214, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.12544463852839133;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5622796962470952;  // std dev = 0.054, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22247913083976167;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1123163781936062;  // std dev = 8.69e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4226895767676561;  // std dev = 0.053, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1854935138185706;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3242412848048259;  // std dev = 0.048, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16378237964956366;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926097;  // std dev = 4.47e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2575899249289041;  // std dev = 0.042, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14024153390403543;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0851847513883968;  // std dev = 6.05e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2114706087488378;  // std dev = 0.036, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12417059952033187;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109158;  // std dev = 6.14e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17835592624410257;  // std dev = 0.032, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11033250978615164;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333711;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15370131304875054;  // std dev = 0.028, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09995966075676496;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420264;  // std dev = 5.48e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13475593222539742;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09252839817829343;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.269', 'seconds']
Refined model CLL: -0.064258


******************************************
Best model found
******************************************
Results 

CLL : -0.066406 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.033 

Total Inference Time : 0.9201111793518066 

Total revision time: 3.777316373825073
Best scored revision CLL: -0.064258


Results 

CLL : -0.066406 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.839908164978027 

Total Inference Time : 0.9201111793518066 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.869
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.750456627407205;  // std dev = 2.499, 65.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   else return -0.14185106490048777;  // std dev = 2.98e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6063588463375289;  // std dev = 0.341, 67.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=58 */
%   else return -0.12544463852839105;  // std dev = 8.16e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5598372495844273;  // std dev = 0.216, 61.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   else return -0.11231637819360624;  // std dev = 7.88e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3915047655639973;  // std dev = 2.146, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   else return -0.1015963294878364;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2679332446796684;  // std dev = 2.499, 65.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   else return -0.09269127618926092;  // std dev = 6.23e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20747072573243688;  // std dev = 2.499, 65.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   else return -0.0851847513883968;  // std dev = 6.75e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12512686062218767;  // std dev = 2.921, 68.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=58 */
%   else return -0.07877675473109155;  // std dev = 6.66e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14042319944260834;  // std dev = 2.499, 65.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   else return -0.07324622576333707;  // std dev = 4.47e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12910397696733955;  // std dev = 2.332, 64.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   else return -0.06842697784420265;  // std dev = 5.16e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1075457517786299;  // std dev = 2.332, 64.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   else return -0.06419184008202626;  // std dev = 2.89e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.475', 'seconds']
Parameter learned model CLL:-0.140445 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.499, 7, 58], 'false': [2.98e-08, 123, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.341, 9, 58], 'false': [8.16e-08, 122, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.216, 3, 58], 'false': [7.88e-08, 110, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.146, 5, 58], 'false': [0.0, 126, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.499, 7, 58], 'false': [6.23e-08, 116, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.499, 7, 58], 'false': [6.75e-08, 128, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.921, 10, 58], 'false': [6.66e-08, 116, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.499, 7, 58], 'false': [4.47e-08, 106, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.332, 6, 58], 'false': [5.16e-08, 106, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.332, 6, 58], 'false': [2.89e-08, 109, 0]}]
{'': [0.09609467455621257, 7.220962761789637e-18], 'true': [nan, 0.09609467455621257], 'true,false': [nan, 0.09609467455621257], 'true,false,false': [nan, 0.09609467455621257]}
{'': [0.11628425038984189, 5.4601132358614255e-17], 'true': [nan, 0.11628425038984189], 'true,false': [nan, 0.11628425038984189]}
{'': [0.046761623219565215, 5.652044489000796e-17], 'true': [nan, 0.046761623219565215], 'true,false': [nan, 0.046761623219565215]}
{'': [0.07306626354245421, -3.172065784643304e-17], 'true': [nan, 0.07306626354245421], 'true,false': [nan, 0.07306626354245421]}
{'': [0.09609467455621307, 3.34981085016211e-17], 'true': [nan, 0.09609467455621307], 'true,false': [nan, 0.09609467455621307]}
{'': [0.09609467455621312, 3.5561831257524545e-17], 'true': [nan, 0.09609467455621312], 'true,false': [nan, 0.09609467455621312], 'true,false,false': [nan, 0.09609467455621312]}
{'': [0.1254325259515569, 3.828355257328126e-17], 'true': [nan, 0.1254325259515569], 'true,false': [nan, 0.1254325259515569]}
{'': [0.09609467455621319, 1.885284381438945e-17], 'true': [nan, 0.09609467455621319], 'true,false': [nan, 0.09609467455621319], 'true,false,false': [nan, 0.09609467455621319]}
{'': [0.08496093749999996, 2.51371250858526e-17], 'true': [nan, 0.08496093749999996], 'true,false': [nan, 0.08496093749999996], 'true,false,false': [nan, 0.08496093749999996]}
{'': [0.08496093750000001, 7.639149252007958e-18], 'true': [nan, 0.08496093750000001], 'true,false': [nan, 0.08496093750000001], 'true,false,false': [nan, 0.08496093750000001]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.007
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048763;  // std dev = 8.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360621;  // std dev = 8.02e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783634;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926096;  // std dev = 4.83e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839682;  // std dev = 5.48e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109157;  // std dev = 6.50e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.1645793615698468;  // std dev = 0.055, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return -0.07324622576333707;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15380977956027508;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08560079455263986;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06842697784420264;  // std dev = 5.27e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13483870751892055;  // std dev = 0.005, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07897406944173434;  // std dev = 0.000817, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06419184008202626;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.305', 'seconds']
Refined model CLL: -0.064086


******************************************
Best model found
******************************************
Results 

CLL : -0.06539 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.007 

Total Inference Time : 0.9231686592102051 

Total revision time: 3.798109603881836
Best scored revision CLL: -0.064086


Results 

CLL : -0.06539 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.86070139503479 

Total Inference Time : 0.9231686592102051 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.195
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6029188095764964;  // std dev = 6.740, 239.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=178 */
%   else return -0.14185106490048813;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5286888972696716;  // std dev = 0.427, 234.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=178 */
%   else return -0.12544463852839183;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.49682382449891843;  // std dev = 0.371, 213.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=178 */
%   else return -0.11231637819360629;  // std dev = 6.32e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3133499830782091;  // std dev = 6.391, 231.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=178 */
%   else return -0.10159632948783659;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20938375366433656;  // std dev = 6.740, 239.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=178 */
%   else return -0.09269127618926067;  // std dev = 1.07e-07, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16099903482087602;  // std dev = 6.699, 238.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=178 */
%   else return -0.08518475138839678;  // std dev = 8.94e-08, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1071965876816827;  // std dev = 6.900, 243.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=178 */
%   else return -0.07877675473109146;  // std dev = 4.47e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10098167315551924;  // std dev = 6.657, 237.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=178 */
%   else return -0.07324622576333678;  // std dev = 1.19e-07, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0752167121846741;  // std dev = 6.699, 238.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=178 */
%   else return -0.06842697784420275;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07821761260419459;  // std dev = 6.437, 232.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=178 */
%   else return -0.06419184008202627;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.465', 'seconds']
Parameter learned model CLL:-0.261886 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.74, 61, 178], 'false': [0.0, 284, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.427, 56, 178], 'false': [0.0, 280, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.371, 35, 178], 'false': [6.32e-08, 288, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.391, 53, 178], 'false': [0.0, 320, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.74, 61, 178], 'false': [1.07e-07, 312, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.699, 60, 178], 'false': [8.94e-08, 280, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.9, 65, 178], 'false': [4.47e-08, 292, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.657, 59, 178], 'false': [1.19e-07, 315, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.699, 60, 178], 'false': [0.0, 294, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.437, 54, 178], 'false': [0.0, 285, 0]}]
{'': [0.19008770854852555, -8.756688644930812e-17], 'true': [nan, 0.19008770854852555], 'true,false': [nan, 0.19008770854852555], 'true,false,false': [nan, 0.19008770854852555]}
{'': [0.1820439769157684, -6.026924990822278e-17], 'true': [nan, 0.1820439769157684], 'true,false': [nan, 0.1820439769157684]}
{'': [0.1373184332914555, 1.3877787807814457e-17], 'true': [nan, 0.1373184332914555], 'true,false': [nan, 0.1373184332914555]}
{'': [0.17679578718539893, -5.134781488891349e-17], 'true': [nan, 0.17679578718539893], 'true,false': [nan, 0.17679578718539893]}
{'': [0.19008770854851828, 3.700743415417188e-17], 'true': [nan, 0.19008770854851828], 'true,false': [nan, 0.19008770854851828]}
{'': [0.1885460066379491, 2.8548592061789737e-17], 'true': [nan, 0.1885460066379491], 'true,false': [nan, 0.1885460066379491], 'true,false,false': [nan, 0.1885460066379491]}
{'': [0.19593896594353805, 6.843840562757814e-18], 'true': [nan, 0.19593896594353805], 'true,false': [nan, 0.19593896594353805]}
{'': [0.18697146112624358, 4.5113824492704774e-17], 'true': [nan, 0.18697146112624358], 'true,false': [nan, 0.18697146112624358], 'true,false,false': [nan, 0.18697146112624358]}
{'': [0.18854600663794915, -7.552537582484058e-19], 'true': [nan, 0.18854600663794915], 'true,false': [nan, 0.18854600663794915], 'true,false,false': [nan, 0.18854600663794915]}
{'': [0.17858204518430446, -1.0907454277019082e-17], 'true': [nan, 0.17858204518430446], 'true,false': [nan, 0.17858204518430446], 'true,false,false': [nan, 0.17858204518430446]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.515
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.141851064900488;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.12544463852839183;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360625;  // std dev = 5.27e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.11231637819360651;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.34e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.10159632948783658;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.09269127618926072;  // std dev = 8.69e-08, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.08518475138839678;  // std dev = 8.94e-08, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109172;  // std dev = 2.69e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07877675473109147;  // std dev = 5.37e-08, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07324622576333688;  // std dev = 7.60e-08, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.0684269778442028;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.06419184008202626;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.438', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.515 

Total Inference Time : 1.004716157913208 

Total revision time: 4.760913572311401
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.823505363464355 

Total Inference Time : 1.004716157913208 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.899
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7405018762759829;  // std dev = 2.301, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7425946244130867;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.12544463852839147;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4969367733381365;  // std dev = 0.274, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.11231637819360625;  // std dev = 5.48e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.30416945992324257;  // std dev = 2.606, 53.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   else return -0.10159632948783616;  // std dev = 5.37e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21459353646751034;  // std dev = 2.739, 54.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else return -0.09269127618926107;  // std dev = 1.05e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2504465111246375;  // std dev = 1.917, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.08518475138839682;  // std dev = 5.27e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1790371302198391;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.07877675473109166;  // std dev = 3.87e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14447867677226944;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.07324622576333707;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11878539295354339;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.06842697784420267;  // std dev = 3.57e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09916138339262798;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.06419184008202625;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.593', 'seconds']
Parameter learned model CLL:-0.162529 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.301, 6, 45], 'false': [7.74e-08, 81, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 45], 'false': [0.0, 82, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.274, 4, 45], 'false': [5.48e-08, 76, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.606, 8, 45], 'false': [5.37e-08, 71, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.739, 9, 45], 'false': [1.05e-08, 87, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.917, 4, 45], 'false': [5.27e-08, 91, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.121, 5, 45], 'false': [3.87e-08, 74, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.121, 5, 45], 'false': [0.0, 66, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.121, 5, 45], 'false': [3.57e-08, 77, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.121, 5, 45], 'false': [0.0, 95, 0]}]
{'': [0.10380622837370317, 7.401486830834377e-17], 'true': [nan, 0.10380622837370317], 'true,false': [nan, 0.10380622837370317], 'true,false,false': [nan, 0.10380622837370317]}
{'': [0.0, -2.166288828536891e-17], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.07496876301540947, 3.944213376957793e-17], 'true': [nan, 0.07496876301540947], 'true,false': [nan, 0.07496876301540947]}
{'': [0.12815948736205085, 4.065605442289306e-17], 'true': [nan, 0.12815948736205085], 'true,false': [nan, 0.12815948736205085]}
{'': [0.1388888888888891, 1.2761184191093753e-18], 'true': [nan, 0.1388888888888891], 'true,false': [nan, 0.1388888888888891]}
{'': [0.0749687630154104, 3.050063254464716e-17], 'true': [nan, 0.0749687630154104], 'true,false': [nan, 0.0749687630154104], 'true,false,false': [nan, 0.0749687630154104]}
{'': [0.08999999999999994, 2.0254068692485963e-17], 'true': [nan, 0.08999999999999994], 'true,false': [nan, 0.08999999999999994]}
{'': [0.09000000000000007, -8.410780489584519e-19], 'true': [nan, 0.09000000000000007], 'true,false': [nan, 0.09000000000000007], 'true,false,false': [nan, 0.09000000000000007]}
{'': [0.09, 1.658125296518091e-17], 'true': [nan, 0.09], 'true,false': [nan, 0.09], 'true,false,false': [nan, 0.09]}
{'': [0.09000000000000002, -9.933574430856664e-18], 'true': [nan, 0.09000000000000002], 'true,false': [nan, 0.09000000000000002], 'true,false,false': [nan, 0.09000000000000002]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 0.912
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839152;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1123163781936063;  // std dev = 4.08e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783616;  // std dev = 5.48e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926105;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839679;  // std dev = 2.11e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109161;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333707;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420265;  // std dev = 4.59e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202625;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.550', 'seconds']
Refined model CLL: -0.063847


******************************************
Best model found
******************************************
Results 

CLL : -0.064062 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 0.912 

Total Inference Time : 0.777857780456543 

Total revision time: 3.446847806930542
Best scored revision CLL: -0.063847


Results 

CLL : -0.064062 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.509439598083496 

Total Inference Time : 0.777857780456543 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.785
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7581489350995122;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6045916277461265;  // std dev = 0.341, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   else return -0.12544463852839147;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5076058160864086;  // std dev = 0.300, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.11231637819360621;  // std dev = 7.88e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41992065411748647;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.10159632948783616;  // std dev = 5.37e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31733066351235295;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.09269127618926108;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22676999505250406;  // std dev = 1.917, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.08518475138839682;  // std dev = 5.05e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2196850212077054;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   else return -0.07877675473109165;  // std dev = 4.28e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.179446191826012;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   else return -0.07324622576333707;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15000090821452575;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   else return -0.06842697784420265;  // std dev = 4.41e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14856126366508587;  // std dev = 0.989, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   else return -0.06419184008202625;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.614', 'seconds']
Parameter learned model CLL:-0.137234 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.121, 5, 45], 'false': [7.88e-08, 84, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.341, 7, 45], 'false': [0.0, 80, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.3, 5, 45], 'false': [7.88e-08, 102, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.677, 3, 45], 'false': [5.37e-08, 71, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.677, 3, 45], 'false': [0.0, 75, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.917, 4, 45], 'false': [5.05e-08, 87, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.384, 2, 45], 'false': [4.28e-08, 78, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.384, 2, 45], 'false': [0.0, 98, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.384, 2, 45], 'false': [4.41e-08, 92, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.989, 1, 45], 'false': [0.0, 77, 0]}]
{'': [0.09000000000000079, 7.401486830834377e-17], 'true': [nan, 0.09000000000000079], 'true,false': [nan, 0.09000000000000079], 'true,false,false': [nan, 0.09000000000000079]}
{'': [0.1164940828402366, -2.2204460492503132e-17], 'true': [nan, 0.1164940828402366], 'true,false': [nan, 0.1164940828402366]}
{'': [0.09000000000000095, 6.095342095981252e-17], 'true': [nan, 0.09000000000000095], 'true,false': [nan, 0.09000000000000095]}
{'': [0.05859374999999963, 4.065605442289306e-17], 'true': [nan, 0.05859374999999963], 'true,false': [nan, 0.05859374999999963]}
{'': [0.0585937500000003, -1.4802973661668755e-18], 'true': [nan, 0.0585937500000003], 'true,false': [nan, 0.0585937500000003]}
{'': [0.07496876301541015, 2.9350723639515634e-17], 'true': [nan, 0.07496876301541015], 'true,false': [nan, 0.07496876301541015], 'true,false,false': [nan, 0.07496876301541015]}
{'': [0.04074241738343146, 2.348548705937831e-17], 'true': [nan, 0.04074241738343146], 'true,false': [nan, 0.04074241738343146]}
{'': [0.04074241738343136, -6.797283824235652e-18], 'true': [nan, 0.04074241738343136], 'true,false': [nan, 0.04074241738343136], 'true,false,false': [nan, 0.04074241738343136]}
{'': [0.04074241738343151, 2.1118372751022e-17], 'true': [nan, 0.04074241738343151], 'true,false': [nan, 0.04074241738343151], 'true,false,false': [nan, 0.04074241738343151]}
{'': [0.02126654064272214, -6.488316377679486e-18], 'true': [nan, 0.02126654064272214], 'true,false': [nan, 0.02126654064272214], 'true,false,false': [nan, 0.02126654064272214]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 0.979
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283914;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360621;  // std dev = 7.45e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783617;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926108;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22794368305285861;  // std dev = 0.092, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.2551722425694895;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.08518475138839682;  // std dev = 4.71e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21208279061774343;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10685986520064912;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109164;  // std dev = 4.83e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1788008655857509;  // std dev = 0.013, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0958966190945354;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333707;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1540361638093018;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08873321307300208;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420265;  // std dev = 4.41e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13501551776647439;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08103995405992685;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202626;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.486', 'seconds']
Refined model CLL: -0.064383


******************************************
Best model found
******************************************
Results 

CLL : -0.065386 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 0.979 

Total Inference Time : 0.7763004302978516 

Total revision time: 3.4336033477783205
Best scored revision CLL: -0.064383


Results 

CLL : -0.065386 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.4961951389312746 

Total Inference Time : 0.7763004302978516 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.874
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0864953917924256;  // std dev = 4.731, 127.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0669872653822599;  // std dev = 4.757, 132.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05483771409913057;  // std dev = 4.767, 134.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.39859108550288447;  // std dev = 0.098, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03652604271320724;  // std dev = 4.800, 141.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3248481317088413;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then return -0.15859696332946588;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03889211794906755;  // std dev = 4.777, 136.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2579926598332139;  // std dev = 3.94e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1385600455370719;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.012040283038450507;  // std dev = 4.841, 151.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21174804776972878;  // std dev = 4.47e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12283408392917558;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.029882039307487205;  // std dev = 4.781, 137.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17855494113361825;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.11020040310197275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.00576899921318242;  // std dev = 4.841, 151.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15384933570227283;  // std dev = 1.05e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09984966226913357;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02607525217373028;  // std dev = 4.777, 136.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13486946880557313;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01747379635101291;  // std dev = 4.791, 139.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.486', 'seconds']
Parameter learned model CLL:-0.22528 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.58e-07, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.731, 98, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.757, 103, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.767, 105, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.098, 1, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.8, 112, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 27], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.777, 107, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [3.94e-08, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.841, 122, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [4.47e-08, 0, 27], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.781, 108, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [2.11e-08, 0, 27], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.841, 122, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [1.05e-08, 0, 27], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.777, 107, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 27], 'true,false': [0.0, 0, 0], 'false': [4.791, 110, 29]}]
{'': [0.03443877551020513, 0.1762043524087049], 'true': [9.210739167260557e-16, 0.0], 'true,true': [9.210739167260557e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [-2.631639762074445e-16, 0.17143021120293842], 'true': [-2.631639762074445e-16, nan], 'true,true': [-2.631639762074445e-16, nan]}
{'': [0.015962500568685707, 0.16958119848518552], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.00966764579484363, 0.16337206377948787], 'true': [0.00966764579484363, nan], 'true,true': [0.00966764579484363, nan]}
{'': [0.008049001680801202, 0.16776600346020745], 'true': [-1.644774851296528e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.00541563686184355, 0.15516863295469502], 'true': [5.756711979537848e-17, 0.0], 'true,true': [5.756711979537848e-17, nan], 'true,false': [0.0, nan]}
{'': [0.003855255710470668, 0.16687090415046094], 'true': [7.401486830834377e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.0028714930079905793, 0.1551686329546947], 'true': [1.644774851296528e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.00848538038298722, 0.16776600346020745], 'true': [4.11193712824132e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [-1.02798428206033e-17, 0.1651053258112927], 'true': [-1.02798428206033e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.703
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.6612032018151375;  // std dev = 0.214, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else if ( actor(B) )
%   | then return -0.1254446385283913;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5697050490442633;  // std dev = 1.12e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.21743996312685074;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.533110342914955;  // std dev = 0.120, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.11231637819360624;  // std dev = 7.30e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42549068211316193;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18271089094695867;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783633;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3285947074911161;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.15698973453323173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.09269127618926083;  // std dev = 7.45e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else return 0.2931142869045141;  // std dev = 0.117, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26054408713569166;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 5.96e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0.2479698026082978;  // std dev = 0.082, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21354521150108952;  // std dev = 6.45e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.13731305849935524;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then return 0.18873051990527653;  // std dev = 0.111, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0787767547310918;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.0787767547310917;  // std dev = 3.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.1682563004353261;  // std dev = 0.400, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0787767547310918;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1798695017387381;  // std dev = 4.56e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.12184198911554223;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333706;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.07324622576333706;  // std dev = 1.49e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.18754556829944322;  // std dev = 6.45e-09, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.27148889321684333;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1548442213321177;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.10939425201571477;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0684269778442027;  // std dev = 1.05e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.0684269778442027;  // std dev = 1.39e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.06623167850056375;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.16062521053843337;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.2212200647607699;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.12725792974402503;  // std dev = 0.044, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.14013022788411827;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.18545905000609975;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( director(A), actor(B) )
%   | | then return -0.061733817609199985;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.06419184008202625;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.06471132281295462;  // std dev = 0.026, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.410', 'seconds']
Refined model CLL: -0.066867


******************************************
Best model found
******************************************
Results 

CLL : -0.079915 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.703 

Total Inference Time : 1.0191709995269775 

Total revision time: 4.617378570556641
Best scored revision CLL: -0.066867


Results 

CLL : -0.079915 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.638770915985107 

Total Inference Time : 1.0191709995269775 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.94
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09271683633408004;  // std dev = 5.393, 162.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08105146717282383;  // std dev = 5.393, 162.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0840187778905106;  // std dev = 5.344, 153.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3927940644608743;  // std dev = 0.111, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08952045396241327;  // std dev = 5.282, 143.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3261208336172218;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then return -0.14346328711297623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07248142660233142;  // std dev = 5.295, 145.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.25885970918667833;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12671944726397116;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033592792979008815;  // std dev = 5.393, 162.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21235912916870717;  // std dev = 2.36e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1133469033204861;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04860975974898707;  // std dev = 5.321, 149.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17900217252305328;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0322528703439134;  // std dev = 5.350, 154.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1541879716462057;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05144388491041979;  // std dev = 5.262, 140.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13513342010632018;  // std dev = 1.83e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01156729983134829;  // std dev = 5.372, 158.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.458', 'seconds']
Parameter learned model CLL:-0.272872 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.393, 124, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.3e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.393, 124, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.344, 115, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.111, 1, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.282, 105, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.295, 107, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.393, 124, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.36e-08, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.321, 111, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.35, 116, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.11e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.262, 102, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.83e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.372, 120, 38]}]
{'': [0.17751479289940847, 0.17954580094497807], 'true': [-8.881784197001253e-17, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-8.881784197001253e-17, nan]}
{'': [0.03237580555397633, 0.17954580094497774], 'true': [2.6645352591003756e-16, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.02021770255628346, 0.18668033662266723], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.012221093081438202, 0.1951195657489364], 'true': [0.012221093081438202, nan], 'true,true': [0.012221093081438202, nan]}
{'': [0.010000419339771086, 0.19338882282996384], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.006742461945088091, 0.17954580094497777], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}
{'': [0.008767307404946412, 0.1899914418269447], 'true': [2.7755575615628914e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [-2.2204460492503132e-17, 0.18586608196997778], 'true': [-2.2204460492503132e-17, nan]}
{'': [2.2204460492503132e-17, 0.19775510204081645], 'true': [2.2204460492503132e-17, nan]}
{'': [1.6653345369377347e-17, 0.18266303477006823], 'true': [1.6653345369377347e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.811
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839144;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 9.06e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462843;  // std dev = 1.26e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783634;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10802835871129837;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10198838556101787;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926105;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601495;  // std dev = 3.73e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.09215176037702878;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948945;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09301944551088669;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08518475138839679;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.0851847513883969;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.23817729650232627;  // std dev = 0.074, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0854631953451897;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.07877675473109166;  // std dev = 3.80e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.2125886840172686;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.10511738226685904;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.07324622576333704;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.1721239101825733;  // std dev = 0.043, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.1410464092812629;  // std dev = 0.052, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 5.27e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.0684269778442027;  // std dev = 1.97e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.15523687242450726;  // std dev = 6.45e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.11158935874518912;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.1134738699247772;  // std dev = 0.069, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else if ( director(B), actor(A) )
%   | then return 0.1241029375207197;  // std dev = 0.052, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202623;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.06419184008202625;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14314498213428828;  // std dev = 0.394, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.468', 'seconds']
Refined model CLL: -0.066762


******************************************
Best model found
******************************************
Results 

CLL : -0.075416 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.811 

Total Inference Time : 1.021430492401123 

Total revision time: 4.726459575653076
Best scored revision CLL: -0.066762


Results 

CLL : -0.075416 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.747851921081542 

Total Inference Time : 1.021430492401123 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.379
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07157819169423552;  // std dev = 8.367, 417.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05715436613469556;  // std dev = 8.396, 428.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 4.15e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.047287456122108266;  // std dev = 8.409, 433.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.28022831773949536;  // std dev = 0.229, 121.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044263475186029494;  // std dev = 8.391, 426.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3513256832494384;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then return -0.1301782360257894;  // std dev = 2.79e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.037108290489460634;  // std dev = 8.396, 428.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.275969576159742;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1161338738169096;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04038857604417515;  // std dev = 8.350, 411.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22434681443908036;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10473411294821755;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05150109546440339;  // std dev = 8.259, 381.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18772525177404897;  // std dev = 4.71e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.09531238158533863;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02824624962256017;  // std dev = 8.342, 408.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16075996268068463;  // std dev = 9.19e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08740478719455473;  // std dev = 2.47e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01813620357074712;  // std dev = 8.372, 419.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1402344115249572;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.08067973282086062;  // std dev = 9.13e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.012282824685462435;  // std dev = 8.388, 425.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.535', 'seconds']
Parameter learned model CLL:-0.241258 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.19e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.65e-08, 36, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.367, 328, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [3.04e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.396, 339, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [4.15e-08, 0, 89], 'true,false,true,true': [0.0, 27, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.409, 344, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.229, 32, 89], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.391, 337, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [1.19e-07, 0, 89], 'true,false,true': [2.79e-08, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.396, 339, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.35, 322, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.19e-07, 0, 89], 'true,false,true,true': [0.0, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.259, 292, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [4.71e-08, 0, 89], 'true,false,true': [0.0, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.342, 319, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [9.19e-08, 0, 89], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [2.47e-08, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.372, 330, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 89], 'true,false,true': [9.13e-09, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.388, 336, 89]}]
{'': [0.20505600000000196, 0.1678772090241478], 'true': [1.5967252488991015e-16, 3.700743415417188e-17], 'true,true': [1.5967252488991015e-16, nan], 'true,false': [3.700743415417188e-17, nan], 'true,false,true': [3.700743415417188e-17, nan]}
{'': [0.11649598939861512, 0.16470324919206925], 'true': [1.037871411784416e-15, -2.413528314402514e-18], 'true,true': [1.037871411784416e-15, nan], 'true,false': [-2.413528314402514e-18, nan], 'true,false,true': [-2.413528314402514e-18, nan]}
{'': [0.07961193670501182, 0.16329491330158424], 'true': [1.7164796425665342e-15, -4.11193712824132e-18], 'true,false': [-4.11193712824132e-18, nan], 'true,false,true': [-4.11193712824132e-18, nan]}
{'': [0.05241889841987422, 0.16527254292578678], 'true': [0.05241889841987422, nan], 'true,true': [0.05241889841987422, nan]}
{'': [0.04808950352390363, 0.16470324919206814], 'true': [1.5967252488991015e-16, 2.100421938480026e-17], 'true,false': [2.100421938480026e-17, nan]}
{'': [0.03152635840060326, 0.16965326987171456], 'true': [-2.9938598416858153e-16, -1.5419764230904951e-18], 'true,false': [-1.5419764230904951e-18, nan], 'true,true': [-2.9938598416858153e-16, nan]}
{'': [0.021660282965581215, 0.1790288025020494], 'true': [1.5967252488991015e-16, -1.6326809185664067e-18], 'true,false': [-1.6326809185664067e-18, nan], 'true,false,true': [-1.6326809185664067e-18, nan]}
{'': [0.01661647922329751, 0.17055339292579733], 'true': [2.494883201404846e-17, -1.50030138462859e-18], 'true,false': [-1.50030138462859e-18, nan]}
{'': [0.012913570779262579, 0.1672922801761212], 'true': [9.480556165338415e-17, 1.6069017461679898e-17], 'true,false': [1.6069017461679898e-17, nan], 'true,false,true': [nan, 1.6069017461679898e-17]}
{'': [0.0068287624066394655, 0.16555847750864913], 'true': [-1.4969299208429077e-17, 4.625929269271485e-18], 'true,false': [4.625929269271485e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.946
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.1418510649004881;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.1254446385283913;  // std dev = 3.16e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.12544463852839183;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.11231637819360642;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.11231637819360689;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783645;  // std dev = 0.000, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.09269127618926104;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.09269127618926067;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.0851847513883968;  // std dev = 2.04e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.08518475138839682;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.08518475138839679;  // std dev = 8.43e-08, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.07877675473109146;  // std dev = 6.14e-08, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.07324622576333681;  // std dev = 1.08e-07, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06842697784420276;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.06842697784420267;  // std dev = 3.33e-08, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.0641918400820262;  // std dev = 5.27e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.606', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.946 

Total Inference Time : 1.0490403175354004 

Total revision time: 5.445470762252808
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.466863107681275 

Total Inference Time : 1.0490403175354004 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.787
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14386322081379774;  // std dev = 4.928, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09926071446772225;  // std dev = 5.018, 131.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08947052297125367;  // std dev = 5.004, 129.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.30627574551985004;  // std dev = 0.213, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13041973017474282;  // std dev = 4.816, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34541281240499183;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, A) )
%   | | then return -0.1331561524179993;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0597103576763634;  // std dev = 4.990, 127.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2719646832865062;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.11852293590645151;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03571698479578583;  // std dev = 5.037, 134.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2215524904515438;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05002872025474446;  // std dev = 4.968, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18570028192557306;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.10668912388772867;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01886639879766013;  // std dev = 5.044, 135.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15923985927796025;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09693931871560069;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05176168454306165;  // std dev = 4.920, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13905816394803927;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.08877830880181156;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07191293718263181;  // std dev = 4.816, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.758', 'seconds']
Parameter learned model CLL:-0.315009 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.928, 85, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [4.21e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.018, 97, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.004, 95, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.213, 3, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.816, 73, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [2.11e-08, 0, 11], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.99, 93, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [1.49e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.037, 100, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false': [4.968, 90, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 11], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.044, 101, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.92, 84, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [5.27e-09, 0, 11], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.816, 73, 34]}]
{'': [0.07638888888888877, 0.2040816326530615], 'true': [-1.6148698540002277e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.6148698540002277e-16, nan]}
{'': [0.09293197203688684, 0.1921799428937707], 'true': [1.6148698540002277e-16, 0.0], 'true,true': [1.6148698540002277e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.03405419274324021, 0.19409891232498125], 'true': [-2.0185873175002846e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.045370808064838855, 0.21678749235741127], 'true': [0.045370808064838855, nan], 'true,true': [0.045370808064838855, nan]}
{'': [0.01749521385423088, 0.19604439208878413], 'true': [4.0371746350005693e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.01984954305529975, 0.18935174871909108], 'true': [2.0185873175002847e-17, 0.0], 'true,true': [2.0185873175002847e-17, nan], 'true,false': [0.0, nan]}
{'': [0.0, 0.1990114464099896], 'true': [0.0, nan]}
{'': [0.0065306056316000866, 0.18842249657064386], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}
{'': [0.00501323252508349, 0.20511347313990233], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.006757444277704482, 0.21678749235741127], 'true': [2.523234146875356e-18, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.807
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0.8025933795439559;  // std dev = 0.229, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.730548383829937;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.26945161617006347;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12726751166309622;  // std dev = 0.143, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5663214446559565;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.2197955445140469;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.11213476356994183;  // std dev = 5.16e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return -0.2451453096780502;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 1.29e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.4256887116878523;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.14837044302530675;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.10144662233735086;  // std dev = 4.59e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( female(B) )
%   | | then return -0.10144662233735098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14192758135902359;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.09256591349504828;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.08977868317409866;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.32625950554671784;  // std dev = 1.12e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.16314325484802616;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694894;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.09835245877019744;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08507834693279043;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.08507834693279033;  // std dev = 3.33e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return -0.08218978521430688;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.2589541605465604;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.14207428291019816;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.18478052417359944;  // std dev = 0.083, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.0786853794597054;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return -0.0770271831153841;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.21242567481779925;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.12562129883984408;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18076591085528823;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.10628734491137708;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07316695228013914;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07316695228013922;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.07155406598927337;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17905085977970972;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.11245929403922948;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15552181498932657;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.09660534585113806;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06835758382730349;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06835758382730353;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.0670147456511855;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.15422482668260465;  // std dev = 2.63e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.1017141091808423;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13617202051425145;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.0884966338161138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06413061015798595;  // std dev = 3.73e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06413061015798595;  // std dev = 1.39e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.0623422651771327;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06274371324869922;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13516214027780823;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.09278988353631791;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.724', 'seconds']
Refined model CLL: -0.066567


******************************************
Best model found
******************************************
Results 

CLL : -0.071299 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.807 

Total Inference Time : 0.9367880821228027 

Total revision time: 4.387586730957031
Best scored revision CLL: -0.066567


Results 

CLL : -0.071299 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.4089790763854975 

Total Inference Time : 0.9367880821228027 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.75
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.061852638803215974;  // std dev = 4.186, 108.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05415529670062607;  // std dev = 4.186, 108.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04903989955813918;  // std dev = 4.181, 107.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.37512718717015664;  // std dev = 0.144, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03684690684459591;  // std dev = 4.195, 110.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3300152752482324;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then return -0.15549087196869615;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058557525913055165;  // std dev = 4.124, 97.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2615107320801657;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0163814253112978;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21422527754643908;  // std dev = 2.98e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1361479459310871;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.030528071773830996;  // std dev = 4.170, 105.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18036637302327788;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.12091355867908797;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.004508115098403612;  // std dev = 4.226, 117.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15521988773957804;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.010487713421684131;  // std dev = 4.209, 113.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13593707315675996;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.10863882145869912;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.029902490532724788;  // std dev = 4.154, 102.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.770', 'seconds']
Parameter learned model CLL:-0.223278 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [8.43e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.186, 86, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [5.96e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.186, 86, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 23], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.181, 85, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.144, 2, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.195, 88, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 23], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.124, 75, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.0, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.214, 92, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.98e-08, 0, 23], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.17, 83, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 23], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.226, 95, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 23], 'true,false': [0.0, 0, 0], 'false': [4.209, 91, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [1.05e-08, 0, 23], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.154, 80, 22]}]
{'': [0.039930555555556024, 0.1622085048010974], 'true': [3.089316242435218e-16, 0.0], 'true,true': [3.089316242435218e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [1.544658121217609e-16, 0.1622085048010975], 'true': [1.544658121217609e-16, nan], 'true,true': [1.544658121217609e-16, nan]}
{'': [0.018507961050317785, 0.16333304218709038], 'true': [-2.703151712130816e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.020660976470829304, 0.1600000000000001], 'true': [0.020660976470829304, nan], 'true,true': [0.020660976470829304, nan]}
{'': [0.017348713717327175, 0.1753640131788711], 'true': [-1.7377403863698103e-16, 0.0], 'true,false': [0.0, nan]}
{'': [-8.688701931849052e-17, 0.15574022776238844], 'true': [-8.688701931849052e-17, nan], 'true,true': [-8.688701931849052e-17, nan]}
{'': [0.009035238725730444, 0.1656235827664399], 'true': [3.8616453030440226e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.009264944097654092, 0.15267733216451188], 'true': [-1.9308226515220113e-17, 0.0], 'true,false': [0.0, nan]}
{'': [-1.9308226515220113e-17, 0.15678596601143388], 'true': [-1.9308226515220113e-17, nan]}
{'': [0.006105618946242166, 0.169165705497885], 'true': [4.827056628805028e-18, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.413
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then return 0.7748156017661786;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return -0.14185106490048766;  // std dev = 6.99e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.6518799681518065;  // std dev = 0.229, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   else if ( actor(A), director(B) )
%   | then return 0.7359812264346158;  // std dev = 1.12e-07, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.12544463852839144;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.571989056922325;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.21585770303784646;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.11231637819360624;  // std dev = 6.32e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0.4884677116800829;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43992703818418677;  // std dev = 0.068, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.5496519520805073;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10234219186988439;  // std dev = 0.069, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3269648249098545;  // std dev = 5.16e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then return 0.31244157735303363;  // std dev = 0.155, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return -0.09343246864871936;  // std dev = 0.064, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.22959975947582847;  // std dev = 0.101, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   else if ( actor(B) )
%   | then return -0.08506893917888902;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else return 0.21446723492545303;  // std dev = 0.213, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21780403236603316;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.13872969575047983;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.07867729977339384;  // std dev = 3.41e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0.20357898477325903;  // std dev = 0.159, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1829759788290276;  // std dev = 7.90e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0.16803821977614264;  // std dev = 0.162, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( actor(A) )
%   | | then return -0.07315994211052548;  // std dev = 1.29e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.09948806213850489;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.15718956127436853;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06835144686740927;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else return -0.06669381850779267;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.14162509954038804;  // std dev = 0.165, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.137468229043471;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06412519486175239;  // std dev = 7.45e-09, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( female(B) )
%   | | | then return -0.0641251948617524;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0639787219477584;  // std dev = 0.002, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.15718252659561352;  // std dev = 5.59e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.409', 'seconds']
Refined model CLL: -0.090149


******************************************
Best model found
******************************************
Results 

CLL : -0.123788 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.379505 

Recall : 1.0 

F1 : 0.550204 

Total Learning Time : 1.413 

Total Inference Time : 0.8352158069610596 

Total revision time: 3.880730522155762
Best scored revision CLL: -0.090149


Results 

CLL : -0.123788 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.379505 

Recall : 1.0 

F1 : 0.550204 

Total Learning Time : 3.9021228675842288 

Total Inference Time : 0.8352158069610596 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.857
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05020191523196246;  // std dev = 4.841, 151.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06674214756149005;  // std dev = 4.772, 135.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.053453691198801015;  // std dev = 4.786, 138.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03750403207044603;  // std dev = 4.812, 144.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3247641680322993;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then return -0.1442243549548758;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.029541239299619697;  // std dev = 4.821, 146.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.25793544573147725;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12732031576473482;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041534770886171524;  // std dev = 4.772, 135.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21170771139062705;  // std dev = 4.47e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.016634901919128243;  // std dev = 4.829, 148.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.178525411195162;  // std dev = 1.05e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.11383200642395243;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03792488491156212;  // std dev = 4.757, 132.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15382697023209882;  // std dev = 2.58e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10284415395586087;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.007149967738993347;  // std dev = 4.833, 149.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13485203205642624;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.09373509661822232;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.055124972147710144;  // std dev = 4.683, 119.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.457', 'seconds']
Parameter learned model CLL:-0.228993 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.58e-07, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.841, 122, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.772, 106, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.786, 109, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.096, 1, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.812, 115, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 27], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.821, 117, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.772, 106, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [4.47e-08, 0, 27], 'true,false': [0.0, 0, 0], 'false': [4.829, 119, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [1.05e-08, 0, 27], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.757, 103, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [2.58e-08, 0, 27], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.833, 120, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 27], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.683, 90, 29]}]
{'': [0.03443877551020513, 0.15516863295469505], 'true': [9.210739167260557e-16, 0.0], 'true,true': [9.210739167260557e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.06424978612186573, 0.16866941015089165], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.631639762074445e-16, nan]}
{'': [0.015352817878677705, 0.16598403696702316], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.009280392558716948, 0.16083140432098772], 'true': [0.009280392558716948, nan], 'true,true': [0.009280392558716948, nan]}
{'': [0.014122845033839896, 0.1591762056671051], 'true': [-1.644774851296528e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.0095300690789124, 0.16866941015089165], 'true': [-9.046261682130905e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-9.046261682130905e-17, nan]}
{'': [7.401486830834377e-17, 0.15755113221329436], 'true': [7.401486830834377e-17, nan]}
{'': [0.007692557367322561, 0.17143021120293908], 'true': [4.11193712824132e-18, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan]}
{'': [0.0022688288032928733, 0.15674969595964136], 'true': [2.4671622769447922e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.0017994974944954476, 0.1843090177247376], 'true': [-2.4671622769447922e-17, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.642
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else return 0.7936328060672536;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.12544463852839133;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.7323086016879355;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.2676913983120645;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.82e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else return 0.5680890108348504;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42243522453506577;  // std dev = 0.036, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2389325475247312;  // std dev = 0.251, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3196405868977019;  // std dev = 4.71e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 4.21e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0.28894058885476326;  // std dev = 0.149, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25444113186045936;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.0817694628966479;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 2.89e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.08518475138839683;  // std dev = 3.65e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.0851847513883969;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.22855548495286157;  // std dev = 0.150, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.18958063205158512;  // std dev = 0.072, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.22548878488611201;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.3947459114603764;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.07877675473109172;  // std dev = 2.58e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.13143828085263923;  // std dev = 0.288, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17959609703162138;  // std dev = 4.56e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.09023791318170364;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return -0.0697508582369557;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.18855138391544468;  // std dev = 1.49e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15463742219607693;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.08309865441853907;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0684269778442027;  // std dev = 1.05e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.0684269778442027;  // std dev = 1.18e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.06535861942803099;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.16137918332308984;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.34669456550990807;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1354835762269264;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.07698250308013463;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else return -0.0614776949473308;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.11403254774201745;  // std dev = 0.102, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.448', 'seconds']
Refined model CLL: -0.070724


******************************************
Best model found
******************************************
Results 

CLL : -0.104171 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.642 

Total Inference Time : 1.0016133785247803 

Total revision time: 4.441997932434082
Best scored revision CLL: -0.070724


Results 

CLL : -0.104171 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.460963653564453 

Total Inference Time : 1.0016133785247803 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.973
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09417377982000905;  // std dev = 5.388, 161.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07800145887141682;  // std dev = 5.403, 164.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0926281916979574;  // std dev = 5.314, 148.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3927940644608743;  // std dev = 0.111, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05733326375108832;  // std dev = 5.393, 162.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3261208336172218;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then return -0.1434632871129763;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.053243339425838795;  // std dev = 5.378, 159.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.25885970918667833;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12671944726397116;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05281490661317133;  // std dev = 5.350, 154.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21235912916870717;  // std dev = 2.36e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1133469033204861;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.030800465953166333;  // std dev = 5.398, 163.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17900217252305328;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.10244506213649912;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01750716899780989;  // std dev = 5.427, 169.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1541879716462057;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09340146290385888;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02726299837374977;  // std dev = 5.383, 160.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13513342010632018;  // std dev = 1.83e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.08578715106087123;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03195380784188614;  // std dev = 5.350, 154.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.476', 'seconds']
Parameter learned model CLL:-0.259583 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.388, 123, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.3e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.403, 126, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 20], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.314, 110, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.111, 1, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.393, 124, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.378, 121, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.35, 116, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.36e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.398, 125, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.427, 131, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [2.11e-08, 0, 20], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.383, 122, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [1.83e-08, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.35, 116, 38]}]
{'': [0.08264462809917356, 0.18031711739516246], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}
{'': [0.03237580555397633, 0.17801903628792365], 'true': [2.6645352591003756e-16, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.05056336575040308, 0.19083272461650858], 'true': [-2.6645352591003756e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}
{'': [0.012221093081438202, 0.17954580094497777], 'true': [0.012221093081438202, nan], 'true,true': [0.012221093081438202, nan]}
{'': [0.010000419339771086, 0.18187571694157698], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.0122868831313383, 0.18586608196997814], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}
{'': [0.004811084789108929, 0.17877978094772096], 'true': [2.7755575615628914e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.0035924057096375812, 0.17429361717026795], 'true': [-2.2204460492503132e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.0027800693016245444, 0.18109374999999991], 'true': [2.2204460492503132e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.0022134194451173895, 0.18586608196997886], 'true': [1.6653345369377347e-17, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.608
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839105;  // std dev = 8.02e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 7.60e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462843;  // std dev = 1.26e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783665;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.09269127618926089;  // std dev = 6.50e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601495;  // std dev = 2.11e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 6.14e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0787767547310918;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.07877675473109166;  // std dev = 3.94e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253542;  // std dev = 9.50e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333706;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1770964977452775;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.06842697784420268;  // std dev = 2.69e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1307658989014153;  // std dev = 0.135, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1365781312779587;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.483', 'seconds']
Refined model CLL: -0.065118


******************************************
Best model found
******************************************
Results 

CLL : -0.078666 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.608 

Total Inference Time : 1.0241360664367676 

Total revision time: 4.5789829788208
Best scored revision CLL: -0.065118


Results 

CLL : -0.078666 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.597948699951171 

Total Inference Time : 1.0241360664367676 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.388
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06805459547686979;  // std dev = 8.386, 424.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07963524991101677;  // std dev = 8.278, 387.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 4.15e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1123163781936064;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05895611645197589;  // std dev = 8.333, 405.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.28022831773949536;  // std dev = 0.229, 121.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04049923429744623;  // std dev = 8.388, 425.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3513256832494384;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then return -0.13017823602578946;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.036727097000807035;  // std dev = 8.378, 421.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.275969576159742;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.11613387381690957;  // std dev = 1.49e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039720644240296074;  // std dev = 8.333, 405.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22434681443908036;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10473411294821755;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.024929749197796905;  // std dev = 8.380, 422.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18772525177404897;  // std dev = 4.71e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.09531238158533861;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01865660318739335;  // std dev = 8.393, 427.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16075996268068463;  // std dev = 9.19e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08740478719455474;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.020259094951776583;  // std dev = 8.370, 418.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1402344115249572;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.08067973282086066;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0064423905158431435;  // std dev = 8.426, 440.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.415', 'seconds']
Parameter learned model CLL:-0.239107 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.19e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 18, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.386, 335, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [3.04e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 24, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.278, 298, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [4.15e-08, 0, 89], 'true,false,true,true': [0.0, 29, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.333, 316, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.229, 32, 89], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.388, 336, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [1.19e-07, 0, 89], 'true,false,true': [0.0, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.378, 332, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.49e-08, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.333, 316, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.19e-07, 0, 89], 'true,false,true,true': [0.0, 27, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.38, 333, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [4.71e-08, 0, 89], 'true,false,true': [0.0, 33, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.393, 338, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [9.19e-08, 0, 89], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.83e-08, 27, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.37, 329, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 89], 'true,false,true': [0.0, 33, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.426, 351, 89]}]
{'': [0.13992488426936983, 0.1658452741189037], 'true': [1.5967252488991015e-16, -3.0839528461809902e-18], 'true,true': [1.5967252488991015e-16, nan], 'true,false': [-3.0839528461809902e-18, nan], 'true,false,true': [-3.0839528461809902e-18, nan]}
{'': [0.11941902973025523, 0.17708604584393348], 'true': [1.037871411784416e-15, -4.625929269271485e-18], 'true,true': [1.037871411784416e-15, nan], 'true,false': [-4.625929269271485e-18, nan], 'true,false,true': [-4.625929269271485e-18, nan]}
{'': [0.08263506758588025, 0.1714616674287469], 'true': [1.7164796425665342e-15, -7.656710514656252e-18], 'true,false': [-7.656710514656252e-18, nan], 'true,false,true': [-7.656710514656252e-18, nan]}
{'': [0.05241889841987422, 0.16555847750865008], 'true': [0.05241889841987422, nan], 'true,true': [0.05241889841987422, nan]}
{'': [0.04442105423481667, 0.16671086261079426], 'true': [1.5967252488991015e-16, -7.162729191130042e-18], 'true,false': [-7.162729191130042e-18, nan]}
{'': [0.02945713705689081, 0.17146166742874502], 'true': [-2.9938598416858153e-16, 7.162729191130042e-18], 'true,false': [7.162729191130042e-18, nan], 'true,true': [-2.9938598416858153e-16, nan]}
{'': [0.01933940985571606, 0.1664214640282113], 'true': [1.5967252488991015e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.015807844441917226, 0.1649874677094687], 'true': [2.494883201404846e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.010998107953535913, 0.16758430438863603], 'true': [9.480556165338415e-17, 1.2335811384723961e-17], 'true,false': [1.2335811384723961e-17, nan], 'true,false,true': [nan, 1.2335811384723961e-17]}
{'': [0.009630111850866348, 0.16135847107437956], 'true': [-1.4969299208429077e-17, -3.3643121958338078e-18], 'true,false': [-3.3643121958338078e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 2.062
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.14185106490048816;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.1254446385283918;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.11231637819360686;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783626;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.10159632948783644;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.09269127618926105;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.09269127618926065;  // std dev = 2.11e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.0851847513883968;  // std dev = 1.90e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.08518475138839679;  // std dev = 8.16e-08, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07877675473109175;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.07877675473109146;  // std dev = 5.77e-08, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07324622576333704;  // std dev = 9.13e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.07324622576333689;  // std dev = 1.07e-07, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06842697784420274;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06419184008202622;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.616', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.062 

Total Inference Time : 1.0772030353546143 

Total revision time: 5.5853998184204094
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.6043655395507805 

Total Inference Time : 1.0772030353546143 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.769
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13914067063670216;  // std dev = 4.944, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09599242181853908;  // std dev = 5.031, 133.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12270278758076612;  // std dev = 4.894, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583098;  // std dev = 1.29e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07650608955486317;  // std dev = 4.990, 127.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04305454878649789;  // std dev = 5.062, 138.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.17882369111444887;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0753288176236742;  // std dev = 4.928, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.15405284869557767;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06993118423314336;  // std dev = 4.902, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.1350281111395029;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02803570968491036;  // std dev = 5.004, 129.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12001985770346632;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02922572545598348;  // std dev = 4.983, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.10791072089354646;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.021720470000370886;  // std dev = 4.990, 127.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.543', 'seconds']
Parameter learned model CLL:-0.303736 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.944, 87, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [4.21e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.031, 99, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.894, 81, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.29e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.99, 93, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false': [5.062, 104, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [2.11e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.928, 85, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.902, 82, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.004, 95, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.983, 92, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [5.27e-09, 0, 11], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.99, 93, 34]}]
{'': [-1.6148698540002277e-16, 0.20203538009698815], 'true': [-1.6148698540002277e-16, nan], 'true,true': [-1.6148698540002277e-16, nan]}
{'': [1.6148698540002277e-16, 0.19028774944880986], 'true': [1.6148698540002277e-16, nan], 'true,true': [1.6148698540002277e-16, nan]}
{'': [0.08184542893818707, 0.20824196597353392], 'true': [-2.0185873175002846e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [1.6148698540002277e-16, 0.19604439208878413], 'true': [1.6148698540002277e-16, nan], 'true,true': [1.6148698540002277e-16, nan]}
{'': [-6.055761952500853e-17, 0.18567527830287864], 'true': [-6.055761952500853e-17, nan]}
{'': [0.03171240573973664, 0.20408163265306134], 'true': [4.0371746350005693e-17, 0.0], 'true,true': [4.0371746350005693e-17, nan], 'true,false': [0.0, nan]}
{'': [0.01011069023530653, 0.20719381688466126], 'true': [-2.5232341468753557e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.012682124096878673, 0.19409891232498142], 'true': [5.046468293750712e-18, 0.0], 'true,false': [0.0, nan]}
{'': [0.005683336744514422, 0.19702695893172084], 'true': [5.046468293750712e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.009853563982866562, 0.1960443920887844], 'true': [2.523234146875356e-18, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), female(A).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.534
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.7043027812533584;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0.8295775065280829;  // std dev = 0.167, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.6661196928269761;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7252037016905742;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.27479629830942615;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12708586555895227;  // std dev = 0.149, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.6057727810112808;  // std dev = 5.16e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.3942272189887191;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5609993348825241;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.22352888605339757;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11357608874812616;  // std dev = 0.137, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.3389845743186496;  // std dev = 0.275, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( director(B), actor(A) )
%   | then return 0.42170440460194003;  // std dev = 7.88e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.10277204886981467;  // std dev = 0.127, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.2578116398362057;  // std dev = 0.272, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( actor(B) )
%   | then return -0.09234899976433214;  // std dev = 4.34e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.323554361092876;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.2597932775874496;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3158323469436091;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.44349033458871256;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B), actor(A) )
%   | then return 0.23099269283519824;  // std dev = 0.108, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return -0.08576221308870453;  // std dev = 0.086, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2518398261714933;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21550907205341832;  // std dev = 3.94e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.2542933333981279;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08125966502733807;  // std dev = 0.192, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20740094400015607;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.33838514550253784;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.07278632503465828;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1813034918398688;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.2091366730551663;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17536597782664187;  // std dev = 3.23e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.2671983084224121;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06802426678695415;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06802426678695415;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.06802426678695411;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.14642588830352668;  // std dev = 0.055, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1514298128595292;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.21821783740447753;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1376116084413038;  // std dev = 4.17e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.1989534828843412;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06383640891492932;  // std dev = 9.86e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.0638364089149293;  // std dev = 1.97e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.07492261073309787;  // std dev = 0.027, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.574', 'seconds']
Refined model CLL: -0.072226


******************************************
Best model found
******************************************
Results 

CLL : -0.077831 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.534 

Total Inference Time : 0.8211231231689453 

Total revision time: 3.916561153411865
Best scored revision CLL: -0.072226


Results 

CLL : -0.077831 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.9355268745422363 

Total Inference Time : 0.8211231231689453 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.842
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0696873966379738;  // std dev = 4.165, 104.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06304463429282636;  // std dev = 4.159, 103.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039409428703354024;  // std dev = 4.200, 111.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.37407692634337386;  // std dev = 0.147, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06036586496866785;  // std dev = 4.131, 98.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3302475348149627;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then return -0.17253393743107953;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01075920883523042;  // std dev = 4.239, 120.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2616687376460532;  // std dev = 2.11e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14927380738317905;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04588412690255815;  // std dev = 4.142, 100.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21433639742920718;  // std dev = 2.11e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1312921501792294;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03277927784089768;  // std dev = 4.159, 103.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18044752995513758;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.11702864418281304;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.012479096154295155;  // std dev = 4.200, 111.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15528122805133815;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10546709518121164;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.007076574835608714;  // std dev = 4.209, 113.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13598481270815913;  // std dev = 2.36e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.09592291107099765;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.016912826204700453;  // std dev = 4.181, 107.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.534', 'seconds']
Parameter learned model CLL:-0.22413 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [8.43e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.165, 82, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [5.96e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.159, 81, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 23], 'true,false': [0.0, 0, 0], 'false': [4.2, 89, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.147, 2, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.131, 76, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 23], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.239, 98, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [2.11e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.142, 78, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.11e-08, 0, 23], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.159, 81, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [1.49e-08, 0, 23], 'true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.2, 89, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 23], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.209, 91, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [2.36e-08, 0, 23], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.181, 85, 22]}]
{'': [0.10207100591716042, 0.1667899408284024], 'true': [3.089316242435218e-16, 0.0], 'true,true': [3.089316242435218e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [1.544658121217609e-16, 0.16797059100763492], 'true': [1.544658121217609e-16, nan], 'true,true': [1.544658121217609e-16, nan]}
{'': [-2.703151712130816e-16, 0.15891567242918592], 'true': [-2.703151712130816e-16, nan]}
{'': [0.02169754728451629, 0.17409412744689712], 'true': [0.02169754728451629, nan], 'true,true': [0.02169754728451629, nan]}
{'': [0.01860528577017483, 0.14972222222222212], 'true': [-7.723290606088045e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.012429109863191554, 0.17159999999999986], 'true': [1.9308226515220113e-17, 0.0], 'true,true': [1.9308226515220113e-17, nan], 'true,false': [0.0, nan]}
{'': [0.004770067946534909, 0.16797059100763503], 'true': [1.9308226515220113e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.012980342513611636, 0.15891567242918558], 'true': [9.654113257610057e-18, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan]}
{'': [0.002714866016627543, 0.15678596601143396], 'true': [-3.37893964016352e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.003958295756844445, 0.16333304218709074], 'true': [2.413528314402514e-17, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.388
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.28052658778904555;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12900974081024558;  // std dev = 0.217, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.11196142344170307;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0.5213279699941561;  // std dev = 0.160, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10130369933404038;  // std dev = 4.83e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( female(A) )
%   | then return 0.3958840044230538;  // std dev = 0.104, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.3928839482839489;  // std dev = 0.154, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3254421349504393;  // std dev = 3.65e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14384340225572628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.09244620553341522;  // std dev = 5.96e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0.27052618258479283;  // std dev = 0.209, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2583973783096167;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12701962434556316;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.08497672287153013;  // std dev = 5.16e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0.24305814431140887;  // std dev = 0.156, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21203333183336834;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07859809504446603;  // std dev = 3.49e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0.19652626861626618;  // std dev = 0.159, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1787637634508718;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.11358929715147498;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07309121696709493;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.07309121696709488;  // std dev = 1.29e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.07309121696709495;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.1311191296586445;  // std dev = 0.220, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.154007473260509;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.10264451305727536;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06829127862275357;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0.14242655633797466;  // std dev = 0.165, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13499274355692847;  // std dev = 1.86e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.09356822516994766;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.0640720990588826;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0.08932476763570703;  // std dev = 0.227, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.528', 'seconds']
Refined model CLL: -0.092083


******************************************
Best model found
******************************************
Results 

CLL : -0.147978 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.268955 

Recall : 1.0 

F1 : 0.423899 

Total Learning Time : 1.388 

Total Inference Time : 0.8272860050201416 

Total revision time: 3.930935125350952
Best scored revision CLL: -0.092083


Results 

CLL : -0.147978 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.268955 

Recall : 1.0 

F1 : 0.423899 

Total Learning Time : 3.9499008464813232 

Total Inference Time : 0.8272860050201416 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.823
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8073014774723939;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6951378428296128;  // std dev = 0.182, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   else return -0.1254446385283913;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5071794300146094;  // std dev = 0.249, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   else return -0.1123163781936062;  // std dev = 8.82e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3658191484667209;  // std dev = 2.142, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   else return -0.1015963294878363;  // std dev = 1.49e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3255002486608773;  // std dev = 1.390, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   else return -0.09269127618926101;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22219107928019016;  // std dev = 1.932, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   else return -0.08518475138839682;  // std dev = 5.77e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19458384793069328;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.07877675473109155;  // std dev = 6.66e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17671627126770328;  // std dev = 1.390, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   else return -0.07324622576333707;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13241037976210904;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.06842697784420264;  // std dev = 6.05e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09759708051630249;  // std dev = 1.932, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   else return -0.06419184008202626;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.528', 'seconds']
Parameter learned model CLL:-0.123209 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.687, 3, 56], 'false': [7.6e-08, 79, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.182, 2, 56], 'false': [0.0, 115, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.249, 4, 56], 'false': [8.82e-08, 118, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.142, 5, 56], 'false': [1.49e-08, 105, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.39, 2, 56], 'false': [3.33e-08, 101, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.932, 4, 56], 'false': [5.77e-08, 103, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.687, 3, 56], 'false': [6.66e-08, 116, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.39, 2, 56], 'false': [0.0, 96, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.687, 3, 56], 'false': [6.05e-08, 130, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.932, 4, 56], 'false': [0.0, 104, 0]}]
{'': [0.04826199367997677, 7.307797124114954e-17], 'true': [nan, 0.04826199367997677], 'true,false': [nan, 0.04826199367997677], 'true,false,false': [nan, 0.04826199367997677]}
{'': [0.03329369797859762, -5.792467954566034e-18], 'true': [nan, 0.03329369797859762], 'true,false': [nan, 0.03329369797859762]}
{'': [0.06222222222222215, 6.586068790149233e-17], 'true': [nan, 0.06222222222222215], 'true,false': [nan, 0.06222222222222215]}
{'': [0.07524858908895501, 2.1147105230955365e-18], 'true': [nan, 0.07524858908895501], 'true,false': [nan, 0.07524858908895501]}
{'': [0.03329369797859679, 1.0992307174506501e-17], 'true': [nan, 0.03329369797859679], 'true,false': [nan, 0.03329369797859679]}
{'': [0.06222222222222231, 3.2336592950247276e-17], 'true': [nan, 0.06222222222222231], 'true,false': [nan, 0.06222222222222231], 'true,false,false': [nan, 0.06222222222222231]}
{'': [0.0482619936799771, 3.828355257328126e-17], 'true': [nan, 0.0482619936799771], 'true,false': [nan, 0.0482619936799771]}
{'': [0.033293697978597, -8.0953762212251e-18], 'true': [nan, 0.033293697978597], 'true,false': [nan, 0.033293697978597], 'true,false,false': [nan, 0.033293697978597]}
{'': [0.04826199367997709, 2.818258447125397e-17], 'true': [nan, 0.04826199367997709], 'true,false': [nan, 0.04826199367997709], 'true,false,false': [nan, 0.04826199367997709]}
{'': [0.06222222222222225, -1.4945309946877107e-17], 'true': [nan, 0.06222222222222225], 'true,false': [nan, 0.06222222222222225], 'true,false,false': [nan, 0.06222222222222225]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 0.968
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048774;  // std dev = 4.71e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839108;  // std dev = 7.88e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360625;  // std dev = 7.60e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783638;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09269127618926089;  // std dev = 6.83e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839682;  // std dev = 5.58e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.18985878664194053;  // std dev = 0.073, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.20975771563253548;  // std dev = 3.33e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.07877675473109155;  // std dev = 6.91e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17850367703299566;  // std dev = 0.011, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09483968810805281;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333707;  // std dev = 4.71e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.14960442156418863;  // std dev = 0.238, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   else return -0.06842697784420265;  // std dev = 5.27e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13533112358677232;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09964638857135073;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202626;  // std dev = 2.24e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.453', 'seconds']
Refined model CLL: -0.064506


******************************************
Best model found
******************************************
Results 

CLL : -0.067049 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 0.968 

Total Inference Time : 0.9549522399902344 

Total revision time: 3.745564094543457
Best scored revision CLL: -0.064506


Results 

CLL : -0.067049 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.804059377670288 

Total Inference Time : 0.9549522399902344 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.833
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7369368138873914;  // std dev = 2.651, 66.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6787593598082028;  // std dev = 0.246, 62.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   else return -0.12544463852839136;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5457303848277211;  // std dev = 0.216, 61.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   else return -0.1123163781936062;  // std dev = 8.82e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.38036568947563926;  // std dev = 2.146, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   else return -0.10159632948783638;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.27402075828345596;  // std dev = 2.332, 64.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   else return -0.09269127618926096;  // std dev = 5.05e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22728808518440463;  // std dev = 2.146, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   else return -0.0851847513883968;  // std dev = 6.66e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21137175170815622;  // std dev = 1.689, 61.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   else return -0.0787767547310916;  // std dev = 5.77e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15741069966833313;  // std dev = 1.934, 62.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   else return -0.07324622576333707;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11657206281757096;  // std dev = 2.146, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   else return -0.06842697784420265;  // std dev = 4.71e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09885468212675755;  // std dev = 2.146, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   else return -0.06419184008202626;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.491', 'seconds']
Parameter learned model CLL:-0.145474 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.651, 8, 58], 'false': [8.69e-08, 104, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.246, 4, 58], 'false': [0.0, 110, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.216, 3, 58], 'false': [8.82e-08, 123, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.146, 5, 58], 'false': [0.0, 122, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.332, 6, 58], 'false': [5.05e-08, 105, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.146, 5, 58], 'false': [6.66e-08, 127, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.689, 3, 58], 'false': [5.77e-08, 103, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.934, 4, 58], 'false': [0.0, 95, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.146, 5, 58], 'false': [4.71e-08, 99, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.146, 5, 58], 'false': [0.0, 103, 0]}]
{'': [0.10651974288337872, 7.259150545626024e-17], 'true': [nan, 0.10651974288337872], 'true,false': [nan, 0.10651974288337872], 'true,false,false': [nan, 0.10651974288337872]}
{'': [0.0603537981269531, -8.074349270001138e-18], 'true': [nan, 0.0603537981269531], 'true,false': [nan, 0.0603537981269531]}
{'': [0.0467616232195637, 6.318342416565931e-17], 'true': [nan, 0.0467616232195637], 'true,false': [nan, 0.0467616232195637]}
{'': [0.07306626354245424, -2.5480528434019987e-17], 'true': [nan, 0.07306626354245424], 'true,false': [nan, 0.07306626354245424]}
{'': [0.08496093750000029, 2.4319171015598667e-17], 'true': [nan, 0.08496093750000029], 'true,false': [nan, 0.08496093750000029]}
{'': [0.07306626354245375, 3.496765431890257e-17], 'true': [nan, 0.07306626354245375], 'true,false': [nan, 0.07306626354245375], 'true,false,false': [nan, 0.07306626354245375]}
{'': [0.04676162321956472, 3.2336592950247276e-17], 'true': [nan, 0.04676162321956472], 'true,false': [nan, 0.04676162321956472]}
{'': [0.060353798126951165, -5.843279076974508e-18], 'true': [nan, 0.060353798126951165], 'true,false': [nan, 0.060353798126951165], 'true,false,false': [nan, 0.060353798126951165]}
{'': [0.07306626354245406, 2.2428747972225384e-17], 'true': [nan, 0.07306626354245406], 'true,false': [nan, 0.07306626354245406], 'true,false,false': [nan, 0.07306626354245406]}
{'': [0.073066263542454, -1.509041004344873e-17], 'true': [nan, 0.073066263542454], 'true,false': [nan, 0.073066263542454], 'true,false,false': [nan, 0.073066263542454]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.015
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048763;  // std dev = 8.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839138;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1123163781936062;  // std dev = 8.69e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783633;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926105;  // std dev = 2.11e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0851847513883968;  // std dev = 6.50e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109154;  // std dev = 7.52e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333707;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420264;  // std dev = 5.48e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06419184008202626;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.257', 'seconds']
Refined model CLL: -0.063422


******************************************
Best model found
******************************************
Results 

CLL : -0.064225 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.015 

Total Inference Time : 0.911231279373169 

Total revision time: 3.789568851470947
Best scored revision CLL: -0.063422


Results 

CLL : -0.064225 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.848064134597778 

Total Inference Time : 0.911231279373169 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.262
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6320619785777698;  // std dev = 6.344, 230.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=178 */
%   else return -0.14185106490048816;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5267205990491908;  // std dev = 0.425, 233.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=178 */
%   else return -0.12544463852839186;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.36702860872528864;  // std dev = 0.453, 250.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=178 */
%   else return -0.11231637819360638;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3036581522636966;  // std dev = 6.861, 242.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=178 */
%   else return -0.10159632948783658;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.29083947650180814;  // std dev = 5.993, 223.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=178 */
%   else return -0.09269127618926076;  // std dev = 6.99e-08, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1845489869388527;  // std dev = 6.482, 233.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=178 */
%   else return -0.08518475138839678;  // std dev = 9.19e-08, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08274895458901206;  // std dev = 7.230, 252.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=178 */
%   else return -0.07877675473109148;  // std dev = 4.94e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10508332333529226;  // std dev = 6.699, 238.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=178 */
%   else return -0.07324622576333678;  // std dev = 1.13e-07, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11072749539637419;  // std dev = 6.296, 229.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=178 */
%   else return -0.0684269778442029;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05096160806731227;  // std dev = 6.781, 240.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=178 */
%   else return -0.06419184008202625;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.445', 'seconds']
Parameter learned model CLL:-0.259976 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.344, 52, 178], 'false': [0.0, 287, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.425, 55, 178], 'false': [0.0, 314, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.453, 72, 178], 'false': [0.0, 286, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.861, 64, 178], 'false': [0.0, 293, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.993, 45, 178], 'false': [6.99e-08, 242, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.482, 55, 178], 'false': [9.19e-08, 295, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.23, 74, 178], 'false': [4.94e-08, 288, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.699, 60, 178], 'false': [1.13e-07, 292, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.296, 51, 178], 'false': [0.0, 320, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.781, 62, 178], 'false': [0.0, 321, 0]}]
{'': [0.17497164461248224, -9.903034644740072e-17], 'true': [nan, 0.17497164461248224], 'true,false': [nan, 0.17497164461248224], 'true,false,false': [nan, 0.17497164461248224]}
{'': [0.1803311904805814, -6.505765494618751e-17], 'true': [nan, 0.1803311904805814], 'true,false': [nan, 0.1803311904805814]}
{'': [0.20505599999999888, -6.211037900000876e-18], 'true': [nan, 0.20505599999999888], 'true,false': [nan, 0.20505599999999888]}
{'': [0.1945222320879694, -5.456386196109984e-17], 'true': [nan, 0.1945222320879694], 'true,false': [nan, 0.1945222320879694]}
{'': [0.16107301574533947, 2.0185873175002847e-17], 'true': [nan, 0.16107301574533947], 'true,false': [nan, 0.16107301574533947]}
{'': [0.18033119048057522, 2.86023558886481e-17], 'true': [nan, 0.18033119048057522], 'true,false': [nan, 0.18033119048057522], 'true,false,false': [nan, 0.18033119048057522]}
{'': [0.2074200050390533, 8.480870326997724e-18], 'true': [nan, 0.2074200050390533], 'true,false': [nan, 0.2074200050390533]}
{'': [0.1885460066379489, 4.3344323564132825e-17], 'true': [nan, 0.1885460066379489], 'true,false': [nan, 0.1885460066379489], 'true,false,false': [nan, 0.1885460066379489]}
{'': [0.17310882706279387, -3.7470027081099036e-17], 'true': [nan, 0.17310882706279387], 'true,false': [nan, 0.17310882706279387], 'true,false,false': [nan, 0.17310882706279387]}
{'': [0.19159722222222217, -8.300732894393693e-18], 'true': [nan, 0.19159722222222217], 'true,false': [nan, 0.19159722222222217], 'true,false,false': [nan, 0.19159722222222217]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.407
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.14185106490048816;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.12544463852839177;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360633;  // std dev = 2.36e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.11231637819360644;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783617;  // std dev = 4.71e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.10159632948783659;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.0926912761892607;  // std dev = 1.03e-07, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.08518475138839678;  // std dev = 9.88e-08, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109169;  // std dev = 3.33e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.07877675473109147;  // std dev = 5.58e-08, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.0732462257633368;  // std dev = 1.10e-07, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06842697784420274;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06419184008202626;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.273', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.407 

Total Inference Time : 0.9865827560424805 

Total revision time: 4.7303214969635015
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.7888167800903325 

Total Inference Time : 0.9865827560424805 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.798
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7765162820382877;  // std dev = 1.917, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5847072335610595;  // std dev = 0.358, 53.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   else return -0.1254446385283914;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.49032039406263433;  // std dev = 0.322, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   else return -0.11231637819360624;  // std dev = 6.50e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.40548422169367515;  // std dev = 1.917, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.10159632948783626;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2876910700563824;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.09269127618926107;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2219730475137861;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.08518475138839678;  // std dev = 3.80e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21304029787050463;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.0787767547310916;  // std dev = 5.58e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19254709695224345;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   else return -0.07324622576333707;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10225178536363781;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.06842697784420265;  // std dev = 4.41e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03531143969969973;  // std dev = 2.606, 53.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   else return -0.06419184008202625;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.644', 'seconds']
Parameter learned model CLL:-0.163377 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.917, 4, 45], 'false': [7.74e-08, 81, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.358, 8, 45], 'false': [0.0, 91, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.322, 6, 45], 'false': [6.5e-08, 86, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.917, 4, 45], 'false': [4.21e-08, 97, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.121, 5, 45], 'false': [0.0, 78, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.121, 5, 45], 'false': [3.8e-08, 93, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.677, 3, 45], 'false': [5.58e-08, 100, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.384, 2, 45], 'false': [0.0, 72, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.121, 5, 45], 'false': [4.41e-08, 92, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.606, 8, 45], 'false': [0.0, 87, 0]}]
{'': [0.07496876301541104, 7.401486830834377e-17], 'true': [nan, 0.07496876301541104], 'true,false': [nan, 0.07496876301541104], 'true,false,false': [nan, 0.07496876301541104]}
{'': [0.1281594873620503, -1.4640303621430636e-17], 'true': [nan, 0.1281594873620503], 'true,false': [nan, 0.1281594873620503]}
{'': [0.10380622837370153, 4.905636620436738e-17], 'true': [nan, 0.10380622837370153], 'true,false': [nan, 0.10380622837370153]}
{'': [0.07496876301540965, 1.8312957107219077e-17], 'true': [nan, 0.07496876301540965], 'true,false': [nan, 0.07496876301540965]}
{'': [0.09000000000000004, 0.0], 'true': [nan, 0.09000000000000004], 'true,false': [nan, 0.09000000000000004]}
{'': [0.08999999999999979, 1.5519246580781757e-17], 'true': [nan, 0.08999999999999979], 'true,false': [nan, 0.08999999999999979], 'true,false,false': [nan, 0.08999999999999979]}
{'': [0.05859375000000005, 3.1086244689504386e-17], 'true': [nan, 0.05859375000000005], 'true,false': [nan, 0.05859375000000005]}
{'': [0.04074241738343135, -2.3129646346357427e-18], 'true': [nan, 0.04074241738343135], 'true,false': [nan, 0.04074241738343135], 'true,false,false': [nan, 0.04074241738343135]}
{'': [0.09000000000000005, 2.1118372751022e-17], 'true': [nan, 0.09000000000000005], 'true,false': [nan, 0.09000000000000005], 'true,false,false': [nan, 0.09000000000000005]}
{'': [0.12815948736205054, -7.018651305101565e-18], 'true': [nan, 0.12815948736205054], 'true,false': [nan, 0.12815948736205054], 'true,false,false': [nan, 0.12815948736205054]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 0.951
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360624;  // std dev = 6.66e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783616;  // std dev = 5.37e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926108;  // std dev = 1.05e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839682;  // std dev = 4.83e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109164;  // std dev = 4.83e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333707;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06842697784420267;  // std dev = 3.94e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06419184008202626;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.354', 'seconds']
Refined model CLL: -0.063847


******************************************
Best model found
******************************************
Results 

CLL : -0.064062 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 0.951 

Total Inference Time : 0.8092482089996338 

Total revision time: 3.4834861030578614
Best scored revision CLL: -0.063847


Results 

CLL : -0.064062 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.5419813861846925 

Total Inference Time : 0.8092482089996338 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.76
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7956489350995121;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6694131893798132;  // std dev = 0.242, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.1254446385283915;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.48296035072596105;  // std dev = 0.300, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.11231637819360622;  // std dev = 7.60e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4005618015866191;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.10159632948783615;  // std dev = 5.96e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2661929299250508;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.09269127618926107;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2068734372409594;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.08518475138839679;  // std dev = 3.16e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20220599983060886;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.0787767547310916;  // std dev = 5.27e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06059179845471627;  // std dev = 2.739, 54.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else return -0.07324622576333707;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17424076027484744;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   else return -0.06842697784420268;  // std dev = 3.07e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1461146986546896;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   else return -0.06419184008202625;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.769', 'seconds']
Parameter learned model CLL:-0.133414 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.677, 3, 45], 'false': [7.74e-08, 81, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.242, 3, 45], 'false': [0.0, 77, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.3, 5, 45], 'false': [7.6e-08, 105, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.677, 3, 45], 'false': [5.96e-08, 80, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.121, 5, 45], 'false': [0.0, 85, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.121, 5, 45], 'false': [3.16e-08, 84, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.677, 3, 45], 'false': [5.27e-08, 92, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.739, 9, 45], 'false': [0.0, 87, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.384, 2, 45], 'false': [3.07e-08, 69, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.384, 2, 45], 'false': [0.0, 82, 0]}]
{'': [0.05859375000000089, 7.401486830834377e-17], 'true': [nan, 0.05859375000000089], 'true,false': [nan, 0.05859375000000089], 'true,false,false': [nan, 0.05859375000000089]}
{'': [0.05859374999999948, -2.5953265510717945e-17], 'true': [nan, 0.05859374999999948], 'true,false': [nan, 0.05859374999999948]}
{'': [0.08999999999999954, 5.4982473600483945e-17], 'true': [nan, 0.08999999999999954], 'true,false': [nan, 0.08999999999999954]}
{'': [0.05859374999999998, 4.4408920985006264e-17], 'true': [nan, 0.05859374999999998], 'true,false': [nan, 0.05859374999999998]}
{'': [0.09000000000000007, 0.0], 'true': [nan, 0.09000000000000007], 'true,false': [nan, 0.09000000000000007]}
{'': [0.09000000000000004, 1.1895246692412391e-17], 'true': [nan, 0.09000000000000004], 'true,false': [nan, 0.09000000000000004], 'true,false,false': [nan, 0.09000000000000004]}
{'': [0.05859375000000013, 3.0169103930031426e-17], 'true': [nan, 0.05859375000000013], 'true,false': [nan, 0.05859375000000013]}
{'': [0.13888888888888887, -5.742532885992189e-18], 'true': [nan, 0.13888888888888887], 'true,false': [nan, 0.13888888888888887], 'true,false,false': [nan, 0.13888888888888887]}
{'': [0.04074241738343137, 1.3676660448280915e-17], 'true': [nan, 0.04074241738343137], 'true,false': [nan, 0.04074241738343137], 'true,false,false': [nan, 0.04074241738343137]}
{'': [0.040742417383431345, -8.12358310701334e-18], 'true': [nan, 0.040742417383431345], 'true,false': [nan, 0.040742417383431345], 'true,false,false': [nan, 0.040742417383431345]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.076
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7781489350995119;  // std dev = 0.271, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6553330076073378;  // std dev = 0.271, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.12544463852839158;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5733835707738085;  // std dev = 0.118, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.43053319749304436;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360621;  // std dev = 7.45e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4311954277097652;  // std dev = 0.118, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.32649526058088585;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783621;  // std dev = 5.16e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3301190893454975;  // std dev = 0.107, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2453540340890774;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926103;  // std dev = 3.16e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26164991807158333;  // std dev = 0.093, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21089830437146043;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839678;  // std dev = 3.49e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2143644068536551;  // std dev = 0.081, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1779555017611338;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109161;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.17681464866759314;  // std dev = 0.068, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.1550224099662941;  // std dev = 0.068, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.07324622576333707;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15715615218216603;  // std dev = 0.054, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17516753829894233;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420265;  // std dev = 4.83e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13745100062735985;  // std dev = 0.049, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15128792676221103;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202625;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.284', 'seconds']
Refined model CLL: -0.067154


******************************************
Best model found
******************************************
Results 

CLL : -0.070853 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.076 

Total Inference Time : 0.7932291030883789 

Total revision time: 3.510886465072632
Best scored revision CLL: -0.067154


Results 

CLL : -0.070853 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.569381748199463 

Total Inference Time : 0.7932291030883789 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.836
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07138422921715927;  // std dev = 4.777, 136.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06893224621203278;  // std dev = 4.757, 132.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034826387904251646;  // std dev = 4.833, 149.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.39859108550288447;  // std dev = 0.098, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05027871429813865;  // std dev = 4.772, 135.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3248481317088413;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03706841291558445;  // std dev = 4.791, 139.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2579926598332139;  // std dev = 3.94e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.15859696332946588;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.006646766081253677;  // std dev = 4.866, 158.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21174804776972878;  // std dev = 4.47e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.029275439057028913;  // std dev = 4.795, 140.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17855494113361825;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.026444265696163732;  // std dev = 4.791, 139.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15384933570227283;  // std dev = 1.05e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1385600455370719;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03025583045337542;  // std dev = 4.767, 134.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13486946880557313;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.12283408392917558;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04691531817874431;  // std dev = 4.702, 122.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.483', 'seconds']
Parameter learned model CLL:-0.230545 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.58e-07, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.777, 107, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.757, 103, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.833, 120, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.098, 1, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.772, 106, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 27], 'true,false': [0.0, 0, 0], 'false': [4.791, 110, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [3.94e-08, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.866, 129, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [4.47e-08, 0, 27], 'true,false': [0.0, 0, 0], 'false': [4.795, 111, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.11e-08, 0, 27], 'true,false': [0.0, 0, 0], 'false': [4.791, 110, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [1.05e-08, 0, 27], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.767, 105, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 27], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.702, 93, 29]}]
{'': [0.03443877551020513, 0.1677660034602077], 'true': [9.210739167260557e-16, 0.0], 'true,true': [9.210739167260557e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [-2.631639762074445e-16, 0.1714302112029385], 'true': [-2.631639762074445e-16, nan], 'true,true': [-2.631639762074445e-16, nan]}
{'': [0.05208990820332878, 0.15674969595964133], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.00966764579484363, 0.1686694101508918], 'true': [0.00966764579484363, nan], 'true,true': [0.00966764579484363, nan]}
{'': [-1.644774851296528e-17, 0.16510532581129395], 'true': [-1.644774851296528e-17, nan]}
{'': [0.005976743216102397, 0.14985579234097102], 'true': [5.756711979537848e-17, 0.0], 'true,true': [5.756711979537848e-17, nan], 'true,false': [0.0, nan]}
{'': [7.401486830834377e-17, 0.16423469387755107], 'true': [7.401486830834377e-17, nan]}
{'': [1.644774851296528e-17, 0.16510532581129314], 'true': [1.644774851296528e-17, nan]}
{'': [0.005490101423051052, 0.16958119848518596], 'true': [4.11193712824132e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.007463476668000033, 0.18120128997581292], 'true': [-1.02798428206033e-17, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.947
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B), actor(A) )
%   | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.2805265877890455;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 7.88e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return 0.504857744146352;  // std dev = 0.192, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.39859108550288447;  // std dev = 0.098, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4298458537651749;  // std dev = 1.29e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( movie(C, A), movie(C, B) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1195215206222936;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.2915070906717167;  // std dev = 0.123, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926107;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.09269127618926105;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.09194300865733551;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.2802039024475152;  // std dev = 0.186, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26442653441812275;  // std dev = 6.45e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.20145946631075365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839679;  // std dev = 2.24e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.0851847513883968;  // std dev = 1.97e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08489623187952856;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08478061560120202;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.24479450354413232;  // std dev = 0.138, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21627397499990023;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.17098576858485304;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B), actor(A) )
%   | then return 0.1987701899236547;  // std dev = 0.141, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( female(B) )
%   | | | then return -0.07885802690849986;  // std dev = 1.00e-05, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1314465258309299;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.18186131545217865;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1.18e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( female(B) )
%   | | | then return -0.07331700495150732;  // std dev = 6.80e-06, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06866983992718784;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.19215085990065797;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.6073280456397018;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15634892466845637;  // std dev = 3.23e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06819004431504527;  // std dev = 0.004, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.16407086548751904;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.0671292064600823;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.45729591647919576;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13681519822790686;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then return 0.11113523270026518;  // std dev = 0.121, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419289447924618;  // std dev = 2.74e-05, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.06419452581079399;  // std dev = 4.05e-05, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06329707750919249;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07182838944645097;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.518', 'seconds']
Refined model CLL: -0.072616


******************************************
Best model found
******************************************
Results 

CLL : -0.091368 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.947 

Total Inference Time : 1.0488905906677246 

Total revision time: 4.766982324600219
Best scored revision CLL: -0.072616


Results 

CLL : -0.091368 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.789715774536132 

Total Inference Time : 1.0488905906677246 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.971
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09714264579133607;  // std dev = 5.378, 159.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10797651897143803;  // std dev = 5.295, 145.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0644305290483056;  // std dev = 5.398, 163.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3927940644608743;  // std dev = 0.111, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06882543658304369;  // std dev = 5.350, 154.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3261208336172218;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044909902919870334;  // std dev = 5.398, 163.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.25885970918667833;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1434632871129763;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.045329239323408425;  // std dev = 5.372, 158.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21235912916870717;  // std dev = 2.36e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12671944726397116;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05263750346040826;  // std dev = 5.321, 149.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17900217252305328;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.1133469033204861;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03256311180050188;  // std dev = 5.361, 156.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1541879716462057;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05300432600394922;  // std dev = 5.269, 141.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13513342010632018;  // std dev = 1.83e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.10244506213649912;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03113155806723515;  // std dev = 5.314, 148.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.437', 'seconds']
Parameter learned model CLL:-0.272884 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.378, 121, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.3e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.295, 107, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 20], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.398, 125, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.111, 1, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.35, 116, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.398, 125, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.372, 120, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.36e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.321, 111, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 20], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.361, 118, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.11e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.269, 103, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [1.83e-08, 0, 20], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.314, 110, 38]}]
{'': [0.11342155009451807, 0.18187571694157686], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}
{'': [0.03237580555397633, 0.1933888228299642], 'true': [2.6645352591003756e-16, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.05056336575040308, 0.17877978094772018], 'true': [-2.6645352591003756e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}
{'': [0.012221093081438202, 0.18586608196997803], 'true': [0.012221093081438202, nan], 'true,true': [0.012221093081438202, nan]}
{'': [-4.4408920985006264e-17, 0.17877978094772137], 'true': [-4.4408920985006264e-17, nan]}
{'': [0.007340761603244002, 0.18266303477006873], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}
{'': [0.005214253106376973, 0.1899914418269447], 'true': [2.7755575615628914e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.007063469598890189, 0.18425378040762622], 'true': [-2.2204460492503132e-17, 0.0], 'true,false': [0.0, nan]}
{'': [2.2204460492503132e-17, 0.1968713847391984], 'true': [2.2204460492503132e-17, nan]}
{'': [0.0046647549772563445, 0.19083272461650774], 'true': [1.6653345369377347e-17, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.623
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048763;  // std dev = 8.56e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then return 0.5219822959992897;  // std dev = 0.146, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return -0.11231637819360618;  // std dev = 9.54e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4228470480184741;  // std dev = 0.029, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.16093061692460245;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783638;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.28251726458041193;  // std dev = 0.117, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.3268533324261083;  // std dev = 2.98e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.15365151794420062;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926087;  // std dev = 6.83e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26146789000370274;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2593585776623543;  // std dev = 7.30e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.13471522781200607;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08518475138839682;  // std dev = 5.05e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21419514615111307;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11324396416202048;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then return 0.1960865340531496;  // std dev = 0.072, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else if ( female(B) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( female(A) )
%   | | | then return -0.0787767547310918;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07877675473109169;  // std dev = 3.33e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18034436497994927;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10236033882937143;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.07324622576333706;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0.16553067990631834;  // std dev = 0.071, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15520325260110107;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09333061015500832;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420271;  // std dev = 9.13e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.0684269778442027;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420275;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.14229637100292553;  // std dev = 0.070, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13592412584634467;  // std dev = 4.93e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08572708138283162;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else return 0.13201555207061194;  // std dev = 0.051, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.439', 'seconds']
Refined model CLL: -0.069479


******************************************
Best model found
******************************************
Results 

CLL : -0.074024 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.623 

Total Inference Time : 1.0606648921966553 

Total revision time: 4.655551094055176
Best scored revision CLL: -0.069479


Results 

CLL : -0.074024 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.678284543991089 

Total Inference Time : 1.0606648921966553 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.296
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06464545482108908;  // std dev = 8.404, 431.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05852695796370645;  // std dev = 8.393, 427.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 4.15e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360642;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0548944954438312;  // std dev = 8.372, 419.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.29328215183273737;  // std dev = 0.221, 117.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05319880918089946;  // std dev = 8.342, 408.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34835657188351027;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then return -0.13166349511190759;  // std dev = 1.83e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0587719265439268;  // std dev = 8.272, 385.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2739591032580612;  // std dev = 8.43e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.11732663447933026;  // std dev = 2.69e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02995610188262057;  // std dev = 8.380, 422.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22294489911049561;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10571099756037149;  // std dev = 2.11e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03432661177942037;  // std dev = 8.333, 405.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1867099435716324;  // std dev = 1.28e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.09612592026605414;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03464909177887526;  // std dev = 8.303, 395.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15999820212463994;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08809203274877754;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.023681524055462155;  // std dev = 8.333, 405.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1396452343989698;  // std dev = 7.30e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.08126748582425014;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.009088880872207408;  // std dev = 8.391, 426.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.426', 'seconds']
Parameter learned model CLL:-0.243428 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.19e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.83e-08, 25, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.404, 342, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [3.04e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 27, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.393, 338, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [4.15e-08, 0, 89], 'true,false,true,true': [0.0, 30, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.372, 330, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.221, 28, 89], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.342, 319, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 89], 'true,false,true': [1.83e-08, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.272, 296, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [8.43e-08, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.69e-08, 29, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.38, 333, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 89], 'true,false,true,true': [2.11e-08, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.333, 316, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [1.28e-07, 0, 89], 'true,false,true': [0.0, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.303, 306, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 89], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.333, 316, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [7.3e-08, 0, 89], 'true,false,true': [0.0, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.391, 337, 89]}]
{'': [0.17120652508464304, 0.16385570706445396], 'true': [1.5967252488991015e-16, 1.3322676295501878e-17], 'true,true': [1.5967252488991015e-16, nan], 'true,false': [1.3322676295501878e-17, nan], 'true,false,true': [1.3322676295501878e-17, nan]}
{'': [0.1274873134255226, 0.16498746770947], 'true': [1.037871411784416e-15, -4.11193712824132e-18], 'true,true': [1.037871411784416e-15, nan], 'true,false': [-4.11193712824132e-18, nan], 'true,false,true': [-4.11193712824132e-18, nan]}
{'': [0.08405387412240486, 0.1672922801761195], 'true': [1.7164796425665342e-15, -7.401486830834377e-18], 'true,false': [-7.401486830834377e-18, nan], 'true,false,true': [-7.401486830834377e-18, nan]}
{'': [0.04905631932900186, 0.17055339292579808], 'true': [0.04905631932900186, nan], 'true,true': [0.04905631932900186, nan]}
{'': [0.04482166968907018, 0.1777298026648688], 'true': [-1.995906561123877e-17, 1.0408340855860843e-17], 'true,false': [1.0408340855860843e-17, nan]}
{'': [0.02837997617098744, 0.16642146402821173], 'true': [7.983626244495507e-17, 2.488430917263282e-17], 'true,true': [7.983626244495507e-17, nan], 'true,false': [2.488430917263282e-17, nan]}
{'': [0.021604367599208443, 0.17146166742874555], 'true': [-2.993859841685815e-17, 1.3061447348531253e-17], 'true,false': [1.3061447348531253e-17, nan], 'true,false,true': [1.3061447348531253e-17, nan]}
{'': [0.014562812891741215, 0.17454895048870334], 'true': [1.8462135690395862e-16, -5.9476233462061954e-18], 'true,false': [-5.9476233462061954e-18, nan]}
{'': [0.011792572336146546, 0.17146166742874488], 'true': [-6.4866963236526e-17, -3.581364595565021e-18], 'true,false': [-3.581364595565021e-18, nan], 'true,false,true': [nan, -3.581364595565021e-18]}
{'': [0.009201503282511776, 0.16527254292578789], 'true': [5.98771968337163e-17, -9.251858538542971e-19], 'true,false': [-9.251858538542971e-19, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 2.05
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.1418510649004883;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.12544463852839188;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.11231637819360642;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.11231637819360676;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.10159632948783642;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.09269127618926105;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.09269127618926068;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.0851847513883968;  // std dev = 1.97e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.0851847513883968;  // std dev = 2.04e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.08518475138839678;  // std dev = 8.69e-08, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07877675473109179;  // std dev = 5.27e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.07877675473109146;  // std dev = 6.32e-08, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07324622576333704;  // std dev = 9.13e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.07324622576333681;  // std dev = 1.04e-07, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.06842697784420278;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.389', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.05 

Total Inference Time : 1.11726713180542 

Total revision time: 5.518232151031494
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.540965600967407 

Total Inference Time : 1.11726713180542 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.8
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1301489350995121;  // std dev = 4.975, 125.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15637077804478883;  // std dev = 4.827, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09826493714600737;  // std dev = 4.952, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.37336108729565015;  // std dev = 0.146, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08792057153354776;  // std dev = 4.936, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3304058862662665;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, A) )
%   | | then return -0.15525910036101478;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04993479203857163;  // std dev = 5.018, 131.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2617764575610382;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13596759172318867;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04556594404448281;  // std dev = 5.004, 129.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21441214637651254;  // std dev = 1.83e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12076971393169579;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05055518356506194;  // std dev = 4.960, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.180502848782506;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.10852169234520052;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06341609474077582;  // std dev = 4.885, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15532303618205887;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09846011746612782;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05446959394674101;  // std dev = 4.875, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13601734881713323;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.09005915727385598;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04421577452458438;  // std dev = 4.875, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.560', 'seconds']
Parameter learned model CLL:-0.322168 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.975, 91, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [4.21e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.827, 74, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.952, 88, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.146, 1, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.936, 86, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [2.11e-08, 0, 11], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.018, 97, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [1.05e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.004, 95, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.83e-08, 0, 11], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.96, 89, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [1.05e-08, 0, 11], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.885, 80, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.875, 79, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.875, 79, 34]}]
{'': [0.16836734693877523, 0.19801600000000022], 'true': [-1.6148698540002277e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.6148698540002277e-16, nan]}
{'': [1.6148698540002277e-16, 0.21570644718792872], 'true': [1.6148698540002277e-16, nan], 'true,true': [1.6148698540002277e-16, nan]}
{'': [0.035406534183216966, 0.2010212308519224], 'true': [-2.0185873175002846e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.021443872771279016, 0.20305555555555546], 'true': [0.021443872771279016, nan], 'true,true': [0.021443872771279016, nan]}
{'': [0.01801788383050314, 0.192179942893771], 'true': [4.0371746350005693e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.020594125634924833, 0.19409891232498042], 'true': [1.0092936587501423e-17, 0.0], 'true,true': [1.0092936587501423e-17, nan], 'true,false': [0.0, nan]}
{'': [0.008582053293586018, 0.20001321964439148], 'true': [3.027880976250427e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.014064597537472886, 0.20929516774392032], 'true': [1.0092936587501423e-17, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan]}
{'': [0.004919894304387576, 0.21035319915420156], 'true': [5.046468293750712e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.008605353867388782, 0.21035319915420175], 'true': [5.046468293750712e-18, -1.1564823173178713e-18], 'true,false': [-1.1564823173178713e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.789
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7194734122109548;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462844;  // std dev = 7.30e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.11231637819360625;  // std dev = 6.32e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 8.33e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601495;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926097;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926107;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694894;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.21015788621407205;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.24544775702783567;  // std dev = 0.057, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07877675473109172;  // std dev = 2.58e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.21137419037209257;  // std dev = 9.13e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.10636204476233979;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17828120033049397;  // std dev = 6.97e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.0966674539543849;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.09438907029842628;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367094;  // std dev = 1.86e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.17738994825678508;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.14018692501202307;  // std dev = 0.055, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420268;  // std dev = 2.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.06684774215806723;  // std dev = 0.000597, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.1529664333256577;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13628385630479514;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.10053497400869606;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202622;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06419184008202625;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.06302660165251561;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06262422034023477;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.635', 'seconds']
Refined model CLL: -0.066708


******************************************
Best model found
******************************************
Results 

CLL : -0.069475 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.789 

Total Inference Time : 0.947272777557373 

Total revision time: 4.3711047306060795
Best scored revision CLL: -0.066708


Results 

CLL : -0.069475 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.393838180541993 

Total Inference Time : 0.947272777557373 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.817
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09219148829100161;  // std dev = 4.105, 94.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04124208752476081;  // std dev = 4.209, 113.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04295236167223891;  // std dev = 4.190, 109.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3759847910666182;  // std dev = 0.141, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03899665401116818;  // std dev = 4.186, 108.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32982568222329456;  // std dev = 6.66e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then return -0.1414100905718629;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043449694946394106;  // std dev = 4.159, 103.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26138174445833157;  // std dev = 4.47e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12509549023882466;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039320686804998915;  // std dev = 4.154, 102.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21413455622607624;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11203381953402372;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.006150207889727199;  // std dev = 4.258, 125.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18030010809778318;  // std dev = 3.33e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.10136339596257318;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.013454472930936262;  // std dev = 4.209, 113.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15516979909607143;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09249620872995108;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.013187708869438477;  // std dev = 4.205, 112.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13589808781648322;  // std dev = 2.47e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.08501917452502958;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.014777166193523896;  // std dev = 4.195, 110.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.568', 'seconds']
Parameter learned model CLL:-0.219608 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [8.43e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.105, 72, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.96e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.209, 91, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 23], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.19, 87, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.141, 2, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.186, 86, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [6.66e-08, 0, 23], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.159, 81, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [4.47e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.154, 80, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 23], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.258, 103, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [3.33e-08, 0, 23], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.209, 91, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [1.05e-08, 0, 23], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.205, 90, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [2.47e-08, 0, 23], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.195, 88, 22]}]
{'': [0.07360000000000064, 0.17926663648709826], 'true': [3.089316242435218e-16, 0.0], 'true,true': [3.089316242435218e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.05254204731743713, 0.15678596601143385], 'true': [1.544658121217609e-16, 0.0], 'true,true': [1.544658121217609e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.032810905124541455, 0.16109755071121937], 'true': [-2.703151712130816e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.019833367540004313, 0.16220850480109733], 'true': [0.019833367540004313, nan], 'true,true': [0.019833367540004313, nan]}
{'': [0.008867105090143454, 0.16797059100763503], 'true': [1.9308226515220113e-16, 0.0], 'true,false': [0.0, nan]}
{'': [0.005964213572223524, 0.16916570549788545], 'true': [8.688701931849052e-17, 0.0], 'true,true': [8.688701931849052e-17, nan], 'true,false': [0.0, nan]}
{'': [0.007829995567864251, 0.145024], 'true': [-1.9308226515220113e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.005839006652639536, 0.15678596601143377], 'true': [4.827056628805028e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.0024492784426163733, 0.15784438775510207], 'true': [4.827056628805028e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.0019487882750187462, 0.15999999999999978], 'true': [2.6548811458427657e-17, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.377
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then return 0.7748156017661786;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.6526478931012826;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return -0.12544463852839144;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6.83e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.59207174501605;  // std dev = 7.88e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.4079282549839498;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783619;  // std dev = 5.48e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.43111544058202156;  // std dev = 0.093, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.243345262003224;  // std dev = 0.174, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.31775585861580075;  // std dev = 4.71e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.08143875296659299;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.09269127618926101;  // std dev = 3.33e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0.34284292295448204;  // std dev = 6.32e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25315417459588824;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.07555057136461049;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 4.83e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.2702225780985759;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.33604549027314684;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20833115772326355;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.07044022290955498;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), director(B) )
%   | then return 0.17983945599093018;  // std dev = 0.134, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return -0.07861014400657337;  // std dev = 0.016, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1760494759527482;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0732575363061185;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0.14990152235199014;  // std dev = 0.136, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15194912186824822;  // std dev = 5.89e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.06596516768523118;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06843687807534725;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06843687807534725;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(B) )
%   | | | then return -0.06843687807534725;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06843687807534725;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0.1688980545661072;  // std dev = 4.17e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13338628556659843;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.06201532618938017;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06420057499196608;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.06420057499196608;  // std dev = 5.27e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.06420057499196608;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.12389873113521296;  // std dev = 0.106, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.438', 'seconds']
Refined model CLL: -0.074177


******************************************
Best model found
******************************************
Results 

CLL : -0.090362 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.377 

Total Inference Time : 0.8619463443756104 

Total revision time: 3.92443155670166
Best scored revision CLL: -0.074177


Results 

CLL : -0.090362 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.947165006637573 

Total Inference Time : 0.8619463443756104 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.903
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06094613789671497;  // std dev = 4.808, 143.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07537305004659828;  // std dev = 4.741, 129.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04495684181443171;  // std dev = 4.804, 142.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.36560259279369534;  // std dev = 0.156, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03324921150922789;  // std dev = 4.821, 146.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33212461167390767;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then return -0.14015424060778736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044793295275311985;  // std dev = 4.772, 135.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2629453184048567;  // std dev = 3.65e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1241000551672304;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08720013175377896;  // std dev = 4.621, 110.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21523374137961682;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1112274860858553;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03361055925626965;  // std dev = 4.747, 130.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18110260466804895;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.10069815373358948;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.001264102751724478;  // std dev = 4.829, 148.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15577614878036883;  // std dev = 1.05e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09193873442049472;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.018355187359376475;  // std dev = 4.777, 136.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13636986511615892;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.006449144087430265;  // std dev = 4.804, 142.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.523', 'seconds']
Parameter learned model CLL:-0.230898 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.58e-07, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.808, 114, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.741, 100, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.804, 113, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.156, 3, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.821, 117, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [2.98e-08, 0, 27], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.772, 106, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [3.65e-08, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.621, 81, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.747, 101, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 27], 'true,false,true': [1.86e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.829, 119, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [1.05e-08, 0, 27], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.86e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.777, 107, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [2.36e-08, 0, 27], 'true,false': [0.0, 0, 0], 'false': [4.804, 113, 29]}]
{'': [0.06420927467300945, 0.16167049733483313], 'true': [9.210739167260557e-16, 0.0], 'true,true': [9.210739167260557e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.045838135164232366, 0.174268373294874], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.631639762074445e-16, nan]}
{'': [0.015352817878677705, 0.16251735766712996], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.024252759220113815, 0.1591762056671044], 'true': [0.024252759220113815, nan], 'true,true': [0.024252759220113815, nan]}
{'': [0.01432170626976911, 0.16866941015089215], 'true': [3.289549702593056e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.00515907050063273, 0.19413223140495856], 'true': [4.9343245538895844e-17, 0.0], 'true,true': [4.9343245538895844e-17, nan], 'true,false': [0.0, nan]}
{'': [0.01585441979081597, 0.17331360946745553], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.007147050069216436, 0.1575511322132935], 'true': [-5.3455182667137164e-17, 1.1564823173178713e-18], 'true,false': [1.1564823173178713e-18, nan]}
{'': [0.005522639702329587, 0.16776600346020765], 'true': [4.11193712824132e-18, 1.1564823173178713e-18], 'true,false': [1.1564823173178713e-18, nan], 'true,false,true': [nan, 1.1564823173178713e-18]}
{'': [2.05596856412066e-17, 0.16251735766712994], 'true': [2.05596856412066e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.531
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 4.71e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.12544463852839105;  // std dev = 8.02e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.7261516513800753;  // std dev = 2.36e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.2738483486199243;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.561938412619705;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.2228676198837307;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.1123163781936062;  // std dev = 9.42e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else return -0.1491667920903145;  // std dev = 0.128, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then return -0.10159632948783665;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return -0.0982818617145999;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.42240565772420696;  // std dev = 4.21e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.09269127618926096;  // std dev = 4.71e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else return -0.089909179163027;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.32403027790482836;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.17019911685414155;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.08518475138839682;  // std dev = 5.67e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else return -0.08281852870623722;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.2574352956293496;  // std dev = 3.94e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.1474910939928037;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07877675473109161;  // std dev = 5.27e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else return -0.07674111485134513;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1893390445706877;  // std dev = 0.084, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), director(B) )
%   | then return 0.15994440993579967;  // std dev = 0.082, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333707;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return -0.09426288062347353;  // std dev = 0.039, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06842697784420265;  // std dev = 4.34e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else return -0.06546850995323177;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.158950143357072;  // std dev = 2.98e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.12677724401328924;  // std dev = 0.038, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13883373878496436;  // std dev = 1.49e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.19882197365390683;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return -0.08358438030867181;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.384', 'seconds']
Refined model CLL: -0.066842


******************************************
Best model found
******************************************
Results 

CLL : -0.084221 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.531 

Total Inference Time : 1.0167791843414307 

Total revision time: 4.477574571609497
Best scored revision CLL: -0.066842


Results 

CLL : -0.084221 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.496510013580322 

Total Inference Time : 1.0167791843414307 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.833
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09127776945534034;  // std dev = 5.398, 163.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08717680732421627;  // std dev = 5.372, 158.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08016944262050064;  // std dev = 5.356, 155.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.049855139477381266;  // std dev = 5.423, 168.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.048013749858783386;  // std dev = 5.403, 164.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.17882369111444893;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05258690077194595;  // std dev = 5.361, 156.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.15405284869557767;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.015428371225226516;  // std dev = 5.463, 177.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04501923740663099;  // std dev = 5.350, 154.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1350281111395029;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928480769535627;  // std dev = 5.344, 153.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.12001985770346632;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271417749644541;  // std dev = 5.344, 153.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.415', 'seconds']
Parameter learned model CLL:-0.261205 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.398, 125, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [7.3e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.372, 120, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.356, 117, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.423, 130, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.11e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.403, 126, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [1.49e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.361, 118, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.463, 139, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.35, 116, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.344, 115, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.344, 115, 38]}]
{'': [0.04535147392290242, 0.17877978094772123], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}
{'': [2.6645352591003756e-16, 0.18266303477006898], 'true': [2.6645352591003756e-16, nan], 'true,true': [2.6645352591003756e-16, nan]}
{'': [-2.6645352591003756e-16, 0.1850572320499474], 'true': [-2.6645352591003756e-16, nan]}
{'': [1.3322676295501878e-16, 0.17502834467120165], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}
{'': [2.2204460492503132e-17, 0.17801903628792348], 'true': [2.2204460492503132e-17, nan]}
{'': [0.015566319872247386, 0.1842537804076266], 'true': [1.1102230246251566e-17, 0.0], 'true,true': [1.1102230246251566e-17, nan], 'true,false': [0.0, nan]}
{'': [0.015012263899819293, 0.1685977848000255], 'true': [-2.7755575615628914e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [-2.2204460492503132e-17, 0.18586608196997817], 'true': [-2.2204460492503132e-17, nan]}
{'': [0.003755678289176334, 0.18668033662266648], 'true': [-3.3306690738754695e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.002926515178248503, 0.18668033662266567], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), female(A).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.545
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( director(B), actor(A) )
%   | then return 0.832507909458486;  // std dev = 0.158, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return -0.14185106490048785;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.12544463852839105;  // std dev = 8.16e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else return 0.6989783104778774;  // std dev = 0.158, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), director(B) )
%   | then return 0.5167280038189506;  // std dev = 0.218, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return -0.11331298496975824;  // std dev = 0.111, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.1015054007983019;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return 0.38826308820437677;  // std dev = 0.218, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.2831297450374759;  // std dev = 0.119, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else if ( actor(B) )
%   | then return -0.09261513711346386;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else return 0.29604328135720054;  // std dev = 0.218, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2623805494389356;  // std dev = 2.98e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11940479739755018;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.08512012905620465;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0.2824136206883468;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( actor(B) )
%   | | then return -0.08512012905620467;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else return -0.7175863793116536;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21483684410213538;  // std dev = 2.36e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10740909858779045;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.07872126186245272;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.22882916325325908;  // std dev = 2.58e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.5535276452002951;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1808129304129537;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09753729372456427;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.07319808378929914;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0.19096324444799895;  // std dev = 4.47e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( actor(B) )
%   | | then return -0.07319808378929904;  // std dev = 3.73e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return -0.41615118985324545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15555733854737777;  // std dev = 2.69e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08928228814902607;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B), actor(A) )
%   | then return 0.15079998622056534;  // std dev = 0.076, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return -0.06851590828478776;  // std dev = 0.018, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13619965776452764;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06414678862612291;  // std dev = 3.65e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.12736369422128335;  // std dev = 0.100, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.29897091807295706;  // std dev = 0.244, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.405', 'seconds']
Refined model CLL: -0.07372


******************************************
Best model found
******************************************
Results 

CLL : -0.08435 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.545 

Total Inference Time : 1.0012762546539307 

Total revision time: 4.336610534667969
Best scored revision CLL: -0.07372


Results 

CLL : -0.08435 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.355545976638794 

Total Inference Time : 1.0012762546539307 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.311
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0479143935216862;  // std dev = 8.492, 469.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06113585264504069;  // std dev = 8.391, 426.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 4.15e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.049418145338284834;  // std dev = 8.411, 434.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2740197868902705;  // std dev = 0.232, 123.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.055347147896856456;  // std dev = 8.345, 409.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.35274188494476544;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then return -0.12947684519319191;  // std dev = 2.69e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.050375635723888215;  // std dev = 8.330, 404.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2769281605452643;  // std dev = 1.15e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.11556977746056547;  // std dev = 1.05e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03835099351868092;  // std dev = 8.356, 413.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22501464970632637;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1042715337964988;  // std dev = 1.29e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.027596905867167017;  // std dev = 8.383, 423.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18820848117638891;  // std dev = 8.94e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.09492674028410593;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.023936720404706197;  // std dev = 8.380, 422.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16112222914908206;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08707871419928873;  // std dev = 1.83e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.026443543241506696;  // std dev = 8.347, 410.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1405144144515753;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.08040064406028376;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034048761437912245;  // std dev = 8.285, 389.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.454', 'seconds']
Parameter learned model CLL:-0.242266 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.19e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.16e-08, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.492, 380, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [3.04e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 35, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.391, 337, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [4.15e-08, 0, 89], 'true,false,true,true': [0.0, 27, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.411, 345, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.232, 34, 89], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.345, 320, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 89], 'true,false,true': [2.69e-08, 25, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.33, 315, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [1.15e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.05e-08, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.356, 324, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 89], 'true,false,true,true': [1.29e-08, 29, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.383, 334, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [8.94e-08, 0, 89], 'true,false,true': [0.0, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.38, 333, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 89], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.83e-08, 34, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.347, 321, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 89], 'true,false,true': [0.0, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.285, 300, 89]}]
{'': [0.19732598763773374, 0.1537545292119969], 'true': [1.5967252488991015e-16, 3.027880976250427e-17], 'true,true': [1.5967252488991015e-16, nan], 'true,false': [3.027880976250427e-17, nan], 'true,false,true': [3.027880976250427e-17, nan]}
{'': [0.14462516170194062, 0.16527254292578636], 'true': [1.037871411784416e-15, 6.3441315692866086e-18], 'true,true': [1.037871411784416e-15, nan], 'true,false': [6.3441315692866086e-18, nan], 'true,false,true': [6.3441315692866086e-18, nan]}
{'': [0.07961193670501182, 0.16301577863194908], 'true': [1.7164796425665342e-15, -4.11193712824132e-18], 'true,false': [-4.11193712824132e-18, nan], 'true,false,true': [-4.11193712824132e-18, nan]}
{'': [0.053898582854168466, 0.17025244947124946], 'true': [0.053898582854168466, nan], 'true,true': [0.053898582854168466, nan]}
{'': [0.03981149282266028, 0.17176624840701793], 'true': [-3.3930411539105907e-16, 2.886579864025407e-17], 'true,false': [2.886579864025407e-17, nan]}
{'': [0.0323028559233628, 0.16905768340085273], 'true': [1.4969299208429077e-16, 2.921639538487254e-18], 'true,true': [1.4969299208429077e-16, nan], 'true,false': [2.921639538487254e-18, nan]}
{'': [0.020098840653328977, 0.16613293541013455], 'true': [-1.29733926473052e-16, 5.742532885992189e-18], 'true,false': [5.742532885992189e-18, nan], 'true,false,true': [5.742532885992189e-18, nan]}
{'': [0.014593656194729849, 0.16642146402821253], 'true': [8.981579525057446e-17, -3.96508223080413e-18], 'true,false': [-3.96508223080413e-18, nan]}
{'': [0.012321556034920798, 0.16995240928019084], 'true': [-1.2474416007024232e-16, 9.79608551139844e-18], 'true,false': [9.79608551139844e-18, nan], 'true,false,true': [nan, 9.79608551139844e-18]}
{'': [0.009201698073327156, 0.17644609803001624], 'true': [-4.989766402809692e-18, -6.47630097698008e-18], 'true,false': [-6.47630097698008e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 2.046
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.14185106490048813;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.12544463852839188;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.11231637819360642;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.11231637819360683;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783623;  // std dev = 3.80e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.10159632948783655;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.09269127618926065;  // std dev = 2.11e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.08518475138839682;  // std dev = 1.75e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.0851847513883968;  // std dev = 2.24e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.08518475138839678;  // std dev = 8.43e-08, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07877675473109179;  // std dev = 5.27e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.07877675473109146;  // std dev = 6.32e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07324622576333704;  // std dev = 9.13e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.07324622576333681;  // std dev = 1.01e-07, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(B) )
%   | then return -0.06842697784420289;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return -0.06842697784420268;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06842697784420267;  // std dev = 1.39e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06419184008202622;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.412', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.046 

Total Inference Time : 1.0308771133422852 

Total revision time: 5.4629880256652825
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.481923467636108 

Total Inference Time : 1.0308771133422852 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.777
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13683745968967603;  // std dev = 4.952, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11485562818291291;  // std dev = 4.968, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06580381458545762;  // std dev = 5.080, 141.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3742544246877977;  // std dev = 0.143, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0805753611373255;  // std dev = 4.997, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33020827618629595;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, A) )
%   | | then return -0.14120013144997537;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09308790362202082;  // std dev = 4.911, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2616420308604503;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12492918165010843;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03369576475819207;  // std dev = 5.062, 138.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21431761629415688;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11189918151343174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0431605172681152;  // std dev = 5.011, 130.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1804338136494131;  // std dev = 1.29e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.10125237067045781;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07773698204564797;  // std dev = 4.866, 112.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1552708613301869;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09240320795172403;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.028002250484271247;  // std dev = 4.990, 127.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13597674481413113;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.08494021621935953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.018711027013170334;  // std dev = 5.004, 129.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.643', 'seconds']
Parameter learned model CLL:-0.30139 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.952, 88, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [4.21e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.968, 90, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.08, 107, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.143, 1, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.997, 94, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [2.11e-08, 0, 11], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.911, 83, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.062, 104, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.011, 96, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [1.29e-08, 0, 11], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.866, 78, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.99, 93, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [5.27e-09, 0, 11], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.004, 95, 34]}]
{'': [0.07638888888888877, 0.20102123085192172], 'true': [-1.6148698540002277e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.6148698540002277e-16, nan]}
{'': [0.09293197203688684, 0.19901144640998944], 'true': [1.6148698540002277e-16, 0.0], 'true,true': [1.6148698540002277e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.03405419274324021, 0.18298878326039927], 'true': [-2.0185873175002846e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.020584903659047322, 0.19506835937500006], 'true': [0.020584903659047322, nan], 'true,true': [0.020584903659047322, nan]}
{'': [0.016975588574248746, 0.20615092409964123], 'true': [4.0371746350005693e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.011415349484449416, 0.18567527830287744], 'true': [-4.0371746350005693e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-4.0371746350005693e-17, nan]}
{'': [0.008129106881181963, 0.19313609467455628], 'true': [-4.0371746350005693e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.006061237297247034, 0.2114158163265317], 'true': [1.5139404881252134e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.007985406988654067, 0.19604439208878416], 'true': [-1.0092936587501423e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.0037281065305208444, 0.19409891232498108], 'true': [2.523234146875356e-18, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.971
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.14185106490048766;  // std dev = 8.02e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.12544463852839152;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109548;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462844;  // std dev = 1.29e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360636;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11231637819360632;  // std dev = 2.79e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10500323077934415;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783631;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783628;  // std dev = 2.69e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 8.33e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.11437062330532359;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601495;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.09240515445806413;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926105;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694894;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.08518475138839679;  // std dev = 1.83e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return -0.08518475138839687;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.25517224256948956;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.0850025895466588;  // std dev = 0.000210, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.10328694584685147;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253542;  // std dev = 9.13e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.07856376017127302;  // std dev = 9.31e-10, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.07877675473109173;  // std dev = 2.24e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877939886656002;  // std dev = 1.18e-05, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.09410503071637251;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return -0.07324610610538451;  // std dev = 2.07e-07, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1770964977452775;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.07306142222082682;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367094;  // std dev = 1.86e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.08638328835360935;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B), actor(A) )
%   | then return 0.1404655775614504;  // std dev = 0.051, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06842697784420267;  // std dev = 2.69e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.08935942662886161;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.07980494573573853;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202619;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.06419184008202625;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.06294568755067356;  // std dev = 5.46e-08, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.13543832791123045;  // std dev = 4.93e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.07775968962373701;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.662', 'seconds']
Refined model CLL: -0.064993


******************************************
Best model found
******************************************
Results 

CLL : -0.066938 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.971 

Total Inference Time : 0.9318280220031738 

Total revision time: 4.519617412567139
Best scored revision CLL: -0.064993


Results 

CLL : -0.066938 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.538552854537964 

Total Inference Time : 0.9318280220031738 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.787
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05113139123986312;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035143376970563106;  // std dev = 4.239, 120.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04030129600250533;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3759847910666182;  // std dev = 0.141, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.028472464928643346;  // std dev = 4.231, 118.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32982568222329456;  // std dev = 6.66e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04381503599306482;  // std dev = 4.181, 107.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26138174445833157;  // std dev = 4.47e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1414100905718629;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03401202004061184;  // std dev = 4.190, 109.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21413455622607624;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12509549023882463;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 6.016308451681528E-4;  // std dev = 4.265, 127.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18030010809778318;  // std dev = 3.33e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.11203381953402373;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04950956071768199;  // std dev = 4.137, 99.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15516979909607143;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0219331037755797;  // std dev = 4.190, 109.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13589808781648322;  // std dev = 2.47e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.1013633959625732;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04841849404646271;  // std dev = 4.112, 95.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.607', 'seconds']
Parameter learned model CLL:-0.223339 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [8.43e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.214, 92, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.96e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.239, 98, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 23], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.214, 92, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.141, 2, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.231, 96, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [6.66e-08, 0, 23], 'true,false': [0.0, 0, 0], 'false': [4.181, 85, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [4.47e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.19, 87, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 23], 'true,false,true,true': [5.27e-09, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.265, 105, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [3.33e-08, 0, 23], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.137, 77, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.05e-08, 0, 23], 'true,false': [0.0, 0, 0], 'false': [4.19, 87, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [2.47e-08, 0, 23], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.112, 73, 22]}]
{'': [0.07360000000000064, 0.15574022776238847], 'true': [3.089316242435218e-16, 0.0], 'true,true': [3.089316242435218e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.05254204731743713, 0.14972222222222217], 'true': [1.544658121217609e-16, 0.0], 'true,true': [1.544658121217609e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.032810905124541455, 0.155740227762388], 'true': [-2.703151712130816e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.019833367540004313, 0.151680551565642], 'true': [0.019833367540004313, nan], 'true,true': [0.019833367540004313, nan]}
{'': [1.9308226515220113e-16, 0.16333304218709066], 'true': [1.9308226515220113e-16, nan]}
{'': [0.011940956910210633, 0.16109755071121962], 'true': [8.688701931849052e-17, 0.0], 'true,true': [8.688701931849052e-17, nan], 'true,false': [0.0, nan]}
{'': [0.018883031356232913, 0.14322028644057283], 'true': [-1.9308226515220113e-17, 4.625929269271485e-18], 'true,false': [4.625929269271485e-18, nan], 'true,false,true': [4.625929269271485e-18, nan]}
{'': [0.008722898878520837, 0.17283950617283947], 'true': [4.827056628805028e-17, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan]}
{'': [4.827056628805028e-18, 0.16109755071121962], 'true': [4.827056628805028e-18, nan]}
{'': [0.005745884328798422, 0.1779501385041551], 'true': [2.6548811458427657e-17, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.782
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7281643902400936;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.27183560975990667;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.1254446385283915;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.1742416289388965;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5639392428942601;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.2214623188268743;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 7.45e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.4239022884859749;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.18563485395501947;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 1.49e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( female(B) )
%   | | then return -0.10072270259705832;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.13587140762375807;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.2874471409367235;  // std dev = 0.113, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   else if ( director(B), actor(A) )
%   | then return 0.3039924898260031;  // std dev = 0.099, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926105;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return -0.12425331802639283;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2615458312346571;  // std dev = 9.13e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12287484034588021;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1.97e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.08518475138839679;  // std dev = 1.97e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.07834954498996564;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08085011744042464;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.26217990636776717;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.2041964857101103;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21424996259555976;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.11023349692977862;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), director(B) )
%   | then return 0.21469580406050073;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.07877675473109176;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.08848769708306085;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18038440258557123;  // std dev = 5.89e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.0998770213977368;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return -0.06918481585143829;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.1639004935984203;  // std dev = 0.079, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.13551484568259353;  // std dev = 0.067, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.15769952999894155;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.23399843123253375;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420274;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.06842697784420275;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.08956233398034553;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13828062267736546;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.10312691686247794;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.058168994197808285;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.13786406170602428;  // std dev = 1.86e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.19468224058344716;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.606', 'seconds']
Refined model CLL: -0.067456


******************************************
Best model found
******************************************
Results 

CLL : -0.075436 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.782 

Total Inference Time : 0.9005515575408936 

Total revision time: 4.389163249969482
Best scored revision CLL: -0.067456


Results 

CLL : -0.075436 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.408098691940308 

Total Inference Time : 0.9005515575408936 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.87
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7331489350995126;  // std dev = 2.646, 64.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=56 */
%   else return -0.14185106490048763;  // std dev = 8.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7095148557241311;  // std dev = 0.182, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   else return -0.12544463852839127;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5539126941969883;  // std dev = 0.182, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   else return -0.11231637819360624;  // std dev = 7.88e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3843468564806928;  // std dev = 1.932, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   else return -0.10159632948783631;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3078727028559682;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.09269127618926087;  // std dev = 6.83e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24051088645807572;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.0851847513883968;  // std dev = 6.32e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.24428902704615713;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.07877675473109158;  // std dev = 6.14e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.120072273468072;  // std dev = 2.142, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   else return -0.07324622576333707;  // std dev = 4.47e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11670511755894525;  // std dev = 1.932, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   else return -0.06842697784420265;  // std dev = 5.48e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11568932781777866;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.06419184008202626;  // std dev = 2.11e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.467', 'seconds']
Parameter learned model CLL:-0.12325 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.646, 8, 56], 'false': [8.94e-08, 99, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.182, 2, 56], 'false': [0.0, 124, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.182, 2, 56], 'false': [7.88e-08, 111, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.932, 4, 56], 'false': [0.0, 106, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.687, 3, 56], 'false': [6.83e-08, 119, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.687, 3, 56], 'false': [6.32e-08, 119, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 56], 'false': [6.14e-08, 105, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.142, 5, 56], 'false': [4.47e-08, 105, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.932, 4, 56], 'false': [5.48e-08, 112, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.687, 3, 56], 'false': [2.11e-08, 97, 0]}]
{'': [0.10937499999999967, 8.074349270001139e-17], 'true': [nan, 0.10937499999999967], 'true,false': [nan, 0.10937499999999967], 'true,false,false': [nan, 0.10937499999999967]}
{'': [0.033293697978596146, 0.0], 'true': [nan, 0.033293697978596146], 'true,false': [nan, 0.033293697978596146]}
{'': [0.03329369797859664, 5.601125169280069e-17], 'true': [nan, 0.03329369797859664], 'true,false': [nan, 0.03329369797859664]}
{'': [0.06222222222222188, 0.0], 'true': [nan, 0.06222222222222188], 'true,false': [nan, 0.06222222222222188]}
{'': [0.04826199367997695, 3.918434204559376e-17], 'true': [nan, 0.04826199367997695], 'true,false': [nan, 0.04826199367997695]}
{'': [0.04826199367997685, 3.358657889622322e-17], 'true': [nan, 0.04826199367997685], 'true,false': [nan, 0.04826199367997685], 'true,false,false': [nan, 0.04826199367997685]}
{'': [-1.3481279584734043e-16, 3.595007889262412e-17], 'true': [nan, -1.3481279584734043e-16], 'true,false': [nan, -1.3481279584734043e-16]}
{'': [0.07524858908895463, 1.9032394707859827e-17], 'true': [nan, 0.07524858908895463], 'true,false': [nan, 0.07524858908895463], 'true,false,false': [nan, 0.07524858908895463]}
{'': [0.062222222222222304, 2.676430505792788e-17], 'true': [nan, 0.062222222222222304], 'true,false': [nan, 0.062222222222222304], 'true,false,false': [nan, 0.062222222222222304]}
{'': [0.04826199367997697, 4.578239276804769e-18], 'true': [nan, 0.04826199367997697], 'true,false': [nan, 0.04826199367997697], 'true,false,false': [nan, 0.04826199367997697]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 0.952
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1254446385283913;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360624;  // std dev = 7.30e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1015963294878363;  // std dev = 1.49e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3059474498976706;  // std dev = 0.077, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3069317430485025;  // std dev = 0.074, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.09269127618926093;  // std dev = 5.48e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2578909301127837;  // std dev = 0.000704, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1218249294400807;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839682;  // std dev = 5.58e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21167632829957278;  // std dev = 0.000614, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10944432872590683;  // std dev = 0.000111, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0787767547310916;  // std dev = 5.77e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17363106716208998;  // std dev = 0.275, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   else return -0.07324622576333707;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15444465879655472;  // std dev = 0.000481, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1158421713963737;  // std dev = 0.000123, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06842697784420265;  // std dev = 4.71e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13533342317586733;  // std dev = 0.000431, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10449495324439186;  // std dev = 0.000113, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.248', 'seconds']
Refined model CLL: -0.064659


******************************************
Best model found
******************************************
Results 

CLL : -0.067449 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 0.952 

Total Inference Time : 0.8773031234741211 

Total revision time: 3.6792919368743897
Best scored revision CLL: -0.064659


Results 

CLL : -0.067449 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.7341785163879395 

Total Inference Time : 0.8773031234741211 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.857
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7643989350995126;  // std dev = 2.332, 64.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7046670038912076;  // std dev = 0.180, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   else return -0.12544463852839133;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5174705018701737;  // std dev = 0.246, 62.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   else return -0.11231637819360621;  // std dev = 8.43e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3889845146521493;  // std dev = 1.934, 62.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   else return -0.10159632948783635;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23875175041667163;  // std dev = 2.651, 66.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   else return -0.09269127618926107;  // std dev = 1.49e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18576863487532008;  // std dev = 2.651, 66.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   else return -0.08518475138839678;  // std dev = 5.05e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10951300349696406;  // std dev = 3.041, 69.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=58 */
%   else return -0.07877675473109157;  // std dev = 6.32e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11362562368454047;  // std dev = 2.791, 67.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=58 */
%   else return -0.07324622576333707;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10616519826846002;  // std dev = 2.651, 66.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   else return -0.06842697784420265;  // std dev = 5.00e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1299026236567449;  // std dev = 2.146, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   else return -0.06419184008202625;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.822', 'seconds']
Parameter learned model CLL:-0.139524 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.332, 6, 58], 'false': [8.69e-08, 97, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.18, 2, 58], 'false': [0.0, 109, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.246, 4, 58], 'false': [8.43e-08, 116, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.934, 4, 58], 'false': [0.0, 119, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.651, 8, 58], 'false': [1.49e-08, 91, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.651, 8, 58], 'false': [5.05e-08, 116, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.041, 11, 58], 'false': [6.32e-08, 113, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.791, 9, 58], 'false': [0.0, 110, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.651, 8, 58], 'false': [5e-08, 104, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.146, 5, 58], 'false': [0.0, 114, 0]}]
{'': [0.08496093749999956, 7.783006770568107e-17], 'true': [nan, 0.08496093749999956], 'true,false': [nan, 0.08496093749999956], 'true,false,false': [nan, 0.08496093749999956]}
{'': [0.03222222222222057, -8.148425868808489e-18], 'true': [nan, 0.03222222222222057], 'true,false': [nan, 0.03222222222222057]}
{'': [0.06035379812695092, 6.125368411725002e-17], 'true': [nan, 0.06035379812695092], 'true,false': [nan, 0.06035379812695092]}
{'': [0.06035379812695161, -1.4927368398321432e-17], 'true': [nan, 0.06035379812695161], 'true,false': [nan, 0.06035379812695161]}
{'': [0.10651974288337929, 2.4400506035717728e-18], 'true': [nan, 0.10651974288337929], 'true,false': [nan, 0.10651974288337929]}
{'': [0.10651974288337945, 2.2013042729636725e-17], 'true': [nan, 0.10651974288337945], 'true,false': [nan, 0.10651974288337945], 'true,false,false': [nan, 0.10651974288337945]}
{'': [0.13400546103759717, 3.53699370677041e-17], 'true': [nan, 0.13400546103759717], 'true,false': [nan, 0.13400546103759717]}
{'': [0.11628425038984201, -5.046468293750712e-18], 'true': [nan, 0.11628425038984201], 'true,false': [nan, 0.11628425038984201], 'true,false,false': [nan, 0.11628425038984201]}
{'': [0.1065197428833792, 2.4019248128909638e-17], 'true': [nan, 0.1065197428833792], 'true,false': [nan, 0.1065197428833792], 'true,false,false': [nan, 0.1065197428833792]}
{'': [0.07306626354245395, -1.3147377923192643e-17], 'true': [nan, 0.07306626354245395], 'true,false': [nan, 0.07306626354245395], 'true,false,false': [nan, 0.07306626354245395]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 0.944
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839108;  // std dev = 7.74e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360624;  // std dev = 7.88e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783667;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926097;  // std dev = 4.59e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839678;  // std dev = 5.05e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109158;  // std dev = 5.77e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324622576333707;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.14221191352520066;  // std dev = 0.047, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.14707281101834074;  // std dev = 0.035, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.06842697784420264;  // std dev = 5.48e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1348621910143218;  // std dev = 0.002, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07841826432257874;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.396', 'seconds']
Refined model CLL: -0.064053


******************************************
Best model found
******************************************
Results 

CLL : -0.065322 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 0.944 

Total Inference Time : 0.9677209854125977 

Total revision time: 3.7504731426239015
Best scored revision CLL: -0.064053


Results 

CLL : -0.065322 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.8053597221374513 

Total Inference Time : 0.9677209854125977 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.295
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6029188095764964;  // std dev = 6.740, 239.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=178 */
%   else return -0.14185106490048802;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5035423266685556;  // std dev = 0.441, 242.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=178 */
%   else return -0.12544463852839188;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4115235761708507;  // std dev = 0.436, 239.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=178 */
%   else return -0.11231637819360636;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.35074198352076896;  // std dev = 6.248, 228.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=178 */
%   else return -0.10159632948783659;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.24027189426777917;  // std dev = 6.571, 235.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=178 */
%   else return -0.09269127618926071;  // std dev = 9.66e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1186716904404657;  // std dev = 7.364, 256.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=178 */
%   else return -0.08518475138839678;  // std dev = 9.19e-08, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13945265851598795;  // std dev = 6.740, 239.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=178 */
%   else return -0.07877675473109148;  // std dev = 3.94e-08, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10667083078518338;  // std dev = 6.740, 239.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=178 */
%   else return -0.07324622576333682;  // std dev = 1.03e-07, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04964787342349223;  // std dev = 7.160, 250.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=178 */
%   else return -0.0684269778442027;  // std dev = 5.77e-08, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08408236880485809;  // std dev = 6.571, 235.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=178 */
%   else return -0.06419184008202627;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.445', 'seconds']
Parameter learned model CLL:-0.255428 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.74, 61, 178], 'false': [0.0, 304, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.441, 64, 178], 'false': [0.0, 289, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.436, 61, 178], 'false': [0.0, 272, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.248, 50, 178], 'false': [0.0, 304, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.571, 57, 178], 'false': [9.66e-08, 288, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.364, 78, 178], 'false': [9.19e-08, 280, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.74, 61, 178], 'false': [3.94e-08, 316, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.74, 61, 178], 'false': [1.03e-07, 295, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.16, 72, 178], 'false': [5.77e-08, 281, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.571, 57, 178], 'false': [0.0, 285, 0]}]
{'': [0.19008770854852555, -4.674623261579606e-17], 'true': [nan, 0.19008770854852555], 'true,false': [nan, 0.19008770854852555], 'true,false,false': [nan, 0.19008770854852555]}
{'': [0.19452223208796887, -6.76121980394559e-17], 'true': [nan, 0.19452223208796887], 'true,false': [nan, 0.19452223208796887]}
{'': [0.19008770854851728, -4.89804275569922e-18], 'true': [nan, 0.19008770854851728], 'true,false': [nan, 0.19008770854851728]}
{'': [0.17120652508464168, -5.40503314620142e-17], 'true': [nan, 0.17120652508464168], 'true,false': [nan, 0.17120652508464168]}
{'': [0.1837211407876857, 3.23815048849004e-17], 'true': [nan, 0.1837211407876857], 'true,false': [nan, 0.1837211407876857]}
{'': [0.2118530273437498, 3.013462495411139e-17], 'true': [nan, 0.2118530273437498], 'true,false': [nan, 0.2118530273437498], 'true,false,false': [nan, 0.2118530273437498]}
{'': [0.19008770854851917, 4.918709602769681e-18], 'true': [nan, 0.19008770854851917], 'true,false': [nan, 0.19008770854851917]}
{'': [0.1900877085485197, 3.612929164881865e-17], 'true': [nan, 0.1900877085485197], 'true,false': [nan, 0.1900877085485197], 'true,false,false': [nan, 0.1900877085485197]}
{'': [0.20505600000000032, 1.1852914853649358e-17], 'true': [nan, 0.20505600000000032], 'true,false': [nan, 0.20505600000000032], 'true,false,false': [nan, 0.20505600000000032]}
{'': [0.18372114078768653, -1.1686558153949016e-17], 'true': [nan, 0.18372114078768653], 'true,false': [nan, 0.18372114078768653], 'true,false,false': [nan, 0.18372114078768653]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.523
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.1418510649004879;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.12544463852839186;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1123163781936063;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.11231637819360638;  // std dev = 8.94e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783617;  // std dev = 5.05e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.10159632948783658;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.09269127618926071;  // std dev = 9.42e-08, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.08518475138839678;  // std dev = 9.66e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109172;  // std dev = 2.58e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07877675473109148;  // std dev = 6.32e-08, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07324622576333684;  // std dev = 9.77e-08, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420275;  // std dev = 1.49e-08, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return -0.06419184008202626;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.232', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.523 

Total Inference Time : 0.9556541442871094 

Total revision time: 4.904397171020507
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.959283750534057 

Total Inference Time : 0.9556541442871094 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.754
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7405018762759829;  // std dev = 2.301, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6609619713518622;  // std dev = 0.274, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4983359042365926;  // std dev = 0.300, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.11231637819360628;  // std dev = 5.16e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3574236910342549;  // std dev = 2.301, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   else return -0.10159632948783623;  // std dev = 4.83e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19121613528144493;  // std dev = 2.973, 56.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   else return -0.09269127618926108;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22569420209571658;  // std dev = 2.301, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   else return -0.08518475138839679;  // std dev = 1.83e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17674781810774484;  // std dev = 2.301, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   else return -0.07877675473109165;  // std dev = 4.15e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14140878684482538;  // std dev = 2.301, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   else return -0.07324622576333704;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08190615625609254;  // std dev = 2.606, 53.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   else return -0.06842697784420267;  // std dev = 3.65e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10089266097796815;  // std dev = 2.301, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   else return -0.06419184008202625;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.568', 'seconds']
Parameter learned model CLL:-0.157502 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.301, 6, 45], 'false': [8.16e-08, 87, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.274, 4, 45], 'false': [0.0, 104, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.3, 5, 45], 'false': [5.16e-08, 76, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.301, 6, 45], 'false': [4.83e-08, 92, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.973, 11, 45], 'false': [0.0, 90, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.301, 6, 45], 'false': [1.83e-08, 71, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.301, 6, 45], 'false': [4.15e-08, 79, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.301, 6, 45], 'false': [0.0, 88, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.606, 8, 45], 'false': [3.65e-08, 81, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.301, 6, 45], 'false': [0.0, 93, 0]}]
{'': [0.10380622837370317, 7.656710514656253e-17], 'true': [nan, 0.10380622837370317], 'true,false': [nan, 0.10380622837370317], 'true,false,false': [nan, 0.10380622837370317]}
{'': [0.0749687630154103, -8.540177112501205e-18], 'true': [nan, 0.0749687630154103], 'true,false': [nan, 0.0749687630154103]}
{'': [0.09000000000000036, 3.5059674461847047e-17], 'true': [nan, 0.09000000000000036], 'true,false': [nan, 0.09000000000000036]}
{'': [0.10380622837370236, 2.5342047301226398e-17], 'true': [nan, 0.10380622837370236], 'true,false': [nan, 0.10380622837370236]}
{'': [0.1578443877551021, 0.0], 'true': [nan, 0.1578443877551021], 'true,false': [nan, 0.1578443877551021]}
{'': [0.1038062283737024, 4.6910832026415064e-18], 'true': [nan, 0.1038062283737024], 'true,false': [nan, 0.1038062283737024], 'true,false,false': [nan, 0.1038062283737024]}
{'': [0.10380622837370232, 2.178285681226573e-17], 'true': [nan, 0.10380622837370232], 'true,false': [nan, 0.10380622837370232]}
{'': [0.10380622837370236, -5.046468293750712e-18], 'true': [nan, 0.10380622837370236], 'true,false': [nan, 0.10380622837370236], 'true,false,false': [nan, 0.10380622837370236]}
{'': [0.12815948736205052, 1.644774851296528e-17], 'true': [nan, 0.12815948736205052], 'true,false': [nan, 0.12815948736205052], 'true,false,false': [nan, 0.12815948736205052]}
{'': [0.10380622837370243, -8.953411488912552e-18], 'true': [nan, 0.10380622837370243], 'true,false': [nan, 0.10380622837370243], 'true,false,false': [nan, 0.10380622837370243]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 0.993
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6725335205032132;  // std dev = 0.194, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.12544463852839147;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5640998419850812;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21937409961582466;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360624;  // std dev = 7.15e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4240364826145079;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18948521611373453;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783624;  // std dev = 4.71e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3251461643698348;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15944501553924853;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926107;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.21857817505763477;  // std dev = 0.109, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.26038568001305884;  // std dev = 6.32e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return -0.08518475138839679;  // std dev = 2.36e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21322341512514786;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17155197212816947;  // std dev = 0.000729, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109166;  // std dev = 3.87e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17963430501978708;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14832992404765324;  // std dev = 0.000581, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15466634173594804;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13062940700076667;  // std dev = 0.000476, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420267;  // std dev = 3.73e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.13505228348668705;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.12165442679084285;  // std dev = 0.058, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.06419184008202625;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.311', 'seconds']
Refined model CLL: -0.068469


******************************************
Best model found
******************************************
Results 

CLL : -0.069921 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 0.993 

Total Inference Time : 0.7618653774261475 

Total revision time: 3.3772242279052733
Best scored revision CLL: -0.068469


Results 

CLL : -0.069921 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.432110807418823 

Total Inference Time : 0.7618653774261475 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.768
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7765162820382877;  // std dev = 1.917, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6180035709639452;  // std dev = 0.322, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   else return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5183709562668524;  // std dev = 0.274, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.11231637819360624;  // std dev = 6.66e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4500681023954862;  // std dev = 0.989, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   else return -0.10159632948783624;  // std dev = 4.83e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2628631014633134;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.09269127618926107;  // std dev = 1.05e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18688214873915102;  // std dev = 2.301, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   else return -0.08518475138839678;  // std dev = 3.65e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13183559089392516;  // std dev = 2.461, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   else return -0.07877675473109164;  // std dev = 4.47e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1414878322486356;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.07324622576333704;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15402594218520546;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.06842697784420267;  // std dev = 3.65e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12903705970560528;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.06419184008202625;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.775', 'seconds']
Parameter learned model CLL:-0.132366 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.917, 4, 45], 'false': [8.16e-08, 111, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.322, 6, 45], 'false': [0.0, 85, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.274, 4, 45], 'false': [6.66e-08, 86, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.989, 1, 45], 'false': [4.83e-08, 93, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.121, 5, 45], 'false': [1.05e-08, 84, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.301, 6, 45], 'false': [3.65e-08, 90, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.461, 7, 45], 'false': [4.47e-08, 81, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.121, 5, 45], 'false': [0.0, 79, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.677, 3, 45], 'false': [3.65e-08, 81, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.677, 3, 45], 'false': [0.0, 83, 0]}]
{'': [0.07496876301541104, 6.00120553851436e-17], 'true': [nan, 0.07496876301541104], 'true,false': [nan, 0.07496876301541104], 'true,false,false': [nan, 0.07496876301541104]}
{'': [0.10380622837370213, -2.0898315757650005e-17], 'true': [nan, 0.10380622837370213], 'true,false': [nan, 0.10380622837370213]}
{'': [0.07496876301540988, 5.163828021512356e-17], 'true': [nan, 0.07496876301540988], 'true,false': [nan, 0.07496876301540988]}
{'': [0.021266540642721682, 2.5069552168955147e-17], 'true': [nan, 0.021266540642721682], 'true,false': [nan, 0.021266540642721682]}
{'': [0.09000000000000025, 1.32169407693471e-18], 'true': [nan, 0.09000000000000025], 'true,false': [nan, 0.09000000000000025]}
{'': [0.10380622837370246, 1.4802973661668754e-17], 'true': [nan, 0.10380622837370246], 'true,false': [nan, 0.10380622837370246], 'true,false,false': [nan, 0.10380622837370246]}
{'': [0.11649408284023668, 2.4671622769447922e-17], 'true': [nan, 0.11649408284023668], 'true,false': [nan, 0.11649408284023668]}
{'': [0.09000000000000005, -2.8106912015826747e-18], 'true': [nan, 0.09000000000000005], 'true,false': [nan, 0.09000000000000005], 'true,false,false': [nan, 0.09000000000000005]}
{'': [0.05859375000000002, 1.644774851296528e-17], 'true': [nan, 0.05859375000000002], 'true,false': [nan, 0.05859375000000002], 'true,false,false': [nan, 0.05859375000000002]}
{'': [0.05859375, -8.69451766272713e-18], 'true': [nan, 0.05859375], 'true,false': [nan, 0.05859375], 'true,false,false': [nan, 0.05859375]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.014
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7279810357883602;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.27212259933653193;  // std dev = 0.000321, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1254446385283915;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5637566143049693;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22149095518769635;  // std dev = 0.000271, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360624;  // std dev = 7.30e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4237655664118664;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1855871440786501;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783627;  // std dev = 4.21e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3247591777254914;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.2847972860045047;  // std dev = 0.134, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return -0.09269127618926107;  // std dev = 1.05e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26188034410018;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20648707257047744;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839678;  // std dev = 3.33e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.19492477303230682;  // std dev = 0.077, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.20121694319356356;  // std dev = 0.079, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.07877675473109161;  // std dev = 5.05e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1830073717693935;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20020671900406206;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333707;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15721429742069004;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17512551774036225;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420265;  // std dev = 4.21e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.12348578873425643;  // std dev = 0.057, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.13963916993190412;  // std dev = 2.36e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.06419184008202626;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.350', 'seconds']
Refined model CLL: -0.068551


******************************************
Best model found
******************************************
Results 

CLL : -0.073584 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.014 

Total Inference Time : 0.8117809295654297 

Total revision time: 3.505254919052124
Best scored revision CLL: -0.068551


Results 

CLL : -0.073584 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.560141498565674 

Total Inference Time : 0.8117809295654297 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.952
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09585385313229904;  // std dev = 4.702, 122.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.030788845869101533;  // std dev = 4.862, 157.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06339696918520052;  // std dev = 4.752, 131.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.38171290045857575;  // std dev = 0.132, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06175233563864326;  // std dev = 4.731, 127.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32856077336742767;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then return -0.14210698865591895;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01670774022797974;  // std dev = 4.841, 151.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26052099116724386;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12564717869758854;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.023614602419938277;  // std dev = 4.812, 144.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21352895729827073;  // std dev = 1.49e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11248022758137223;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035165559850967726;  // std dev = 4.767, 134.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1798576222272459;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.10173135887630036;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05313989633793621;  // std dev = 4.696, 121.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15483523714685482;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.024969565856142364;  // std dev = 4.757, 132.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13563762771303992;  // std dev = 2.58e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.09280432384330832;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02440420726895973;  // std dev = 4.747, 130.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.448', 'seconds']
Parameter learned model CLL:-0.235327 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.58e-07, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.702, 93, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.862, 128, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.752, 102, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.132, 2, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.731, 98, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 27], 'true,false,true': [3.73e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.841, 122, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.812, 115, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.49e-08, 0, 27], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.767, 105, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [2.98e-08, 0, 27], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.696, 92, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 27], 'true,false': [0.0, 0, 0], 'false': [4.757, 103, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [2.58e-08, 0, 27], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.747, 101, 29]}]
{'': [0.06420927467300945, 0.1812012899758131], 'true': [9.210739167260557e-16, 0.0], 'true,true': [9.210739167260557e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.06424978612186573, 0.1505943445981581], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.631639762074445e-16, nan]}
{'': [0.040122030722944874, 0.17236757764699062], 'true': [-2.631639762074445e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}
{'': [0.01730280087047356, 0.17620435240870488], 'true': [0.01730280087047356, nan], 'true,true': [0.01730280087047356, nan]}
{'': [0.01993753279872584, 0.15516863295469585], 'true': [-1.644774851296528e-17, 4.625929269271485e-18], 'true,false': [4.625929269271485e-18, nan]}
{'': [0.009575263011301646, 0.16083140432098764], 'true': [-4.11193712824132e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-4.11193712824132e-17, nan]}
{'': [0.006824289400473274, 0.169581198485186], 'true': [8.22387425648264e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.002730731588687787, 0.18222798989140132], 'true': [3.289549702593056e-17, 0.0], 'true,false': [0.0, nan]}
{'': [-1.2335811384723961e-17, 0.1714302112029385], 'true': [-1.2335811384723961e-17, nan]}
{'': [0.0017972124760632507, 0.17331360946745594], 'true': [2.4671622769447922e-17, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.784
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then return 0.6649625702277709;  // std dev = 0.208, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return -0.12544463852839136;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.56e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5687832324637001;  // std dev = 4.21e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.21808033608040392;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.4275400672938141;  // std dev = 7.45e-09, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.15431087132274451;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.10947042072839791;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926107;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.09269127618926105;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.3275174548456175;  // std dev = 1.24e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.16120632366321172;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.09924584059969585;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1.83e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.0851847513883968;  // std dev = 1.97e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.2464644407185466;  // std dev = 0.072, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.27e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.09071975583173468;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.20233021381940292;  // std dev = 0.070, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.08350899107611255;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07324622576333704;  // std dev = 9.13e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.18306071339869265;  // std dev = 4.56e-09, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.20396554765654137;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.15274385809367083;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1572534231732021;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.172836413971145;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420271;  // std dev = 7.45e-09, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.06842697784420271;  // std dev = 1.05e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.07205857602356576;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.08896298961148191;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13751781146897593;  // std dev = 4.56e-09, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.14950441039227172;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202625;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.06419184008202625;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( female(B) )
%   | | | then return -0.06397403041048824;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06824381906188634;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.512', 'seconds']
Refined model CLL: -0.066126


******************************************
Best model found
******************************************
Results 

CLL : -0.080374 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.784 

Total Inference Time : 1.029601812362671 

Total revision time: 4.736904560089111
Best scored revision CLL: -0.066126


Results 

CLL : -0.080374 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.75970023727417 

Total Inference Time : 1.029601812362671 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.851
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08569384527915282;  // std dev = 5.418, 167.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11128286736943895;  // std dev = 5.289, 144.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05337073975424315;  // std dev = 5.441, 172.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.39228358595107576;  // std dev = 0.113, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09436708934863725;  // std dev = 5.269, 141.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32623302941176646;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then return -0.15775707696566316;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.059176551701953135;  // std dev = 5.344, 153.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.25893612760569085;  // std dev = 4.47e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13790871368190924;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07494699966027693;  // std dev = 5.255, 139.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2124129700535978;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12231609145224058;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.014227023602619336;  // std dev = 5.427, 169.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17904156473825955;  // std dev = 1.83e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.10977963454452178;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03216108926181598;  // std dev = 5.356, 155.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15421779072187217;  // std dev = 2.24e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03321447657247141;  // std dev = 5.333, 151.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13515665743734712;  // std dev = 2.24e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.09950169222318588;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.024201332480098196;  // std dev = 5.344, 153.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.427', 'seconds']
Parameter learned model CLL:-0.269565 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.418, 129, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.3e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.289, 106, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.441, 134, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.113, 1, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.269, 103, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 20], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.344, 115, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [4.47e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.255, 101, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 20], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.427, 131, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [1.83e-08, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.356, 117, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.24e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.333, 113, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [2.24e-08, 0, 20], 'true,false,true': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.344, 115, 38]}]
{'': [0.08264462809917356, 0.17576822403098014], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}
{'': [0.114221841994428, 0.19425154320987642], 'true': [2.6645352591003756e-16, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [-2.6645352591003756e-16, 0.17212006489994558], 'true': [-2.6645352591003756e-16, nan]}
{'': [0.01273105619074085, 0.1968713847391981], 'true': [0.01273105619074085, nan], 'true,true': [0.01273105619074085, nan]}
{'': [0.019359208518283877, 0.1866803366226662], 'true': [-1.1102230246251565e-16, 0.0], 'true,false': [0.0, nan]}
{'': [0.00714221442433482, 0.1986439625278194], 'true': [9.992007221626409e-17, 0.0], 'true,true': [9.992007221626409e-17, nan], 'true,false': [0.0, nan]}
{'': [0.012708152508496672, 0.17429361717026717], 'true': [-5.551115123125783e-17, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}
{'': [0.003783114973022422, 0.1850572320499487], 'true': [1.6653345369377347e-17, 0.0], 'true,false': [0.0, nan]}
{'': [2.4980018054066023e-17, 0.18832507346169033], 'true': [2.4980018054066023e-17, nan]}
{'': [0.006245505602881492, 0.18668033662266686], 'true': [2.4980018054066023e-17, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.979
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0.8081489350995117;  // std dev = 0.218, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.12544463852839147;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.1254446385283915;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( female(B) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.7294533872440251;  // std dev = 2.11e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.2705466127559745;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5652256024671088;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.22056142151042593;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.4248663194264567;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.1849808808345686;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.10159632948783624;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12244246732451938;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601496;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10651612115095914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.092691276189261;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else return -0.09182211161567448;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.32570091344679447;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.15991745464284965;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948945;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09679553694835169;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 1.58e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.08518475138839679;  // std dev = 1.67e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.0844466667266651;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.25857367050219154;  // std dev = 8.33e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.13849371156087792;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21215757441865946;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.12278134997064437;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.07877675473109165;  // std dev = 4.15e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return -0.08353505749335285;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 9.13e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( female(B) )
%   | | | then return -0.07303261584082957;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07163385670106232;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1788546891492313;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.11015758083923909;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.1527438580936708;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.06842697784420267;  // std dev = 2.89e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return -0.06742250616250024;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.1540763182989817;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.09981425855449753;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10179843742923589;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06419184008202623;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(B) )
%   | | | then return -0.06418754310925662;  // std dev = 0.000114, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06417284844594275;  // std dev = 0.001, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.13504640358978326;  // std dev = 4.17e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.09119716672555751;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.551', 'seconds']
Refined model CLL: -0.06637


******************************************
Best model found
******************************************
Results 

CLL : -0.081516 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.979 

Total Inference Time : 1.0831310749053955 

Total revision time: 4.8946443367004395
Best scored revision CLL: -0.06637


Results 

CLL : -0.081516 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.917440013885498 

Total Inference Time : 1.0831310749053955 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.298
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06855082635246625;  // std dev = 8.383, 423.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1254446385283915;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05705689906036729;  // std dev = 8.399, 429.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 4.15e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360642;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05610285486480038;  // std dev = 8.364, 416.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.29668627667170777;  // std dev = 0.219, 116.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04850139245229604;  // std dev = 8.364, 416.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.347584220450849;  // std dev = 1.58e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then return -0.13205317086645388;  // std dev = 1.83e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03094973480990374;  // std dev = 8.421, 438.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27343594054398235;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.11763917442189037;  // std dev = 2.11e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04413945612402737;  // std dev = 8.327, 403.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2225798158182903;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10596669798681423;  // std dev = 2.47e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03707952468734472;  // std dev = 8.330, 404.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.186445334690008;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.09633867097360715;  // std dev = 1.05e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03478637508036614;  // std dev = 8.313, 398.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15979953721570134;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08827161564786491;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.019724455053685714;  // std dev = 8.364, 416.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13949148999256714;  // std dev = 7.45e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.08142096641211559;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.013577168257214658;  // std dev = 8.380, 422.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.586', 'seconds']
Parameter learned model CLL:-0.241688 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.19e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.34e-08, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.383, 334, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [3.04e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.399, 340, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [4.15e-08, 0, 89], 'true,false,true,true': [0.0, 36, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.364, 327, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.219, 27, 89], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.364, 327, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [1.58e-07, 0, 89], 'true,false,true': [1.83e-08, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.421, 349, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.11e-08, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.327, 314, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 89], 'true,false,true,true': [2.47e-08, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.33, 315, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 89], 'true,false,true': [1.05e-08, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.313, 309, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [9.42e-08, 0, 89], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.364, 327, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [7.45e-08, 0, 89], 'true,false,true': [0.0, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.38, 333, 89]}]
{'': [0.21591715976331563, 0.16613293541013496], 'true': [1.5967252488991015e-16, 4.603363760640893e-17], 'true,true': [1.5967252488991015e-16, nan], 'true,false': [4.603363760640893e-17, nan], 'true,false,true': [4.603363760640893e-17, nan]}
{'': [0.1512390188456203, 0.1644198846996042], 'true': [1.037871411784416e-15, -2.2773805633336544e-17], 'true,true': [1.037871411784416e-15, nan], 'true,false': [-2.2773805633336544e-17, nan], 'true,false,true': [-2.2773805633336544e-17, nan]}
{'': [0.09141403479915823, 0.16817099667159857], 'true': [1.7164796425665342e-15, -1.0793834961633467e-17], 'true,false': [-1.0793834961633467e-17, nan], 'true,false,true': [-1.0793834961633467e-17, nan]}
{'': [0.048123414921004644, 0.16817099667159804], 'true': [0.048123414921004644, nan], 'true,true': [0.048123414921004644, nan]}
{'': [0.04407732936846743, 0.16190759158482956], 'true': [2.7942691855734276e-16, 1.0744093786695063e-17], 'true,false': [1.0744093786695063e-17, nan]}
{'': [0.031722762791733417, 0.17207174479246867], 'true': [-1.3971345927867138e-16, 1.200241107702872e-17], 'true,false': [1.200241107702872e-17, nan], 'true,true': [-1.3971345927867138e-16, nan]}
{'': [0.02286801144573599, 0.17176624840701862], 'true': [-3.991813122247754e-17, 1.5656991372918874e-17], 'true,false': [1.5656991372918874e-17, nan], 'true,false,true': [1.5656991372918874e-17, nan]}
{'': [0.01639767088158377, 0.173613040074746], 'true': [-8.981579525057446e-17, 3.0839528461809902e-18], 'true,false': [3.0839528461809902e-18, nan]}
{'': [0.011970761390817063, 0.1681709966715973], 'true': [9.979532805619384e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.009350387684452684, 0.16642146402821148], 'true': [6.237208003512116e-17, -4.476705744456276e-18], 'true,false': [-4.476705744456276e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.999
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.14185106490048816;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.12544463852839133;  // std dev = 1.83e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.12544463852839188;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.11231637819360679;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783626;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.10159632948783655;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( actor(B) )
%   | then return -0.09269127618926043;  // std dev = 1.41e-07, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return -0.09269127618926085;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.0851847513883968;  // std dev = 2.04e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.08518475138839683;  // std dev = 1.39e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.08518475138839678;  // std dev = 7.88e-08, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.07877675473109146;  // std dev = 6.32e-08, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.07324622576333684;  // std dev = 9.66e-08, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.06842697784420267;  // std dev = 2.58e-08, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06419184008202622;  // std dev = 3.73e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.437', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.999 

Total Inference Time : 1.0168812274932861 

Total revision time: 5.381520339965821
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.4043160171508795 

Total Inference Time : 1.0168812274932861 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.804
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13683745968967595;  // std dev = 4.952, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1525886853004033;  // std dev = 4.837, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09333978494576274;  // std dev = 4.968, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583098;  // std dev = 1.29e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09061872533369555;  // std dev = 4.928, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, A) )
%   | | then return -0.14652771257609318;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06012149182829506;  // std dev = 4.983, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12913526897575117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07074025319263412;  // std dev = 4.911, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11529486901823485;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0464570358713943;  // std dev = 4.952, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.10404596413741511;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03357595639449491;  // std dev = 4.968, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09473859223841927;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.029616834796803725;  // std dev = 4.960, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.08691955874622977;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03098066014220985;  // std dev = 4.936, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.632', 'seconds']
Parameter learned model CLL:-0.31351 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.952, 88, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [4.21e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.837, 75, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.968, 90, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.29e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.928, 85, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 11], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.983, 92, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [2.11e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.911, 83, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.952, 88, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.968, 90, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.96, 89, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [5.27e-09, 0, 11], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.936, 86, 34]}]
{'': [0.1955555555555553, 0.2010212308519218], 'true': [-1.6148698540002277e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.6148698540002277e-16, nan]}
{'': [0.09293197203688684, 0.21462839828297262], 'true': [1.6148698540002277e-16, 0.0], 'true,true': [1.6148698540002277e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.058033180532859226, 0.1990114464099894], 'true': [-2.0185873175002846e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [1.6148698540002277e-16, 0.20408163265306103], 'true': [1.6148698540002277e-16, nan], 'true,true': [1.6148698540002277e-16, nan]}
{'': [0.016676672694497862, 0.19702695893172129], 'true': [-6.055761952500853e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.02486655455710789, 0.20615092409964206], 'true': [4.0371746350005693e-17, 0.0], 'true,true': [4.0371746350005693e-17, nan], 'true,false': [0.0, nan]}
{'': [0.008071187574094474, 0.20102123085192153], 'true': [-2.5232341468753557e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.010289371865184305, 0.1990114464099897], 'true': [5.046468293750712e-18, 0.0], 'true,false': [0.0, nan]}
{'': [0.00467863330170924, 0.20001321964439153], 'true': [5.046468293750712e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.0037284314847530566, 0.2030555555555553], 'true': [2.523234146875356e-18, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), female(A).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.538
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14185106490048766;  // std dev = 6.83e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.6953328964755449;  // std dev = 0.141, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5613193187610706;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.223303442425469;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360624;  // std dev = 6.32e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.3742544246877977;  // std dev = 0.143, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.4219432672168253;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.18696972975410686;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783619;  // std dev = 5.37e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33020827618629595;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.14120013144997537;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.2968325903040511;  // std dev = 0.111, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2616420308604503;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 3.65e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.26239121451133685;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.2042470065228484;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21431761629415688;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.12492918165010843;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2148443404785879;  // std dev = 9.50e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.17304397639021638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.07548932223837071;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1804338136494131;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.11189918151343174;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1808184026006255;  // std dev = 7.90e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.1496626065507982;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.07250663960655256;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1552708613301869;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.10125237067045781;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06842697784420268;  // std dev = 2.89e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06868412560993561;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06868412560993561;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.14841592265024364;  // std dev = 0.042, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | else return -0.10821403200349826;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13597674481413113;  // std dev = 1.86e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.09240320795172403;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1370457472972246;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.1197155721179659;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else return -0.06877917988671507;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.714', 'seconds']
Refined model CLL: -0.066677


******************************************
Best model found
******************************************
Results 

CLL : -0.067339 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.538 

Total Inference Time : 0.9160974025726318 

Total revision time: 4.109578840255738
Best scored revision CLL: -0.066677


Results 

CLL : -0.067339 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.132374517440796 

Total Inference Time : 0.9160974025726318 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.767
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07597071727773008;  // std dev = 4.148, 101.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.045075677142083936;  // std dev = 4.205, 112.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.026099254857129;  // std dev = 4.239, 120.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.37512718717015664;  // std dev = 0.144, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04488392764599675;  // std dev = 4.181, 107.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3300152752482324;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then return -0.15549087196869615;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0671719688461546;  // std dev = 4.105, 94.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2615107320801657;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1361479459310871;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.055159714360718114;  // std dev = 4.112, 95.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21422527754643908;  // std dev = 2.98e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12091355867908796;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.021030245373037354;  // std dev = 4.181, 107.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18036637302327788;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.10863882145869912;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.017220844092279426;  // std dev = 4.272, 129.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15521988773957804;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09855718100854784;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.006289478881126325;  // std dev = 4.250, 123.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13593707315675996;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.09014080612276551;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0038299375101730174;  // std dev = 4.226, 117.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.816', 'seconds']
Parameter learned model CLL:-0.216684 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [8.43e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.148, 79, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.96e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.205, 90, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 23], 'true,false': [0.0, 0, 0], 'false': [4.239, 98, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.144, 2, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.181, 85, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 23], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.105, 72, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.112, 73, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.98e-08, 0, 23], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.181, 85, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 23], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.272, 107, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 23], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.25, 101, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [1.05e-08, 0, 23], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.226, 95, 22]}]
{'': [0.12620027434842318, 0.1703754533869229], 'true': [3.089316242435218e-16, 0.0], 'true,true': [3.089316242435218e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.028505885046352653, 0.15784438775510198], 'true': [1.544658121217609e-16, 0.0], 'true,true': [1.544658121217609e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [-2.703151712130816e-16, 0.14972222222222267], 'true': [-2.703151712130816e-16, nan]}
{'': [0.020660976470829304, 0.16333304218709066], 'true': [0.020660976470829304, nan], 'true,true': [0.020660976470829304, nan]}
{'': [0.00941227957754287, 0.17926663648709812], 'true': [-1.7377403863698103e-16, 0.0], 'true,false': [0.0, nan]}
{'': [0.019956355317125404, 0.17795013850415517], 'true': [-8.688701931849052e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-8.688701931849052e-17, nan]}
{'': [0.004484921718006657, 0.16333304218709058], 'true': [3.8616453030440226e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.008525378947029594, 0.14145784508142528], 'true': [-1.9308226515220113e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.004740046125807953, 0.14687024919029684], 'true': [-1.9308226515220113e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.002040898910571421, 0.15267733216451188], 'true': [4.827056628805028e-18, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.434
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 7.45e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.45e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0.49972620216796043;  // std dev = 0.185, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783617;  // std dev = 5.77e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4241577551860988;  // std dev = 0.046, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17256315463257307;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3192661037615798;  // std dev = 6.32e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0.310575109220229;  // std dev = 0.098, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return -0.09328711628780774;  // std dev = 0.056, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2541854907737597;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08513833005180958;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0.24658400166238756;  // std dev = 0.094, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20906044408436653;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.08689302831437704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07873689210072952;  // std dev = 1.29e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.07873689210072954;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.07873689210072955;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.2212037190513838;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.23451796620817641;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17658491299183637;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.08024165008678232;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.07321164399414193;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.18544718655237658;  // std dev = 3.73e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.19505513672421124;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1523556587789539;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.07451552152171759;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06839670693903895;  // std dev = 7.45e-09, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.0683967069390389;  // std dev = 1.75e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.06839670693903896;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1319425526759148;  // std dev = 0.090, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13370389581660058;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.0695368635143614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.0641651313672049;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.11004223445632001;  // std dev = 0.151, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.1675163625755592;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.595', 'seconds']
Refined model CLL: -0.067732


******************************************
Best model found
******************************************
Results 

CLL : -0.079132 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.434 

Total Inference Time : 0.8535299301147461 

Total revision time: 3.9050822505950924
Best scored revision CLL: -0.067732


Results 

CLL : -0.079132 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.927877927780151 

Total Inference Time : 0.8535299301147461 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.873
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04404637099694798;  // std dev = 4.859, 156.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.061335249699134696;  // std dev = 4.791, 139.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06452752627647126;  // std dev = 4.757, 132.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.34914842772580473;  // std dev = 0.178, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04040743646305971;  // std dev = 4.804, 142.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.335784466117189;  // std dev = 5.16e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then return -0.1521099601952158;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05537775888334759;  // std dev = 4.741, 129.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26543243013405776;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13351196100245113;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04744161168363376;  // std dev = 4.741, 129.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2169798210991987;  // std dev = 1.49e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11880774818594217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.047607116425041965;  // std dev = 4.719, 125.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1823757247424487;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.1069217499442794;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.024757466799358165;  // std dev = 4.767, 134.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15673699934259677;  // std dev = 3.33e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09713259547872587;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.011981039025098643;  // std dev = 4.866, 158.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1371167490675176;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.08894125444374887;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.00635234478466587;  // std dev = 4.817, 145.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.531', 'seconds']
Parameter learned model CLL:-0.226029 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.58e-07, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.859, 127, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.791, 110, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.757, 103, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.178, 4, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.804, 113, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [5.16e-08, 0, 27], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.741, 100, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.741, 100, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.49e-08, 0, 27], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.719, 96, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [2.11e-08, 0, 27], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.767, 105, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [3.33e-08, 0, 27], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.866, 129, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [1.83e-08, 0, 27], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.817, 116, 29]}]
{'': [0.06420927467300945, 0.1513395792241947], 'true': [9.210739167260557e-16, 0.0], 'true,true': [9.210739167260557e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [-2.631639762074445e-16, 0.16510532581129353], 'true': [-2.631639762074445e-16, nan], 'true,true': [-2.631639762074445e-16, nan]}
{'': [0.0297612376833524, 0.1714302112029382], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.031548113644776096, 0.16251735766712946], 'true': [0.031548113644776096, nan], 'true,true': [0.031548113644776096, nan]}
{'': [0.008197839570307699, 0.1742683732948737], 'true': [9.868649107779169e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.005481159355765922, 0.17426837329487405], 'true': [-9.868649107779169e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-9.868649107779169e-17, nan]}
{'': [0.003883085300425304, 0.17817600000000003], 'true': [8.22387425648264e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.005373868678295357, 0.16958119848518577], 'true': [1.644774851296528e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.00413827305997162, 0.14985579234097104], 'true': [4.11193712824132e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.0032812365414756207, 0.16000000000000045], 'true': [1.2335811384723961e-17, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.592
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.1254446385283913;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else return 0.6616355223478173;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5777512642762975;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.4222487357237028;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11752532537898601;  // std dev = 0.435, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10112187105729299;  // std dev = 2.11e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42622257723179346;  // std dev = 0.063, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1757054773483362;  // std dev = 0.257, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3188175126940954;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.08664403159733824;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.09229387465304838;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.3339385441981264;  // std dev = 4.21e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.28669235725548664;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25387921516692735;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.08002837333027371;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then return 0.2476458234453271;  // std dev = 0.089, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.08920430522707844;  // std dev = 0.495, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20884392004703725;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.07433090802569416;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.07817243584594019;  // std dev = 4.59e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return 0.20232388863176728;  // std dev = 0.089, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17642598136300908;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.06937557844306418;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), director(B) )
%   | then return 0.1535434010487374;  // std dev = 0.125, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else if ( actor(A) )
%   | | then return -0.07272172655083148;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( female(B) )
%   | | | then return -0.07272172655083134;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.20673746256387798;  // std dev = 0.464, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15223501350173013;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.06502813288181031;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1641214502650218;  // std dev = 2.11e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.35556123233723963;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0710925478262636;  // std dev = 0.286, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13360965746500542;  // std dev = 1.67e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.06118452881030834;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.06346192846800974;  // std dev = 0.011, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.14282792853255447;  // std dev = 2.11e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.27883584164077646;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.580', 'seconds']
Refined model CLL: -0.06709


******************************************
Best model found
******************************************
Results 

CLL : -0.084595 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.592 

Total Inference Time : 0.9766619205474854 

Total revision time: 4.43379506111145
Best scored revision CLL: -0.06709


Results 

CLL : -0.084595 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.453605260848999 

Total Inference Time : 0.9766619205474854 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.867
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1184229077022519;  // std dev = 5.302, 146.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06276643040256961;  // std dev = 5.445, 173.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0721310402311621;  // std dev = 5.383, 160.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3927940644608743;  // std dev = 0.111, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051978558739845956;  // std dev = 5.418, 167.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3261208336172218;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then return -0.1434632871129763;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04569849084108178;  // std dev = 5.413, 166.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.25885970918667833;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12671944726397116;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06834828275449045;  // std dev = 5.308, 147.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21235912916870717;  // std dev = 2.36e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05585281818283416;  // std dev = 5.314, 148.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17900217252305328;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.046736193774793475;  // std dev = 5.314, 148.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1541879716462057;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1133469033204861;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02728155418752025;  // std dev = 5.356, 155.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13513342010632018;  // std dev = 1.83e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01346034264554079;  // std dev = 5.388, 161.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.498', 'seconds']
Parameter learned model CLL:-0.265522 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.302, 108, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.3e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.445, 135, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.383, 122, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.111, 1, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.418, 129, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.413, 128, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.308, 109, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.36e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.314, 110, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.314, 110, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [2.11e-08, 0, 20], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.356, 117, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.83e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.388, 123, 38]}]
{'': [0.11342155009451807, 0.19253143178832827], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}
{'': [0.05899888532770057, 0.17140566006214697], 'true': [2.6645352591003756e-16, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.02021770255628346, 0.18109375000000041], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.012221093081438202, 0.17576822403097983], 'true': [0.012221093081438202, nan], 'true,true': [0.012221093081438202, nan]}
{'': [0.010000419339771086, 0.1765132820438381], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.01686252770009758, 0.19167939284557356], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}
{'': [2.7755575615628914e-17, 0.19083272461650838], 'true': [2.7755575615628914e-17, nan]}
{'': [-2.2204460492503132e-17, 0.1908327246165089], 'true': [-2.2204460492503132e-17, nan]}
{'': [0.005915281762268069, 0.18505723204994787], 'true': [2.2204460492503132e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [1.6653345369377347e-17, 0.18031711739516218], 'true': [1.6653345369377347e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.327
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.1254446385283913;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 9.19e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else return 0.5219822959992897;  // std dev = 0.146, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783626;  // std dev = 4.59e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42284704801847417;  // std dev = 0.029, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.13126347320621937;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.31955103409913393;  // std dev = 3.65e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09022624858072287;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.09269127618926104;  // std dev = 2.98e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0.3026332018772503;  // std dev = 0.106, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25438000167825686;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08308871705302136;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2640381091261102;  // std dev = 6.99e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.20198343299050003;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0861662529144649;  // std dev = 0.116, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.1955706986008648;  // std dev = 0.061, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.21600128876729685;  // std dev = 4.94e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.17137307596462778;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07965985961594439;  // std dev = 0.109, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.17867687991805145;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(B) )
%   | then return -0.07311975468567418;  // std dev = 2.79e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.18166249734581252;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.14838804693331623;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15394168229742394;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1081341693847374;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.06831626396061737;  // std dev = 2.36e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else return 0.14185906943583498;  // std dev = 0.063, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.1349414597092526;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13839966906777249;  // std dev = 3.49e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.14756487899416407;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then return -0.0640941481538622;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else return -0.1544142078187202;  // std dev = 0.219, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.325', 'seconds']
Refined model CLL: -0.068154


******************************************
Best model found
******************************************
Results 

CLL : -0.084587 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.327 

Total Inference Time : 0.9511220455169678 

Total revision time: 4.168922657012939
Best scored revision CLL: -0.068154


Results 

CLL : -0.084587 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.188732856750488 

Total Inference Time : 0.9511220455169678 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.349
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06416745361802967;  // std dev = 8.406, 432.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.036739756658428574;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 4.15e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360642;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05833487118182186;  // std dev = 8.370, 418.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.29668627667170777;  // std dev = 0.219, 116.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05739112755952006;  // std dev = 8.333, 405.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.347584220450849;  // std dev = 1.58e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then return -0.13205317086645388;  // std dev = 1.83e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03811172267648189;  // std dev = 8.393, 427.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27343594054398235;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.11763917442189034;  // std dev = 2.58e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03413301977838844;  // std dev = 8.386, 424.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2225798158182903;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10596669798681424;  // std dev = 2.36e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03214609513899346;  // std dev = 8.370, 418.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.186445334690008;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.09633867097360717;  // std dev = 1.83e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0148683051379365;  // std dev = 8.436, 444.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15979953721570134;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08827161564786491;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.038623229391822285;  // std dev = 8.297, 393.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13949148999256714;  // std dev = 7.45e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.08142096641211559;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.014627674070891829;  // std dev = 8.393, 427.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.445', 'seconds']
Parameter learned model CLL:-0.238429 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.19e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.49e-08, 35, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.406, 343, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [3.04e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.508, 388, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [4.15e-08, 0, 89], 'true,false,true,true': [0.0, 31, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.37, 329, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.219, 27, 89], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.333, 316, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [1.58e-07, 0, 89], 'true,false,true': [1.83e-08, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.393, 338, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.58e-08, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.386, 335, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 89], 'true,false,true,true': [2.36e-08, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.37, 329, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 89], 'true,false,true': [1.83e-08, 33, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.436, 355, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [9.42e-08, 0, 89], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.297, 304, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [7.45e-08, 0, 89], 'true,false,true': [0.0, 33, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.393, 338, 89]}]
{'': [0.20258844953173968, 0.1635748885459536], 'true': [1.5967252488991015e-16, 3.489272363107635e-17], 'true,true': [1.5967252488991015e-16, nan], 'true,false': [3.489272363107635e-17, nan], 'true,false,true': [3.489272363107635e-17, nan]}
{'': [0.14086836113344783, 0.15176966452627955], 'true': [1.037871411784416e-15, -3.3643121958338078e-18], 'true,true': [1.037871411784416e-15, nan], 'true,false': [-3.3643121958338078e-18, nan], 'true,false,true': [-3.3643121958338078e-18, nan]}
{'': [0.08541410707145512, 0.16758430438863978], 'true': [1.7164796425665342e-15, -8.953411488912552e-18], 'true,false': [-8.953411488912552e-18, nan], 'true,false,true': [-8.953411488912552e-18, nan]}
{'': [0.048123414921004644, 0.17146166742874508], 'true': [0.048123414921004644, nan], 'true,true': [0.048123414921004644, nan]}
{'': [0.04187958591986048, 0.1649874677094681], 'true': [2.7942691855734276e-16, 1.1895246692412391e-17], 'true,false': [1.1895246692412391e-17, nan]}
{'': [0.02883617827884117, 0.1658452741189033], 'true': [-1.3971345927867138e-16, 2.2204460492503132e-17], 'true,false': [2.2204460492503132e-17, nan], 'true,true': [-1.3971345927867138e-16, nan]}
{'': [0.021589989312283446, 0.16758430438863614], 'true': [-3.991813122247754e-17, 1.6326809185664067e-17], 'true,false': [1.6326809185664067e-17, nan], 'true,false,true': [1.6326809185664067e-17, nan]}
{'': [0.015779526576481514, 0.16027006736466173], 'true': [-8.981579525057446e-17, 1.0092936587501423e-17], 'true,false': [1.0092936587501423e-17, nan]}
{'': [0.010535929175500688, 0.1751775667048673], 'true': [9.979532805619384e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.009629964689625393, 0.16498746770947018], 'true': [6.237208003512116e-17, -5.887546342709164e-18], 'true,false': [-5.887546342709164e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.971
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.14185106490048804;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.12544463852839188;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.11231637819360642;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.11231637819360679;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783627;  // std dev = 2.98e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.10159632948783645;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.09269127618926104;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.09269127618926067;  // std dev = 1.05e-07, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.0851847513883968;  // std dev = 2.04e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.0851847513883968;  // std dev = 2.04e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.08518475138839679;  // std dev = 7.88e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.07877675473109146;  // std dev = 5.58e-08, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.0732462257633369;  // std dev = 1.06e-07, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06419184008202622;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.450', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.971 

Total Inference Time : 1.0837328433990479 

Total revision time: 5.466099328994751
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.4859095287323 

Total Inference Time : 1.0837328433990479 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.853
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13457169932715435;  // std dev = 4.960, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09096534271187706;  // std dev = 5.050, 136.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11655450100433683;  // std dev = 4.920, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.37336108729565015;  // std dev = 0.146, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.092204305810215;  // std dev = 4.944, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3304058862662665;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08001854116744524;  // std dev = 4.936, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2617764575610382;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.15525910036101478;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0532573085472397;  // std dev = 4.983, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21441214637651254;  // std dev = 1.83e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.13596759172318867;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06734674947431551;  // std dev = 4.902, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.180502848782506;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.12076971393169579;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05535828106072106;  // std dev = 4.902, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15532303618205887;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0402131102015426;  // std dev = 4.920, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13601734881713323;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.10852169234520051;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 1.428485201771636E-4;  // std dev = 5.031, 133.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.572', 'seconds']
Parameter learned model CLL:-0.310437 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.96, 89, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [4.21e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.05, 102, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.92, 84, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.146, 1, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.944, 87, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.11e-08, 0, 11], 'true,false': [0.0, 0, 0], 'false': [4.936, 86, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [1.05e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.983, 92, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.83e-08, 0, 11], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.902, 82, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [1.05e-08, 0, 11], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.902, 82, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false': [0.0, 0, 0], 'false': [4.92, 84, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.031, 99, 34]}]
{'': [-1.6148698540002277e-16, 0.2000132196443918], 'true': [-1.6148698540002277e-16, nan], 'true,true': [-1.6148698540002277e-16, nan]}
{'': [0.12490834291200459, 0.18749999999999992], 'true': [1.6148698540002277e-16, 0.0], 'true,true': [1.6148698540002277e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.07803889166913147, 0.205113473139902], 'true': [-2.0185873175002846e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.021443872771279016, 0.20203538009698802], 'true': [0.021443872771279016, nan], 'true,true': [0.021443872771279016, nan]}
{'': [4.0371746350005693e-17, 0.20305555555555455], 'true': [4.0371746350005693e-17, nan]}
{'': [0.013285452932534303, 0.19702695893172092], 'true': [1.0092936587501423e-17, 0.0], 'true,true': [1.0092936587501423e-17, nan], 'true,false': [0.0, nan]}
{'': [0.01598136768732507, 0.20719381688466113], 'true': [3.027880976250427e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.011815582573824975, 0.20719381688466063], 'true': [1.0092936587501423e-17, 0.0], 'true,false': [0.0, nan]}
{'': [5.046468293750712e-18, 0.2051134731399023], 'true': [5.046468293750712e-18, nan]}
{'': [0.0077845298127636655, 0.1902877494488098], 'true': [5.046468293750712e-18, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.566
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048766;  // std dev = 6.83e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return 0.6725335205032132;  // std dev = 0.194, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 8.16e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else return 0.5444596567286775;  // std dev = 0.131, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4099888865785973;  // std dev = 0.126, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.10401275757162046;  // std dev = 0.224, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( director(B), actor(A) )
%   | then return 0.2930590918083917;  // std dev = 0.173, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return -0.09770790148305258;  // std dev = 0.295, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.19133070965862045;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2732510568009163;  // std dev = 3.65e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.4945477388019485;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08854812252811706;  // std dev = 0.279, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.22245076898978322;  // std dev = 2.11e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.3737043310638879;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08187269810406264;  // std dev = 0.263, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.16345845012020413;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07230876784480138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07230876784480136;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.18635178244483255;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07230876784480145;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.07230876784480138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.29109703727917163;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.15274385809367094;  // std dev = 1.86e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06760577348087836;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06760577348087832;  // std dev = 1.49e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.06760577348087832;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.1484557673436069;  // std dev = 0.066, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.16199861709375657;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06346679615082619;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06346679615082619;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.06346679615082619;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.11838672829039752;  // std dev = 0.092, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.598', 'seconds']
Refined model CLL: -0.079416


******************************************
Best model found
******************************************
Results 

CLL : -0.085174 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.566 

Total Inference Time : 0.9193353652954102 

Total revision time: 4.165515989303589
Best scored revision CLL: -0.079416


Results 

CLL : -0.085174 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.185326189041138 

Total Inference Time : 0.9193353652954102 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.817
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051131391239863155;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04311439146331675;  // std dev = 4.218, 115.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07077457132158005;  // std dev = 4.131, 98.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3958840044230538;  // std dev = 0.104, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07860890066847505;  // std dev = 4.084, 91.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3254421349504393;  // std dev = 3.65e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then return -0.14384340225572628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01881441772914289;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2583973783096167;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12701962434556316;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04991333003544037;  // std dev = 4.124, 97.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21203333183336834;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11358929715147498;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 5.981854020639511E-4;  // std dev = 4.235, 119.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1787637634508718;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.10264451305727536;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.027172762221037747;  // std dev = 4.165, 104.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.154007473260509;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09356822516994766;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03600290029323337;  // std dev = 4.131, 98.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13499274355692847;  // std dev = 7.45e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.0859285079866195;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.013491430315041401;  // std dev = 4.175, 106.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.766', 'seconds']
Parameter learned model CLL:-0.229489 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [8.43e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.214, 92, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.96e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.218, 93, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 23], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.131, 76, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.104, 1, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.084, 69, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [3.65e-08, 0, 23], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.214, 92, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.124, 75, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.49e-08, 0, 23], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.235, 97, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 23], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.165, 82, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 23], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.131, 76, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [7.45e-09, 0, 23], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.175, 84, 22]}]
{'': [0.07360000000000064, 0.15574022776238847], 'true': [3.089316242435218e-16, 0.0], 'true,true': [3.089316242435218e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.05254204731743713, 0.15470699432892243], 'true': [1.544658121217609e-16, 0.0], 'true,true': [1.544658121217609e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.045503289281446285, 0.1740941274468976], 'true': [-2.703151712130816e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}
{'': [0.010760290549047499, 0.18331119430020537], 'true': [0.010760290549047499, nan], 'true,true': [0.010760290549047499, nan]}
{'': [0.008793862942552522, 0.15574022776238816], 'true': [5.792467954566034e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.018746579514519388, 0.17536401317887132], 'true': [-6.75787928032704e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-6.75787928032704e-17, nan]}
{'': [0.013381027268373244, 0.15069557234658568], 'true': [9.654113257610057e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.005828429491224232, 0.16678994082840237], 'true': [-4.827056628805028e-18, 0.0], 'true,false': [0.0, nan]}
{'': [0.00244749254935165, 0.17409412744689712], 'true': [-9.654113257610057e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.00194885865594107, 0.16447134211463185], 'true': [2.413528314402514e-18, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.487
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.14185106490048763;  // std dev = 8.56e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.28052658778904555;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0.5213279699941561;  // std dev = 0.160, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4215716174875151;  // std dev = 0.028, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.28558289851054186;  // std dev = 0.206, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10232972638340557;  // std dev = 0.074, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3198284251846361;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.07833444659858103;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.09262961622289431;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0.2773734114826365;  // std dev = 0.166, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2545693470348099;  // std dev = 3.33e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08513241864937633;  // std dev = 4.71e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0.21942892426265523;  // std dev = 0.166, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209331747705356;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.07286238869901948;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.07873181568981999;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0.2284076720103481;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17678400739838598;  // std dev = 1.83e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.06809089270920549;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.07320723992903;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.1906592934360493;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( actor(B) )
%   | | then return -0.07320723992902996;  // std dev = 2.47e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.4048770767862605;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15250676142435554;  // std dev = 1.83e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.06389522911025444;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.12109982173214699;  // std dev = 0.139, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else if ( actor(A) )
%   | | then return -0.06839285174902386;  // std dev = 1.83e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else return -0.10366870264415907;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13382190508790687;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.06017832358172477;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then return 0.10426454176905808;  // std dev = 0.142, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else if ( actor(A) )
%   | | then return -0.06416172974812513;  // std dev = 1.67e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( female(B) )
%   | | | then return -0.062075876586835235;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10566536285671994;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.468', 'seconds']
Refined model CLL: -0.07339


******************************************
Best model found
******************************************
Results 

CLL : -0.088109 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.487 

Total Inference Time : 0.8792409896850586 

Total revision time: 4.058358291625977
Best scored revision CLL: -0.07339


Results 

CLL : -0.088109 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.078168491363526 

Total Inference Time : 0.8792409896850586 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.858
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8073014774723939;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.14185106490048768;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6476533883355482;  // std dev = 0.274, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   else return -0.1254446385283913;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5345680658020259;  // std dev = 0.220, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.11231637819360622;  // std dev = 7.30e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3277605816803766;  // std dev = 2.646, 64.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=56 */
%   else return -0.10159632948783631;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.35594379856655767;  // std dev = 0.991, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   else return -0.09269127618926096;  // std dev = 4.83e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2770393499119406;  // std dev = 0.991, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   else return -0.0851847513883968;  // std dev = 6.50e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18959292193329907;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.07877675473109157;  // std dev = 6.32e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14086648425015477;  // std dev = 1.932, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   else return -0.07324622576333707;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11865110939956457;  // std dev = 1.932, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   else return -0.06842697784420265;  // std dev = 5.16e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10140201425586562;  // std dev = 1.932, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   else return -0.06419184008202626;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.463', 'seconds']
Parameter learned model CLL:-0.12262 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.687, 3, 56], 'false': [6.66e-08, 115, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.274, 5, 56], 'false': [0.0, 130, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.22, 3, 56], 'false': [7.3e-08, 102, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.646, 8, 56], 'false': [0.0, 108, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.991, 1, 56], 'false': [4.83e-08, 104, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.991, 1, 56], 'false': [6.5e-08, 122, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.687, 3, 56], 'false': [6.32e-08, 108, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.932, 4, 56], 'false': [0.0, 116, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.932, 4, 56], 'false': [5.16e-08, 107, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.932, 4, 56], 'false': [0.0, 113, 0]}]
{'': [0.04826199367997677, 3.8616453030440226e-17], 'true': [nan, 0.04826199367997677], 'true,false': [nan, 0.04826199367997677], 'true,false,false': [nan, 0.04826199367997677]}
{'': [0.07524858908895546, -3.416070845000482e-18], 'true': [nan, 0.07524858908895546], 'true,false': [nan, 0.07524858908895546]}
{'': [0.04826199367997677, 5.224578939412501e-17], 'true': [nan, 0.04826199367997677], 'true,false': [nan, 0.04826199367997677]}
{'': [0.10937500000000025, -2.05596856412066e-18], 'true': [nan, 0.10937500000000025], 'true,false': [nan, 0.10937500000000025]}
{'': [0.017236072637734898, 2.241796492031566e-17], 'true': [nan, 0.017236072637734898], 'true,false': [nan, 0.017236072637734898]}
{'': [0.017236072637734804, 3.45807171604557e-17], 'true': [nan, 0.017236072637734804], 'true,false': [nan, 0.017236072637734804], 'true,false,false': [nan, 0.017236072637734804]}
{'': [0.04826199367997695, 3.700743415417188e-17], 'true': [nan, 0.04826199367997695], 'true,false': [nan, 0.04826199367997695]}
{'': [0.06222222222222218, -2.8712664429960945e-18], 'true': [nan, 0.06222222222222218], 'true,false': [nan, 0.06222222222222218], 'true,false,false': [nan, 0.06222222222222218]}
{'': [0.06222222222222218, 2.490219868318108e-17], 'true': [nan, 0.06222222222222218], 'true,false': [nan, 0.06222222222222218], 'true,false,false': [nan, 0.06222222222222218]}
{'': [0.06222222222222218, -1.5719972030090712e-17], 'true': [nan, 0.06222222222222218], 'true,false': [nan, 0.06222222222222218], 'true,false,false': [nan, 0.06222222222222218]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.028
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5315206219270028;  // std dev = 0.124, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.1123163781936062;  // std dev = 8.43e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4203150077150414;  // std dev = 0.022, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17831787941883803;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783637;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32261469633062695;  // std dev = 0.019, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1536701757469813;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926108;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2588272893262309;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.24125025375115386;  // std dev = 0.070, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.08518475138839678;  // std dev = 4.47e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21179431817870334;  // std dev = 0.004, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16702733484273413;  // std dev = 0.000713, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109158;  // std dev = 5.58e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.16749842149152946;  // std dev = 0.060, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.16735459346732043;  // std dev = 0.058, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.07324622576333713;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15533430467461518;  // std dev = 0.003, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06842697784420265;  // std dev = 4.71e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.13639893351985663;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.11463764165476545;  // std dev = 0.080, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return -0.06419184008202626;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.366', 'seconds']
Refined model CLL: -0.06909


******************************************
Best model found
******************************************
Results 

CLL : -0.079044 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.028 

Total Inference Time : 0.9018161296844482 

Total revision time: 3.8027399406433107
Best scored revision CLL: -0.06909


Results 

CLL : -0.079044 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.858336530685425 

Total Inference Time : 0.9018161296844482 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.871
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7787838557344332;  // std dev = 2.146, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6706932928907731;  // std dev = 0.246, 62.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   else return -0.12544463852839133;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.47905205557668046;  // std dev = 0.310, 65.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   else return -0.11231637819360621;  // std dev = 8.30e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4345785274786226;  // std dev = 1.390, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   else return -0.10159632948783631;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2834636165844225;  // std dev = 2.146, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   else return -0.09269127618926097;  // std dev = 4.59e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.250972261841768;  // std dev = 1.689, 61.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   else return -0.08518475138839682;  // std dev = 5.58e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14250812306789487;  // std dev = 2.499, 65.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   else return -0.07877675473109161;  // std dev = 5.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1306769809514724;  // std dev = 2.332, 64.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   else return -0.07324622576333707;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08129001600237422;  // std dev = 2.651, 66.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   else return -0.06842697784420265;  // std dev = 4.89e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12517494686739392;  // std dev = 1.934, 62.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   else return -0.06419184008202626;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.678', 'seconds']
Parameter learned model CLL:-0.143672 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.146, 5, 58], 'false': [7.6e-08, 113, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.246, 4, 58], 'false': [0.0, 111, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.31, 7, 58], 'false': [8.3e-08, 115, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.39, 2, 58], 'false': [0.0, 108, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.146, 5, 58], 'false': [4.59e-08, 107, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.689, 3, 58], 'false': [5.58e-08, 100, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.499, 7, 58], 'false': [5.16e-08, 90, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.332, 6, 58], 'false': [0.0, 104, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.651, 8, 58], 'false': [4.89e-08, 102, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.934, 4, 58], 'false': [0.0, 102, 0]}]
{'': [0.07306626354245364, 5.1089909097794814e-17], 'true': [nan, 0.07306626354245364], 'true,false': [nan, 0.07306626354245364], 'true,false,false': [nan, 0.07306626354245364]}
{'': [0.06035379812695092, -6.00120553851436e-18], 'true': [nan, 0.06035379812695092], 'true,false': [nan, 0.06035379812695092]}
{'': [0.09609467455621268, 5.985550219718235e-17], 'true': [nan, 0.09609467455621268], 'true,false': [nan, 0.09609467455621268]}
{'': [0.032222222222222346, -2.05596856412066e-18], 'true': [nan, 0.032222222222222346], 'true,false': [nan, 0.032222222222222346]}
{'': [0.07306626354245413, 1.9714240624185022e-17], 'true': [nan, 0.07306626354245413], 'true,false': [nan, 0.07306626354245413]}
{'': [0.04676162321956452, 3.1086244689504386e-17], 'true': [nan, 0.04676162321956452], 'true,false': [nan, 0.04676162321956452], 'true,false,false': [nan, 0.04676162321956452]}
{'': [0.09609467455621301, 2.960594732333751e-17], 'true': [nan, 0.09609467455621301], 'true,false': [nan, 0.09609467455621301]}
{'': [0.08496093750000007, -6.4051328343759035e-18], 'true': [nan, 0.08496093750000007], 'true,false': [nan, 0.08496093750000007], 'true,false,false': [nan, 0.08496093750000007]}
{'': [0.10651974288337934, 2.3401759832785162e-17], 'true': [nan, 0.10651974288337934], 'true,false': [nan, 0.10651974288337934], 'true,false,false': [nan, 0.10651974288337934]}
{'': [0.06035379812695105, -1.2517220375675785e-17], 'true': [nan, 0.06035379812695105], 'true,false': [nan, 0.06035379812695105], 'true,false,false': [nan, 0.06035379812695105]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.062
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048763;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1254446385283913;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360624;  // std dev = 7.74e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783635;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09269127618926094;  // std dev = 4.94e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.0851847513883968;  // std dev = 6.50e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109157;  // std dev = 6.41e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333707;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06842697784420265;  // std dev = 4.83e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06419184008202626;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.293', 'seconds']
Refined model CLL: -0.063422


******************************************
Best model found
******************************************
Results 

CLL : -0.064225 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.062 

Total Inference Time : 0.9585518836975098 

Total revision time: 3.9093338565826414
Best scored revision CLL: -0.063422


Results 

CLL : -0.064225 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.9649304466247557 

Total Inference Time : 0.9585518836975098 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.171
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5967381467177661;  // std dev = 6.821, 241.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=178 */
%   else return -0.14185106490048785;  // std dev = 8.94e-08, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4897523140267757;  // std dev = 0.449, 247.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=178 */
%   else return -0.1254446385283919;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.42223102773514604;  // std dev = 0.432, 237.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=178 */
%   else return -0.1123163781936064;  // std dev = 8.16e-08, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3362576027228448;  // std dev = 6.482, 233.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=178 */
%   else return -0.10159632948783659;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23981197492903758;  // std dev = 6.657, 237.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=178 */
%   else return -0.09269127618926071;  // std dev = 9.66e-08, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23470944011214237;  // std dev = 5.885, 221.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=178 */
%   else return -0.08518475138839678;  // std dev = 1.01e-07, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11155825106696114;  // std dev = 6.821, 241.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=178 */
%   else return -0.07877675473109147;  // std dev = 5.16e-08, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08280769665947978;  // std dev = 6.861, 242.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=178 */
%   else return -0.07324622576333682;  // std dev = 9.66e-08, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11985616989009634;  // std dev = 6.098, 225.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=178 */
%   else return -0.06842697784420289;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06030532529074571;  // std dev = 6.571, 235.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=178 */
%   else return -0.06419184008202627;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.430', 'seconds']
Parameter learned model CLL:-0.263898 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.821, 63, 178], 'false': [8.94e-08, 330, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.449, 69, 178], 'false': [0.0, 310, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.432, 59, 178], 'false': [8.16e-08, 314, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.482, 55, 178], 'false': [0.0, 316, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.657, 59, 178], 'false': [9.66e-08, 284, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.885, 43, 178], 'false': [1.01e-07, 298, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.821, 63, 178], 'false': [5.16e-08, 315, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.861, 64, 178], 'false': [9.66e-08, 276, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.098, 47, 178], 'false': [0.0, 314, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.571, 57, 178], 'false': [0.0, 285, 0]}]
{'': [0.19307518809938418, 2.4223047810003414e-17], 'true': [nan, 0.19307518809938418], 'true,false': [nan, 0.19307518809938418], 'true,false,false': [nan, 0.19307518809938418]}
{'': [0.20131456014686425, -7.449238358775244e-17], 'true': [nan, 0.20131456014686425], 'true,false': [nan, 0.20131456014686425]}
{'': [0.1869714611262413, 2.1214452699843757e-17], 'true': [nan, 0.1869714611262413], 'true,false': [nan, 0.1869714611262413]}
{'': [0.18033119048057641, -5.0592441628488145e-17], 'true': [nan, 0.18033119048057641], 'true,false': [nan, 0.18033119048057641]}
{'': [0.18697146112624485, 3.2837582418490545e-17], 'true': [nan, 0.18697146112624485], 'true,false': [nan, 0.18697146112624485]}
{'': [0.1567125980221542, 3.427534169983705e-17], 'true': [nan, 0.1567125980221542], 'true,false': [nan, 0.1567125980221542], 'true,false,false': [nan, 0.1567125980221542]}
{'': [0.19307518809937846, 8.458842092382146e-18], 'true': [nan, 0.19307518809937846], 'true,false': [nan, 0.19307518809937846]}
{'': [0.1945222320879723, 3.37893964016352e-17], 'true': [nan, 0.1945222320879723], 'true,false': [nan, 0.1945222320879723], 'true,false,false': [nan, 0.1945222320879723]}
{'': [0.16525432098765494, -2.6871640086468757e-17], 'true': [nan, 0.16525432098765494], 'true,false': [nan, 0.16525432098765494], 'true,false,false': [nan, 0.16525432098765494]}
{'': [0.18372114078768692, -1.0907454277019082e-17], 'true': [nan, 0.18372114078768692], 'true,false': [nan, 0.18372114078768692], 'true,false,false': [nan, 0.18372114078768692]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.536
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.99e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.14185106490048796;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.12544463852839186;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4.21e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.1123163781936065;  // std dev = 2.98e-08, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783628;  // std dev = 2.69e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.10159632948783658;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.09269127618926067;  // std dev = 1.03e-07, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 2.36e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else return -0.08518475138839678;  // std dev = 1.01e-07, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109177;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109147;  // std dev = 5.16e-08, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.07324622576333681;  // std dev = 1.10e-07, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06842697784420279;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06419184008202627;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.239', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.536 

Total Inference Time : 0.9519457817077637 

Total revision time: 4.737375480651856
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.7929720706939705 

Total Inference Time : 0.9519457817077637 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.853
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7956489350995121;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6694131893798132;  // std dev = 0.242, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.12544463852839136;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.48296035072596105;  // std dev = 0.300, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.11231637819360625;  // std dev = 5.87e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2525354857971454;  // std dev = 3.078, 57.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   else return -0.10159632948783615;  // std dev = 5.77e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3011782911457292;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.09269127618926105;  // std dev = 2.11e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28887419936531994;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   else return -0.08518475138839682;  // std dev = 5.37e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10412485224365203;  // std dev = 2.739, 54.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else return -0.07877675473109165;  // std dev = 4.41e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16909498595953076;  // std dev = 1.917, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.07324622576333707;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13868258086131838;  // std dev = 1.917, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.06842697784420267;  // std dev = 3.94e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06280227498962046;  // std dev = 2.461, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   else return -0.06419184008202625;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.598', 'seconds']
Parameter learned model CLL:-0.16141 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.677, 3, 45], 'false': [7.74e-08, 81, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.242, 3, 45], 'false': [0.0, 102, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.3, 5, 45], 'false': [5.87e-08, 79, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.078, 12, 45], 'false': [5.77e-08, 78, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.121, 5, 45], 'false': [2.11e-08, 98, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.384, 2, 45], 'false': [5.37e-08, 95, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.739, 9, 45], 'false': [4.41e-08, 80, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.917, 4, 45], 'false': [0.0, 94, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.917, 4, 45], 'false': [3.94e-08, 83, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.461, 7, 45], 'false': [0.0, 73, 0]}]
{'': [0.05859375000000089, 7.401486830834377e-17], 'true': [nan, 0.05859375000000089], 'true,false': [nan, 0.05859375000000089], 'true,false,false': [nan, 0.05859375000000089]}
{'': [0.05859374999999948, -1.0884539457109378e-17], 'true': [nan, 0.05859374999999948], 'true,false': [nan, 0.05859374999999948]}
{'': [0.08999999999999954, 4.356571362453146e-17], 'true': [nan, 0.08999999999999954], 'true,false': [nan, 0.08999999999999954]}
{'': [0.1662049861495844, 4.2700885562506023e-17], 'true': [nan, 0.1662049861495844], 'true,false': [nan, 0.1662049861495844]}
{'': [0.08999999999999961, 4.5315225494904345e-18], 'true': [nan, 0.08999999999999961], 'true,false': [nan, 0.08999999999999961]}
{'': [0.04074241738343142, 3.0385051200267444e-17], 'true': [nan, 0.04074241738343142], 'true,false': [nan, 0.04074241738343142], 'true,false,false': [nan, 0.04074241738343142]}
{'': [0.13888888888888887, 2.42861286636753e-17], 'true': [nan, 0.13888888888888887], 'true,false': [nan, 0.13888888888888887]}
{'': [0.07496876301541017, -7.086529944415892e-18], 'true': [nan, 0.07496876301541017], 'true,false': [nan, 0.07496876301541017], 'true,false,false': [nan, 0.07496876301541017]}
{'': [0.07496876301541017, 1.8726653427412278e-17], 'true': [nan, 0.07496876301541017], 'true,false': [nan, 0.07496876301541017], 'true,false,false': [nan, 0.07496876301541017]}
{'': [0.1164940828402367, -6.083413833562501e-18], 'true': [nan, 0.1164940828402367], 'true,false': [nan, 0.1164940828402367], 'true,false,false': [nan, 0.1164940828402367]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.039
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048763;  // std dev = 8.56e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839147;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5553664367462844;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5362897848908588;  // std dev = 0.111, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.11231637819360624;  // std dev = 6.14e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4210243002237077;  // std dev = 0.013, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17824748361837722;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783623;  // std dev = 4.83e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3230943112502097;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1537589818399519;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926105;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25679810146622734;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1347246810842094;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839679;  // std dev = 2.36e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20851408399765006;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1932843340151062;  // std dev = 0.076, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.07877675473109168;  // std dev = 3.57e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17998786569693465;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.143116000060588;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333704;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15493443539124285;  // std dev = 0.013, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12590330094583818;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420267;  // std dev = 3.25e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13571534971677032;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11342689131020167;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202625;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.360', 'seconds']
Refined model CLL: -0.066545


******************************************
Best model found
******************************************
Results 

CLL : -0.067505 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.039 

Total Inference Time : 0.7794511318206787 

Total revision time: 3.537259141921997
Best scored revision CLL: -0.066545


Results 

CLL : -0.067505 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.5928557319641112 

Total Inference Time : 0.7794511318206787 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.867
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7235335504841276;  // std dev = 2.461, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   else return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7458247094729488;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.12544463852839152;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5194155138822366;  // std dev = 0.242, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.11231637819360622;  // std dev = 7.15e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.39044620589106344;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.10159632948783624;  // std dev = 4.83e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.33737296562672237;  // std dev = 0.989, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   else return -0.09269127618926107;  // std dev = 1.05e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22315261348764168;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.08518475138839679;  // std dev = 3.16e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07570041309482133;  // std dev = 2.739, 54.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   else return -0.07877675473109165;  // std dev = 4.28e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1662388677171636;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.07324622576333704;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08309148460241428;  // std dev = 2.301, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   else return -0.06842697784420267;  // std dev = 3.73e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1451846941620974;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   else return -0.06419184008202625;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.583', 'seconds']
Parameter learned model CLL:-0.133566 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.461, 7, 45], 'false': [6.66e-08, 67, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 45], 'false': [0.0, 72, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.242, 3, 45], 'false': [7.15e-08, 94, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.677, 3, 45], 'false': [4.83e-08, 93, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.989, 1, 45], 'false': [1.05e-08, 83, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.677, 3, 45], 'false': [3.16e-08, 83, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.739, 9, 45], 'false': [4.28e-08, 78, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.677, 3, 45], 'false': [0.0, 94, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.301, 6, 45], 'false': [3.73e-08, 82, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.384, 2, 45], 'false': [0.0, 71, 0]}]
{'': [0.11649408284023735, 6.628197161941232e-17], 'true': [nan, 0.11649408284023735], 'true,false': [nan, 0.11649408284023735], 'true,false,false': [nan, 0.11649408284023735]}
{'': [-2.3684757858670006e-16, -3.0839528461809905e-17], 'true': [nan, -2.3684757858670006e-16], 'true,false': [nan, -2.3684757858670006e-16]}
{'': [0.058593750000000146, 5.433006290718851e-17], 'true': [nan, 0.058593750000000146], 'true,false': [nan, 0.058593750000000146]}
{'': [0.05859375000000037, 2.5069552168955147e-17], 'true': [nan, 0.05859375000000037], 'true,false': [nan, 0.05859375000000037]}
{'': [0.021266540642722046, 1.33761810195802e-18], 'true': [nan, 0.021266540642722046], 'true,false': [nan, 0.021266540642722046]}
{'': [0.05859374999999997, 1.203856291762218e-17], 'true': [nan, 0.05859374999999997], 'true,false': [nan, 0.05859374999999997], 'true,false,false': [nan, 0.05859374999999997]}
{'': [0.13888888888888895, 2.348548705937831e-17], 'true': [nan, 0.13888888888888895], 'true,false': [nan, 0.13888888888888895]}
{'': [0.05859374999999994, -7.086529944415892e-18], 'true': [nan, 0.05859374999999994], 'true,false': [nan, 0.05859374999999994], 'true,false,false': [nan, 0.05859374999999994]}
{'': [0.10380622837370246, 1.692413147294446e-17], 'true': [nan, 0.10380622837370246], 'true,false': [nan, 0.10380622837370246], 'true,false,false': [nan, 0.10380622837370246]}
{'': [0.040742417383431394, -3.9092360022012556e-18], 'true': [nan, 0.040742417383431394], 'true,false': [nan, 0.040742417383431394], 'true,false,false': [nan, 0.040742417383431394]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 0.98
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8.56e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6518799681518065;  // std dev = 0.229, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.12544463852839138;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5638624426140386;  // std dev = 0.056, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22168800079525952;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360624;  // std dev = 6.83e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4238838060522143;  // std dev = 0.055, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18324892091113573;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783617;  // std dev = 5.77e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3323056897388963;  // std dev = 3.65e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.27734178975006457;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return -0.09269127618926107;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26187501972084637;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2046405372045265;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839682;  // std dev = 5.05e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21448176896216142;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17321351872283122;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109168;  // std dev = 3.65e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.18146733633508474;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15206019999394374;  // std dev = 0.091, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return -0.07324622576333707;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1571380492580699;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17299312816908488;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420267;  // std dev = 3.80e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13742839664334333;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14891386822424843;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202625;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.331', 'seconds']
Refined model CLL: -0.066897


******************************************
Best model found
******************************************
Results 

CLL : -0.070326 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 0.98 

Total Inference Time : 0.7967982292175293 

Total revision time: 3.5250905723571777
Best scored revision CLL: -0.066897


Results 

CLL : -0.070326 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.580687162399292 

Total Inference Time : 0.7967982292175293 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.906
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07456684554727341;  // std dev = 4.767, 134.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07190426112419536;  // std dev = 4.747, 130.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05104625236190702;  // std dev = 4.781, 137.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.023154556179017616;  // std dev = 4.844, 152.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then return -0.16113839895378435;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06877875883613295;  // std dev = 4.696, 121.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.25517224256948956;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14052690958023933;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051142602656182506;  // std dev = 4.719, 125.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.004775251222985612;  // std dev = 4.837, 150.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.12439561667068169;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03727269884537447;  // std dev = 4.736, 128.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1114670159170999;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03148652142184749;  // std dev = 4.736, 128.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 7.45e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.1008958519623973;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0013213428459786113;  // std dev = 4.812, 144.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.431', 'seconds']
Parameter learned model CLL:-0.23273 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.58e-07, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.767, 105, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.747, 101, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.781, 108, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.844, 123, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 27], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.696, 92, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.719, 96, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.98e-08, 0, 27], 'true,false': [0.0, 0, 0], 'false': [4.837, 121, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 27], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.736, 99, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.736, 99, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [7.45e-09, 0, 27], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.812, 115, 29]}]
{'': [9.210739167260557e-16, 0.16958119848518613], 'true': [9.210739167260557e-16, nan], 'true,true': [9.210739167260557e-16, nan]}
{'': [0.0255494337774553, 0.1733136094674557], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.631639762074445e-16, nan]}
{'': [0.061106447489500726, 0.16687090415046016], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [-9.868649107779169e-17, 0.15438885041551254], 'true': [-9.868649107779169e-17, nan], 'true,true': [-9.868649107779169e-17, nan]}
{'': [0.020896169371205277, 0.18222798989140077], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}
{'': [0.010053748188642984, 0.17817600000000006], 'true': [-1.644774851296528e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-1.644774851296528e-17, nan]}
{'': [3.289549702593056e-17, 0.1559555555555556], 'true': [3.289549702593056e-17, nan]}
{'': [0.003130398426639191, 0.17523193359374928], 'true': [-3.289549702593056e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.0024040808935324293, 0.17523193359375008], 'true': [-3.700743415417188e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.0035430269366613547, 0.1608314043209878], 'true': [2.05596856412066e-18, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), female(A).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.737
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.7891834178581324;  // std dev = 0.253, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7331799252676823;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.12544463852839133;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return 0.692818318046742;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5689667239079204;  // std dev = 1.29e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.2668200747323178;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5701262043122788;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.4298737956877213;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.16524261444262556;  // std dev = 0.290, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4276782758634224;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.21795278539603147;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.10159632948783638;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else if ( female(B) )
%   | | | then return -0.09686635331332215;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09686635331332215;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.42855231398247357;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3276113899532362;  // std dev = 7.45e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.18308426446075984;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926107;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return -0.09269127618926105;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.08871678149298447;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.27931807517859275;  // std dev = 0.186, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2598747329982176;  // std dev = 6.45e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.1572711718574999;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2698013814538849;  // std dev = 9.86e-09, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.4989076300595641;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1.83e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.08518475138839679;  // std dev = 1.67e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.15078686755095005;  // std dev = 0.169, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.20055240845362862;  // std dev = 0.065, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 1.05e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.07116643227684295;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.22004023916791512;  // std dev = 7.45e-09, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1813768586610821;  // std dev = 6.45e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.1630929853705008;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return -0.06660338825733907;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.14497245658500746;  // std dev = 0.151, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1559832470664366;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14203552942694989;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420268;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.06842697784420268;  // std dev = 2.24e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( female(B) )
%   | | | then return -0.06258044243557968;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06258044243557968;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1637694658855757;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.4654888565071718;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1365309200043646;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.12559063202632115;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else return -0.05900816806774203;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.14255684456897913;  // std dev = 4.93e-09, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.3534854732126738;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.688', 'seconds']
Refined model CLL: -0.070477


******************************************
Best model found
******************************************
Results 

CLL : -0.100286 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.737 

Total Inference Time : 1.0007381439208984 

Total revision time: 4.638456457138062
Best scored revision CLL: -0.070477


Results 

CLL : -0.100286 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.659765594482423 

Total Inference Time : 1.0007381439208984 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.871
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10490218185275897;  // std dev = 5.350, 154.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12226565950575309;  // std dev = 5.240, 137.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.059894297211191314;  // std dev = 5.403, 164.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3292085904329905;  // std dev = 0.197, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11180388201435547;  // std dev = 5.186, 130.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3402461747290865;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then return -0.14955606975282854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02201695149661842;  // std dev = 5.445, 173.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2684612617725809;  // std dev = 3.65e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13151342585271372;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04721516669783633;  // std dev = 5.344, 153.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21910240271220008;  // std dev = 2.36e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11720622751037814;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07056681562802479;  // std dev = 5.233, 136.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18392064468455205;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.10561245795300273;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03775924419131998;  // std dev = 5.308, 147.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1579011956995982;  // std dev = 1.67e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09604391081707779;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.00871705651277228;  // std dev = 5.388, 161.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13802052492930805;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.08802279302017918;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 7.318136332099357E-5;  // std dev = 5.413, 166.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.486', 'seconds']
Parameter learned model CLL:-0.269982 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.35, 116, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [7.3e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.24, 99, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.403, 126, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.197, 4, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.186, 92, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.445, 135, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [3.65e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.344, 115, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.36e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.233, 98, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.308, 109, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [1.67e-08, 0, 20], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.86e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.388, 123, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 20], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.413, 128, 38]}]
{'': [0.11342155009451807, 0.18586608196997828], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}
{'': [2.6645352591003756e-16, 0.2004368906175075], 'true': [2.6645352591003756e-16, nan], 'true,true': [2.6645352591003756e-16, nan]}
{'': [0.02102057688057391, 0.17801903628792454], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.038988859584143554, 0.20686390532544377], 'true': [0.038988859584143554, nan], 'true,true': [0.038988859584143554, nan]}
{'': [0.01088010152832286, 0.17140566006214808], 'true': [-1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}
{'': [0.022219409825132277, 0.18668033662266653], 'true': [6.661338147750939e-17, 0.0], 'true,true': [6.661338147750939e-17, nan], 'true,false': [0.0, nan]}
{'': [0.00512941019329648, 0.2013408304498269], 'true': [2.7755575615628914e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.0038017876427632194, 0.19167939284557398], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}
{'': [0.0073143422068543676, 0.18031711739516226], 'true': [1.3877787807814457e-17, 1.1564823173178713e-18], 'true,false': [1.1564823173178713e-18, nan], 'true,false,true': [nan, 1.1564823173178713e-18]}
{'': [0.005795340066874812, 0.17651328204383746], 'true': [-8.326672684688674e-18, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.627
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.6792392193186044;  // std dev = 0.180, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5652782325614896;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.22052460523185585;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.69e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462843;  // std dev = 1.26e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.420062621507464;  // std dev = 0.027, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11826789244429156;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3267923199706174;  // std dev = 4.71e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1677854300340664;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then return 0.30960663837239516;  // std dev = 0.065, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return -0.09267762341199863;  // std dev = 0.001, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25931702948572616;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then return 0.23793975271850276;  // std dev = 0.082, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else if ( actor(A) )
%   | | then return -0.08518581533227466;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.2765719930308565;  // std dev = 0.469, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518581533227469;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21268129379472261;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21406442595039804;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.14800512840900001;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( director(A), actor(B) )
%   | | then return -0.0751157016060608;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.07877766831988234;  // std dev = 1.97e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.07876206546617501;  // std dev = 0.001, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17923785195831052;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14564311747549416;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B), actor(A) )
%   | then return 0.16472160480534076;  // std dev = 0.068, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324771222838283;  // std dev = 2.71e-06, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.0732478627611318;  // std dev = 3.66e-06, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return -0.06926241464360824;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1543663566408356;  // std dev = 4.93e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842762047391575;  // std dev = 2.69e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.06842861562683546;  // std dev = 3.73e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return -0.06514576399907065;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1571770775327224;  // std dev = 5.89e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.15012549668177605;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13527241877046675;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12843887491013567;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.1374585362067261;  // std dev = 3.23e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0641929513657474;  // std dev = 2.38e-06, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.06419302565349692;  // std dev = 3.76e-06, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.14463864032428742;  // std dev = 0.496, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06485208034059232;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.446', 'seconds']
Refined model CLL: -0.068161


******************************************
Best model found
******************************************
Results 

CLL : -0.07827 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.627 

Total Inference Time : 0.9634954929351807 

Total revision time: 4.45438108253479
Best scored revision CLL: -0.068161


Results 

CLL : -0.07827 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.475690219879151 

Total Inference Time : 0.9634954929351807 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.263
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07899260755608688;  // std dev = 8.327, 403.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06533172008017522;  // std dev = 8.347, 410.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 4.15e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360636;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04857684689277491;  // std dev = 8.391, 426.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3072601511715186;  // std dev = 0.212, 113.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05168142546571623;  // std dev = 8.339, 407.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34519026941319075;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then return -0.13326981906108845;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04544788238842527;  // std dev = 8.333, 405.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2718138607702894;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.11861393680342544;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04962663750289957;  // std dev = 8.275, 386.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22144712413118448;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1067634608345887;  // std dev = 1.29e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.028658282535515653;  // std dev = 8.347, 410.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18562382826352544;  // std dev = 1.15e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.09700108856568745;  // std dev = 2.98e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02910879704293779;  // std dev = 8.321, 401.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15918240260291047;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08883039024736657;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.003495245611988074;  // std dev = 8.433, 443.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1390136620270616;  // std dev = 5.37e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.08189824805900588;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.014956606259318262;  // std dev = 8.370, 418.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.473', 'seconds']
Parameter learned model CLL:-0.242551 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.19e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.98e-08, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.327, 314, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [3.04e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.05e-08, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.347, 321, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [4.15e-08, 0, 89], 'true,false,true,true': [1.29e-08, 21, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.391, 337, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.212, 24, 89], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.339, 318, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 89], 'true,false,true': [0.0, 27, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.333, 316, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.275, 297, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 89], 'true,false,true,true': [1.29e-08, 24, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.347, 321, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [1.15e-07, 0, 89], 'true,false,true': [2.98e-08, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.321, 312, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 89], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.433, 354, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [5.37e-08, 0, 89], 'true,false,true': [0.0, 35, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.37, 329, 89]}]
{'': [0.194522232087974, 0.17207174479246862], 'true': [1.5967252488991015e-16, 2.7755575615628914e-17], 'true,true': [1.5967252488991015e-16, nan], 'true,false': [2.7755575615628914e-17, nan], 'true,false,true': [2.7755575615628914e-17, nan]}
{'': [0.14278673981886694, 0.16995240928018931], 'true': [1.037871411784416e-15, 3.2653618371328133e-18], 'true,true': [1.037871411784416e-15, nan], 'true,false': [3.2653618371328133e-18, nan], 'true,false,true': [3.2653618371328133e-18, nan]}
{'': [0.06885957338951791, 0.165272542925785], 'true': [1.7164796425665342e-15, 7.93016446160826e-18], 'true,false': [7.93016446160826e-18, nan], 'true,false,true': [7.93016446160826e-18, nan]}
{'': [0.04507783059159169, 0.17085524210831343], 'true': [0.04507783059159169, nan], 'true,true': [0.04507783059159169, nan]}
{'': [0.04088172615929973, 0.17146166742874364], 'true': [-3.9918131222477537e-16, -2.878355989768924e-17], 'true,false': [-2.878355989768924e-17, nan]}
{'': [0.03229357579501241, 0.17740744717979032], 'true': [-2.2952925452924586e-16, -1.1386902816668272e-17], 'true,false': [-1.1386902816668272e-17, nan], 'true,true': [-2.2952925452924586e-16, nan]}
{'': [0.018019781795482408, 0.16995240928019], 'true': [-1.4969299208429077e-16, 6.938893903907228e-18], 'true,false': [6.938893903907228e-18, nan], 'true,false,true': [6.938893903907228e-18, nan]}
{'': [0.016748929573948666, 0.17268549324941823], 'true': [1.4969299208429077e-16, 2.337311630789803e-17], 'true,false': [2.337311630789803e-17, nan]}
{'': [0.011197587901245285, 0.16054094543156922], 'true': [-3.991813122247754e-17, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [nan, -1.982541115402065e-18]}
{'': [0.00988673610403744, 0.1675843043886365], 'true': [3.2433481618263e-17, -1.5067312477055695e-17], 'true,false': [-1.5067312477055695e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 2.137
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.14185106490048816;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.12544463852839186;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.11231637819360685;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.47e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.10159632948783655;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.09269127618926105;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.09269127618926061;  // std dev = 4.71e-08, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.08518475138839682;  // std dev = 1.58e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 9.88e-08, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839678;  // std dev = 1.29e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.07877675473109146;  // std dev = 6.14e-08, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.073246225763337;  // std dev = 9.06e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06842697784420276;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.06842697784420289;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.376', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.137 

Total Inference Time : 1.062110185623169 

Total revision time: 5.586688423156739
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.607997560501099 

Total Inference Time : 1.062110185623169 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.764
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14386322081379774;  // std dev = 4.928, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1278543229552368;  // std dev = 4.920, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10274661360359348;  // std dev = 4.944, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3339815498988174;  // std dev = 0.196, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07392133066037282;  // std dev = 4.990, 127.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3391755652905651;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09004562971735046;  // std dev = 4.894, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26773478154007896;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09411087870595798;  // std dev = 4.827, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21859366732211757;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08044223995503527;  // std dev = 4.816, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18355063173270514;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.16688461354115575;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.01274402627546876;  // std dev = 5.085, 142.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1576225448110331;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14495210237959008;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06797210409107558;  // std dev = 4.816, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13780432229781417;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.127894328967637;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01825406472821585;  // std dev = 4.944, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.491', 'seconds']
Parameter learned model CLL:-0.32399 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.928, 85, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [4.21e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.92, 84, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false': [4.944, 87, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.196, 2, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.99, 93, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.98e-08, 0, 11], 'true,false': [0.0, 0, 0], 'false': [4.894, 81, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [1.05e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.827, 74, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.49e-08, 0, 11], 'true,false': [0.0, 0, 0], 'false': [4.816, 73, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 11], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.085, 108, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.816, 73, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 11], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.944, 87, 34]}]
{'': [-1.6148698540002277e-16, 0.2040816326530615], 'true': [-1.6148698540002277e-16, nan], 'true,true': [-1.6148698540002277e-16, nan]}
{'': [0.05667137780266877, 0.20511347313990227], 'true': [1.6148698540002277e-16, 0.0], 'true,true': [1.6148698540002277e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [-2.0185873175002846e-16, 0.20203538009698885], 'true': [-2.0185873175002846e-16, nan]}
{'': [0.038376804111409715, 0.19604439208878405], 'true': [0.038376804111409715, nan], 'true,true': [0.038376804111409715, nan]}
{'': [8.074349270001139e-17, 0.20824196597353567], 'true': [8.074349270001139e-17, nan]}
{'': [1.0092936587501423e-17, 0.2157064471879286], 'true': [1.0092936587501423e-17, nan], 'true,true': [1.0092936587501423e-17, nan]}
{'': [2.0185873175002847e-17, 0.21678749235741107], 'true': [2.0185873175002847e-17, nan]}
{'': [0.015986431626410186, 0.18210672485617968], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}
{'': [0.011917935956779062, 0.21678749235741113], 'true': [-5.046468293750712e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.00539273268143804, 0.20203538009698802], 'true': [-5.046468293750712e-18, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.469
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 8.30e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.2805265877890456;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109548;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( actor(A), director(B) )
%   | then return 0.5182729470274015;  // std dev = 0.153, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return -0.11231637819360626;  // std dev = 5.58e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4243495740972432;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19864730659401816;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1015963294878362;  // std dev = 4.71e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.26794250855689633;  // std dev = 0.170, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.3273390635126266;  // std dev = 7.30e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.14834131222958422;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926105;  // std dev = 1.49e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.21242782589512454;  // std dev = 0.171, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2596893220248384;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.1305605743593195;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0851847513883968;  // std dev = 2.11e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.1723611428429398;  // std dev = 0.174, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( actor(B) )
%   | then return -0.07877675473109161;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.21294348511312067;  // std dev = 2.98e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.11644114535698621;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19622304171585966;  // std dev = 1.29e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0.17942960569266378;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1671039351685936;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.4469684491661727;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.0684269778442027;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.15451146013248648;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.12307975482779851;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1451204105788111;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.340763087670824;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13538546175805954;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.11039985715850256;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06548345702197515;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.617', 'seconds']
Refined model CLL: -0.069363


******************************************
Best model found
******************************************
Results 

CLL : -0.075546 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.469 

Total Inference Time : 0.8407225608825684 

Total revision time: 3.910464485168457
Best scored revision CLL: -0.069363


Results 

CLL : -0.075546 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.9317736225128175 

Total Inference Time : 0.8407225608825684 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.784
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06375641173502629;  // std dev = 4.181, 107.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05204416495484202;  // std dev = 4.190, 109.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07262647023557138;  // std dev = 4.118, 96.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3576162864299084;  // std dev = 0.166, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.024934003582338226;  // std dev = 4.218, 115.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3338984858252428;  // std dev = 5.58e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then return -0.13919456565795618;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04796448338393504;  // std dev = 4.148, 101.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2641510911607802;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01796221446099426;  // std dev = 4.209, 113.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2160806127449728;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1233382809491011;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02247820170894136;  // std dev = 4.190, 109.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1817203383193146;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.11060967455134837;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.005269701880090797;  // std dev = 4.254, 124.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.156242532303116;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07097003021039891;  // std dev = 4.054, 87.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13673250178093727;  // std dev = 1.67e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0019860574698442623;  // std dev = 4.209, 113.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.561', 'seconds']
Parameter learned model CLL:-0.226339 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [8.43e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.181, 85, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.96e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.19, 87, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 23], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.118, 74, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.166, 3, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.218, 93, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [5.58e-08, 0, 23], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.148, 79, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.0, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.209, 91, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 23], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.19, 87, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 23], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.254, 102, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 23], 'true,false': [0.0, 0, 0], 'false': [4.054, 65, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.67e-08, 0, 23], 'true,false': [0.0, 0, 0], 'false': [4.209, 91, 22]}]
{'': [0.07360000000000064, 0.1633330421870906], 'true': [3.089316242435218e-16, 0.0], 'true,true': [3.089316242435218e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.07286711443801365, 0.16109755071121967], 'true': [1.544658121217609e-16, 0.0], 'true,true': [1.544658121217609e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.045503289281446285, 0.17664930555555527], 'true': [-2.703151712130816e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}
{'': [0.027505594776263347, 0.1547069943289225], 'true': [0.027505594776263347, nan], 'true,true': [0.027505594776263347, nan]}
{'': [0.016472933802620132, 0.17037545338692278], 'true': [1.351575856065408e-16, 0.0], 'true,false': [0.0, nan]}
{'': [-4.827056628805028e-17, 0.15678596601143402], 'true': [-4.827056628805028e-17, nan], 'true,true': [-4.827056628805028e-17, nan]}
{'': [0.01453892600340031, 0.16109755071121956], 'true': [-9.654113257610057e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.006289623160877191, 0.1459417273673258], 'true': [-9.654113257610057e-18, 0.0], 'true,false': [0.0, nan]}
{'': [-2.413528314402514e-17, 0.18892852424362533], 'true': [-2.413528314402514e-17, nan]}
{'': [1.206764157201257e-17, 0.15678596601143396], 'true': [1.206764157201257e-17, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.771
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), director(B) )
%   | then return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return -0.14185106490048766;  // std dev = 7.45e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.12544463852839147;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0.6448310569067602;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6.32e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0.5408332924502923;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 7.45e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.4500830801827041;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.33111664900545124;  // std dev = 0.438, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 6.45e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.08329384270360538;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then return 0.2753747880953496;  // std dev = 0.224, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926105;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.09269127618926105;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12457830344524161;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.24132545595949237;  // std dev = 0.066, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 2.24e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.08518475138839679;  // std dev = 2.24e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.08436733212740342;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.28377902448566245;  // std dev = 8.33e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.5360854421547374;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2120621755262956;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.09618243844044169;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(B) )
%   | | | then return -0.07878084723755978;  // std dev = 8.10e-05, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.1745163083297986;  // std dev = 0.183, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17878487336206128;  // std dev = 4.56e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.08813974542298605;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(B) )
%   | | | then return -0.07324847098584243;  // std dev = 5.42e-05, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.07317189435196796;  // std dev = 0.002, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.20035321545948961;  // std dev = 3.73e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.44596782089055137;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.15402345739770237;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842677038695379;  // std dev = 1.23e-06, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.06842943816078625;  // std dev = 1.71e-05, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.06747806260561251;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.11861907173175124;  // std dev = 0.174, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13500520251275566;  // std dev = 4.17e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.09358056184230716;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06419175282918373;  // std dev = 5.21e-07, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.06419409035051327;  // std dev = 1.36e-05, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.06303946809710206;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.13140300704268237;  // std dev = 0.106, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.668', 'seconds']
Refined model CLL: -0.075229


******************************************
Best model found
******************************************
Results 

CLL : -0.0952 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.771 

Total Inference Time : 0.9131889343261719 

Total revision time: 4.338384323120117
Best scored revision CLL: -0.075229


Results 

CLL : -0.0952 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.359693460464477 

Total Inference Time : 0.9131889343261719 

Run: 5
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.842
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05409488104545811;  // std dev = 4.829, 148.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07113254278174837;  // std dev = 4.757, 132.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.047884851489349414;  // std dev = 4.800, 141.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06961380981138711;  // std dev = 4.714, 124.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then return -0.1465277125760932;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033104686574416425;  // std dev = 4.795, 140.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.25517224256948956;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1291352689757512;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.011941074073383394;  // std dev = 4.844, 152.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1152948690182349;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03420599927561791;  // std dev = 4.772, 135.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.10404596413741511;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.025952485126821898;  // std dev = 4.781, 137.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.003650087167235275;  // std dev = 4.837, 150.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 7.45e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.09473859223841925;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.031129132850724262;  // std dev = 4.752, 131.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.513', 'seconds']
Parameter learned model CLL:-0.226604 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.58e-07, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.829, 119, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.757, 103, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.8, 112, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.714, 95, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 27], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.795, 111, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.844, 123, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.98e-08, 0, 27], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.772, 106, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 27], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.781, 108, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 27], 'true,false': [0.0, 0, 0], 'false': [4.837, 121, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [7.45e-09, 0, 27], 'true,false,true': [1.86e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.752, 102, 29]}]
{'': [0.03443877551020513, 0.15755113221329445], 'true': [9.210739167260557e-16, 0.0], 'true,true': [9.210739167260557e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.02458537734255049, 0.17143021120293847], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.631639762074445e-16, nan]}
{'': [0.02862451656809375, 0.16337206377948843], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [-9.868649107779169e-17, 0.1791753381893859], 'true': [-9.868649107779169e-17, nan], 'true,true': [-9.868649107779169e-17, nan]}
{'': [0.024534633785340165, 0.16423469387755107], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}
{'': [0.0050863407048629605, 0.15438885041551254], 'true': [-1.644774851296528e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-1.644774851296528e-17, nan]}
{'': [0.003638772876632612, 0.16866941015089174], 'true': [3.289549702593056e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.005075170664883339, 0.16687090415046146], 'true': [-3.289549702593056e-17, 0.0], 'true,false': [0.0, nan]}
{'': [-3.700743415417188e-17, 0.15595555555555551], 'true': [-3.700743415417188e-17, nan]}
{'': [0.004709210372721597, 0.17236757764699034], 'true': [2.05596856412066e-18, 1.1564823173178713e-18], 'true,false': [1.1564823173178713e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), female(A).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.912
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else return 0.7936328060672536;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.12544463852839108;  // std dev = 7.88e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else return 0.6677924726556775;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then return 0.5193281351702467;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360647;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.11231637819360649;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360649;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.12400250733221757;  // std dev = 0.298, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.10053463881320822;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0.39041814890907034;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.16113839895378435;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926104;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.09269127618926105;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926105;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.09180162340252317;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.36096653682024454;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.6390334631797555;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14052690958023933;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.0851847513883968;  // std dev = 2.17e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839682;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.08442919301244305;  // std dev = 1.49e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0.2569734026923183;  // std dev = 0.137, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.27e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.1243956166706817;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 5.27e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.0781275831243609;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.2334178805350551;  // std dev = 4.56e-09, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.547137477146221;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.1114670159170999;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07268277770188353;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.17407526677897633;  // std dev = 0.109, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.1008958519623973;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.06842697784420276;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.0679335539317633;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0.12828906735918927;  // std dev = 0.153, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.09210446400231975;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202622;  // std dev = 3.73e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06419184008202623;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(B) )
%   | | | then return -0.06419184008202623;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06375631327563443;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0.11012382584844002;  // std dev = 0.157, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.570', 'seconds']
Refined model CLL: -0.077157


******************************************
Best model found
******************************************
Results 

CLL : -0.119657 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.332653 

Recall : 1.0 

F1 : 0.499234 

Total Learning Time : 1.912 

Total Inference Time : 1.0459959506988525 

Total revision time: 4.811395696640014
Best scored revision CLL: -0.077157


Results 

CLL : -0.119657 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.332653 

Recall : 1.0 

F1 : 0.499234 

Total Learning Time : 4.829872898101806 

Total Inference Time : 1.0459959506988525 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.916
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1295775065280836;  // std dev = 5.262, 140.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14321944396065453;  // std dev = 5.152, 126.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10100848305578103;  // std dev = 5.233, 136.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.33099526521728545;  // std dev = 0.193, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05306093932607275;  // std dev = 5.350, 154.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33984521881958585;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043047256727294696;  // std dev = 5.356, 155.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2681892080336278;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13603538041415703;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.023983755461099713;  // std dev = 5.398, 163.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21891191806912932;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1208237840531833;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04892921706152347;  // std dev = 5.295, 145.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.183782121409017;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.10856572303556643;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0461447740233934;  // std dev = 5.276, 142.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15779688908292883;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04190947300946518;  // std dev = 5.262, 140.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1379396029655231;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.09849660713950315;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0038854044458737657;  // std dev = 5.398, 163.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.525', 'seconds']
Parameter learned model CLL:-0.279186 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.262, 102, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.3e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.152, 88, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.233, 98, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.193, 4, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.35, 116, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.356, 117, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.398, 125, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.295, 107, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [2.11e-08, 0, 20], 'true,false,true': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.276, 104, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [5.262, 102, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.398, 125, 38]}]
{'': [0.08264462809917356, 0.1977551020408166], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}
{'': [0.08097011483536962, 0.21063240110859155], 'true': [2.6645352591003756e-16, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.03684300341868208, 0.20134083044982787], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.03742709756190423, 0.18586608196997814], 'true': [0.03742709756190423, nan], 'true,true': [0.03742709756190423, nan]}
{'': [-1.3322676295501878e-16, 0.18505723204994803], 'true': [-1.3322676295501878e-16, nan]}
{'': [0.007410318272370968, 0.17877978094772085], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan]}
{'': [0.005234482870591394, 0.19338882282996425], 'true': [-1.6653345369377347e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.009693829355545703, 0.19599285855980972], 'true': [2.2204460492503132e-17, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}
{'': [-2.7755575615628914e-17, 0.1977551020408164], 'true': [-2.7755575615628914e-17, nan]}
{'': [0.002535241789062498, 0.1787797809477212], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 2.316
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048782;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.1254446385283911;  // std dev = 7.15e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.1123163781936064;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.11231637819360633;  // std dev = 3.33e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.5382463645683383;  // std dev = 0.106, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.42168290304824163;  // std dev = 1.29e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.17813282143733758;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.11253011405205074;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601496;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3235397700134522;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.15352955982174835;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926104;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.09269127618926105;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( female(B) )
%   | | | then return -0.09177583521096046;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10939444158836922;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948945;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1.05e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.08518475138839679;  // std dev = 1.67e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.0830555952487343;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.2470568150808024;  // std dev = 0.062, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21279688224764923;  // std dev = 7.90e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.16608179624748495;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07877675473109168;  // std dev = 3.33e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.07736564622015625;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10348474263952173;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 9.13e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return -0.07077313280174567;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17932239339640785;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.14433564919211617;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.14198242552905138;  // std dev = 0.048, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06842697784420267;  // std dev = 3.25e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return -0.06598857040296827;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.154430334453037;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13526081111927718;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08348750138407646;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202622;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.06419184008202625;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else return -0.062105792250794926;  // std dev = 0.000690, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1353222632246239;  // std dev = 6.97e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.14558685338716518;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.762', 'seconds']
Refined model CLL: -0.067596


******************************************
Best model found
******************************************
Results 

CLL : -0.081225 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 2.316 

Total Inference Time : 1.0507640838623047 

Total revision time: 5.28011143875122
Best scored revision CLL: -0.067596


Results 

CLL : -0.081225 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 5.298588640213012 

Total Inference Time : 1.0507640838623047 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.299
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08120657920978694;  // std dev = 8.316, 399.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05987811793851125;  // std dev = 8.375, 420.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 4.15e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06540879732406271;  // std dev = 8.303, 395.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3036736908148576;  // std dev = 0.215, 114.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04608471745660714;  // std dev = 8.359, 414.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34600138067942887;  // std dev = 2.15e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then return -0.13285609530272957;  // std dev = 1.49e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04815913639750897;  // std dev = 8.313, 398.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2723635363840554;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.11828264525333408;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02066082458614528;  // std dev = 8.421, 438.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22183108658712808;  // std dev = 1.15e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10649278897864012;  // std dev = 1.49e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.023773066763993295;  // std dev = 8.388, 425.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18590239654965401;  // std dev = 4.21e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.09677614288728988;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02416972927595127;  // std dev = 8.367, 417.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15939173036297824;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08864070306581691;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.019414480862180585;  // std dev = 8.372, 419.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1391757778057857;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.08173627195488754;  // std dev = 9.13e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.027019811771799632;  // std dev = 8.316, 399.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.797', 'seconds']
Parameter learned model CLL:-0.242527 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.19e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.11e-08, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.316, 310, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [3.04e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 28, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.375, 331, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [4.15e-08, 0, 89], 'true,false,true,true': [0.0, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.303, 306, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.215, 25, 89], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.359, 325, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [2.15e-07, 0, 89], 'true,false,true': [1.49e-08, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.313, 309, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 29, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.421, 349, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.15e-07, 0, 89], 'true,false,true,true': [1.49e-08, 29, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.388, 336, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [4.21e-08, 0, 89], 'true,false,true': [0.0, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.367, 328, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 89], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.372, 330, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 89], 'true,false,true': [9.13e-09, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.316, 310, 89]}]
{'': [0.17497164461247805, 0.17330293151424947], 'true': [1.5967252488991015e-16, 1.708035422500241e-17], 'true,true': [1.5967252488991015e-16, nan], 'true,false': [1.708035422500241e-17, nan], 'true,false,true': [1.708035422500241e-17, nan]}
{'': [0.12995873979569236, 0.16700113378684822], 'true': [1.037871411784416e-15, -5.9476233462061954e-18], 'true,true': [1.037871411784416e-15, nan], 'true,false': [-5.9476233462061954e-18, nan], 'true,false,true': [-5.9476233462061954e-18, nan]}
{'': [0.0867180774681055, 0.1745489504887052], 'true': [1.7164796425665342e-15, -1.0408340855860843e-17], 'true,false': [-1.0408340855860843e-17, nan], 'true,false,true': [-1.0408340855860843e-17, nan]}
{'': [0.046135895886557594, 0.16876123130061405], 'true': [0.046135895886557594, nan], 'true,true': [0.046135895886557594, nan]}
{'': [0.04702025992332981, 0.1736130400747447], 'true': [5.18935705892208e-16, 6.1679056923619804e-18], 'true,false': [6.1679056923619804e-18, nan]}
{'': [0.0282872779120321, 0.16190759158482926], 'true': [-2.1954972172362646e-16, -1.3399243400648442e-17], 'true,false': [-1.3399243400648442e-17, nan], 'true,true': [-2.1954972172362646e-16, nan]}
{'': [0.01998153835930095, 0.16555847750865052], 'true': [1.4969299208429077e-16, 7.656710514656252e-18], 'true,false': [7.656710514656252e-18, nan], 'true,false,true': [7.656710514656252e-18, nan]}
{'': [0.015066175289697373, 0.16787720902414788], 'true': [1.995906561123877e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.011199361485664585, 0.16729228017612133], 'true': [-1.197543936674326e-16, -4.956352788505163e-18], 'true,false': [-4.956352788505163e-18, nan], 'true,false,true': [nan, -4.956352788505163e-18]}
{'': [0.007755423897596502, 0.17330293151425022], 'true': [-6.237208003512116e-17, 3.784851220313033e-18], 'true,false': [3.784851220313033e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 2.075
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.14185106490048804;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.12544463852839186;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.1123163781936064;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.11231637819360682;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878363;  // std dev = 2.24e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.10159632948783646;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.09269127618926105;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.0926912761892607;  // std dev = 9.66e-08, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.0851847513883968;  // std dev = 2.04e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.08518475138839678;  // std dev = 8.16e-08, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.07877675473109146;  // std dev = 5.16e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07324622576333704;  // std dev = 1.18e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.07324622576333684;  // std dev = 1.01e-07, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06419184008202622;  // std dev = 3.73e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.438', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.075 

Total Inference Time : 1.1288623809814453 

Total revision time: 5.539777683258057
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.558254884719849 

Total Inference Time : 1.1288623809814453 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.798
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17007554060409916;  // std dev = 4.837, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09769775174692212;  // std dev = 5.011, 130.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10102039913980446;  // std dev = 4.952, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.33600128225801507;  // std dev = 0.191, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07480573845554211;  // std dev = 4.990, 127.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3387230187170114;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, A) )
%   | | then return -0.15042208396516424;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04334925571814763;  // std dev = 5.056, 137.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26742764213410536;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13219183660659178;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06671182782383947;  // std dev = 4.952, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21837851451874382;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1177503519539218;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.036207550360129244;  // std dev = 5.018, 131.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18339409596685555;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.1060576291177562;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04451584118303633;  // std dev = 4.968, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1575046265965848;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09641430916519289;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02189367510605382;  // std dev = 5.018, 131.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13771280860482848;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.014001521805027351;  // std dev = 5.031, 133.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.540', 'seconds']
Parameter learned model CLL:-0.296563 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.837, 75, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [4.21e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.011, 96, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.952, 88, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.191, 2, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.99, 93, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [1.49e-08, 0, 11], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.056, 103, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.952, 88, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.018, 97, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 11], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.968, 90, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.018, 97, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [5.27e-09, 0, 11], 'true,false': [0.0, 0, 0], 'false': [5.031, 99, 34]}]
{'': [0.13017751479289916, 0.21462839828297312], 'true': [-1.6148698540002277e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.6148698540002277e-16, nan]}
{'': [1.6148698540002277e-16, 0.19313609467455636], 'true': [1.6148698540002277e-16, nan], 'true,true': [1.6148698540002277e-16, nan]}
{'': [0.035406534183216966, 0.20102123085192075], 'true': [-2.0185873175002846e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.036543404485966526, 0.19604439208878394], 'true': [0.036543404485966526, nan], 'true,true': [0.036543404485966526, nan]}
{'': [0.03114665380186415, 0.1865842612819005], 'true': [2.0185873175002847e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.012198979206103125, 0.20102123085192153], 'true': [-1.0092936587501423e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-1.0092936587501423e-17, nan]}
{'': [0.014707796019386864, 0.19217994289377088], 'true': [-2.0185873175002847e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.014106203765801541, 0.19901144640998952], 'true': [-5.046468293750712e-18, 0.0], 'true,false': [0.0, nan]}
{'': [0.004925160314738416, 0.19217994289377058], 'true': [5.046468293750712e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [2.523234146875356e-18, 0.19028774944881088], 'true': [2.523234146875356e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.565
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048768;  // std dev = 6.14e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109548;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462844;  // std dev = 7.30e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11231637819360624;  // std dev = 6.14e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783615;  // std dev = 5.96e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 2.58e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601495;  // std dev = 2.11e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0.23626352068294032;  // std dev = 0.078, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return -0.08767543911655255;  // std dev = 0.181, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07859619261513232;  // std dev = 1.67e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.0785961926151323;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.2038120317160706;  // std dev = 0.053, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07308956614057988;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.18074772828979943;  // std dev = 8.33e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.1263279100614612;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367094;  // std dev = 1.86e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15550807746047554;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.11303058595730574;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0682898332557161;  // std dev = 6.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.06828983325571605;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.07030284277216098;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.11627504794641925;  // std dev = 0.059, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1361613324241625;  // std dev = 4.17e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.10218467952628105;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06407082352140804;  // std dev = 1.05e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06407082352140804;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.1263654624687236;  // std dev = 0.216, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06395021776561258;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.659', 'seconds']
Refined model CLL: -0.066387


******************************************
Best model found
******************************************
Results 

CLL : -0.069167 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.565 

Total Inference Time : 0.8762457370758057 

Total revision time: 4.071189487457275
Best scored revision CLL: -0.066387


Results 

CLL : -0.069167 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.089666688919067 

Total Inference Time : 0.8762457370758057 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.852
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03701072371739842;  // std dev = 4.250, 123.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.050012222211983426;  // std dev = 4.205, 112.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06081425624818269;  // std dev = 4.159, 103.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583099;  // std dev = 7.45e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03216560066124043;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2.98e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then return -0.1465277125760932;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.015122612115757146;  // std dev = 4.247, 122.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694895;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12913526897575117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04024574323643276;  // std dev = 4.175, 106.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253573;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03072026229809845;  // std dev = 4.186, 108.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.1152948690182349;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.007451416047393947;  // std dev = 4.235, 119.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936709;  // std dev = 2.58e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10404596413741511;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.00482069679861142;  // std dev = 4.239, 120.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.09473859223841925;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02261419461906779;  // std dev = 4.190, 109.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.517', 'seconds']
Parameter learned model CLL:-0.214274 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [8.43e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.25, 101, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.96e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.205, 90, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 23], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.159, 81, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [7.45e-09, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.214, 92, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [2.98e-08, 0, 23], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.247, 100, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.175, 84, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.49e-08, 0, 23], 'true,false': [0.0, 0, 0], 'false': [4.186, 86, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 23], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.235, 97, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [2.58e-08, 0, 23], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.239, 98, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 23], 'true,false,true': [1.86e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.19, 87, 22]}]
{'': [0.039930555555556024, 0.14687024919029684], 'true': [3.089316242435218e-16, 0.0], 'true,true': [3.089316242435218e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.028505885046352653, 0.15784438775510207], 'true': [1.544658121217609e-16, 0.0], 'true,true': [1.544658121217609e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.017801055297602637, 0.16797059100763495], 'true': [-2.703151712130816e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [7.723290606088045e-17, 0.15574022776238847], 'true': [7.723290606088045e-17, nan], 'true,true': [7.723290606088045e-17, nan]}
{'': [0.022283407731647557, 0.1478097285675892], 'true': [3.8616453030440226e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.021664043742934885, 0.16447134211463157], 'true': [-9.654113257610057e-18, -5.551115123125783e-18], 'true,false': [-5.551115123125783e-18, nan], 'true,true': [-9.654113257610057e-18, nan]}
{'': [9.654113257610057e-18, 0.16220850480109753], 'true': [9.654113257610057e-18, nan]}
{'': [0.00872632704687956, 0.1506955723465852], 'true': [-2.896233977283017e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.004853258542188419, 0.14972222222222215], 'true': [2.896233977283017e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.005340820442435736, 0.16109755071121956], 'true': [0.0, 1.1564823173178713e-18], 'true,false': [1.1564823173178713e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), female(A).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.325
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.45e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0.7748156017661786;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), director(B) )
%   | then return 0.7359812264346158;  // std dev = 1.12e-07, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.12874402269593896;  // std dev = 0.194, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.11198784547189429;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0.528322784143851;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.3759847910666182;  // std dev = 0.141, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   else if ( actor(B) )
%   | then return -0.10132548722961407;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0.39702505895359275;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32982568222329456;  // std dev = 6.66e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.1414100905718629;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.09246445606745726;  // std dev = 2.58e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0.26278522757154094;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26138174445833157;  // std dev = 4.47e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12509549023882466;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.08499221756714652;  // std dev = 3.80e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.2892704531173696;  // std dev = 4.71e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.7107295468826301;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21413455622607624;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.11203381953402373;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.07861140426839633;  // std dev = 3.94e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.2335809558828447;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.5469117044060928;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18030010809778318;  // std dev = 3.33e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.10136339596257318;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.07310276585896365;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1943824825925313;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.41127154693633666;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15516979909607143;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.09249620872995108;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06830139004697974;  // std dev = 1.05e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.16573461008710477;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.3164828054881542;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13589808781648322;  // std dev = 2.47e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.08501917452502955;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06408102231254544;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.14406887833777884;  // std dev = 2.24e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.2522843932742745;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.489', 'seconds']
Refined model CLL: -0.069607


******************************************
Best model found
******************************************
Results 

CLL : -0.085313 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.325 

Total Inference Time : 0.8792233467102051 

Total revision time: 3.9527353782653805
Best scored revision CLL: -0.069607


Results 

CLL : -0.085313 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.9712125797271725 

Total Inference Time : 0.8792233467102051 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.862
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7761817219847584;  // std dev = 2.142, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7012329275228552;  // std dev = 0.182, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   else return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5454714337150114;  // std dev = 0.182, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   else return -0.11231637819360621;  // std dev = 8.16e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.39366056009460515;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.10159632948783641;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31608451173710106;  // std dev = 1.390, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   else return -0.09269127618926107;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23154375758226778;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.08518475138839678;  // std dev = 4.59e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1559422965209996;  // std dev = 2.142, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   else return -0.07877675473109158;  // std dev = 5.96e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11402460004090026;  // std dev = 2.328, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   else return -0.07324622576333707;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14160670495101527;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.06842697784420265;  // std dev = 5.00e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12055098146115974;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   else return -0.06419184008202626;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.507', 'seconds']
Parameter learned model CLL:-0.122509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.142, 5, 56], 'false': [8.43e-08, 108, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.182, 2, 56], 'false': [0.0, 106, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.182, 2, 56], 'false': [8.16e-08, 106, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.687, 3, 56], 'false': [0.0, 136, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.39, 2, 56], 'false': [0.0, 84, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.687, 3, 56], 'false': [4.59e-08, 107, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.142, 5, 56], 'false': [5.96e-08, 105, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.328, 6, 56], 'false': [0.0, 109, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.687, 3, 56], 'false': [5e-08, 104, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.687, 3, 56], 'false': [0.0, 113, 0]}]
{'': [0.07524858908895435, 6.579099405186112e-17], 'true': [nan, 0.07524858908895435], 'true,false': [nan, 0.07524858908895435], 'true,false,false': [nan, 0.07524858908895435]}
{'': [0.03329369797859768, -8.3790416952842e-18], 'true': [nan, 0.03329369797859768], 'true,false': [nan, 0.03329369797859768]}
{'': [0.03329369797859664, 6.28428127146315e-17], 'true': [nan, 0.03329369797859664], 'true,false': [nan, 0.03329369797859664]}
{'': [0.04826199367997725, -3.918434204559376e-17], 'true': [nan, 0.04826199367997725], 'true,false': [nan, 0.04826199367997725]}
{'': [0.03329369797859711, -1.32169407693471e-18], 'true': [nan, 0.03329369797859711], 'true,false': [nan, 0.03329369797859711]}
{'': [0.048261993679976876, 1.9714240624185022e-17], 'true': [nan, 0.048261993679976876], 'true,false': [nan, 0.048261993679976876], 'true,false,false': [nan, 0.048261993679976876]}
{'': [0.07524858908895457, 3.3835368369528583e-17], 'true': [nan, 0.07524858908895457], 'true,false': [nan, 0.07524858908895457]}
{'': [0.08740894901144643, -3.0556597008031833e-18], 'true': [nan, 0.08740894901144643], 'true,false': [nan, 0.08740894901144643], 'true,false,false': [nan, 0.08740894901144643]}
{'': [0.04826199367997709, 2.4019248128909638e-17], 'true': [nan, 0.04826199367997709], 'true,false': [nan, 0.04826199367997709], 'true,false,false': [nan, 0.04826199367997709]}
{'': [0.04826199367997701, -1.5719972030090712e-17], 'true': [nan, 0.04826199367997701], 'true,false': [nan, 0.04826199367997701], 'true,false,false': [nan, 0.04826199367997701]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.0
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.7936328060672536;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6837591264966688;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.6989752683546022;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.12544463852839138;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5704235996126442;  // std dev = 0.045, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.42828197087182124;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360618;  // std dev = 9.42e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4287977429916194;  // std dev = 0.045, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.33484020003844445;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783633;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3283858182243158;  // std dev = 0.041, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2584672110983348;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926089;  // std dev = 6.66e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26040984961218944;  // std dev = 0.035, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.21139705779886953;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839682;  // std dev = 5.58e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21345551497641171;  // std dev = 0.031, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1813333753862213;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109157;  // std dev = 6.66e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17980695190831913;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15810289431400967;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333707;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15479889804112676;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13471688998395964;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420265;  // std dev = 5.05e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.135610693873416;  // std dev = 0.022, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12159789911789008;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.465', 'seconds']
Refined model CLL: -0.065123


******************************************
Best model found
******************************************
Results 

CLL : -0.068657 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.0 

Total Inference Time : 1.0091967582702637 

Total revision time: 4.038265954971314
Best scored revision CLL: -0.065123


Results 

CLL : -0.068657 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.094284545898438 

Total Inference Time : 1.0091967582702637 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.854
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7936328060672545;  // std dev = 1.934, 62.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   else return -0.14185106490048763;  // std dev = 8.94e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6246162939956271;  // std dev = 0.310, 65.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   else return -0.12544463852839127;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.514930249837914;  // std dev = 0.270, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   else return -0.11231637819360628;  // std dev = 6.50e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4175739593474655;  // std dev = 1.689, 61.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   else return -0.10159632948783628;  // std dev = 2.98e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.30117352412020254;  // std dev = 1.934, 62.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   else return -0.09269127618926103;  // std dev = 3.16e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20527881652450858;  // std dev = 2.332, 64.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   else return -0.0851847513883968;  // std dev = 6.14e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.25784382067241957;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.07877675473109155;  // std dev = 6.91e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11789311169523126;  // std dev = 2.332, 64.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   else return -0.07324622576333707;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05831225163538245;  // std dev = 2.791, 67.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=58 */
%   else return -0.06842697784420265;  // std dev = 5.16e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0899834584182073;  // std dev = 2.332, 64.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   else return -0.06419184008202626;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.634', 'seconds']
Parameter learned model CLL:-0.143817 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.934, 4, 58], 'false': [8.94e-08, 100, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.31, 7, 58], 'false': [0.0, 128, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.27, 5, 58], 'false': [6.5e-08, 97, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.689, 3, 58], 'false': [2.98e-08, 102, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.934, 4, 58], 'false': [3.16e-08, 99, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.332, 6, 58], 'false': [6.14e-08, 114, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 58], 'false': [6.91e-08, 121, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.332, 6, 58], 'false': [0.0, 108, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.791, 9, 58], 'false': [5.16e-08, 108, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.332, 6, 58], 'false': [0.0, 127, 0]}]
{'': [0.06035379812695064, 7.993605777301127e-17], 'true': [nan, 0.06035379812695064], 'true,false': [nan, 0.06035379812695064], 'true,false,false': [nan, 0.06035379812695064]}
{'': [0.0960946745562141, 0.0], 'true': [nan, 0.0960946745562141], 'true,false': [nan, 0.0960946745562141]}
{'': [0.07306626354245455, 4.349327312964531e-17], 'true': [nan, 0.07306626354245455], 'true,false': [nan, 0.07306626354245455]}
{'': [0.04676162321956417, 8.707631565687502e-18], 'true': [nan, 0.04676162321956417], 'true,false': [nan, 0.04676162321956417]}
{'': [0.06035379812695111, 1.0092936587501423e-17], 'true': [nan, 0.06035379812695111], 'true,false': [nan, 0.06035379812695111]}
{'': [0.08496093750000011, 3.311191476952221e-17], 'true': [nan, 0.08496093750000011], 'true,false': [nan, 0.08496093750000011], 'true,false,false': [nan, 0.08496093750000011]}
{'': [-2.8329828904228135e-16, 3.9454206660232834e-17], 'true': [nan, -2.8329828904228135e-16], 'true,false': [nan, -2.8329828904228135e-16]}
{'': [0.08496093749999997, -5.13992141030165e-18], 'true': [nan, 0.08496093749999997], 'true,false': [nan, 0.08496093749999997], 'true,false,false': [nan, 0.08496093749999997]}
{'': [0.11628425038984185, 2.4671622769447922e-17], 'true': [nan, 0.11628425038984185], 'true,false': [nan, 0.11628425038984185], 'true,false,false': [nan, 0.11628425038984185]}
{'': [0.08496093750000004, -1.4861253085533593e-17], 'true': [nan, 0.08496093750000004], 'true,false': [nan, 0.08496093750000004], 'true,false,false': [nan, 0.08496093750000004]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 0.951
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839136;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360621;  // std dev = 8.43e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783631;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.092691276189261;  // std dev = 3.94e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839682;  // std dev = 5.58e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109158;  // std dev = 6.14e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333707;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420265;  // std dev = 5.16e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.265', 'seconds']
Refined model CLL: -0.063422


******************************************
Best model found
******************************************
Results 

CLL : -0.064225 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 0.951 

Total Inference Time : 0.9654240608215332 

Total revision time: 3.7789501476287843
Best scored revision CLL: -0.063422


Results 

CLL : -0.064225 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.8349687385559084 

Total Inference Time : 0.9654240608215332 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.231
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6155957436101471;  // std dev = 6.571, 235.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=178 */
%   else return -0.1418510649004881;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.516793628841151;  // std dev = 0.432, 237.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=178 */
%   else return -0.12544463852839177;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.39955714407154425;  // std dev = 0.439, 241.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=178 */
%   else return -0.11231637819360636;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3338563550418273;  // std dev = 6.437, 232.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=178 */
%   else return -0.10159632948783658;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21306341225289321;  // std dev = 6.939, 244.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=178 */
%   else return -0.09269127618926068;  // std dev = 9.88e-08, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1632420316397029;  // std dev = 6.900, 243.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=178 */
%   else return -0.08518475138839678;  // std dev = 9.88e-08, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16180148526922217;  // std dev = 6.391, 231.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=178 */
%   else return -0.07877675473109146;  // std dev = 4.21e-08, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13415145762556277;  // std dev = 6.248, 228.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=178 */
%   else return -0.07324622576333675;  // std dev = 1.26e-07, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02977744492444611;  // std dev = 7.230, 252.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=178 */
%   else return -0.06842697784420279;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09085986696019606;  // std dev = 6.344, 230.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=178 */
%   else return -0.06419184008202626;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.428', 'seconds']
Parameter learned model CLL:-0.2604 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.571, 57, 178], 'false': [0.0, 297, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.432, 59, 178], 'false': [0.0, 289, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.439, 63, 178], 'false': [0.0, 288, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.437, 54, 178], 'false': [0.0, 286, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.939, 66, 178], 'false': [9.88e-08, 300, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.9, 65, 178], 'false': [9.88e-08, 304, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.391, 53, 178], 'false': [4.21e-08, 309, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.248, 50, 178], 'false': [1.26e-07, 326, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.23, 74, 178], 'false': [0.0, 297, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.344, 52, 178], 'false': [0.0, 323, 0]}]
{'': [0.18372114078769256, -7.775299297038134e-17], 'true': [nan, 0.18372114078769256], 'true,false': [nan, 0.18372114078769256], 'true,false,false': [nan, 0.18372114078769256]}
{'': [0.18697146112624471, -5.224578939412501e-17], 'true': [nan, 0.18697146112624471], 'true,false': [nan, 0.18697146112624471]}
{'': [0.193075188099376, -3.0839528461809902e-18], 'true': [nan, 0.193075188099376], 'true,false': [nan, 0.193075188099376]}
{'': [0.17858204518430287, -5.900486005000832e-17], 'true': [nan, 0.17858204518430287], 'true,false': [nan, 0.17858204518430287]}
{'': [0.1973259876377322, 3.256654205567126e-17], 'true': [nan, 0.1973259876377322], 'true,false': [nan, 0.1973259876377322]}
{'': [0.19593896594353857, 3.2138034923359796e-17], 'true': [nan, 0.19593896594353857], 'true,false': [nan, 0.19593896594353857], 'true,false,false': [nan, 0.19593896594353857]}
{'': [0.17679578718539668, 5.748727635599516e-18], 'true': [nan, 0.17679578718539668], 'true,false': [nan, 0.17679578718539668]}
{'': [0.1712065250846416, 4.904052624111121e-17], 'true': [nan, 0.1712065250846416], 'true,false': [nan, 0.1712065250846416], 'true,false,false': [nan, 0.1712065250846416]}
{'': [0.2074200050390528, -8.22387425648264e-18], 'true': [nan, 0.2074200050390528], 'true,false': [nan, 0.2074200050390528], 'true,false,false': [nan, 0.2074200050390528]}
{'': [0.17497164461247672, -7.561890570202304e-18], 'true': [nan, 0.17497164461247672], 'true,false': [nan, 0.17497164461247672], 'true,false,false': [nan, 0.17497164461247672]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 1.536
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048816;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.1254446385283918;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360625;  // std dev = 5.67e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.11231637819360636;  // std dev = 2.11e-08, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783626;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.10159632948783659;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.09269127618926068;  // std dev = 1.07e-07, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.08518475138839678;  // std dev = 8.69e-08, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109172;  // std dev = 2.69e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07877675473109148;  // std dev = 5.37e-08, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.07324622576333678;  // std dev = 1.22e-07, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 1.67e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.0684269778442028;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06419184008202626;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.243', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.536 

Total Inference Time : 0.9599175453186035 

Total revision time: 4.84210232925415
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.898120920181274 

Total Inference Time : 0.9599175453186035 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.743
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7765162820382877;  // std dev = 1.917, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6731506297874746;  // std dev = 0.242, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.1254446385283915;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4866983496008098;  // std dev = 0.300, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.11231637819360625;  // std dev = 6.14e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3843287622396825;  // std dev = 1.917, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.1015963294878362;  // std dev = 5.37e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.27268996206758933;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.09269127618926105;  // std dev = 1.05e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1296243424864473;  // std dev = 2.860, 55.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   else return -0.08518475138839679;  // std dev = 2.36e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18434532343302784;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.07877675473109158;  // std dev = 5.58e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22662544837178739;  // std dev = 0.989, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   else return -0.07324622576333707;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09085487828825184;  // std dev = 2.301, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   else return -0.06842697784420267;  // std dev = 3.57e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042961490428197406;  // std dev = 2.606, 53.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   else return -0.06419184008202625;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.586', 'seconds']
Parameter learned model CLL:-0.161519 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.917, 4, 45], 'false': [7.74e-08, 83, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.242, 3, 45], 'false': [0.0, 78, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.3, 5, 45], 'false': [6.14e-08, 87, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.917, 4, 45], 'false': [5.37e-08, 87, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.121, 5, 45], 'false': [1.05e-08, 100, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.86, 10, 45], 'false': [2.36e-08, 75, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.121, 5, 45], 'false': [5.58e-08, 97, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.989, 1, 45], 'false': [0.0, 96, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.301, 6, 45], 'false': [3.57e-08, 78, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.606, 8, 45], 'false': [0.0, 80, 0]}]
{'': [0.07496876301541104, 7.223137750573307e-17], 'true': [nan, 0.07496876301541104], 'true,false': [nan, 0.07496876301541104], 'true,false,false': [nan, 0.07496876301541104]}
{'': [0.05859374999999963, -2.5620531337503614e-17], 'true': [nan, 0.05859374999999963], 'true,false': [nan, 0.05859374999999963]}
{'': [0.09000000000000047, 4.3388026249718764e-17], 'true': [nan, 0.09000000000000047], 'true,false': [nan, 0.09000000000000047]}
{'': [0.07496876301541046, 3.317907889684376e-17], 'true': [nan, 0.07496876301541046], 'true,false': [nan, 0.07496876301541046]}
{'': [0.09000000000000004, 1.1102230246251566e-18], 'true': [nan, 0.09000000000000004], 'true,false': [nan, 0.09000000000000004]}
{'': [0.14876033057851237, 7.401486830834377e-18], 'true': [nan, 0.14876033057851237], 'true,false': [nan, 0.14876033057851237], 'true,false,false': [nan, 0.14876033057851237]}
{'': [0.08999999999999994, 3.204767493763338e-17], 'true': [nan, 0.08999999999999994], 'true,false': [nan, 0.08999999999999994]}
{'': [0.02126654064272223, -6.938893903907228e-18], 'true': [nan, 0.02126654064272223], 'true,false': [nan, 0.02126654064272223], 'true,false,false': [nan, 0.02126654064272223]}
{'': [0.1038062283737024, 1.6368672798960642e-17], 'true': [nan, 0.1038062283737024], 'true,false': [nan, 0.1038062283737024], 'true,false,false': [nan, 0.1038062283737024]}
{'': [0.12815948736205054, -4.163336342344337e-18], 'true': [nan, 0.12815948736205054], 'true,false': [nan, 0.12815948736205054], 'true,false,false': [nan, 0.12815948736205054]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 0.967
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 6.66e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360625;  // std dev = 6.14e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783617;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926105;  // std dev = 1.05e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 1.83e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109161;  // std dev = 4.94e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07324622576333707;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420265;  // std dev = 4.71e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202625;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.332', 'seconds']
Refined model CLL: -0.063847


******************************************
Best model found
******************************************
Results 

CLL : -0.064062 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 0.967 

Total Inference Time : 0.8097624778747559 

Total revision time: 3.3960322952270507
Best scored revision CLL: -0.063847


Results 

CLL : -0.064062 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.4520508861541748 

Total Inference Time : 0.8097624778747559 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.803
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7765162820382877;  // std dev = 1.917, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A), genre(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6540179767262501;  // std dev = 0.274, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B), genre(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.49132987637462233;  // std dev = 0.300, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.11231637819360622;  // std dev = 7.15e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3695716142247181;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.10159632948783619;  // std dev = 5.48e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2795554001701014;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   else return -0.09269127618926108;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23463208666453256;  // std dev = 1.917, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.08518475138839682;  // std dev = 4.94e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13322187895295257;  // std dev = 2.461, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   else return -0.07877675473109164;  // std dev = 4.71e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, A), genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1999792708509241;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   else return -0.07324622576333707;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(C, A), genre(C, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1260708012681076;  // std dev = 1.917, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   else return -0.06842697784420265;  // std dev = 4.83e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(C, B), genre(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, B), genre(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12521976062167875;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   else return -0.06419184008202626;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.596', 'seconds']
Parameter learned model CLL:-0.132981 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.917, 4, 45], 'false': [8.16e-08, 88, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.274, 4, 45], 'false': [0.0, 92, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B), genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.3, 5, 45], 'false': [7.15e-08, 93, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.121, 5, 45], 'false': [5.48e-08, 86, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.121, 5, 45], 'false': [0.0, 86, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.917, 4, 45], 'false': [4.94e-08, 84, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.461, 7, 45], 'false': [4.71e-08, 83, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, A), genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.384, 2, 45], 'false': [0.0, 84, 0]}]
['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(C, A), genre(C, B)', 'true,false': 'genre(D, A)', 'true,false,false': 'genre(E, B)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.917, 4, 45], 'false': [4.83e-08, 100, 0]}]
['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(C, B), genre(C, A)', 'true,false': 'genre(D, B)', 'true,false,false': 'genre(E, B), genre(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.677, 3, 45], 'false': [0.0, 80, 0]}]
{'': [0.07496876301541104, 7.569702440626067e-17], 'true': [nan, 0.07496876301541104], 'true,false': [nan, 0.07496876301541104], 'true,false,false': [nan, 0.07496876301541104]}
{'': [0.07496876301540994, -1.68946982008176e-17], 'true': [nan, 0.07496876301540994], 'true,false': [nan, 0.07496876301540994]}
{'': [0.08999999999999954, 5.491425713199699e-17], 'true': [nan, 0.08999999999999954], 'true,false': [nan, 0.08999999999999954]}
{'': [0.08999999999999986, 3.4855839145208403e-17], 'true': [nan, 0.08999999999999986], 'true,false': [nan, 0.08999999999999986]}
{'': [0.09000000000000002, 0.0], 'true': [nan, 0.09000000000000002], 'true,false': [nan, 0.09000000000000002]}
{'': [0.07496876301541035, 2.9077269692563625e-17], 'true': [nan, 0.07496876301541035], 'true,false': [nan, 0.07496876301541035], 'true,false,false': [nan, 0.07496876301541035]}
{'': [0.11649408284023667, 2.6752362039160398e-17], 'true': [nan, 0.11649408284023667], 'true,false': [nan, 0.11649408284023667]}
{'': [0.040742417383431415, -3.3042351923367752e-18], 'true': [nan, 0.040742417383431415], 'true,false': [nan, 0.040742417383431415], 'true,false,false': [nan, 0.040742417383431415]}
{'': [0.07496876301541032, 2.3314683517128286e-17], 'true': [nan, 0.07496876301541032], 'true,false': [nan, 0.07496876301541032], 'true,false,false': [nan, 0.07496876301541032]}
{'': [0.058593749999999924, -9.714451465470119e-18], 'true': [nan, 0.058593749999999924], 'true,false': [nan, 0.058593749999999924], 'true,false,false': [nan, 0.058593749999999924]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true


Refining candidate
***************************
Model training time 0.941
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839147;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360622;  // std dev = 7.45e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14652771257609323;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926107;  // std dev = 1.05e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1291352689757512;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839678;  // std dev = 3.94e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1152948690182349;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109162;  // std dev = 4.59e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.1653822285001653;  // std dev = 0.056, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.16487291244602997;  // std dev = 0.057, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.07324622576333704;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13228448052228875;  // std dev = 0.075, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.15433247448292062;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.06842697784420265;  // std dev = 4.71e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13654367699942271;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1371454478518135;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202625;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.480', 'seconds']
Refined model CLL: -0.066422


******************************************
Best model found
******************************************
Results 

CLL : -0.069401 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 0.941 

Total Inference Time : 0.7961084842681885 

Total revision time: 3.4416158618927
Best scored revision CLL: -0.066422


Results 

CLL : -0.069401 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.497634452819824 

Total Inference Time : 0.7961084842681885 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.933
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03827315870199651;  // std dev = 4.876, 161.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.050704714550111864;  // std dev = 4.825, 147.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08083977951563183;  // std dev = 4.714, 124.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.025737100648147816;  // std dev = 4.848, 153.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3247641680322993;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04431758514463227;  // std dev = 4.781, 137.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.25793544573147725;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1442243549548758;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.022317616749107014;  // std dev = 4.829, 148.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21170771139062705;  // std dev = 4.47e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12732031576473482;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02737149673189043;  // std dev = 4.804, 142.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.178525411195162;  // std dev = 1.05e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.11383200642395243;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.005116233704471551;  // std dev = 4.889, 165.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15382697023209882;  // std dev = 2.58e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10284415395586087;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0464454666614173;  // std dev = 4.736, 128.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13485203205642624;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B) )
%   | | then return -0.09373509661822232;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.050626886583082426;  // std dev = 4.702, 122.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.511', 'seconds']
Parameter learned model CLL:-0.226379 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.58e-07, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.876, 132, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.825, 118, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.714, 95, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.096, 1, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.848, 124, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 27], 'true,false': [0.0, 0, 0], 'false': [4.781, 108, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.829, 119, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [4.47e-08, 0, 27], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.804, 113, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [1.05e-08, 0, 27], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.889, 136, 29]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [2.58e-08, 0, 27], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.736, 99, 29]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 27], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.702, 93, 29]}]
{'': [0.06420927467300945, 0.14767948767408673], 'true': [9.210739167260557e-16, 0.0], 'true,true': [9.210739167260557e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.08022866113032144, 0.1583599426165025], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.631639762074445e-16, nan]}
{'': [0.015352817878677705, 0.1791753381893857], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.009280392558716948, 0.15361613054807982], 'true': [0.009280392558716948, nan], 'true,true': [0.009280392558716948, nan]}
{'': [-1.644774851296528e-17, 0.16687090415046113], 'true': [-1.644774851296528e-17, nan]}
{'': [0.005569869442319242, 0.15755113221329436], 'true': [-9.046261682130905e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-9.046261682130905e-17, nan]}
{'': [0.010344600287717155, 0.1625173576671295], 'true': [7.401486830834377e-17, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan], 'true,false,true': [-2.3129646346357427e-18, nan]}
{'': [0.005488150321514315, 0.1448668503213953], 'true': [4.11193712824132e-18, 0.0], 'true,false': [0.0, nan]}
{'': [0.0022688288032928733, 0.17523193359375], 'true': [2.4671622769447922e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.0017994974944954476, 0.18120128997581383], 'true': [-2.4671622769447922e-17, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.545
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then return 0.7936328060672536;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return -0.14185106490048763;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then return 0.7323086016879355;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.11231637819360617;  // std dev = 9.42e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5680890108348504;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.4319109891651493;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783638;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.42701744143756193;  // std dev = 6.66e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.22140320220480048;  // std dev = 0.267, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.29224459924661184;  // std dev = 0.105, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else if ( actor(B) )
%   | then return -0.0926912761892608;  // std dev = 7.60e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.32716227875832016;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.28345802359608446;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26062031255493845;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.11957570003779856;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2595689513907873;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.2295540822025644;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839682;  // std dev = 5.77e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else return -0.14436502924584213;  // std dev = 0.205, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2135988547031117;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.10754852451381533;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21285872000510214;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.19148575330709186;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109157;  // std dev = 6.32e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else return -0.11791716940773825;  // std dev = 0.194, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1799087060221608;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333709;  // std dev = 4.59e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else return -0.06684580625027206;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.15724233518059058;  // std dev = 0.084, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15487386974245254;  // std dev = 1.86e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.09765302088316057;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 1.67e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.06842697784420272;  // std dev = 1.58e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.0627949350857106;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.14592249234351415;  // std dev = 0.062, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1356677090767794;  // std dev = 3.23e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.08937977136199116;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(B), actor(A) )
%   | then return 0.11650390667807028;  // std dev = 0.086, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202626;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.06419184008202626;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.057758926100184085;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.387', 'seconds']
Refined model CLL: -0.067301


******************************************
Best model found
******************************************
Results 

CLL : -0.077169 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.545 

Total Inference Time : 0.9510211944580078 

Total revision time: 4.442074373245239
Best scored revision CLL: -0.067301


Results 

CLL : -0.077169 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.463117197036743 

Total Inference Time : 0.9510211944580078 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.922
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10331022542209282;  // std dev = 5.356, 155.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08112675049927051;  // std dev = 5.388, 161.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07020715199682212;  // std dev = 5.388, 161.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.37032177382684195;  // std dev = 0.149, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07589759217309947;  // std dev = 5.333, 151.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3310786436575143;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then return -0.14072392033214493;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08440360471153159;  // std dev = 5.262, 140.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26223405120718635;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12455180676322304;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06553584221719234;  // std dev = 5.282, 143.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2147338664991612;  // std dev = 2.79e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11159355642112641;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05483590746426043;  // std dev = 5.282, 143.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18073775523366656;  // std dev = 2.79e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.10100026570707855;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05321248884912597;  // std dev = 5.255, 139.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15550054237070166;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0921919737687204;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.045921341298193835;  // std dev = 5.247, 138.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13615546988734467;  // std dev = 1.97e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.08476083485650218;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.010705564807651748;  // std dev = 5.344, 153.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.797', 'seconds']
Parameter learned model CLL:-0.28304 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.356, 117, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.3e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.388, 123, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.388, 123, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.149, 2, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.333, 113, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 20], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.262, 102, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.282, 105, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.79e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.282, 105, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [2.79e-08, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.255, 101, 38]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.247, 100, 38]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [1.97e-08, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.344, 115, 38]}]
{'': [0.04535147392290242, 0.18505723204994814], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}
{'': [0.05899888532770057, 0.18031711739516226], 'true': [2.6645352591003756e-16, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.02021770255628346, 0.18031711739516137], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.022270669623612512, 0.1883250734616904], 'true': [0.022270669623612512, nan], 'true,true': [0.022270669623612512, nan]}
{'': [0.03091634158155787, 0.19775510204081612], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}
{'': [0.016968238176851273, 0.19511956574893646], 'true': [-3.3306690738754695e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-3.3306690738754695e-17, nan]}
{'': [0.00482945972561438, 0.19511956574893652], 'true': [3.8857805861880476e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.0035998327638824693, 0.1986439625278191], 'true': [3.8857805861880476e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.0050703787232626255, 0.19953791220331857], 'true': [-8.326672684688674e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}
{'': [0.002213333954724564, 0.18668033662266645], 'true': [1.9428902930940238e-17, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.748
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462843;  // std dev = 1.97e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360649;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.11231637819360629;  // std dev = 5.16e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return -0.13026654425604817;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return -0.09996961377311613;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10427634166427882;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1023325341555211;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926105;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return -0.09132757756820278;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3101175399476858;  // std dev = 0.065, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948945;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09330735559766011;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2571910072657336;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.1219844332116339;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 2.04e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.08518475138839679;  // std dev = 1.67e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.12160197085051778;  // std dev = 0.099, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08570736450744472;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21118273066319754;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.10951006701233149;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.07877675473109169;  // std dev = 3.33e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.168846417990676;  // std dev = 0.230, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07512804267554742;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07922532840003603;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1781409750894741;  // std dev = 4.56e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.09927865141579649;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( director(A), actor(B) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return -0.06420545171808312;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07007163681327051;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 7.45e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.07401139704877595;  // std dev = 0.038, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07363522111352229;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then return 0.14132158489369923;  // std dev = 0.053, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06838518396113483;  // std dev = 4.51e-05, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06785969185806219;  // std dev = 0.008, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(A) )
%   | | | then return -0.06839467465541482;  // std dev = 0.000206, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return -0.07041410390881846;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06876736418038891;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06420005748305316;  // std dev = 7.06e-05, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.06415397144873496;  // std dev = 9.57e-05, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.05671268711834634;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06145213984172911;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1360542580105214;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.10310208356293106;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.648', 'seconds']
Refined model CLL: -0.064874


******************************************
Best model found
******************************************
Results 

CLL : -0.069351 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.748 

Total Inference Time : 1.128248691558838 

Total revision time: 4.781130952835083
Best scored revision CLL: -0.064874


Results 

CLL : -0.069351 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.802173776626587 

Total Inference Time : 1.128248691558838 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 1.405
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06955036027765846;  // std dev = 8.378, 421.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06238858535450151;  // std dev = 8.370, 418.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 4.15e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.053221900031174156;  // std dev = 8.375, 420.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3036736908148576;  // std dev = 0.215, 114.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05010157328461023;  // std dev = 8.353, 412.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34600138067942887;  // std dev = 2.15e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then return -0.13285609530272957;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.046785200715619424;  // std dev = 8.333, 405.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2723635363840554;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.11828264525333408;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03837401516625912;  // std dev = 8.342, 408.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22183108658712808;  // std dev = 1.15e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1064927889786401;  // std dev = 1.97e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.021968094269343097;  // std dev = 8.399, 429.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18590239654965401;  // std dev = 4.21e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.09677614288728986;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01959781316292913;  // std dev = 8.393, 427.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15939173036297824;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0886407030658169;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0246916925946681;  // std dev = 8.350, 411.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1391757778057857;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, B) )
%   | | then return -0.0817362719548876;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.022426442079194482;  // std dev = 8.342, 408.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.410', 'seconds']
Parameter learned model CLL:-0.241496 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.19e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.16e-08, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.378, 332, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [3.04e-07, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 30, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.37, 329, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [4.15e-08, 0, 89], 'true,false,true,true': [0.0, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.375, 331, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.215, 25, 89], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.353, 323, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [2.15e-07, 0, 89], 'true,false,true': [0.0, 27, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.333, 316, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 89], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.342, 319, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.15e-07, 0, 89], 'true,false,true,true': [1.97e-08, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.399, 340, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [4.21e-08, 0, 89], 'true,false,true': [0.0, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.393, 338, 89]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 89], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 27, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.35, 322, 89]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 89], 'true,false,true': [0.0, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.342, 319, 89]}]
{'': [0.19732598763773374, 0.16671086261079568], 'true': [1.5967252488991015e-16, 3.027880976250427e-17], 'true,true': [1.5967252488991015e-16, nan], 'true,false': [3.027880976250427e-17, nan], 'true,false,true': [3.027880976250427e-17, nan]}
{'': [0.1346004511180026, 0.16758430438863556], 'true': [1.037871411784416e-15, -7.401486830834377e-18], 'true,true': [1.037871411784416e-15, nan], 'true,false': [-7.401486830834377e-18, nan], 'true,false,true': [-7.401486830834377e-18, nan]}
{'': [0.0867180774681055, 0.16700113378684925], 'true': [1.7164796425665342e-15, -1.0408340855860843e-17], 'true,false': [-1.0408340855860843e-17, nan], 'true,false,true': [-1.0408340855860843e-17, nan]}
{'': [0.046135895886557594, 0.16935502874917546], 'true': [0.046135895886557594, nan], 'true,true': [0.046135895886557594, nan]}
{'': [0.04094966341977722, 0.17146166742874666], 'true': [5.18935705892208e-16, -6.1679056923619804e-18], 'true,false': [-6.1679056923619804e-18, nan]}
{'': [0.029684956145138764, 0.17055339292579794], 'true': [-2.1954972172362646e-16, -1.3877787807814457e-17], 'true,false': [-1.3877787807814457e-17, nan], 'true,true': [-2.1954972172362646e-16, nan]}
{'': [0.020968828876106075, 0.16441988469960483], 'true': [1.4969299208429077e-16, 1.214306433183765e-17], 'true,false': [1.214306433183765e-17, nan], 'true,false,true': [1.214306433183765e-17, nan]}
{'': [0.015309989251387823, 0.16498746770947165], 'true': [1.995906561123877e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.010986383140781823, 0.1696532698717151], 'true': [-1.197543936674326e-16, -6.1679056923619804e-18], 'true,false': [-6.1679056923619804e-18, nan], 'true,false,true': [nan, -6.1679056923619804e-18]}
{'': [0.00935035326108234, 0.17055339292579932], 'true': [-6.237208003512116e-17, -8.058070340021298e-18], 'true,false': [-8.058070340021298e-18, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 2.173
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.14185106490048838;  // std dev = 0.000, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.12544463852839183;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.11231637819360636;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.11231637819360688;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 4.08e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.10159632948783653;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716015033;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.09269127618926105;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.09269127618926064;  // std dev = 2.11e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.0851847513883968;  // std dev = 1.97e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.08518475138839679;  // std dev = 2.24e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.08518475138839679;  // std dev = 8.94e-08, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07877675473109179;  // std dev = 5.27e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.07877675473109146;  // std dev = 4.94e-08, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07324622576333704;  // std dev = 9.13e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07324622576333704;  // std dev = 5.27e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.07324622576333681;  // std dev = 1.11e-07, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( actor(B) )
%   | then return -0.06842697784420278;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.15274385809367128;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return -0.06842697784420267;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06842697784420265;  // std dev = 1.75e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080112;  // std dev = 2.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06419184008202622;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.411', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.173 

Total Inference Time : 1.0232226848602295 

Total revision time: 5.646439245223999
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.667482069015503 

Total Inference Time : 1.0232226848602295 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.774
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1538011090125555;  // std dev = 4.894, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17501032104920908;  // std dev = 4.749, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10634142386546686;  // std dev = 4.902, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.30627574551985004;  // std dev = 0.213, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058084818205306324;  // std dev = 5.011, 130.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34541281240499183;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, A) )
%   | | then return -0.1331561524179993;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05259587184985016;  // std dev = 4.997, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2719646832865062;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035596018869944165;  // std dev = 5.024, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2215524904515438;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11852293590645151;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.021811875077465417;  // std dev = 5.050, 136.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18570028192557306;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.10668912388772867;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06359982178742289;  // std dev = 4.894, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15923985927796025;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044556955455704136;  // std dev = 4.920, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13905816394803927;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(D, B) )
%   | | then return -0.09693931871560069;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.031451670478285336;  // std dev = 4.936, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.576', 'seconds']
Parameter learned model CLL:-0.313178 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.894, 81, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [4.21e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.749, 67, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.902, 82, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.213, 3, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.011, 96, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [2.11e-08, 0, 11], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.997, 94, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [1.49e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.024, 98, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 11], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.05, 102, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 11], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.894, 81, 34]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false': [4.92, 84, 34]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [5.27e-09, 0, 11], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.936, 86, 34]}]
{'': [0.07638888888888877, 0.20824196597353528], 'true': [-1.6148698540002277e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.6148698540002277e-16, nan]}
{'': [0.09293197203688684, 0.22331144005489648], 'true': [1.6148698540002277e-16, 0.0], 'true,true': [1.6148698540002277e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.03405419274324021, 0.20719381688466035], 'true': [-2.0185873175002846e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.045370808064838855, 0.1931360946745563], 'true': [0.045370808064838855, nan], 'true,true': [0.045370808064838855, nan]}
{'': [0.02981432893502065, 0.19506835937500028], 'true': [4.0371746350005693e-17, 0.0], 'true,false': [0.0, nan]}
{'': [2.0185873175002847e-17, 0.1912304866850321], 'true': [2.0185873175002847e-17, nan], 'true,true': [2.0185873175002847e-17, nan]}
{'': [0.01947190181232084, 0.18750000000000008], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.014393987922710393, 0.20824196597353453], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}
{'': [0.0, 0.20511347313990239], 'true': [0.0, nan]}
{'': [0.0072502121900511925, 0.20305555555555613], 'true': [2.523234146875356e-18, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.396
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0.8025933795439559;  // std dev = 0.229, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.730548383829937;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.26945161617006347;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12720082118255824;  // std dev = 0.143, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.11214140348317353;  // std dev = 9.06e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5663214446559565;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.2197955445140469;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10145209639014416;  // std dev = 2.58e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4236903471806307;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18442450785700712;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.31936769658174363;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.08595651724622083;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.326698926942774;  // std dev = 5.58e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.15828046787615666;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(B) )
%   | | then return -0.09257049788586326;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else return -0.2934598990284981;  // std dev = 0.316, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.2542548465064534;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( actor(B) )
%   | then return -0.08508223840150901;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.25925342929961637;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.13831468119647713;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20910946912065317;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.10013384809216978;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21263649594910586;  // std dev = 5.77e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.12263900210685619;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.0796714288538319;  // std dev = 0.063, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17662089349858548;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.09146540871409876;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17920508434774005;  // std dev = 4.94e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.1100419725126816;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then return -0.07310323658741046;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else return -0.4381992464713745;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.15238296866578938;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( actor(B) )
%   | then return -0.06830180218073513;  // std dev = 3.41e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.15434155772578753;  // std dev = 2.36e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.09971866725794278;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13372522613522922;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.09665517938588992;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.0640813860142174;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0.12267698569698046;  // std dev = 0.052, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.501', 'seconds']
Refined model CLL: -0.067329


******************************************
Best model found
******************************************
Results 

CLL : -0.071333 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.396 

Total Inference Time : 0.8269071578979492 

Total revision time: 3.833801670074463
Best scored revision CLL: -0.067329


Results 

CLL : -0.071333 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.8548444938659667 

Total Inference Time : 0.8269071578979492 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, A), publication(C, B).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
0;true,true,false;publication(C, G), ta(H, G, I).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,true;publication(J, K), professor(K).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
1;true,true,true;publication(G, D).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;false;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false;publication(G, B), publication(H, A).;true;true
2;true,false,true;publication(H, I), ta(J, I, K).;false;false
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;ta(H, A, I).;true;true
3;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
3;true,false,false;publication(M, A), tempadvisedby(N, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A), projectmember(E, B).;false;true
4;true,false,false;tempadvisedby(F, B), publication(G, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), ta(I, C, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;publication(N, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), projectmember(F, B).;false;true
6;true,true,false;publication(G, A), publication(G, B).;false;false
6;true,false;publication(H, B).;true;false
6;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(F, C, G), ta(F, H, E).;true;true
7;true,true,true;publication(I, A), publication(I, B).;false;false
7;true,true,false;publication(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;tempadvisedby(C, B).;true;true
8;true,true;ta(D, A, E).;true;true
8;true,true,true;ta(F, C, G), ta(D, H, G).;false;false
8;true,true,false;publication(I, A), publication(I, B).;false;false
8;true,false;publication(J, A).;true;true
8;true,false,true;publication(J, B).;false;false
8;true,false,false;publication(K, B), ta(L, A, M).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true
9;true,true;publication(F, B), publication(F, A).;false;true
9;true,true,false;publication(G, B), ta(H, A, I).;false;false
9;true,false;publication(J, B), publication(K, A).;true;true
9;true,false,true;publication(J, A), ta(L, A, M).;false;false
9;true,false,false;publication(N, A).;false;false


Model training time 0.769
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.061852638803215974;  // std dev = 4.186, 108.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04864979119512056;  // std dev = 4.200, 111.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06415807401589073;  // std dev = 4.142, 100.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583099;  // std dev = 7.45e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.025185368196172644;  // std dev = 4.222, 116.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2.98e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then return -0.16113839895378426;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03387478790122842;  // std dev = 4.190, 109.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694895;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14052690958023933;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.015286739736529756;  // std dev = 4.226, 117.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253573;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12439561667068169;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.030664524537826393;  // std dev = 4.181, 107.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.1114670159170999;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.038408568492181515;  // std dev = 4.148, 101.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936709;  // std dev = 2.58e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1008958519623973;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.01590689490310666;  // std dev = 4.275, 130.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B) )
%   | | then return -0.09210446400231975;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.005284255997081055;  // std dev = 4.226, 117.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.578', 'seconds']
Parameter learned model CLL:-0.215311 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [8.43e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.186, 86, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [5.96e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.2, 89, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 23], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.142, 78, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [7.45e-09, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.222, 94, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [2.98e-08, 0, 23], 'true,false,true': [5.27e-09, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.19, 87, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true': [3.73e-09, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.226, 95, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.49e-08, 0, 23], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.181, 85, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 23], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.148, 79, 22]}]
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, B)'}, {'true,true': [2.58e-08, 0, 23], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [2.63e-09, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.275, 108, 22]}]
['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 23], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.226, 95, 22]}]
{'': [0.12620027434842318, 0.1622085048010974], 'true': [3.089316242435218e-16, 0.0], 'true,true': [3.089316242435218e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [1.544658121217609e-16, 0.15891567242918603], 'true': [1.544658121217609e-16, nan], 'true,true': [1.544658121217609e-16, nan]}
{'': [0.034113873807945935, 0.1716], 'true': [-2.703151712130816e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [7.723290606088045e-17, 0.15368608799048755], 'true': [7.723290606088045e-17, nan], 'true,true': [7.723290606088045e-17, nan]}
{'': [0.03809844594036632, 0.16109755071121956], 'true': [3.8616453030440226e-17, 4.625929269271485e-18], 'true,false': [4.625929269271485e-18, nan]}
{'': [0.02296740967650717, 0.15267733216451165], 'true': [-9.654113257610057e-18, 2.7755575615628915e-18], 'true,false': [2.7755575615628915e-18, nan], 'true,true': [-9.654113257610057e-18, nan]}
{'': [0.008218061882415757, 0.16333304218709058], 'true': [9.654113257610057e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}
{'': [0.003324973494088635, 0.17037545338692298], 'true': [-2.896233977283017e-17, 0.0], 'true,false': [0.0, nan]}
{'': [0.010556442505815777, 0.14059171597633136], 'true': [2.896233977283017e-17, 1.1564823173178713e-18], 'true,false': [1.1564823173178713e-18, nan], 'true,false,true': [nan, 1.1564823173178713e-18]}
{'': [0.002041505863962551, 0.15267733216451168], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
2;;workedunder(A, B) :- female(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), female(A).;true;true
4;;workedunder(A, B) :- female(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), female(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- female(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), female(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- female(A), director(B).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
Model training time 1.602
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.22751829855267258;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.4175135841583099;  // std dev = 4.21e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( director(B), actor(A) )
%   | then return 0.39109918572809343;  // std dev = 0.124, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( actor(A) )
%   | | then return -0.10159632948783617;  // std dev = 5.77e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return -0.22181885107629976;  // std dev = 0.416, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2.98e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.1465277125760932;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.09204943416227265;  // std dev = 0.021, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.326493420110551;  // std dev = 5.16e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.2575394615082092;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694895;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08449159186291244;  // std dev = 0.023, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0.23865512713876952;  // std dev = 0.096, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253573;  // std dev = 3.73e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.12913526897575117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B), actor(A) )
%   | then return 0.1955504504426898;  // std dev = 0.096, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( actor(A) )
%   | | then return -0.07887369159537981;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( female(B) )
%   | | | then return -0.07056963343761812;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.18348202057898408;  // std dev = 0.531, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( female(B), actor(A) )
%   | | then return -0.07333031151593823;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( female(A) )
%   | | | then return -0.07333031151593818;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07227337922157269;  // std dev = 0.015, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.1847054646726285;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936709;  // std dev = 5.27e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.1152948690182349;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06850057456081707;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.06853348761494113;  // std dev = 0.000216, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.06019931895520547;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.13714946224070543;  // std dev = 0.100, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.10404596413741511;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06425611090133919;  // std dev = 2.80e-06, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06232431008989983;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(A) )
%   | | | then return -0.06425578107427177;  // std dev = 5.94e-06, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.06429037030668946;  // std dev = 0.000176, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0.11910846713622388;  // std dev = 0.103, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.492', 'seconds']
Refined model CLL: -0.075228


******************************************
Best model found
******************************************
Results 

CLL : -0.098032 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.602 

Total Inference Time : 0.9035458564758301 

Total revision time: 4.139474102020264
Best scored revision CLL: -0.075228


Results 

CLL : -0.098032 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.160516925811768 

Total Inference Time : 0.9035458564758301 

