Starting experiment 3_imdb_cora 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 0.995
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.243', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 46.888
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.23843062524035266;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4295775065280833;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004815601766179008;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004815601766179008;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3688769765977062;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004228390109386251;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004228390109386251;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1751801570305961;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.38614045132289815;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3007528710134885;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0037111125833978686;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0037111125833978686;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14514481334590568;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.30226096528282015;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23751879928703248;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0032558270569705674;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0032558270569705674;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11804668707041945;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.22995721486404522;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18281150773049143;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.0024772644701173433;  // std dev = 3.069, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.09999413152221179;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0028554031467501392;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09457696812283496;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.16965956881975588;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1370314963676457;  // std dev = 2.833, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.08855026142782672;  // std dev = 0.014, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.002503460836945874;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0033144850730382884;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07489163449109286;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.13579636353803706;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1018870530333431;  // std dev = 2.832, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.08166025301016137;  // std dev = 0.013, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0021943081594878503;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.002906983090284634;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05877777591804268;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.11722925336204297;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07662346343358444;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.07574285353662784;  // std dev = 0.012, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0019228798175884457;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0025487887653019873;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04582386394015474;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.09142322110378436;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.057228191469574516;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.07060867345808883;  // std dev = 0.011, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0016846780662751325;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.00223412027047278;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03554750876544446;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.06880657978179575;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.041435785452755086;  // std dev = 2.832, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.02019094994778181;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.007431378469888906;  // std dev = 3.071, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.1745060803527873E-4;  // std dev = 2.920, 71.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.912', 'seconds']
Refined model CLL: -0.621929


******************************************
Best model found
******************************************
Results 

CLL : -0.659077 

AUC ROC : 0.555707 

AUC PR : 0.427977 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 46.888 

Total Inference Time : 1.207756519317627 

Total revision time: 49.78489719200134
Best scored revision CLL: -0.621929


Results 

CLL : -0.659077 

AUC ROC : 0.555707 

AUC PR : 0.427977 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 70.75732265281677 

Total Inference Time : 1.207756519317627 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.043
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.121', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 48.674
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.4356367001892301;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5949910403626703;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.630876207826785;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.5005053426630848;  // std dev = 1.921, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.5406810030211525;  // std dev = 1.962, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.24811816884741297;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.30665618885999163;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3980165213163664;  // std dev = 1.922, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.4318624987684384;  // std dev = 1.960, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.20848477447886868;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.20848477447886868;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24206322397592006;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.29755757856572124;  // std dev = 1.924, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.33500538878161046;  // std dev = 1.956, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.17062637354018512;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.17062637354018512;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.4586612187245652;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.10866121872456526;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.15807064722459824;  // std dev = 1.233, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.45076648188246;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.15807064722459824;  // std dev = 1.233, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | | then return 0.1838486667906721;  // std dev = 17.122, 1,208.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=700 */
%   | | | else return 0.2353080869116832;  // std dev = 2.592, 46.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14057283559056769;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1760592042939276;  // std dev = 1.925, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.2075454596309282;  // std dev = 1.955, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.27174038498389663;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.09163960807021211;  // std dev = 1.834, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.09163960807021213;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.10577061945735676;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1282395022955795;  // std dev = 1.926, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.1617554340621149;  // std dev = 1.952, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2213957895613276;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.07091409705195098;  // std dev = 1.834, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.07091409705195098;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07938333695594002;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.09611961808015909;  // std dev = 1.927, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.1258439079372562;  // std dev = 1.952, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1855865773812923;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.054498694945016836;  // std dev = 1.833, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.054498694945016836;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05956407430623671;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.07037780479752236;  // std dev = 1.928, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.1010660477009852;  // std dev = 1.950, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.15915440600626285;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.04168158670339154;  // std dev = 1.833, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.04168158670339154;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.2507685361987006;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return -0.013063000732455143;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.20954007717091253;  // std dev = 1.230, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.043085657757913544;  // std dev = 17.051, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.06794585029368341;  // std dev = 2.743, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.10720600556240943;  // std dev = 1.812, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.03177132985637115;  // std dev = 1.833, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.830', 'seconds']
Refined model CLL: -0.66691


******************************************
Best model found
******************************************
Results 

CLL : -0.756217 

AUC ROC : 0.537319 

AUC PR : 0.344943 

Precision : 0.354132 

Recall : 0.957703 

F1 : 0.517067 

Total Learning Time : 48.674 

Total Inference Time : 1.203519582748413 

Total revision time: 51.67697071266174
Best scored revision CLL: -0.66691


Results 

CLL : -0.756217 

AUC ROC : 0.537319 

AUC PR : 0.344943 

Precision : 0.354132 

Recall : 0.957703 

F1 : 0.517067 

Total Learning Time : 72.64939617347717 

Total Inference Time : 1.203519582748413 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.574
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19321237223906904;  // std dev = 19.655, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,153 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17372737632566845;  // std dev = 19.571, 1,705.000 (wgt'ed) examples reached here.  /* #neg=1,124 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14556162541257042;  // std dev = 19.609, 1,718.000 (wgt'ed) examples reached here.  /* #neg=1,137 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11705683809737881;  // std dev = 19.681, 1,743.000 (wgt'ed) examples reached here.  /* #neg=1,162 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0894460857187642;  // std dev = 19.785, 1,781.000 (wgt'ed) examples reached here.  /* #neg=1,200 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07660854279330345;  // std dev = 19.731, 1,761.000 (wgt'ed) examples reached here.  /* #neg=1,180 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06892723220813365;  // std dev = 19.626, 1,724.000 (wgt'ed) examples reached here.  /* #neg=1,143 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05440852415080776;  // std dev = 19.638, 1,728.000 (wgt'ed) examples reached here.  /* #neg=1,147 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05103057718944257;  // std dev = 19.523, 1,689.000 (wgt'ed) examples reached here.  /* #neg=1,108 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.020397258590365716;  // std dev = 19.818, 1,793.000 (wgt'ed) examples reached here.  /* #neg=1,212 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.089', 'seconds']
Parameter learned model CLL:-0.535944 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.655, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.571, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.609, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.681, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.785, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.731, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.626, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.638, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.523, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.818, 1, 581]}]
{'': [nan, 0.22279593023177036]}
{'': [nan, 0.22464340691945558]}
{'': [nan, 0.22381556104575973]}
{'': [nan, 0.22222222222221766]}
{'': [nan, 0.21980093702286455]}
{'': [nan, 0.22107489517498444]}
{'': [nan, 0.22343326909309658]}
{'': [nan, 0.2231783559456277]}
{'': [nan, 0.225661044315239]}
{'': [nan, 0.21903734825492457]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 77.32300000000001
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21412542105639829;  // std dev = 0.479, 1,531.000 (wgt'ed) examples reached here.  /* #neg=986 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03206197857777325;  // std dev = 3.636, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
%   | | | else return -0.03658790700575096;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0188632208137981;  // std dev = 3.887, 112.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.17887210262953795;  // std dev = 3.125, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.16336822666054526;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1976512936051703;  // std dev = 0.482, 1,439.000 (wgt'ed) examples reached here.  /* #neg=910 #pos=529 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.059329261566736465;  // std dev = 3.566, 78.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   | | | else return -0.05412200144068365;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.008379551238433206;  // std dev = 3.906, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.16638046945550902;  // std dev = 3.085, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.005731032705521932;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14539798808449778;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.1660065357502259;  // std dev = 18.091, 1,411.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=516 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.0417776981331779;  // std dev = 3.589, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | | | else return -0.03116354732014549;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.014092259664211005;  // std dev = 3.890, 113.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=18 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12843891736343455;  // std dev = 0.479, 1,532.000 (wgt'ed) examples reached here.  /* #neg=987 #pos=545 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.04127767216812225;  // std dev = 3.604, 85.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=16 */
%   | | | else return -0.035846510838413316;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.018226123613392767;  // std dev = 3.854, 105.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=18 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11004175726329382;  // std dev = 0.480, 1,511.000 (wgt'ed) examples reached here.  /* #neg=966 #pos=545 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03383850903332432;  // std dev = 3.609, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | | | else return -0.03725733525130181;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0012696314324587613;  // std dev = 3.887, 115.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09337672931237893;  // std dev = 0.482, 1,492.000 (wgt'ed) examples reached here.  /* #neg=947 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.01917580362789701;  // std dev = 0.339, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.012962603702768147;  // std dev = 3.859, 107.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=18 */
%   | | | else return -1.5166291314316275E-4;  // std dev = 3.674, 106.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.3266177872815881;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05035730489499316;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.02596033282595894;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.0715785186886249;  // std dev = 18.135, 1,423.000 (wgt'ed) examples reached here.  /* #neg=907 #pos=516 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.028131922257063572;  // std dev = 0.339, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.020537926000792534;  // std dev = 3.851, 104.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
%   | | | else return -0.003673690922334965;  // std dev = 3.670, 106.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.41127289918896176;  // std dev = 0.844, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.00441535867655741;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.0010445323795926396;  // std dev = 3.026, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.04983955120891949;  // std dev = 18.231, 1,450.000 (wgt'ed) examples reached here.  /* #neg=934 #pos=516 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return -0.03521721859689178;  // std dev = 0.321, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013699650542579088;  // std dev = 3.855, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return -0.001956972935344807;  // std dev = 3.669, 107.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5960970424417278;  // std dev = 6.093, 438.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=396 */
%   | | | else return -0.2821481150493037;  // std dev = 4.119, 849.000 (wgt'ed) examples reached here.  /* #neg=833 #pos=16 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.17385103120834103;  // std dev = 1.852, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.1845745645048971;  // std dev = 8.123, 267.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=132 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.05399219226803909;  // std dev = 3.711, 82.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=18 */
%   | | | else return -0.01747296236682625;  // std dev = 1.527, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else return 0.5231933945396663;  // std dev = 0.305, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4240823419564952;  // std dev = 7.125, 455.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=396 */
%   | | | else return -0.22842901823381795;  // std dev = 4.075, 882.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=16 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.11314414001229148;  // std dev = 8.342, 284.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=132 */
%   | | | else return 0.05349329976041103;  // std dev = 1.636, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.002686269663544189;  // std dev = 1.444, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.4107683752338472;  // std dev = 1.302, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.007244824537012072;  // std dev = 3.860, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return -0.13391403799101687;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.445', 'seconds']
Refined model CLL: -0.380912


******************************************
Best model found
******************************************
Results 

CLL : -0.499206 

AUC ROC : 0.855917 

AUC PR : 0.778594 

Precision : 0.788861 

Recall : 0.889573 

F1 : 0.836195 

Total Learning Time : 77.32300000000001 

Total Inference Time : 2.418224573135376 

Total revision time: 82.17611925315857
Best scored revision CLL: -0.380912


Results 

CLL : -0.499206 

AUC ROC : 0.855917 

AUC PR : 0.778594 

Precision : 0.788861 

Recall : 0.889573 

F1 : 0.836195 

Total Learning Time : 103.148544713974 

Total Inference Time : 2.418224573135376 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.244
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.195', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 63.022
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.27854694504975613;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3581489350995113;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.47883859027192616;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3002199788127198;  // std dev = 3.525, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.4247561750638162;  // std dev = 2.608, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.16653882456488167;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.05092203251355405;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.05092203251355405;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20289930723994204;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.2476070167497722;  // std dev = 3.523, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.3498242125167599;  // std dev = 2.607, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1420942428155646;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.04434629760466855;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.04434629760466855;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2793356173487745;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.546002284015441;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.16413830416657968;  // std dev = 19.656, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.22657146233053777;  // std dev = 4.394, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.11914890490746433;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.03842866223690456;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.03842866223690456;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.13358021511936716;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.13823254152952386;  // std dev = 3.511, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.24034755207521258;  // std dev = 2.602, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.0984134027840187;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.033154945921885746;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.033154945921885746;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.19360106705252883;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.3981639926194231;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.10374821191244511;  // std dev = 19.656, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.13396188108282528;  // std dev = 4.382, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.08026654944252247;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.028495105925721097;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.028495105925721097;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6569264930743051;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.3169716724883957;  // std dev = 0.151, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.43024780361928155;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.080140395722839;  // std dev = 19.646, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.1013554306809791;  // std dev = 4.381, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.03728292940755493;  // std dev = 3.575, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | | else return 0.024408230135271918;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06354013266537828;  // std dev = 0.492, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.04824762360759603;  // std dev = 3.509, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.12477466912283303;  // std dev = 2.602, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.05740972969085724;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.02084688910874009;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.0197958495723214;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.12524279273145106;  // std dev = 1.480, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.31211353113304147;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04729579578912553;  // std dev = 19.646, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.05737006643473728;  // std dev = 4.375, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.045793611684258405;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.017760671541598414;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.016853649676565663;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03738217171827537;  // std dev = 0.492, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.014068509635047934;  // std dev = 3.503, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.09322137587641151;  // std dev = 2.600, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.03632180444617924;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.015098879183171418;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.014319490922415953;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.399', 'seconds']
Refined model CLL: -0.667456


******************************************
Best model found
******************************************
Results 

CLL : -0.644546 

AUC ROC : 0.565926 

AUC PR : 0.416913 

Precision : 0.461326 

Recall : 0.073568 

F1 : 0.1269 

Total Learning Time : 63.022 

Total Inference Time : 1.3174026012420654 

Total revision time: 66.3373131427765
Best scored revision CLL: -0.667456


Results 

CLL : -0.644546 

AUC ROC : 0.565926 

AUC PR : 0.416913 

Precision : 0.461326 

Recall : 0.073568 

F1 : 0.1269 

Total Learning Time : 87.30973860359192 

Total Inference Time : 1.3174026012420654 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.031
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.191', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 30.411
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.443242102801371;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7100007869513637;  // std dev = 1.846, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.13087620782678508;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.16249676118646889;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.051131391239862906;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3803254334818479;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5454907572981614;  // std dev = 1.261, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.6490137408654374;  // std dev = 1.340, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.22373365448410584;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.11418623766746618;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.14154274242296505;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.04479249977758044;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.7263997659160313;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.608456896213577;  // std dev = 0.134, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.30837723775582815;  // std dev = 13.942, 799.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=465 */
%   | | | else return 0.4684679260950658;  // std dev = 1.838, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.05265234800574574;  // std dev = 1.203, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1259781806953634;  // std dev = 3.116, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.12131905159335965;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.039048804834509544;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.5114297178263392;  // std dev = 0.218, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.036759933888721424;  // std dev = 3.406, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05420624802834623;  // std dev = 3.369, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.27439319458340883;  // std dev = 13.058, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.1735444492606042;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.08022839079689517;  // std dev = 2.951, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.10247683991352247;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.03389416118740775;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.18769338712374248;  // std dev = 0.488, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2601319247615367;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4134332719272653;  // std dev = 0.185, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.02008725479165601;  // std dev = 1.192, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.09183259368176479;  // std dev = 3.114, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.012287199930136968;  // std dev = 3.141, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.06873695868340947;  // std dev = 4.196, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.16518248938586083;  // std dev = 2.652, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return 0.14113953856073197;  // std dev = 13.685, 783.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=460 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.19717170775757367;  // std dev = 1.248, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.31901642012208425;  // std dev = 0.162, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.17396683574461191;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.043055400245637775;  // std dev = 2.942, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.06272475502650934;  // std dev = 4.185, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return 0.0030864305041705896;  // std dev = 3.138, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.12535459002339133;  // std dev = 2.653, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return -0.1402369237248568;  // std dev = 2.111, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11592149752822328;  // std dev = 13.424, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | | else return 0.19107712910082097;  // std dev = 1.558, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.12239509410705729;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.042920683649214794;  // std dev = 2.937, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.05317994747384575;  // std dev = 4.182, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return 2.211506889112493E-4;  // std dev = 3.148, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.3230856075648936;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2668417128738786;  // std dev = 0.182, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.05746769393963425;  // std dev = 3.188, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return -0.061473410104544025;  // std dev = 3.528, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.05047194418232873;  // std dev = 3.053, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return -0.027466607466915066;  // std dev = 3.334, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.09925932406030884;  // std dev = 13.049, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | | | else return 0.014962900195979515;  // std dev = 4.215, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return -0.4677764305984576;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.2161110442388348;  // std dev = 2.304, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.27406323166674534;  // std dev = 1.560, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.0895901026026806;  // std dev = 3.202, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.03832515472462355;  // std dev = 3.053, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return -0.021987270123241684;  // std dev = 3.332, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return 0.0746456426105392;  // std dev = 13.049, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | | | else return 0.012763050134241017;  // std dev = 4.215, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.429960092187374;  // std dev = 1.299, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return -0.38630957982973496;  // std dev = 0.343, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.021772645911005712;  // std dev = 0.409, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.02905085343514406;  // std dev = 3.053, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return -0.017640369118355318;  // std dev = 3.331, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.05626110077186033;  // std dev = 13.050, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | | | else return 0.010869911518958233;  // std dev = 4.215, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.838', 'seconds']
Refined model CLL: -0.62386


******************************************
Best model found
******************************************
Results 

CLL : -0.706746 

AUC ROC : 0.555684 

AUC PR : 0.40406 

Precision : 0.375415 

Recall : 0.916092 

F1 : 0.532579 

Total Learning Time : 30.411 

Total Inference Time : 1.1848726272583008 

Total revision time: 33.33076938819885
Best scored revision CLL: -0.62386


Results 

CLL : -0.706746 

AUC ROC : 0.555684 

AUC PR : 0.40406 

Precision : 0.375415 

Recall : 0.916092 

F1 : 0.532579 

Total Learning Time : 54.30319484901428 

Total Inference Time : 1.1848726272583008 

Run: 2
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 0.961
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.249', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 46.663
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.23843062524035266;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4295775065280833;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.004351064900487665;  // std dev = 3.080, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004815601766179008;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3974484051691344;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3717678476909069;  // std dev = 2.838, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.0036637537051137136;  // std dev = 3.076, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.14148167170420273;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.005556130425091853;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1751801570305961;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.39107968864188797;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.30040266398009907;  // std dev = 2.929, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.12502585645554135;  // std dev = 6.02e-05, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004881411392881223;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004888353616469523;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14514481334590568;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.30670965566297825;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23718535411670644;  // std dev = 2.929, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.002796188476003155;  // std dev = 3.073, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.11407910676954758;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004292526622817879;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11804668707041945;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.23351149886288067;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18251936130817012;  // std dev = 2.929, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.0024655200358334652;  // std dev = 3.071, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.11387611081133445;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004784517518157897;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09457696812283496;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.16919003101263821;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1370870578673195;  // std dev = 2.833, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.10089603186083092;  // std dev = 7.00e-05, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004201044829853079;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004227007310059595;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07489163449109286;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.16065246284033485;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10166610245437792;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.0020070267683711326;  // std dev = 3.069, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.09545176497125263;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.003709938455993802;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05877777591804268;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.12071765750555086;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0763014555007719;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.0018352266512977888;  // std dev = 3.067, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.09532113348010993;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004055334864324369;  // std dev = 3.062, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04582386394015474;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.09106525000113859;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05724131174820282;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.0842841963465722;  // std dev = 6.51e-05, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.003558830169505424;  // std dev = 3.062, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.003602996365752144;  // std dev = 3.062, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03554750876544446;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.0701781335223183;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04121356382474078;  // std dev = 2.832, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.07800291413026694;  // std dev = 6.06e-05, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.003121928471489565;  // std dev = 3.062, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.003160779410085799;  // std dev = 3.062, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.111', 'seconds']
Refined model CLL: -0.621934


******************************************
Best model found
******************************************
Results 

CLL : -0.658334 

AUC ROC : 0.55578 

AUC PR : 0.427993 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 46.663 

Total Inference Time : 1.306260585784912 

Total revision time: 49.67596070671081
Best scored revision CLL: -0.621934


Results 

CLL : -0.658334 

AUC ROC : 0.55578 

AUC PR : 0.427993 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 70.64689128303527 

Total Inference Time : 1.306260585784912 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.096
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.159', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 37.608
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.4356367001892301;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5949910403626703;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.630876207826785;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.5005053426630848;  // std dev = 1.921, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.5406810030211525;  // std dev = 1.962, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.24811816884741297;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.5791684237702857;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.22916842377028543;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.042971029325586246;  // std dev = 1.239, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.3045453081923796;  // std dev = 17.080, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.4161777775101614;  // std dev = 2.748, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.43170309793098227;  // std dev = 2.002, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.20848477447886868;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2420224216035936;  // std dev = 0.493, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.29960167906608665;  // std dev = 1.922, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.3332523139479392;  // std dev = 1.960, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.44785888933339724;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.17062637354018512;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.1320938869396352;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.18614209121708455;  // std dev = 0.493, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.21847891833460684;  // std dev = 1.924, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.25592406517200134;  // std dev = 1.956, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.3413723950665916;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.13664585375352212;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.10390055191315252;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.410655196086927;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.08250730158617592;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.20093210092205208;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.33787403040753894;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.12002336079172088;  // std dev = 1.233, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | | then return 0.13876759990288273;  // std dev = 17.120, 1,208.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=700 */
%   | | | else return 0.1869158263904424;  // std dev = 2.590, 46.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=32 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3084784860080946;  // std dev = 1.592, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.07076855509090269;  // std dev = 1.614, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.15637914086140647;  // std dev = 2.154, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.10442578183979598;  // std dev = 17.120, 1,208.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=700 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return 0.23406964319451937;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.0716106456035381;  // std dev = 1.834, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.04164130474198825;  // std dev = 0.486, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.23350630768752106;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.07964979117081539;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.13985550017475223;  // std dev = 1.236, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.07785846768052276;  // std dev = 17.034, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.121547456007718;  // std dev = 2.746, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.15026483063892204;  // std dev = 1.825, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.031795589764566985;  // std dev = 1.819, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.20276141283505494;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.0601291269033639;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1426124849307789;  // std dev = 1.230, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.05832418385577216;  // std dev = 17.028, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.09385375001572518;  // std dev = 2.746, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.12212818973834304;  // std dev = 1.833, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.02365065456569603;  // std dev = 1.822, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.044762844106539725;  // std dev = 0.491, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.05598821163568711;  // std dev = 1.924, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.08805480983541226;  // std dev = 1.956, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.15552150942212212;  // std dev = 2.24e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.017975023350868837;  // std dev = 1.822, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return -0.001766259316865764;  // std dev = 0.484, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.462', 'seconds']
Refined model CLL: -0.66504


******************************************
Best model found
******************************************
Results 

CLL : -0.757057 

AUC ROC : 0.536914 

AUC PR : 0.345597 

Precision : 0.35357 

Recall : 0.956812 

F1 : 0.516338 

Total Learning Time : 37.608 

Total Inference Time : 1.2790968418121338 

Total revision time: 40.696840290069574
Best scored revision CLL: -0.66504


Results 

CLL : -0.757057 

AUC ROC : 0.536914 

AUC PR : 0.345597 

Precision : 0.35357 

Recall : 0.956812 

F1 : 0.516338 

Total Learning Time : 61.66777086639404 

Total Inference Time : 1.2790968418121338 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.629
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18676884460176976;  // std dev = 19.750, 1,768.000 (wgt'ed) examples reached here.  /* #neg=1,187 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16378568500963533;  // std dev = 19.731, 1,761.000 (wgt'ed) examples reached here.  /* #neg=1,180 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14229293936829612;  // std dev = 19.695, 1,748.000 (wgt'ed) examples reached here.  /* #neg=1,167 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12561436977117138;  // std dev = 19.603, 1,716.000 (wgt'ed) examples reached here.  /* #neg=1,135 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0951504348396276;  // std dev = 19.731, 1,761.000 (wgt'ed) examples reached here.  /* #neg=1,180 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08122558109640239;  // std dev = 19.678, 1,742.000 (wgt'ed) examples reached here.  /* #neg=1,161 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07525009752015183;  // std dev = 19.535, 1,693.000 (wgt'ed) examples reached here.  /* #neg=1,112 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044750616965176425;  // std dev = 19.764, 1,773.000 (wgt'ed) examples reached here.  /* #neg=1,192 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04084194284785111;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03443760660538904;  // std dev = 19.655, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,153 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.063', 'seconds']
Parameter learned model CLL:-0.535918 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.75, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.731, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.695, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.603, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.731, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.678, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.535, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.764, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.655, 1, 581]}]
{'': [nan, 0.2206288645809727]}
{'': [nan, 0.22107489517498832]}
{'': [nan, 0.2219034895715915]}
{'': [nan, 0.2239429665129112]}
{'': [nan, 0.22107489517499812]}
{'': [nan, 0.22228596925293112]}
{'': [nan, 0.22540679473416148]}
{'': [nan, 0.22031035819933134]}
{'': [nan, 0.22209472828629293]}
{'': [nan, 0.22279593023179978]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 77.91499999999999
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21670156667845475;  // std dev = 0.480, 1,520.000 (wgt'ed) examples reached here.  /* #neg=975 #pos=545 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.0168510649004878;  // std dev = 0.331, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.037924215998388786;  // std dev = 3.623, 89.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=16 */
%   | | | else return 0.02481560176617905;  // std dev = 3.873, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E), haswordtitle(G, D) )
%   | | | then return 0.49633781611693023;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11538543516454917;  // std dev = 3.162, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else return 0.19076329962093402;  // std dev = 0.480, 1,465.000 (wgt'ed) examples reached here.  /* #neg=936 #pos=529 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0413251698430311;  // std dev = 3.608, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | | | else return -0.057942260735130494;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else return -5.712549897349537E-4;  // std dev = 0.352, 124.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.10504926631917637;  // std dev = 0.460, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else return 0.15378043120282714;  // std dev = 0.478, 1,501.000 (wgt'ed) examples reached here.  /* #neg=972 #pos=529 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.05658256934771644;  // std dev = 3.574, 79.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=16 */
%   | | | else return -0.041195968836098336;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.013115220928183608;  // std dev = 3.882, 112.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
%   | | | else return -0.14381110558148288;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14042817969077762;  // std dev = 0.481, 1,495.000 (wgt'ed) examples reached here.  /* #neg=950 #pos=545 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.02055188517326818;  // std dev = 3.638, 93.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=16 */
%   | | | else return -0.03943250049314441;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.004310075671175604;  // std dev = 3.916, 123.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=18 */
%   | | | else return -0.12676582075147463;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1081153746537489;  // std dev = 0.479, 1,524.000 (wgt'ed) examples reached here.  /* #neg=979 #pos=545 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.0060105312249117285;  // std dev = 3.688, 109.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=16 */
%   | | | else return 0.04705030320967173;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.0019916886627406234;  // std dev = 3.911, 122.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=18 */
%   | | | else return -0.1133847875063729;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09257308798097312;  // std dev = 0.481, 1,502.000 (wgt'ed) examples reached here.  /* #neg=957 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.04553292980671578;  // std dev = 3.583, 81.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=16 */
%   | | | else return -0.04538253438139325;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.013898659144446084;  // std dev = 3.869, 110.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=18 */
%   | | | else return -0.10247656053324816;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06597787970013758;  // std dev = 0.478, 1,536.000 (wgt'ed) examples reached here.  /* #neg=991 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.038619848752466726;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.015252544543915619;  // std dev = 3.642, 96.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=16 */
%   | | | else return 0.005840468041535669;  // std dev = 3.883, 113.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05439726051604089;  // std dev = 0.479, 1,526.000 (wgt'ed) examples reached here.  /* #neg=981 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03396286162578139;  // std dev = 3.594, 83.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=16 */
%   | | | else return -0.018262611125058368;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.004452761147879624;  // std dev = 3.886, 114.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=18 */
%   | | | else return -0.0942168741182516;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5565868466349274;  // std dev = 7.299, 459.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=396 */
%   | | | else return -0.28327494465942155;  // std dev = 4.116, 905.000 (wgt'ed) examples reached here.  /* #neg=889 #pos=16 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.15651848236583638;  // std dev = 8.353, 280.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=132 */
%   | | | else return 0.06955067058247767;  // std dev = 1.634, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.18944681861618232;  // std dev = 1.214, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4868326740088328;  // std dev = 1.553, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01857299680422455;  // std dev = 3.853, 104.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
%   | | | else return -0.08636967651869917;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4472919987582068;  // std dev = 6.975, 451.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=396 */
%   | | | else return -0.23299659705891487;  // std dev = 4.051, 897.000 (wgt'ed) examples reached here.  /* #neg=881 #pos=16 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.1366729683578707;  // std dev = 8.171, 276.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=132 */
%   | | | else return 0.051406284303867726;  // std dev = 1.620, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.2660829756278942;  // std dev = 1.008, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.37410641765381825;  // std dev = 1.553, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.021248040023143896;  // std dev = 3.463, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | | else return -0.07935657833606748;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.993', 'seconds']
Refined model CLL: -0.380634


******************************************
Best model found
******************************************
Results 

CLL : -0.499111 

AUC ROC : 0.869106 

AUC PR : 0.783382 

Precision : 0.788701 

Recall : 0.882594 

F1 : 0.83301 

Total Learning Time : 77.91499999999999 

Total Inference Time : 2.472762107849121 

Total revision time: 82.89712271118164
Best scored revision CLL: -0.380634


Results 

CLL : -0.499111 

AUC ROC : 0.869106 

AUC PR : 0.783382 

Precision : 0.788701 

Recall : 0.882594 

F1 : 0.83301 

Total Learning Time : 103.8680532875061 

Total Inference Time : 2.472762107849121 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.294
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.129', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 70.403
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.27854694504975613;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3581489350995113;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.47883859027192616;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3002199788127198;  // std dev = 3.525, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.4247561750638162;  // std dev = 2.608, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.16653882456488167;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.05092203251355405;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.05092203251355405;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3158346306230407;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.5825012972897073;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.2006373174408249;  // std dev = 19.656, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.28512978481613427;  // std dev = 4.405, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.1420942428155646;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.04434629760466855;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.04434629760466855;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.25734882682550625;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.46770013346717015;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.16456667394876515;  // std dev = 19.656, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.2268428185290817;  // std dev = 4.402, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.11914890490746433;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.03842866223690456;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.03842866223690456;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1335398816553979;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.13976215662318855;  // std dev = 3.521, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.2381039981976848;  // std dev = 2.606, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.0984134027840187;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.033154945921885746;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.033154945921885746;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.21625415856416136;  // std dev = 1.921, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.4536371038073145;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.10333489543560044;  // std dev = 19.646, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.13400065354902851;  // std dev = 4.391, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.08026654944252247;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.028495105925721097;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.028495105925721097;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08228184986043875;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.06433765954491763;  // std dev = 3.510, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.1651174143792798;  // std dev = 2.602, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.06479591611329234;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.024408230135271918;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.024408230135271918;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06364251242292052;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.047815373275747974;  // std dev = 3.509, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.12523650056492258;  // std dev = 2.602, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.05187916934404051;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.02084688910874009;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.02084688910874009;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04891842778433157;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.028159267613717197;  // std dev = 3.503, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.10751408945918205;  // std dev = 2.600, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.04126932998424623;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.017760671541598414;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.017760671541598414;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03743464291623991;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.020272180786046978;  // std dev = 3.502, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.08237935221912049;  // std dev = 2.600, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.03266374873483021;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.015098879183171418;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.015098879183171418;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.831', 'seconds']
Refined model CLL: -0.669423


******************************************
Best model found
******************************************
Results 

CLL : -0.645562 

AUC ROC : 0.562159 

AUC PR : 0.41233 

Precision : 0.480851 

Recall : 0.04978 

F1 : 0.09022 

Total Learning Time : 70.403 

Total Inference Time : 1.4087564945220947 

Total revision time: 73.8546042175293
Best scored revision CLL: -0.669423


Results 

CLL : -0.645562 

AUC ROC : 0.562159 

AUC PR : 0.41233 

Precision : 0.480851 

Recall : 0.04978 

F1 : 0.09022 

Total Learning Time : 94.82553479385376 

Total Inference Time : 1.4087564945220947 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 0.977
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.135', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 31.586
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.443242102801371;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7100007869513637;  // std dev = 1.846, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.13087620782678508;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.16249676118646889;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.051131391239862906;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3803254334818479;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5454907572981614;  // std dev = 1.261, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.6490137408654373;  // std dev = 1.340, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.22373365448410584;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.11418623766746618;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.14154274242296505;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.04479249977758044;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.7044413157137921;  // std dev = 0.142, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.30924487299834214;  // std dev = 14.000, 808.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=472 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.4293558044710166;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.601984149523128;  // std dev = 0.046, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.18886832215749735;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0983529971467659;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.12131905159335965;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.039048804834509544;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.5675816634416442;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.24325651363068515;  // std dev = 13.946, 800.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=466 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.319451596077225;  // std dev = 1.250, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.39217804032843423;  // std dev = 1.294, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.026441334918466532;  // std dev = 1.193, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.10934566610598352;  // std dev = 3.114, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.10247683991352247;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.03389416118740775;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.40236416860996477;  // std dev = 0.173, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.019971593992295932;  // std dev = 3.401, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.20070507886897443;  // std dev = 13.464, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | | else return 0.27580536974599695;  // std dev = 1.569, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.1428698055473435;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.06730824794585256;  // std dev = 2.951, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.012287199930136956;  // std dev = 3.141, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.06873695868340939;  // std dev = 4.196, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.11610911184405892;  // std dev = 2.639, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return -0.1438721937331589;  // std dev = 2.160, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 1.3712895113950953E-4;  // std dev = 3.358, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.16775088694848603;  // std dev = 13.050, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 5.258890547054362E-4;  // std dev = 1.183, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.07849983607364953;  // std dev = 3.113, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.058558669466739946;  // std dev = 4.185, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return 0.009200554240250087;  // std dev = 3.154, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.10580731938440036;  // std dev = 0.487, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1839634314677407;  // std dev = 1.252, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.2859799012295979;  // std dev = 0.107, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.16626717878219183;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.033566268118321;  // std dev = 2.934, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005273542093363875;  // std dev = 3.128, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.05716799184602949;  // std dev = 4.188, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return -0.49967260829920873;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.20094757583325115;  // std dev = 2.295, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.2605686102636057;  // std dev = 1.604, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.08728704260247817;  // std dev = 3.215, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.08932676697017013;  // std dev = 13.405, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | | else return 0.16060022587761244;  // std dev = 1.557, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.048748153219286106;  // std dev = 4.176, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return -0.006340119201028513;  // std dev = 3.142, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.42872117463791654;  // std dev = 1.267, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return -0.3963192729592383;  // std dev = 0.401, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.26274333259813343;  // std dev = 0.993, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.06252351591900994;  // std dev = 3.071, 52.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07437820282820697;  // std dev = 2.710, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return -0.0414917631106186;  // std dev = 3.658, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return 0.07692695413275369;  // std dev = 13.048, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | | | else return 0.012018748163093573;  // std dev = 4.213, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.32958346500929137;  // std dev = 1.263, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return -0.30911851870534374;  // std dev = 0.365, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.20718958030143475;  // std dev = 0.992, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.05022893056612406;  // std dev = 3.071, 52.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.04871949035461075;  // std dev = 13.389, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | | else return 0.12050254934493654;  // std dev = 1.562, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.007523501073897136;  // std dev = 3.134, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.04327723551006975;  // std dev = 4.184, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.798', 'seconds']
Refined model CLL: -0.619057


******************************************
Best model found
******************************************
Results 

CLL : -0.705456 

AUC ROC : 0.549803 

AUC PR : 0.398557 

Precision : 0.376024 

Recall : 0.930685 

F1 : 0.535635 

Total Learning Time : 31.586 

Total Inference Time : 1.2225010395050049 

Total revision time: 34.500946081161494
Best scored revision CLL: -0.619057


Results 

CLL : -0.705456 

AUC ROC : 0.549803 

AUC PR : 0.398557 

Precision : 0.376024 

Recall : 0.930685 

F1 : 0.535635 

Total Learning Time : 55.47187665748596 

Total Inference Time : 1.2225010395050049 

Run: 3
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.009
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.240', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 48.737
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.23843062524035266;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4295775065280833;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004815601766179008;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004815601766179008;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.45884191663785473;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.36797300713520104;  // std dev = 2.929, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004228390109386251;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004228390109386251;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1751801570305961;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.37277259202160834;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.30192753761678814;  // std dev = 2.929, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0037111125833978686;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0037111125833978686;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14514481334590568;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.26830348475807086;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2387383576005406;  // std dev = 2.834, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0032558270569705674;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0032558270569705674;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11804668707041945;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.21343720814637304;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1824922435773963;  // std dev = 2.834, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.002477264470117363;  // std dev = 3.069, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.09999413152221179;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0028554031467501392;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09457696812283496;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.18737610418369463;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13739695179228642;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.08855026142782672;  // std dev = 0.014, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.002503460836945874;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0033144850730382884;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07489163449109286;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.16144713314233383;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10160767020914752;  // std dev = 2.931, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.08166025301016137;  // std dev = 0.013, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0021943081594878503;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.00290698309028464;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05877777591804268;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1026803739194603;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07635072275837826;  // std dev = 2.833, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.0018128737554413865;  // std dev = 3.065, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.08852405081215557;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0025487887653019756;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04582386394015474;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.10250527166091698;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05624735738000253;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.07257370835847389;  // std dev = 0.001, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0022341202704727822;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.002285736886542574;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03554750876544446;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.07754934286504807;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04222328238497485;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.06783799559292449;  // std dev = 0.001, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0019578306687249945;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0020031418734218257;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.472', 'seconds']
Refined model CLL: -0.621881


******************************************
Best model found
******************************************
Results 

CLL : -0.659219 

AUC ROC : 0.55578 

AUC PR : 0.427993 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 48.737 

Total Inference Time : 1.0926203727722168 

Total revision time: 51.505679794311526
Best scored revision CLL: -0.621881


Results 

CLL : -0.659219 

AUC ROC : 0.55578 

AUC PR : 0.427993 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 72.47648472404481 

Total Inference Time : 1.0926203727722168 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.06
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.156', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 43.62
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.4356367001892301;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5949910403626703;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.630876207826785;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.5005053426630848;  // std dev = 1.921, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.5406810030211525;  // std dev = 1.962, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.24811816884741297;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.30665618885999163;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3980165213163664;  // std dev = 1.922, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.4318624987684384;  // std dev = 1.960, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.20848477447886868;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.20848477447886868;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.5145754588862081;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.16457545888620817;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.10459348710461978;  // std dev = 1.235, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.506680722044103;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.10459348710461978;  // std dev = 1.235, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | | then return 0.24054906710772897;  // std dev = 17.125, 1,208.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=700 */
%   | | | else return 0.29660217939899747;  // std dev = 2.642, 46.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=32 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.185496461055817;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2377282288921524;  // std dev = 1.924, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.2752059950613097;  // std dev = 1.956, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.34760329138589346;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.11566944880111067;  // std dev = 1.835, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.11566944880111067;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1405564846344659;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.17682332147843827;  // std dev = 1.925, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.20831270101195806;  // std dev = 1.955, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.27344885943402975;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.09033288533942947;  // std dev = 1.834, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.0903328853394295;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.31272506532580485;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.048131251017381915;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.15215162755616127;  // std dev = 1.232, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.30296625114713305;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.15215162755616127;  // std dev = 1.232, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | | then return 0.10402099894652017;  // std dev = 17.120, 1,208.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=700 */
%   | | | else return 0.15138810365842084;  // std dev = 2.577, 46.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.23690738283152543;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.03618457030039092;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11741356522378894;  // std dev = 1.233, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.07777790859000408;  // std dev = 17.035, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.12232818234893936;  // std dev = 2.745, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.14367274195032265;  // std dev = 1.838, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.03878346283407273;  // std dev = 1.822, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.059420965397448774;  // std dev = 0.491, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.0763746245464179;  // std dev = 1.926, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.11003334260054985;  // std dev = 1.953, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1757076161695026;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.02958098364171168;  // std dev = 1.822, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.007858934231241356;  // std dev = 0.485, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04466237389374971;  // std dev = 0.491, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.057504674043771034;  // std dev = 1.926, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.08759767096318315;  // std dev = 1.952, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.15168943308365906;  // std dev = 2.24e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.02251415045041194;  // std dev = 1.821, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.00596515995221122;  // std dev = 0.485, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.123', 'seconds']
Refined model CLL: -0.665532


******************************************
Best model found
******************************************
Results 

CLL : -0.757317 

AUC ROC : 0.536199 

AUC PR : 0.345362 

Precision : 0.35357 

Recall : 0.956812 

F1 : 0.516338 

Total Learning Time : 43.62 

Total Inference Time : 1.1325042247772217 

Total revision time: 46.57900517463684
Best scored revision CLL: -0.665532


Results 

CLL : -0.757317 

AUC ROC : 0.536199 

AUC PR : 0.345362 

Precision : 0.35357 

Recall : 0.956812 

F1 : 0.516338 

Total Learning Time : 67.54981010437012 

Total Inference Time : 1.1325042247772217 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.686
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19110022449778813;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16095175409407708;  // std dev = 19.764, 1,773.000 (wgt'ed) examples reached here.  /* #neg=1,192 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14073656263973644;  // std dev = 19.714, 1,755.000 (wgt'ed) examples reached here.  /* #neg=1,174 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12172357727094624;  // std dev = 19.661, 1,736.000 (wgt'ed) examples reached here.  /* #neg=1,155 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09529818372484082;  // std dev = 19.739, 1,764.000 (wgt'ed) examples reached here.  /* #neg=1,183 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07574138491340399;  // std dev = 19.769, 1,775.000 (wgt'ed) examples reached here.  /* #neg=1,194 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05523934589410637;  // std dev = 19.857, 1,808.000 (wgt'ed) examples reached here.  /* #neg=1,227 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.055153221938124324;  // std dev = 19.698, 1,749.000 (wgt'ed) examples reached here.  /* #neg=1,168 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04957294354782799;  // std dev = 19.615, 1,720.000 (wgt'ed) examples reached here.  /* #neg=1,139 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.031058566256456394;  // std dev = 19.737, 1,763.000 (wgt'ed) examples reached here.  /* #neg=1,182 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.180', 'seconds']
Parameter learned model CLL:-0.534575 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.764, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.714, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.661, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.739, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.769, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.857, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.698, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.615, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.737, 1, 581]}]
{'': [nan, 0.22209472828628862]}
{'': [nan, 0.22031035819932596]}
{'': [nan, 0.22145729336614728]}
{'': [nan, 0.22266844432880642]}
{'': [nan, 0.22088372385990832]}
{'': [nan, 0.2201829795675388]}
{'': [nan, 0.21808401940245783]}
{'': [nan, 0.22183974441330082]}
{'': [nan, 0.22368814223905786]}
{'': [nan, 0.22094744526441032]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 77.303
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.18314893509951236;  // std dev = 2.962, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else return 0.213420929726774;  // std dev = 0.479, 1,489.000 (wgt'ed) examples reached here.  /* #neg=960 #pos=529 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.0168510649004878;  // std dev = 0.331, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.00851773156715447;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.02395204390780169;  // std dev = 5.167, 193.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19903787219191585;  // std dev = 0.482, 1,477.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.007484033389160125;  // std dev = 0.340, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.02553626103058671;  // std dev = 3.866, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return 0.010644680651110086;  // std dev = 3.676, 103.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15483296632387927;  // std dev = 0.478, 1,536.000 (wgt'ed) examples reached here.  /* #neg=991 #pos=545 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.017571408487115952;  // std dev = 0.331, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03996349050780265;  // std dev = 3.830, 97.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=18 */
%   | | | else return 0.017337009605412398;  // std dev = 3.654, 97.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.1266110864636227;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.0684275994046452;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else return 0.1326933106458947;  // std dev = 0.480, 1,476.000 (wgt'ed) examples reached here.  /* #neg=947 #pos=529 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.010903816179999293;  // std dev = 0.340, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.022053118060451585;  // std dev = 3.863, 105.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=18 */
%   | | | else return 0.006162444406686365;  // std dev = 3.671, 102.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1081308216813948;  // std dev = 0.479, 1,524.000 (wgt'ed) examples reached here.  /* #neg=979 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.03187730273459365;  // std dev = 0.314, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.024857709724384846;  // std dev = 3.849, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | | else return 0.00995768955370108;  // std dev = 3.661, 99.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.14639683246496915;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03898371612060674;  // std dev = 2.996, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | else return 0.10385311620553771;  // std dev = 0.484, 1,415.000 (wgt'ed) examples reached here.  /* #neg=886 #pos=529 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.048903138436697455;  // std dev = 3.576, 80.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
%   | | | else return -0.03560492215900725;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.006267642650327736;  // std dev = 3.884, 112.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
%   | | | else return -0.14585267202297195;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07141508278259479;  // std dev = 0.481, 1,503.000 (wgt'ed) examples reached here.  /* #neg=958 #pos=545 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.026919492970018676;  // std dev = 3.610, 87.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=16 */
%   | | | else return -0.015355168547991;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -4.93203252829E-4;  // std dev = 3.898, 116.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=18 */
%   | | | else return -0.1298183069228738;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5928094806866187;  // std dev = 6.520, 444.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=396 */
%   | | | else return -0.27548858182948444;  // std dev = 4.083, 868.000 (wgt'ed) examples reached here.  /* #neg=852 #pos=16 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.18883542328284944;  // std dev = 1.879, 34.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | | else return 0.1852711903922938;  // std dev = 8.194, 272.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=132 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.2738502574748877;  // std dev = 1.151, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5436363534583594;  // std dev = 1.302, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.020778858472824763;  // std dev = 3.849, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | | else return -0.11374575349994846;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.012470673892078279;  // std dev = 2.572, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.2060685067844505;  // std dev = 0.777, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.041318187664463255;  // std dev = 0.419, 1,442.000 (wgt'ed) examples reached here.  /* #neg=913 #pos=529 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.01973532373679476;  // std dev = 3.625, 90.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
%   | | | else return -0.048689743561681174;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004867897756925104;  // std dev = 3.475, 112.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
%   | | | else return -0.1058670339560686;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4316075281506586;  // std dev = 7.170, 455.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=396 */
%   | | | else return -0.23179017406200347;  // std dev = 4.027, 882.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=16 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.14204725348199201;  // std dev = 1.633, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | | else return 0.16882825330990353;  // std dev = 7.930, 256.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=132 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.003936574439706752;  // std dev = 3.320, 101.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=17 */
%   | | | else return 0.07975223366068036;  // std dev = 1.617, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return 0.35461135357597484;  // std dev = 1.544, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return -0.09420025037294662;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.342', 'seconds']
Refined model CLL: -0.378957


******************************************
Best model found
******************************************
Results 

CLL : -0.496348 

AUC ROC : 0.871834 

AUC PR : 0.785017 

Precision : 0.788419 

Recall : 0.871921 

F1 : 0.82807 

Total Learning Time : 77.303 

Total Inference Time : 2.5909454822540283 

Total revision time: 82.42825523757935
Best scored revision CLL: -0.378957


Results 

CLL : -0.496348 

AUC ROC : 0.871834 

AUC PR : 0.785017 

Precision : 0.788419 

Recall : 0.871921 

F1 : 0.82807 

Total Learning Time : 103.39906016731263 

Total Inference Time : 2.5909454822540283 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.315
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.105', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 70.304
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.27854694504975613;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3581489350995113;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.47883859027192616;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.0803711573217346;  // std dev = 3.300, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3002199788127198;  // std dev = 3.525, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.42475617506381624;  // std dev = 2.608, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.17626717210462295;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.05092203251355405;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.04789385243275259;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20289930723994204;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.24760701674977226;  // std dev = 3.523, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.3498242125167599;  // std dev = 2.607, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.15150238996222307;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.04434629760466855;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.04161364193995419;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.16640029396569495;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.18861458664853883;  // std dev = 3.512, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.2920143514374319;  // std dev = 2.603, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1278754525034649;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.03842866223690456;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.03598745608932591;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.13360339271793026;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.14640266421832263;  // std dev = 3.511, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.22574316832183322;  // std dev = 2.602, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.10621981933357762;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.033154945921885746;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.03099336090453001;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.21845275277390386;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.4851194194405705;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.103255439591714;  // std dev = 19.656, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.1338427986047155;  // std dev = 4.376, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.08704211527084459;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.028495105925721097;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.026595858635667033;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08230444561629689;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.07214607887745386;  // std dev = 3.503, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.15164264116489157;  // std dev = 2.600, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.07053494519933454;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.024408230135271918;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.022750626979808865;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06365041165088461;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.053929096546009435;  // std dev = 3.502, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.11491273918300643;  // std dev = 2.600, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.0566473681790841;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.02084688910874009;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.019408516180768408;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.048916717286450785;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.03450984799800337;  // std dev = 3.498, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.09693910640697675;  // std dev = 2.599, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.04517190030288224;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.017760671541598414;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.016518703664966692;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5900266077394707;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.3818393583300667;  // std dev = 0.211, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.32433293947620395;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.1731316710748194;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.0345724284769956;  // std dev = 20.015, 1,649.000 (wgt'ed) examples reached here.  /* #neg=952 #pos=697 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02305720680416807;  // std dev = 3.573, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | | else return 0.01403103126101996;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.263', 'seconds']
Refined model CLL: -0.667818


******************************************
Best model found
******************************************
Results 

CLL : -0.642541 

AUC ROC : 0.567541 

AUC PR : 0.419867 

Precision : 0.546125 

Recall : 0.065198 

F1 : 0.11649 

Total Learning Time : 70.304 

Total Inference Time : 1.2991702556610107 

Total revision time: 73.68259672546387
Best scored revision CLL: -0.667818


Results 

CLL : -0.642541 

AUC ROC : 0.567541 

AUC PR : 0.419867 

Precision : 0.546125 

Recall : 0.065198 

F1 : 0.11649 

Total Learning Time : 94.65340165519714 

Total Inference Time : 1.2991702556610107 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.016
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.132', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 32.677
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.443242102801371;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7100007869513637;  // std dev = 1.846, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.13087620782678508;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.16249676118646889;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.051131391239862906;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3803254334818479;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5454907572981614;  // std dev = 1.261, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.6490137408654373;  // std dev = 1.340, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.22373365448410584;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.11418623766746618;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.14154274242296505;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.04479249977758044;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E) )
%   | | | then return 0.6674283310648041;  // std dev = 0.229, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.1069972225882473;  // std dev = 3.426, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.3226813064206765;  // std dev = 13.464, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | | else return 0.48209840385016406;  // std dev = 1.599, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.18886832215749735;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0983529971467659;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.12131905159335965;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.039048804834509544;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.24578011745001851;  // std dev = 0.490, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3186966060103764;  // std dev = 1.250, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4832163144047183;  // std dev = 0.147, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.02644133491846655;  // std dev = 1.193, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.10934566610598352;  // std dev = 3.114, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.10247683991352247;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.03389416118740775;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.18858829032157448;  // std dev = 0.490, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24621590936106746;  // std dev = 1.254, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3666437404486272;  // std dev = 0.138, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.1428698055473435;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.06730824794585256;  // std dev = 2.951, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.012287199930137003;  // std dev = 3.141, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.06873695868340937;  // std dev = 4.196, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.38772782664967687;  // std dev = 0.324, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.06891071364528435;  // std dev = 3.385, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.0017836177348015804;  // std dev = 3.359, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.1667617771295462;  // std dev = 13.049, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 5.258890547054293E-4;  // std dev = 1.183, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.07849983607364953;  // std dev = 3.113, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.05855866946673998;  // std dev = 4.185, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return 0.009200554240250068;  // std dev = 3.154, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.13614918629793682;  // std dev = 2.651, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return -0.13699915245679334;  // std dev = 2.106, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.0013569984920406353;  // std dev = 3.359, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.1254095195670445;  // std dev = 13.049, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.16626717878219183;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.03356626811832093;  // std dev = 2.934, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.005273542093363868;  // std dev = 3.128, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.05716799184602957;  // std dev = 4.188, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07775133046396315;  // std dev = 0.487, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.23189322569882215;  // std dev = 0.882, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.1770863902570559;  // std dev = 1.562, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.13519676632969896;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.02740926602981948;  // std dev = 2.933, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.048748153219286015;  // std dev = 4.176, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return -0.006340119201028508;  // std dev = 3.142, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.3258550232041252;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.22449854511576578;  // std dev = 0.193, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.03774458550745827;  // std dev = 3.181, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return -0.052237479465136405;  // std dev = 3.465, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.06612180826931573;  // std dev = 13.392, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | | else return 0.1422071062929009;  // std dev = 1.566, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.005028446784007261;  // std dev = 3.134, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.041063072418853604;  // std dev = 4.181, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.25867865048064365;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1892448942300265;  // std dev = 0.173, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.028732351442890682;  // std dev = 3.181, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return -0.04167557797808354;  // std dev = 3.463, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.04132530157892452;  // std dev = 3.341, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.05787723929899257;  // std dev = 13.049, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03485208853092408;  // std dev = 4.169, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return -0.005891170612761563;  // std dev = 3.147, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.727', 'seconds']
Refined model CLL: -0.633466


******************************************
Best model found
******************************************
Results 

CLL : -0.706303 

AUC ROC : 0.554902 

AUC PR : 0.403853 

Precision : 0.375312 

Recall : 0.915687 

F1 : 0.532406 

Total Learning Time : 32.677 

Total Inference Time : 1.0038673877716064 

Total revision time: 35.39008156585693
Best scored revision CLL: -0.633466


Results 

CLL : -0.706303 

AUC ROC : 0.554902 

AUC PR : 0.403853 

Precision : 0.375312 

Recall : 0.915687 

F1 : 0.532406 

Total Learning Time : 56.36088649559021 

Total Inference Time : 1.0038673877716064 

Run: 4
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.05
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.178', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 45.043
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.23843062524035266;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4295775065280833;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004815601766179008;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004815601766179008;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.45884191663785473;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.36797300713520104;  // std dev = 2.929, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004228390109386251;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004228390109386251;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1751801570305961;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.37336879228699843;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.30187643473689757;  // std dev = 2.929, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0037111125833978686;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0037111125833978686;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14514481334590568;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.30090639731156066;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23763375697696634;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0032558270569705674;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0032558270569705674;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11804668707041945;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.22820827846193312;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.182957713895162;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.002477264470117363;  // std dev = 3.069, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.09999413152221179;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0028554031467501392;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09457696812283496;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.17971297081833038;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13802987030584704;  // std dev = 2.931, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.08855026142782672;  // std dev = 0.014, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.002503460836945874;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0033144850730382766;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07489163449109286;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.13542845644160942;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1019391181844089;  // std dev = 2.833, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.08166025301016137;  // std dev = 0.013, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0021943081594878503;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0029069830902846163;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05877777591804268;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.11000181368003961;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07526504025683743;  // std dev = 2.832, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.07574285353662784;  // std dev = 0.012, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0019228798175884457;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.002548788765301999;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04582386394015474;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.0912767382216066;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.057232468579162775;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.001664166668427199;  // std dev = 3.065, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.08397427043603654;  // std dev = 0.066, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.00223412027047277;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03554750876544446;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.06854801925675572;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04146751296673911;  // std dev = 2.832, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.019864395619346463;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return -0.007606129699289635;  // std dev = 3.072, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 6.899310532541678E-4;  // std dev = 2.919, 71.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.882', 'seconds']
Refined model CLL: -0.621939


******************************************
Best model found
******************************************
Results 

CLL : -0.658896 

AUC ROC : 0.555809 

AUC PR : 0.428002 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 45.043 

Total Inference Time : 1.147385597229004 

Total revision time: 47.922356670379635
Best scored revision CLL: -0.621939


Results 

CLL : -0.658896 

AUC ROC : 0.555809 

AUC PR : 0.428002 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 68.8932119064331 

Total Inference Time : 1.147385597229004 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.049
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.178', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 40.745
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.4356367001892301;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5949910403626703;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.630876207826785;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.5005053426630848;  // std dev = 1.921, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.5406810030211525;  // std dev = 1.962, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.24811816884741297;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.30665618885999163;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3980165213163664;  // std dev = 1.922, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.4318624987684384;  // std dev = 1.960, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.20848477447886868;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.20848477447886868;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24206322397592006;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.29755757856572124;  // std dev = 1.924, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.33500538878161046;  // std dev = 1.956, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.17062637354018512;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.17062637354018512;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.4586612187245652;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.058005447942101405;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.18403810314669028;  // std dev = 17.080, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.2385743227206654;  // std dev = 2.745, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.13664585375352212;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.13664585375352212;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.4106434583517543;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.12238733197939455;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.20094252580239752;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.13873936241885096;  // std dev = 17.054, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.17954372140339622;  // std dev = 2.745, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.21003275240803626;  // std dev = 1.826, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.10762034996184425;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.3084695664013876;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.09322325244548678;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.15304144816571497;  // std dev = 1.232, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1657788263515753;  // std dev = 2.289, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.10409347760495277;  // std dev = 17.119, 1,208.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=700 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.1684370299529512;  // std dev = 1.831, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.08372807955323866;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.23349992028398142;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.07054695303427916;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11806642639468769;  // std dev = 1.233, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.07805519578330818;  // std dev = 17.052, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.11222355326340384;  // std dev = 2.746, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.13838355387653833;  // std dev = 1.886, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.053223273098818864;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.24509840905634372;  // std dev = 1.590, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.12944154183910003;  // std dev = 1.643, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05844226111476568;  // std dev = 17.027, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.08693073991869062;  // std dev = 2.746, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.16965595261158534;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.03197630367568559;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.021163052347919712;  // std dev = 0.485, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.044876221444720185;  // std dev = 0.491, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.050777404019390876;  // std dev = 1.924, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.08283705224144035;  // std dev = 1.956, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.14707568413251254;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.024299406976036546;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.016096959134010408;  // std dev = 0.485, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.908', 'seconds']
Refined model CLL: -0.665782


******************************************
Best model found
******************************************
Results 

CLL : -0.756481 

AUC ROC : 0.535588 

AUC PR : 0.343299 

Precision : 0.353813 

Recall : 0.956367 

F1 : 0.516532 

Total Learning Time : 40.745 

Total Inference Time : 1.1680419445037842 

Total revision time: 43.68095240020752
Best scored revision CLL: -0.665782


Results 

CLL : -0.756481 

AUC ROC : 0.535588 

AUC PR : 0.343299 

Precision : 0.353813 

Recall : 0.956367 

F1 : 0.516532 

Total Learning Time : 64.65180763626098 

Total Inference Time : 1.1680419445037842 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.595
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18510447814959174;  // std dev = 19.775, 1,777.000 (wgt'ed) examples reached here.  /* #neg=1,196 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16476724714885624;  // std dev = 19.720, 1,757.000 (wgt'ed) examples reached here.  /* #neg=1,176 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1406954656374511;  // std dev = 19.720, 1,757.000 (wgt'ed) examples reached here.  /* #neg=1,176 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12481660281602736;  // std dev = 19.621, 1,722.000 (wgt'ed) examples reached here.  /* #neg=1,141 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10122714098014889;  // std dev = 19.650, 1,732.000 (wgt'ed) examples reached here.  /* #neg=1,151 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09420767586852224;  // std dev = 19.477, 1,674.000 (wgt'ed) examples reached here.  /* #neg=1,093 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05625014477097415;  // std dev = 19.769, 1,775.000 (wgt'ed) examples reached here.  /* #neg=1,194 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051577638873182646;  // std dev = 19.672, 1,740.000 (wgt'ed) examples reached here.  /* #neg=1,159 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03387429645740105;  // std dev = 19.777, 1,778.000 (wgt'ed) examples reached here.  /* #neg=1,197 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04260885760535417;  // std dev = 19.544, 1,696.000 (wgt'ed) examples reached here.  /* #neg=1,115 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.069', 'seconds']
Parameter learned model CLL:-0.536425 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.775, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.72, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.72, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.621, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.65, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.477, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.769, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.672, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.777, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.544, 1, 581]}]
{'': [nan, 0.22005561591889414]}
{'': [nan, 0.22132982016157537]}
{'': [nan, 0.22132982016156663]}
{'': [nan, 0.22356071121688062]}
{'': [nan, 0.22292341150679765]}
{'': [nan, 0.22661329576387626]}
{'': [nan, 0.2201829795675598]}
{'': [nan, 0.2224134628088267]}
{'': [nan, 0.2199919399838935]}
{'': [nan, 0.22521603272963833]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 23.284
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.14075763075168626;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else return 0.2187487987668557;  // std dev = 0.480, 1,467.000 (wgt'ed) examples reached here.  /* #neg=938 #pos=529 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.00851773156715447;  // std dev = 0.340, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.001006077956655051;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.03397311092368731;  // std dev = 5.136, 182.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19423473809706102;  // std dev = 0.481, 1,495.000 (wgt'ed) examples reached here.  /* #neg=950 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.007484033389160125;  // std dev = 0.340, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.01697357824080594;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.013166859880394375;  // std dev = 5.187, 201.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16035964977036304;  // std dev = 0.480, 1,514.000 (wgt'ed) examples reached here.  /* #neg=969 #pos=545 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03738253241813754;  // std dev = 3.613, 87.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=16 */
%   | | | else return -0.030039768934333043;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.02005885733943485;  // std dev = 3.872, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return -0.14768682775786243;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12723502729780967;  // std dev = 0.478, 1,541.000 (wgt'ed) examples reached here.  /* #neg=996 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.026325934743807414;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.01887838481427997;  // std dev = 3.869, 107.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=18 */
%   | | | else return 0.012199571599769912;  // std dev = 3.654, 99.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10836108466301987;  // std dev = 0.479, 1,523.000 (wgt'ed) examples reached here.  /* #neg=978 #pos=545 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.015551675629549616;  // std dev = 3.646, 96.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=16 */
%   | | | else return 0.14025901516868594;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.013242424760430988;  // std dev = 3.877, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   | | | else return -0.1302599912169989;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.03458556800742685;  // std dev = 3.222, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.0343288797952811;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.09959749975712726;  // std dev = 0.483, 1,430.000 (wgt'ed) examples reached here.  /* #neg=901 #pos=529 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.022960093912054266;  // std dev = 0.321, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.01963047924088643;  // std dev = 3.858, 104.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
%   | | | else return 0.0038474020772425784;  // std dev = 3.660, 101.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06751562690220816;  // std dev = 0.479, 1,525.000 (wgt'ed) examples reached here.  /* #neg=980 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.03799644406283296;  // std dev = 0.299, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.021989420599142315;  // std dev = 3.847, 101.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=18 */
%   | | | else return 0.007567476195651492;  // std dev = 3.652, 98.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.050519739104170895;  // std dev = 0.478, 1,537.000 (wgt'ed) examples reached here.  /* #neg=992 #pos=545 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03852906963557404;  // std dev = 3.592, 83.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=16 */
%   | | | else return -0.06843014540080473;  // std dev = 1.340, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.011515928950092982;  // std dev = 3.863, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return -0.11454419826689882;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.07457153416830595;  // std dev = 3.057, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return -0.05166482091010993;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.031030155402157717;  // std dev = 3.079, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.04535360901969701;  // std dev = 18.157, 1,429.000 (wgt'ed) examples reached here.  /* #neg=913 #pos=516 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.020262943634501977;  // std dev = 3.619, 89.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=16 */
%   | | | else return -0.0662029938680192;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 8.958298399581043E-4;  // std dev = 3.883, 114.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=18 */
%   | | | else return -0.10553145991259558;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E), haswordtitle(G, D) )
%   | | | then return 0.16727738370181763;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.015588703880269979;  // std dev = 3.136, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else return 0.03860016509390995;  // std dev = 0.481, 1,456.000 (wgt'ed) examples reached here.  /* #neg=927 #pos=529 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.013820840034180626;  // std dev = 3.636, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
%   | | | else return -0.025324782869024245;  // std dev = 1.314, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.004136808017618617;  // std dev = 3.891, 115.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
%   | | | else return -0.09732839356681082;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.579', 'seconds']
Refined model CLL: -0.528449


******************************************
Best model found
******************************************
Results 

CLL : -0.728386 

AUC ROC : 0.549369 

AUC PR : 0.498914 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 23.284 

Total Inference Time : 1.3254196643829346 

Total revision time: 27.032113842010496
Best scored revision CLL: -0.528449


Results 

CLL : -0.728386 

AUC ROC : 0.549369 

AUC PR : 0.498914 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 48.00296907806396 

Total Inference Time : 1.3254196643829346 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.231
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.101', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 71.017
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.27854694504975613;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3581489350995113;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.47883859027192616;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3002199788127198;  // std dev = 3.525, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.4247561750638162;  // std dev = 2.608, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.16653882456488167;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.05092203251355405;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.05092203251355405;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20289930723994204;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.24760701674977212;  // std dev = 3.523, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.3498242125167599;  // std dev = 2.607, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1420942428155646;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.04434629760466855;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.04434629760466855;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.16640029396569495;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.18861458664853883;  // std dev = 3.512, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.292014351437432;  // std dev = 2.603, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.11914890490746433;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.03842866223690456;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.03842866223690456;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.24653871610100803;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.5132053827676747;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.131341402918815;  // std dev = 19.656, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.17552765939556042;  // std dev = 4.383, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.0984134027840187;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.033154945921885746;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.033154945921885746;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.10549686389332086;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.10545908446084445;  // std dev = 3.510, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.183223242635976;  // std dev = 2.602, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.08026654944252247;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.028495105925721097;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.028495105925721097;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08230904723488827;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.07213835268202298;  // std dev = 3.503, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.1515536609355914;  // std dev = 2.600, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.06479591611329234;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.024408230135271918;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.024408230135271918;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06365407449537296;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.05375781042470201;  // std dev = 3.502, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.11512733043548662;  // std dev = 2.600, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.05187916934404051;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.02084688910874009;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.02084688910874009;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04891958895439682;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.03450189330266433;  // std dev = 3.499, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.09688925134737324;  // std dev = 2.599, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.04126932998424623;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.017760671541598414;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.017760671541598414;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5900288886561182;  // std dev = 2.11e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.3818373625280001;  // std dev = 0.211, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.3243352912342325;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.035714362656643156;  // std dev = 19.656, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.04321524252244123;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.022267874348863872;  // std dev = 3.572, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | | else return 0.015098879183171418;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.364', 'seconds']
Refined model CLL: -0.66797


******************************************
Best model found
******************************************
Results 

CLL : -0.642404 

AUC ROC : 0.568964 

AUC PR : 0.421365 

Precision : 0.546125 

Recall : 0.065198 

F1 : 0.11649 

Total Learning Time : 71.017 

Total Inference Time : 1.272233247756958 

Total revision time: 74.26547822761535
Best scored revision CLL: -0.66797


Results 

CLL : -0.642404 

AUC ROC : 0.568964 

AUC PR : 0.421365 

Precision : 0.546125 

Recall : 0.065198 

F1 : 0.11649 

Total Learning Time : 95.23633346366881 

Total Inference Time : 1.272233247756958 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.022
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.230', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 31.184
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.44064893509950764;  // std dev = 13.948, 800.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=466 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7100007869513637;  // std dev = 1.846, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.13087620782678508;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.16249676118646889;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.051131391239862906;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3802742035706283;  // std dev = 0.492, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5454907572981614;  // std dev = 1.261, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.6490137408654373;  // std dev = 1.340, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.22373365448410584;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.11418623766746618;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.14154274242296505;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.04479249977758044;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.3126051868199081;  // std dev = 0.491, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4293558044710166;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.601984149523128;  // std dev = 0.046, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.18886832215749735;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0983529971467659;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.12131905159335965;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.039048804834509544;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.530378562711159;  // std dev = 0.218, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.038839678175379866;  // std dev = 3.412, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.25699419896754744;  // std dev = 13.464, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | | else return 0.36807996515490354;  // std dev = 1.570, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.02644133491846655;  // std dev = 1.193, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.10934566610598352;  // std dev = 3.114, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.10247683991352247;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.03389416118740775;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.4016382393914838;  // std dev = 0.211, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.022247009941917896;  // std dev = 3.388, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.04542019184854182;  // std dev = 3.368, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.21358802993964654;  // std dev = 13.051, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.1428698055473435;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.06730824794585256;  // std dev = 2.951, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.012287199930136956;  // std dev = 3.141, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.06873695868340937;  // std dev = 4.196, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.34111240880664134;  // std dev = 0.114, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.13988640908278954;  // std dev = 13.903, 808.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=472 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.22655361554555994;  // std dev = 1.251, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.32003122551632895;  // std dev = 0.189, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 5.258890547054293E-4;  // std dev = 1.183, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.07849983607364949;  // std dev = 3.113, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.05855866946673987;  // std dev = 4.185, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return 0.009200554240250099;  // std dev = 3.154, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.11967169361596257;  // std dev = 2.610, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return -0.13741314523923054;  // std dev = 2.098, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11581901197009675;  // std dev = 13.405, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | | else return 0.20108367460622364;  // std dev = 1.559, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.16626717878219183;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.033566268118320974;  // std dev = 2.934, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005273542093363876;  // std dev = 3.128, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.0571679918460293;  // std dev = 4.188, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07866494608424654;  // std dev = 0.487, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1347017994071987;  // std dev = 1.256, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1966162627347773;  // std dev = 1.276, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.135196766329699;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.02740926602981951;  // std dev = 2.933, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04874815321928596;  // std dev = 4.176, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return -0.006340119201028436;  // std dev = 3.142, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.2765622700824902;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20623814564970527;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( haswordauthor(E, G), haswordvenue(A, G) )
%   | | | then return -0.3406668063734267;  // std dev = 0.112, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0031874795949158735;  // std dev = 4.677, 101.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=36 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.06733837124347286;  // std dev = 13.405, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | | else return 0.1253763717396306;  // std dev = 1.560, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.00502844678400725;  // std dev = 3.134, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.04106307241885366;  // std dev = 4.181, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.22568215155300508;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1746367679364073;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.060952577010229714;  // std dev = 2.819, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return -0.05918206819479782;  // std dev = 3.776, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.05093007118224555;  // std dev = 13.382, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | | else return 0.11337162413996876;  // std dev = 1.568, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.043378647702950905;  // std dev = 4.176, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return -0.013232421981711514;  // std dev = 3.143, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.549', 'seconds']
Refined model CLL: -0.6335


******************************************
Best model found
******************************************
Results 

CLL : -0.704507 

AUC ROC : 0.554557 

AUC PR : 0.404475 

Precision : 0.375312 

Recall : 0.915687 

F1 : 0.532406 

Total Learning Time : 31.184 

Total Inference Time : 1.272918462753296 

Total revision time: 34.143348365783694
Best scored revision CLL: -0.6335


Results 

CLL : -0.704507 

AUC ROC : 0.554557 

AUC PR : 0.404475 

Precision : 0.375312 

Recall : 0.915687 

F1 : 0.532406 

Total Learning Time : 55.11420360183716 

Total Inference Time : 1.272918462753296 

Run: 5
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.034
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.168', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 44.467
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.23843062524035266;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4295775065280833;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004815601766179008;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004815601766179008;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3974484051691344;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3717678476909069;  // std dev = 2.838, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004228390109386251;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004228390109386251;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1751801570305961;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3307939837252071;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.30404128444251804;  // std dev = 2.837, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.0031576158915441062;  // std dev = 3.073, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.11669340332070104;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0037111125833978686;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14514481334590568;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.32649939129120925;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23552264623199629;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.002744840244454428;  // std dev = 3.070, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.11648892961503492;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004275198200142493;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11804668707041945;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.24993504285964638;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1811402081613061;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.10093867490707488;  // std dev = 3.27e-05, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0037523389461441205;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.003771185019422078;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09457696812283496;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.16273513373178697;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.13806727455260667;  // std dev = 2.834, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.09214035582658538;  // std dev = 3.02e-05, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.003292108330407014;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.003308690613879663;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.10539005564974935;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.15376876362712766;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.19987356017328337;  // std dev = 0.796, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.07889532995210803;  // std dev = 14.399, 876.000 (wgt'ed) examples reached here.  /* #neg=534 #pos=342 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return -0.0020147600009523215;  // std dev = 3.067, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.09126783458025241;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0029018902122998347;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05840267312431737;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.10265984635489436;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.08671462908106088;  // std dev = 2.830, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.08123169453009742;  // std dev = 0.012, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0025443153172091527;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0032656207929435657;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04552610786384851;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.09418912393128014;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06429398863652303;  // std dev = 2.925, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.0753724929793218;  // std dev = 0.011, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0022301930667507283;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0028640370074045265;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03531381624722892;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.14537652218658295;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04189962012902309;  // std dev = 2.931, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.07028556828254488;  // std dev = 0.010, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.001954384666700075;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0025110675116298666;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.775', 'seconds']
Refined model CLL: -0.621341


******************************************
Best model found
******************************************
Results 

CLL : -0.659521 

AUC ROC : 0.556816 

AUC PR : 0.427724 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 44.467 

Total Inference Time : 1.2351839542388916 

Total revision time: 47.410129858016965
Best scored revision CLL: -0.621341


Results 

CLL : -0.659521 

AUC ROC : 0.556816 

AUC PR : 0.427724 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 68.38095886802674 

Total Inference Time : 1.2351839542388916 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.132
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.183', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 45.142
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.4356367001892301;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5949910403626703;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.630876207826785;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.5005053426630848;  // std dev = 1.921, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.5406810030211525;  // std dev = 1.962, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.24811816884741297;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.30665618885999163;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3980165213163664;  // std dev = 1.922, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.4318624987684384;  // std dev = 1.960, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.20848477447886868;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.20848477447886868;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24206322397592006;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.29755757856572124;  // std dev = 1.924, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.33500538878161046;  // std dev = 1.956, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.17062637354018512;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.17062637354018512;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.18614898381430323;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.22171737779321607;  // std dev = 1.925, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.2531325933398253;  // std dev = 1.955, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.13664585375352212;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.13664585375352212;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14102718021002747;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1616124288272229;  // std dev = 1.927, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.1950484432296957;  // std dev = 1.952, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.10762034996184425;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.10762034996184425;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.37859676387835556;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.02859676387835554;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.23511880422126058;  // std dev = 1.230, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.1039736483004662;  // std dev = 17.080, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.13645321309008915;  // std dev = 2.744, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.1730966901640679;  // std dev = 1.816, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.08372807955323866;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.2843598552650772;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.021465612914715382;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1779550618433961;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.07801145413844374;  // std dev = 17.080, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.10487143825313527;  // std dev = 2.744, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.14078793908263154;  // std dev = 1.822, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.06457405393631672;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.3272924883641372;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.016106837037364055;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.2793298475140279;  // std dev = 1.229, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.05763135274866335;  // std dev = 17.035, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.08145450905499775;  // std dev = 2.744, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.13092746036461955;  // std dev = 1.811, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.021280949905983174;  // std dev = 1.821, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04493540895860572;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.047652419278500266;  // std dev = 1.926, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.07782509520523019;  // std dev = 1.953, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1453933411642025;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.024977968248661747;  // std dev = 1.832, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.016170321826674012;  // std dev = 0.487, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.044', 'seconds']
Refined model CLL: -0.66686


******************************************
Best model found
******************************************
Results 

CLL : -0.755791 

AUC ROC : 0.537202 

AUC PR : 0.346123 

Precision : 0.353871 

Recall : 0.956367 

F1 : 0.516595 

Total Learning Time : 45.142 

Total Inference Time : 1.1500625610351562 

Total revision time: 48.160882305145265
Best scored revision CLL: -0.66686


Results 

CLL : -0.755791 

AUC ROC : 0.537202 

AUC PR : 0.346123 

Precision : 0.353871 

Recall : 0.956367 

F1 : 0.516595 

Total Learning Time : 69.13171131515503 

Total Inference Time : 1.1500625610351562 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.605
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1893918085316624;  // std dev = 19.712, 1,754.000 (wgt'ed) examples reached here.  /* #neg=1,173 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16511681325527114;  // std dev = 19.706, 1,752.000 (wgt'ed) examples reached here.  /* #neg=1,171 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14054645615359088;  // std dev = 19.712, 1,754.000 (wgt'ed) examples reached here.  /* #neg=1,173 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.118287033573774;  // std dev = 19.706, 1,752.000 (wgt'ed) examples reached here.  /* #neg=1,171 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09513486993751834;  // std dev = 19.745, 1,766.000 (wgt'ed) examples reached here.  /* #neg=1,185 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08548000162744177;  // std dev = 19.629, 1,725.000 (wgt'ed) examples reached here.  /* #neg=1,144 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06273423986687916;  // std dev = 19.723, 1,758.000 (wgt'ed) examples reached here.  /* #neg=1,177 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0500688377389182;  // std dev = 19.725, 1,759.000 (wgt'ed) examples reached here.  /* #neg=1,178 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03269514820527765;  // std dev = 19.831, 1,798.000 (wgt'ed) examples reached here.  /* #neg=1,217 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03764478125539216;  // std dev = 19.658, 1,735.000 (wgt'ed) examples reached here.  /* #neg=1,154 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.190', 'seconds']
Parameter learned model CLL:-0.534626 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.712, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.706, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.712, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.706, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.745, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.629, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.723, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.725, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.831, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [19.658, 1, 581]}]
{'': [nan, 0.22152103223254987]}
{'': [nan, 0.22164851389669626]}
{'': [nan, 0.2215210322325453]}
{'': [nan, 0.22164851389672194]}
{'': [nan, 0.2207562887253608]}
{'': [nan, 0.22336954421340993]}
{'': [nan, 0.22126608606065531]}
{'': [nan, 0.2212023537845465]}
{'': [nan, 0.2187194150959875]}
{'': [nan, 0.22273218779325504]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 77.975
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20818104813740074;  // std dev = 0.477, 1,557.000 (wgt'ed) examples reached here.  /* #neg=1,012 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.011995088945666036;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.03658790700575096;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.03397311092368731;  // std dev = 5.136, 182.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18248476619428544;  // std dev = 0.477, 1,550.000 (wgt'ed) examples reached here.  /* #neg=1,005 #pos=545 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.05200781978028118;  // std dev = 3.582, 81.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=16 */
%   | | | else return -0.03492600910799628;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.005401808083125867;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.007861333988286442;  // std dev = 3.679, 104.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16869774457538242;  // std dev = 0.481, 1,493.000 (wgt'ed) examples reached here.  /* #neg=948 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.038150027683243125;  // std dev = 3.613, 87.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=16 */
%   | | | else return -0.04175708207112916;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.022791327252421365;  // std dev = 3.854, 104.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
%   | | | else return -0.145235599105136;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14566798775766077;  // std dev = 0.483, 1,473.000 (wgt'ed) examples reached here.  /* #neg=928 #pos=545 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.020822966141698634;  // std dev = 3.630, 91.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=16 */
%   | | | else return -0.001673148455403502;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.007764009943439691;  // std dev = 3.892, 115.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
%   | | | else return -0.12923179554156153;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.06304164887652423;  // std dev = 0.464, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.0826494920137792;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.10814786938977568;  // std dev = 18.189, 1,438.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=516 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.01861565849549331;  // std dev = 0.339, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02155928573318801;  // std dev = 3.858, 105.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=18 */
%   | | | else return 0.006257000088210254;  // std dev = 3.655, 100.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.23728927650733;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.05054689913338407;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.09840038761844079;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.08530594396361055;  // std dev = 18.217, 1,446.000 (wgt'ed) examples reached here.  /* #neg=930 #pos=516 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.03396321686739054;  // std dev = 0.314, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.005475499203834902;  // std dev = 3.663, 101.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=16 */
%   | | | else return 9.409019843367055E-4;  // std dev = 3.888, 116.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=18 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06305213567223249;  // std dev = 0.477, 1,551.000 (wgt'ed) examples reached here.  /* #neg=1,006 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.020027889921376777;  // std dev = 3.633, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
%   | | | else return -0.035038664328770605;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.04684374915470784;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.002418678351652784;  // std dev = 3.672, 105.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.27515307954290635;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.01301195750959502;  // std dev = 3.012, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else return 0.05696714892845095;  // std dev = 0.480, 1,475.000 (wgt'ed) examples reached here.  /* #neg=946 #pos=529 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.032230266923551604;  // std dev = 0.330, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.009702077852715;  // std dev = 3.873, 110.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=18 */
%   | | | else return -0.001784709385994174;  // std dev = 3.671, 105.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5592736109571466;  // std dev = 7.263, 458.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=396 */
%   | | | else return -0.28074987434948645;  // std dev = 4.125, 876.000 (wgt'ed) examples reached here.  /* #neg=860 #pos=16 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.18066435892681834;  // std dev = 1.862, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.16697286203528625;  // std dev = 8.286, 278.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=132 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.004076475688815848;  // std dev = 3.779, 99.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=17 */
%   | | | else return 0.204515071913938;  // std dev = 1.480, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return 0.4810799859614754;  // std dev = 1.541, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return -0.11400064989173182;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.434096826792109;  // std dev = 7.276, 460.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=399 */
%   | | | else return -0.22870429823483004;  // std dev = 4.057, 863.000 (wgt'ed) examples reached here.  /* #neg=847 #pos=16 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.11696771618367528;  // std dev = 8.272, 281.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=130 */
%   | | | else return -0.012830183029940863;  // std dev = 1.477, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.020375023944488976;  // std dev = 3.731, 91.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=17 */
%   | | | else return 0.09248192615496637;  // std dev = 1.564, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.4914128495197944;  // std dev = 0.957, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.10249900936849111;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.781', 'seconds']
Refined model CLL: -0.381011


******************************************
Best model found
******************************************
Results 

CLL : -0.503695 

AUC ROC : 0.855845 

AUC PR : 0.778573 

Precision : 0.788937 

Recall : 0.889984 

F1 : 0.83642 

Total Learning Time : 77.975 

Total Inference Time : 2.4473764896392822 

Total revision time: 82.89659483909607
Best scored revision CLL: -0.381011


Results 

CLL : -0.503695 

AUC ROC : 0.855845 

AUC PR : 0.778573 

Precision : 0.788937 

Recall : 0.889984 

F1 : 0.83642 

Total Learning Time : 103.86742384910583 

Total Inference Time : 2.4473764896392822 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.353
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.225', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 78.024
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.27854694504975613;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3581489350995113;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.47883859027192616;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3002199788127198;  // std dev = 3.525, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.4247561750638162;  // std dev = 2.608, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.07061332026691819;  // std dev = 3.295, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return 0.13497714535974895;  // std dev = 1.446, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.05092203251355405;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20289930723994204;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.24760701674977234;  // std dev = 3.523, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.3498242125167599;  // std dev = 2.607, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.062175468926194466;  // std dev = 3.292, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return 0.12527852335131892;  // std dev = 1.445, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.04158143204570117;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.16640029396569495;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.18861458664853883;  // std dev = 3.512, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.2920143514374319;  // std dev = 2.603, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.13741381030351438;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.03595871392802751;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.03583816067224739;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.13360339271793026;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.14640266421832263;  // std dev = 3.511, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.2257431683218333;  // std dev = 2.602, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.11485936340044299;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.03096793210082055;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.030861393126326884;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.10551742939082928;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.10437410859896769;  // std dev = 3.504, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.18465088482152195;  // std dev = 2.600, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.09461557136183675;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.026573528537136713;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.02648007554734316;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.195257836296556;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.46192450296322257;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08006052311436539;  // std dev = 19.656, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.10122723928974572;  // std dev = 4.370, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.0769985580586759;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.022731144231008117;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.022649698112757025;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06364626616578242;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.053938520058188395;  // std dev = 3.502, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.1149628785944621;  // std dev = 2.600, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.06204740979141018;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.019391611969883517;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.019321023975420678;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04891346723812783;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.03459868998774084;  // std dev = 3.498, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.09683702644108619;  // std dev = 2.599, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.04960873805759131;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.016504106472168018;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.01644322015607574;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03742467711901753;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.02526294576908507;  // std dev = 3.498, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.07425617580044039;  // std dev = 2.599, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.03941977623653075;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.014018477459980992;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.01396617296672332;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.169', 'seconds']
Refined model CLL: -0.670026


******************************************
Best model found
******************************************
Results 

CLL : -0.643353 

AUC ROC : 0.564288 

AUC PR : 0.421945 

Precision : 0.65625 

Recall : 0.037004 

F1 : 0.070058 

Total Learning Time : 78.024 

Total Inference Time : 1.3923492431640625 

Total revision time: 81.52106561851501
Best scored revision CLL: -0.670026


Results 

CLL : -0.643353 

AUC ROC : 0.564288 

AUC PR : 0.421945 

Precision : 0.65625 

Recall : 0.037004 

F1 : 0.070058 

Total Learning Time : 102.49189462852478 

Total Inference Time : 1.3923492431640625 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.059
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.141', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 33.357
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.443242102801371;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7100007869513637;  // std dev = 1.846, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.13087620782678508;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.16249676118646889;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.051131391239862906;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3803254334818479;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5454907572981614;  // std dev = 1.261, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.6490137408654373;  // std dev = 1.340, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.22373365448410584;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.11418623766746618;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.14154274242296505;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.04479249977758044;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.7263997659160313;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.608456896213577;  // std dev = 0.134, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.10699722258824731;  // std dev = 3.426, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0.3272066949928686;  // std dev = 13.578, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.18886832215749735;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0983529971467659;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.12131905159335965;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.039048804834509544;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.5621845489126306;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.24200168887914741;  // std dev = 13.913, 800.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=466 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.33947317472813454;  // std dev = 1.248, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4327484270867099;  // std dev = 1.320, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.1557002943717436;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.083737008556944;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.10247683991352247;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.03389416118740775;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.39727487812416085;  // std dev = 0.197, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.02100596475584177;  // std dev = 3.397, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.043954414535605335;  // std dev = 3.365, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.2136316033998423;  // std dev = 13.057, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.002831362065512169;  // std dev = 1.184, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.09436009508464534;  // std dev = 3.113, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.012287199930137006;  // std dev = 3.141, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.06873695868340937;  // std dev = 4.196, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.15771908737006313;  // std dev = 2.620, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return -0.09580441848332986;  // std dev = 2.147, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.03381888280983326;  // std dev = 3.364, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.16147122615951987;  // std dev = 13.057, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.1747069311166178;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.04229681111681128;  // std dev = 2.938, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.06341839112828655;  // std dev = 4.187, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return 0.0023053015695275294;  // std dev = 3.136, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.10357576257583861;  // std dev = 0.487, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.19636139443326633;  // std dev = 1.252, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.272437248419229;  // std dev = 1.311, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return -9.498202960683752E-4;  // std dev = 1.182, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.06759466660348422;  // std dev = 3.105, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.05326458663520401;  // std dev = 4.182, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return 1.6452643603619293E-4;  // std dev = 3.148, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.2901030190155761;  // std dev = 0.158, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.07671519413066837;  // std dev = 13.856, 808.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=472 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.15131141341299453;  // std dev = 1.252, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.283913762514267;  // std dev = 0.180, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.13495756327582714;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.027008664781558223;  // std dev = 2.933, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.006404539189870955;  // std dev = 3.135, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.04970843230353623;  // std dev = 4.181, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05850946703527654;  // std dev = 0.487, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.11482716317289395;  // std dev = 1.251, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.17707559178646617;  // std dev = 1.288, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.09409106027689931;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0261432923697149;  // std dev = 2.928, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.0075525418115860036;  // std dev = 3.138, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.04256087494366963;  // std dev = 4.181, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.21983170292927123;  // std dev = 2.207, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | | | else return -0.2554090148025171;  // std dev = 1.148, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.262522788233363;  // std dev = 1.550, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.0659976952335091;  // std dev = 3.201, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.05230830346711679;  // std dev = 13.391, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | | else return 0.1192664279715058;  // std dev = 1.569, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.038974592844088975;  // std dev = 4.173, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return -0.012120950094879755;  // std dev = 3.139, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.170', 'seconds']
Refined model CLL: -0.631195


******************************************
Best model found
******************************************
Results 

CLL : -0.70357 

AUC ROC : 0.555061 

AUC PR : 0.404211 

Precision : 0.376852 

Recall : 0.927848 

F1 : 0.536003 

Total Learning Time : 33.357 

Total Inference Time : 1.174802303314209 

Total revision time: 36.24413954353332
Best scored revision CLL: -0.631195


Results 

CLL : -0.70357 

AUC ROC : 0.555061 

AUC PR : 0.404211 

Precision : 0.376852 

Recall : 0.927848 

F1 : 0.536003 

Total Learning Time : 57.21496855354309 

Total Inference Time : 1.174802303314209 

