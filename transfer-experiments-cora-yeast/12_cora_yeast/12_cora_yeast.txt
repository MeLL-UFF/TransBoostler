Starting experiment 12_cora_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.28
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18037115732173445;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18135748213471534;  // std dev = 7.540, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14936328956185968;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13618903216692;  // std dev = 7.507, 247.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08584990662216305;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0638539966958821;  // std dev = 7.692, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05507105144168208;  // std dev = 7.672, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03478095120437945;  // std dev = 7.725, 277.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04570806992829778;  // std dev = 7.623, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.030058570371427475;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.880', 'seconds']
Parameter learned model CLL:-0.363994 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.54, 164, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.571, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.507, 160, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.658, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.692, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.672, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.725, 190, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.623, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.658, 180, 87]}]
{'': [0.0, 0.21839506172839596], 'false': [nan, 0.21839506172839596], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22647259567308414], 'false': [nan, 0.2264725956730853], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22477508650519015], 'false': [nan, 0.22477508650519015], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22816305790948752], 'false': [nan, 0.22816305790948804], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21966923368261523], 'false': [nan, 0.21966923368261432], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21754703719723148], 'false': [nan, 0.21754703719723148], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21881952985724343], 'false': [nan, 0.21881952985724343], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [1.1564823173178713e-18, 0.21543353881843974], 'false': [nan, 0.21543353881843985], 'true': [nan, 1.1564823173178713e-18], 'true,false': [nan, 1.1564823173178713e-18], 'true,false,false': [nan, 1.1564823173178713e-18]}
{'': [0.0, 0.2217965153545824], 'false': [nan, 0.22179651535458236], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2196692336826165], 'false': [nan, 0.2196692336826165], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 15.693
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.24945328292559932;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.08891816586874295;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.09148226843284571;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( interaction(A, L), enzyme(A, M) )
%   | | | then return 0.14386322081379807;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.20373717039362893;  // std dev = 5.546, 136.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, D) )
%   | | then if ( enzyme(E, F), phenotype(E, G) )
%   | | | then return 0.28754040140742465;  // std dev = 2.336, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.13712993189939815;  // std dev = 3.215, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else return 0.635468771532977;  // std dev = 0.897, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(A, J), interaction(K, H) )
%   | | | then return 0.1950430016103646;  // std dev = 2.883, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.12089482996205926;  // std dev = 3.380, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.1250012147008594;  // std dev = 2.529, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.22454336745502623;  // std dev = 3.486, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), complex(F, G) )
%   | | then if ( location(F, E) )
%   | | | then return 0.16204244356447167;  // std dev = 3.401, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return -0.027294918385049143;  // std dev = 1.281, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.5601799389707929;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20937932080572255;  // std dev = 2.424, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( complex(J, K), phenotype(A, L) )
%   | | | then return 0.08462212705695521;  // std dev = 2.230, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.007269235574538349;  // std dev = 2.352, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.05419674721477395;  // std dev = 2.151, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.15288804439425518;  // std dev = 4.695, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.24856662515754813;  // std dev = 2.053, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.12245722817306588;  // std dev = 3.250, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.02051064007963754;  // std dev = 3.322, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.118277205359076;  // std dev = 5.409, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.1805750622988302;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4809326919198767;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( enzyme(E, G), phenotype(E, H) )
%   | | | then return 0.13249073756061402;  // std dev = 1.562, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.03072536036151549;  // std dev = 2.674, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( complex(I, D), interaction(A, I) )
%   | | | then return 0.43665296526993025;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18793347897602142;  // std dev = 3.312, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( phenotype(A, K), interaction(J, J) )
%   | | | then return -0.03873943529631815;  // std dev = 1.754, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.06816702513269642;  // std dev = 4.088, 79.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=24 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.2491506519738416;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09531092344838941;  // std dev = 3.629, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.2244406898277552;  // std dev = 1.583, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.10598988562698915;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(E, F), phenotype(E, G) )
%   | | | then return 0.19366814561562637;  // std dev = 1.475, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.012530776759701151;  // std dev = 3.825, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.05732516663616436;  // std dev = 1.769, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.12125940853308058;  // std dev = 2.101, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.28112818756233277;  // std dev = 2.384, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0.14157254441368916;  // std dev = 4.407, 81.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(D, D), complex(D, F) )
%   | | then if ( phenotype(A, E), enzyme(A, G) )
%   | | | then return 0.47826485132587343;  // std dev = 0.902, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11487700894749318;  // std dev = 2.926, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.12572514037100466;  // std dev = 2.310, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.01905774483189379;  // std dev = 4.558, 98.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( complex(I, K) )
%   | | | then return -0.08911194331056586;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10439807085398985;  // std dev = 1.751, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.02762813299877556;  // std dev = 2.113, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.029420896015320313;  // std dev = 3.639, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( location(F, E), complex(A, H) )
%   | | | then return 0.08915311881367965;  // std dev = 1.944, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.08538889321062458;  // std dev = 2.982, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | else if ( enzyme(I, D), phenotype(I, J) )
%   | | | then return 0.09417746578409601;  // std dev = 2.793, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return -0.0993112723134933;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then if ( enzyme(K, M), interaction(K, K) )
%   | | | then return 0.29945416769173183;  // std dev = 1.051, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.012674653724766692;  // std dev = 3.978, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.06895610188323444;  // std dev = 3.132, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.15870731894779938;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(D, A) )
%   | | then if ( enzyme(A, F), phenotype(D, G) )
%   | | | then return -0.11966725287280551;  // std dev = 1.512, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.09793261589131945;  // std dev = 3.054, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.539641627655814;  // std dev = 0.905, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.14076425681154373;  // std dev = 1.469, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.090542450550526;  // std dev = 2.500, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -0.004426528793989382;  // std dev = 5.652, 151.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=46 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.11781714108771749;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.20753779871056535;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, F), interaction(F, D) )
%   | | then if ( interaction(D, A), phenotype(E, G) )
%   | | | then return -0.052135191416588886;  // std dev = 3.278, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | | else return 0.11452424988846643;  // std dev = 2.146, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return -0.18850897284322624;  // std dev = 1.225, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.2618229177690228;  // std dev = 1.544, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then if ( phenotype(K, L), phenotype(A, L) )
%   | | | then return 0.08449269388174378;  // std dev = 1.769, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.2219164354694167;  // std dev = 2.571, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.05662295104196432;  // std dev = 3.100, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.020433137244299217;  // std dev = 4.184, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.565', 'seconds']
Refined model CLL: -0.412165


******************************************
Best model found
******************************************
Results 

CLL : -0.363378 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.693 

Total Inference Time : 3.699420928955078 

Total revision time: 22.575038145065307
Best scored revision CLL: -0.363994


Results 

CLL : -0.363378 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 24.019551942825316 

Total Inference Time : 3.699420928955078 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.178
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18416774387694249;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1602383534679727;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1399717725325686;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12832170199432383;  // std dev = 8.286, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10836316347779472;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08069796255558286;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07853835056761604;  // std dev = 8.236, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.020863521536269206;  // std dev = 8.496, 340.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0656593410133631;  // std dev = 8.191, 293.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0346888380408713;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.202', 'seconds']
Parameter learned model CLL:-0.374556 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.372, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.372, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.353, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.286, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.32, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.236, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.496, 236, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.191, 189, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.3, 204, 104]}]
{'': [nan, 0.2197305451007759], 'false': [nan, 0.2197305451007759]}
{'': [0.0, 0.21973054510077494], 'false': [nan, 0.21973054510077222], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22079794904662606], 'false': [nan, 0.22079794904662606]}
{'': [0.0, 0.22435815284719646], 'false': [nan, 0.22435815284719346], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2250692520775619], 'false': [nan, 0.22506925207756306], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22257834389636172], 'false': [nan, 0.22257834389636172], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22684310018903706], 'false': [nan, 0.22684310018903706], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21231833910034714], 'false': [nan, 0.21231833910034686], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22896015096273678], 'false': [nan, 0.22896015096273561]}
{'': [0.0, 0.2236464833867435], 'false': [nan, 0.2236464833867435], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 14.389
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(A, F), complex(D, G) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.19857446701440598;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.13087620782678508;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.23314893509951234;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0.16541150493191473;  // std dev = 0.461, 179.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=55 */
%   else if ( interaction(I, A), enzyme(I, J) )
%   | then if ( interaction(I, K), interaction(K, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, L) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A), complex(A, E) )
%   | | then return 0.5004244347737777;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( location(A, F), location(D, F) )
%   | | | then return 0.20143924000003974;  // std dev = 2.973, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.577334239218108;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( enzyme(A, I), enzyme(G, J) )
%   | | | then return 0.24248845863389576;  // std dev = 2.307, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.12471312385327546;  // std dev = 6.392, 197.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=58 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.003463914067775936;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.27424932303902705;  // std dev = 2.897, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(A, E), complex(C, E) )
%   | then if ( enzyme(D, F), interaction(D, A) )
%   | | then return -0.007248261803902872;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( complex(D, E), phenotype(C, G) )
%   | | | then return 0.1999042372045352;  // std dev = 1.880, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.08299281251854394;  // std dev = 2.554, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( complex(A, H) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.17765533098998673;  // std dev = 2.492, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.43897433242096595;  // std dev = 1.934, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( enzyme(C, K), complex(C, L) )
%   | | | then return 0.21957280427802126;  // std dev = 3.068, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.11975165364435081;  // std dev = 5.299, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   else if ( enzyme(A, M) )
%   | then return -0.013045056781360784;  // std dev = 0.407, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else return 0.08719563654517118;  // std dev = 0.452, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( phenotype(A, F), interaction(E, E) )
%   | | then if ( complex(A, G), complex(E, H) )
%   | | | then return 8.433302023469714E-4;  // std dev = 2.444, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.07437175613482824;  // std dev = 2.906, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.054000524620066645;  // std dev = 2.644, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.1466204350857533;  // std dev = 6.281, 171.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=62 */
%   | else if ( complex(A, K) )
%   | | then if ( location(A, L) )
%   | | | then return 0.11454160774724303;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.06241067069641667;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, M), interaction(N, A) )
%   | | | then return -0.012944614464364124;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.021843945093923553;  // std dev = 2.137, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16992893749844964;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(E, E), phenotype(E, F) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return 0.04730107220668732;  // std dev = 1.844, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.23243119586361294;  // std dev = 1.936, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( enzyme(A, G), complex(E, H) )
%   | | | then return -0.010295686449166268;  // std dev = 2.885, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.07326938802081716;  // std dev = 5.027, 118.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(A, K), complex(I, L) )
%   | | | then return 0.42263321514903285;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19673354948498403;  // std dev = 2.906, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | else if ( location(A, M) )
%   | | | then return 0.14204150794372838;  // std dev = 3.846, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | | else return -0.007992610586745724;  // std dev = 1.497, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1892691513219004;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), interaction(D, F) )
%   | | then if ( interaction(F, A), complex(D, G) )
%   | | | then return 0.6965918237567683;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23209740557700506;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( interaction(A, H), complex(D, I) )
%   | | | then return 0.2524640198941449;  // std dev = 1.016, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.014023197097953147;  // std dev = 3.914, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.07238685304024642;  // std dev = 2.675, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | | else return 0.050474059249584736;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.11102862587813427;  // std dev = 4.827, 101.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=37 */
%   | | | else return 0.020897643550534296;  // std dev = 3.268, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14705083916617442;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(A, F), interaction(D, D) )
%   | | then if ( phenotype(D, G), enzyme(E, H) )
%   | | | then return -0.025266424654281427;  // std dev = 2.107, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.19115390314188713;  // std dev = 2.730, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else if ( location(A, I), complex(D, J) )
%   | | | then return 0.026672551696813113;  // std dev = 6.309, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
%   | | | else return -0.02982274761493704;  // std dev = 3.483, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | else if ( enzyme(A, K), interaction(A, L) )
%   | | then if ( interaction(L, L) )
%   | | | then return 0.020778547666138292;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.14359566958505413;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.39945561935557766;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2004754954830301;  // std dev = 1.647, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( phenotype(F, D), interaction(F, A) )
%   | | then if ( enzyme(F, E) )
%   | | | then return 0.11348132290689944;  // std dev = 1.055, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0895709326059331;  // std dev = 2.644, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.38367544991181884;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.024016444281309883;  // std dev = 2.362, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( complex(H, J), interaction(A, H) )
%   | | | then return 0.23834248796660532;  // std dev = 2.608, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | | | else return 0.09058582882269184;  // std dev = 5.768, 140.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=53 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.1965452191885517;  // std dev = 1.409, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.017211508655698697;  // std dev = 2.794, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( complex(A, E), enzyme(D, F) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then return -0.05977652950613057;  // std dev = 0.450, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( phenotype(D, I), location(D, C) )
%   | | | then return 0.03159721261569595;  // std dev = 1.556, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.27803319634346496;  // std dev = 1.681, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.07613531496547836;  // std dev = 0.457, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
%   else if ( location(A, J), complex(A, K) )
%   | then return -0.002517169771823392;  // std dev = 0.459, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then if ( interaction(L, N), enzyme(N, M) )
%   | | | then return 0.14286617772516488;  // std dev = 2.253, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.03573078696104356;  // std dev = 2.302, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(P, A), interaction(P, P) )
%   | | | then return -0.06197189622167613;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.1260716263778212;  // std dev = 3.691, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( interaction(E, A), interaction(E, E) )
%   | | | then return -0.06389609576066681;  // std dev = 2.373, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.0747297078784987;  // std dev = 4.519, 85.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=34 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.0964608048944522;  // std dev = 2.262, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.02390374243508776;  // std dev = 5.740, 158.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=46 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.356536213950755;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.2027662253937028;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10225385003176525;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.455', 'seconds']
Refined model CLL: -0.405417


******************************************
Best model found
******************************************
Results 

CLL : -0.375449 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.389 

Total Inference Time : 8.460179328918457 

Total revision time: 26.03999361228943
Best scored revision CLL: -0.374556


Results 

CLL : -0.375449 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 27.48450741004944 

Total Inference Time : 8.460179328918457 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.248
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2014325171890647;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16394803976123698;  // std dev = 7.839, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14095339158262032;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10985539923316133;  // std dev = 7.880, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08957593925933953;  // std dev = 7.887, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10166872806934016;  // std dev = 7.718, 261.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.056996589608715224;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03988214943489124;  // std dev = 7.900, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04460787920460546;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.023600532778364214;  // std dev = 7.893, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.556', 'seconds']
Parameter learned model CLL:-0.366409 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.773, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.839, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.88, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.887, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.718, 169, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.866, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.9, 194, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.893, 193, 92]}]
{'': [0.0, 0.22543996435731875], 'false': [nan, 0.22543996435731875], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2218196509794223], 'false': [nan, 0.22181965097942188]}
{'': [0.0, 0.22222222222222127], 'false': [nan, 0.22222222222222127], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21940591092409603], 'false': [nan, 0.2194059109240966], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21900416584010973], 'false': [nan, 0.21900416584010993], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2282409242377531], 'false': [nan, 0.2282409242377531], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22020997707729079], 'false': [nan, 0.22020997707729079], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21820137904053907], 'false': [nan, 0.21820137904054143], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22262479338843083], 'false': [nan, 0.22262479338843086], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21860264696829795], 'false': [nan, 0.21860264696829795]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 6.558
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.14386322081379785;  // std dev = 3.780, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0.22579599392304114;  // std dev = 5.623, 136.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=50 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return 0.05119457902543692;  // std dev = 0.426, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(D, E), phenotype(A, F) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.028382096968452668;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.5840504133516753;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1096147827290607;  // std dev = 1.465, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.056953525539881165;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then if ( interaction(A, M), interaction(N, A) )
%   | | | then return 0.17610536759256185;  // std dev = 1.814, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.434056301803834;  // std dev = 2.086, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else if ( complex(A, P), interaction(A, Q) )
%   | | | then return 0.29318938664138045;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.17138362746544622;  // std dev = 5.196, 120.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1565465916497179;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(A, E), interaction(A, D) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.05002600316024585;  // std dev = 1.468, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.09934270693268885;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.30069702670033893;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10710562364570732;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), enzyme(I, J) )
%   | | | then return 0.10433731192048483;  // std dev = 4.286, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return 0.2508978921754491;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.14977230325427698;  // std dev = 4.030, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | | | else return 0.1939173788930327;  // std dev = 3.586, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( complex(E, F) )
%   | | then if ( enzyme(E, D), phenotype(A, G) )
%   | | | then return -0.05326066065209561;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.05221491843535292;  // std dev = 3.411, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.2841301820800195;  // std dev = 1.192, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.10343812326739404;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.028574183516543436;  // std dev = 1.481, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.3339666689440058;  // std dev = 1.810, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.20927350785648205;  // std dev = 2.115, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.07348483325446115;  // std dev = 5.962, 167.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1412182474882405;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( phenotype(A, F), complex(D, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.037546185175062606;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2034380383677418;  // std dev = 1.769, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(A, G), enzyme(A, H) )
%   | | | then return 0.14785263770203141;  // std dev = 2.354, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.0028911276693833993;  // std dev = 3.854, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( interaction(I, K), interaction(K, K) )
%   | | | then return -0.020802564206863338;  // std dev = 1.964, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.1537498628053127;  // std dev = 1.765, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( location(A, L) )
%   | | | then return 0.15676277444864095;  // std dev = 5.030, 105.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=42 */
%   | | | else return 0.35006527103724794;  // std dev = 1.109, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( enzyme(D, E), complex(A, F) )
%   | | then if ( interaction(G, D) )
%   | | | then return 0.11285700594175323;  // std dev = 1.757, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.1955981985479392;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(D, H), complex(A, I) )
%   | | | then return 0.24711422178784648;  // std dev = 2.445, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.09356855127863661;  // std dev = 2.805, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.1297572805776673;  // std dev = 1.355, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.016353415837474718;  // std dev = 3.927, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.04804792302371538;  // std dev = 3.683, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.12022541114647477;  // std dev = 3.228, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( complex(F, D), interaction(F, G) )
%   | | then if ( enzyme(G, H), phenotype(F, I) )
%   | | | then return 0.0473388151476181;  // std dev = 2.580, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.08611258920625399;  // std dev = 2.650, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.07600746360639582;  // std dev = 1.389, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3566486855127335;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then if ( interaction(L, N), interaction(N, L) )
%   | | | then return 0.17088610246143235;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.05691153902483184;  // std dev = 2.565, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( phenotype(A, P), interaction(A, Q) )
%   | | | then return -0.06000584260952313;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.06427208903858175;  // std dev = 5.050, 111.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11313089320724182;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(D, F) )
%   | | then if ( interaction(G, D), enzyme(A, H) )
%   | | | then return 0.011976403090099641;  // std dev = 1.447, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.07072800987086954;  // std dev = 3.607, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.010553937331716211;  // std dev = 2.417, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.09669261272786758;  // std dev = 2.477, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( phenotype(L, K), interaction(L, M) )
%   | | | then return 0.013717567529493825;  // std dev = 2.214, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.16871209585281796;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( phenotype(A, N), location(A, P) )
%   | | | then return 0.14644556615876314;  // std dev = 2.844, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.03231801222491195;  // std dev = 4.519, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), enzyme(F, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.0998304522826376;  // std dev = 2.451, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.024720843969770503;  // std dev = 2.102, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.007932501523928704;  // std dev = 2.322, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.09157125398066936;  // std dev = 3.201, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | else if ( phenotype(A, J), location(A, K) )
%   | | then if ( interaction(A, L), location(L, K) )
%   | | | then return -0.07196602281455843;  // std dev = 2.750, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.04340402723798544;  // std dev = 2.174, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.09914669626739728;  // std dev = 3.957, 64.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
%   | | | else return 0.021453670206588886;  // std dev = 2.811, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(A, E), location(D, F) )
%   | then if ( phenotype(D, G), phenotype(C, G) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.17266126584166608;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.026190371648967915;  // std dev = 1.836, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.06552258975594406;  // std dev = 1.764, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.26079852875960197;  // std dev = 2.140, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | else if ( complex(D, L) )
%   | | then if ( complex(A, M), complex(C, M) )
%   | | | then return 0.002893555191175219;  // std dev = 2.252, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.09994175328653307;  // std dev = 3.164, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | else return -0.03719494876209497;  // std dev = 0.456, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   else if ( interaction(A, N), enzyme(N, P) )
%   | then return 0.0793396345419865;  // std dev = 0.474, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else return -0.024238197054390904;  // std dev = 0.459, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.578', 'seconds']
Refined model CLL: -0.398651


******************************************
Best model found
******************************************
Results 

CLL : -0.366518 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.558 

Total Inference Time : 2.680363655090332 

Total revision time: 12.48517537689209
Best scored revision CLL: -0.366409


Results 

CLL : -0.366518 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.9296891746521 

Total Inference Time : 2.680363655090332 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.198
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18390651085708853;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20335438180293253;  // std dev = 7.366, 233.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1552180214910524;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13105809775906965;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09645540682192479;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06896369766403242;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04663903000259881;  // std dev = 7.629, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0498381856864043;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.007500804094155157;  // std dev = 7.737, 283.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.021749867135302692;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.753', 'seconds']
Parameter learned model CLL:-0.364697 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.615, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.366, 147, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.471, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.462, 158, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.629, 180, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.557, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.737, 197, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.649, 183, 86]}]
{'': [0.0, 0.21963957759412367], 'false': [nan, 0.21963957759412367], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.23286485291679787], 'false': [nan, 0.2328648529167984]}
{'': [0.0, 0.2278050812161611], 'false': [nan, 0.2278050812161611], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22823165815641047], 'false': [nan, 0.22823165815641036], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22480473670949724], 'false': [nan, 0.22480473670949716], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22179156542090805], 'false': [nan, 0.22179156542090805], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2187800327887393], 'false': [nan, 0.2187800327887393], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22308349609375094], 'false': [nan, 0.223083496093752], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [1.1564823173178713e-18, 0.2115396621258842], 'false': [nan, 0.2115396621258844], 'true': [nan, 1.1564823173178713e-18], 'true,false': [nan, 1.1564823173178713e-18], 'true,false,false': [nan, 1.1564823173178713e-18]}
{'': [0.0, 0.21749284835754054], 'false': [nan, 0.21749284835754054], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.134
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( complex(A, F), phenotype(E, G) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.08202953211443773;  // std dev = 3.412, 67.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(J, K), location(I, L) )
%   | | | then return 0.19148226843284455;  // std dev = 4.163, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return 0.41370449065506787;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.37539031440985715;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | else return 0.24276431971489693;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(C, E), complex(C, F) )
%   | then if ( phenotype(D, G) )
%   | | then if ( interaction(H, D), complex(H, F) )
%   | | | then return 0.2285491143708823;  // std dev = 3.108, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.1104182558381006;  // std dev = 2.687, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else return 0.4998721578982152;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.10842150135612764;  // std dev = 0.449, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   else if ( interaction(I, A), enzyme(I, J) )
%   | then return 0.4926229998504546;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( location(A, L), location(K, L) )
%   | | | then return 0.2754240568730973;  // std dev = 1.930, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.472726719355709;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, M) )
%   | | | then return 0.1820009600838283;  // std dev = 3.495, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.02595633318378792;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13783022123678182;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), complex(F, D) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.46894192398489193;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18360134460177108;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.15448406454210717;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.007270036258422035;  // std dev = 2.494, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( complex(K, J), interaction(K, K) )
%   | | | then return 0.7981799311909893;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.221263134450693;  // std dev = 1.699, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return 0.13967096130841683;  // std dev = 5.835, 151.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=51 */
%   | | | else return 0.24885784575642686;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13574002186966488;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.03638823880877097;  // std dev = 1.695, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.3012353331881583;  // std dev = 1.505, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(D, A), phenotype(D, H) )
%   | | | then return 0.28555999637892704;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.029998302339213856;  // std dev = 3.661, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( phenotype(J, I), interaction(J, K) )
%   | | | then return 0.45550226955249534;  // std dev = 1.145, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.19724434890936196;  // std dev = 2.146, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(A, L), enzyme(A, M) )
%   | | | then return 0.45254384711760937;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11186569450458356;  // std dev = 5.308, 126.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=42 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10841833632681436;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, E), location(A, F) )
%   | | then if ( interaction(D, D), phenotype(A, G) )
%   | | | then return 0.2171884040743367;  // std dev = 1.667, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.04188922038517445;  // std dev = 4.254, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | | else if ( complex(E, H), interaction(I, E) )
%   | | | then return 0.24308843948606743;  // std dev = 2.562, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.1046449873189196;  // std dev = 2.707, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( location(A, L) )
%   | | | then return -0.14056873446434148;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.0023828132098678845;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, M), enzyme(A, N) )
%   | | | then return 0.10922973310817968;  // std dev = 1.758, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.01687279825948589;  // std dev = 4.160, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0985517017824196;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), enzyme(F, G) )
%   | | then if ( phenotype(F, H), enzyme(A, I) )
%   | | | then return -0.09863567290620855;  // std dev = 1.719, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.0015735039606490058;  // std dev = 2.906, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( interaction(D, J), complex(J, K) )
%   | | | then return 0.36694872090589886;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.001748330586106641;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( phenotype(A, L), enzyme(A, M) )
%   | | then if ( interaction(A, N), interaction(N, A) )
%   | | | then return -0.06079651212441276;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.18809594577167016;  // std dev = 2.603, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( interaction(P, A), interaction(P, P) )
%   | | | then return 0.10695191287873869;  // std dev = 2.756, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.031652189677192626;  // std dev = 5.089, 122.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10030482321956835;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), location(A, G) )
%   | | then if ( interaction(E, D), phenotype(D, F) )
%   | | | then return -0.0777343161972621;  // std dev = 2.506, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.04241951499062471;  // std dev = 3.556, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | else if ( interaction(H, E), location(A, I) )
%   | | | then return 0.10555874246407546;  // std dev = 1.996, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.4743471873645455;  // std dev = 0.844, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( complex(L, J), interaction(L, A) )
%   | | | then return 0.06654134695417253;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2982128112850934;  // std dev = 1.847, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( complex(A, M), interaction(A, N) )
%   | | | then return -0.11423063568553177;  // std dev = 1.226, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.11928106812919494;  // std dev = 4.740, 95.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=37 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08684974961116584;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( interaction(G, A), interaction(G, E) )
%   | | | then return -0.05551770624802582;  // std dev = 3.379, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.029751827956640064;  // std dev = 4.004, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.02158976511333133;  // std dev = 3.505, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.12096557295385975;  // std dev = 3.812, 60.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, J) )
%   | | | then return -0.16495096030422818;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.19906479612099978;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.018401131170008078;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F), interaction(G, D) )
%   | | then if ( complex(D, H), phenotype(A, I) )
%   | | | then return 0.03493292079864823;  // std dev = 2.171, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.10197948941592162;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.16585071332053067;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.03159408841975115;  // std dev = 5.205, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( phenotype(J, K), phenotype(A, K) )
%   | | | then return -0.2580620311750534;  // std dev = 1.300, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.07241085493779208;  // std dev = 2.530, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.0592061145962927;  // std dev = 3.072, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.07810280466506257;  // std dev = 1.763, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), enzyme(E, F) )
%   | | then if ( interaction(G, E), complex(D, H) )
%   | | | then return 0.12580660160219184;  // std dev = 2.314, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.07051933245674441;  // std dev = 3.264, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | else if ( enzyme(D, I) )
%   | | | then return -0.029211255798063718;  // std dev = 2.519, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.08357313677574373;  // std dev = 4.837, 98.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=39 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.06400447044779137;  // std dev = 2.084, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return -0.18604822218058173;  // std dev = 1.262, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return -0.016219006189533744;  // std dev = 1.855, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.1601645014660842;  // std dev = 1.007, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.578', 'seconds']
Refined model CLL: -0.399006


******************************************
Best model found
******************************************
Results 

CLL : -0.364007 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.134 

Total Inference Time : 2.8497300148010254 

Total revision time: 13.933157188415528
Best scored revision CLL: -0.364697


Results 

CLL : -0.364007 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.377670986175538 

Total Inference Time : 2.8497300148010254 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.176
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1914822684328456;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2018495590281586;  // std dev = 7.411, 236.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13785527966870542;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12305915206299106;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10397256115997872;  // std dev = 7.547, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06749542644927407;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05427480141434899;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0314079735607864;  // std dev = 7.712, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07414801069060578;  // std dev = 7.430, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04671655411803967;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.510', 'seconds']
Parameter learned model CLL:-0.384983 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.411, 149, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.608, 173, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.563, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.547, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.644, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.644, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.712, 188, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.43, 151, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.499, 159, 87]}]
{'': [nan, 0.2222222222222231], 'false': [nan, 0.2222222222222231]}
{'': [0.0, 0.23274561907497815], 'false': [nan, 0.23274561907497734], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2226479289940834], 'false': [nan, 0.2226479289940834], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22519995039990157], 'false': [nan, 0.22519995039990107], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22604875283446713], 'false': [nan, 0.22604875283446807], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2205197579209672], 'false': [nan, 0.2205197579209672], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22051975792096865], 'false': [nan, 0.22051975792096865]}
{'': [0.0, 0.21627768595041402], 'false': [nan, 0.21627768595041372], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23192218063696107], 'false': [nan, 0.2319221806369606], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22858417608566317], 'false': [nan, 0.22858417608566317]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 13.387
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( location(D, C), interaction(F, D) )
%   | | then if ( enzyme(F, G), complex(F, H) )
%   | | | then return 0.23314893509951234;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.11078051404688079;  // std dev = 4.235, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.1604745164948612;  // std dev = 3.012, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else if ( location(K, C), interaction(K, K) )
%   | | then if ( complex(K, L) )
%   | | | then return 0.1692600462106222;  // std dev = 4.392, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, M), interaction(M, A) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1681973904840578;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), complex(F, E) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.10710682277142736;  // std dev = 4.192, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   | | | else return 0.34412148710637175;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.5239380449052733;  // std dev = 1.433, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.2321333932620301;  // std dev = 3.201, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.19062359679267038;  // std dev = 1.375, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.5585382808995689;  // std dev = 1.486, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( location(A, M) )
%   | | | then return 0.20043859235401756;  // std dev = 3.881, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | | else return 0.49040032115077253;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14994296543244823;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F), location(D, G) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.7726107277967809;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08947210565620267;  // std dev = 2.376, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(A, H), interaction(I, D) )
%   | | | then return -0.028557944585418337;  // std dev = 2.162, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.09217689400353074;  // std dev = 2.224, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then if ( complex(L, J), interaction(L, L) )
%   | | | then return 0.13848460780706173;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3715756180127494;  // std dev = 1.862, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.14439599304929351;  // std dev = 5.709, 146.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=50 */
%   | | | else return -2.0927371605113847E-4;  // std dev = 1.517, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, F), interaction(G, D) )
%   | | then if ( enzyme(G, H), complex(G, I) )
%   | | | then return 0.38133885311358445;  // std dev = 1.537, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.18233850385730216;  // std dev = 3.199, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | else if ( enzyme(A, J), interaction(K, D) )
%   | | | then return 0.18322470990060005;  // std dev = 2.251, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.047038594622289154;  // std dev = 3.621, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | else if ( interaction(L, A), interaction(L, L) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.4587282133395103;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03345332396800019;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(M, A), interaction(A, N) )
%   | | | then return 0.010188451308883552;  // std dev = 2.723, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.0733842260492119;  // std dev = 4.050, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( phenotype(F, D), interaction(A, G) )
%   | | | then return -0.07288309159650885;  // std dev = 1.230, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.05644181980041662;  // std dev = 1.651, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.004952968223561166;  // std dev = 1.485, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.07979161321342165;  // std dev = 2.368, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(L, A), location(A, M) )
%   | | | then return 0.08222917631796552;  // std dev = 3.894, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return 0.3973724865675126;  // std dev = 1.123, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.015294484294096194;  // std dev = 2.996, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return 0.07816194032884352;  // std dev = 4.680, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( complex(A, E), interaction(D, D) )
%   | | then if ( phenotype(A, F), phenotype(D, F) )
%   | | | then return 0.21611504211345298;  // std dev = 1.935, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.05461846178592156;  // std dev = 1.162, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, D), location(A, G) )
%   | | | then return -0.0982778605673131;  // std dev = 2.315, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.019356863542852324;  // std dev = 4.462, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(I, J), complex(H, J) )
%   | | | then return 0.19788587353723996;  // std dev = 2.273, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.04753547927596377;  // std dev = 4.624, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | else return 0.26129722520113047;  // std dev = 1.224, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( complex(D, E), interaction(D, D) )
%   | | then if ( complex(A, F), location(D, C) )
%   | | | then return 0.2778333864163627;  // std dev = 1.317, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.14345469250741796;  // std dev = 1.264, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.3735035457850355;  // std dev = 1.443, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.1483005005318623;  // std dev = 1.540, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, I), location(H, J) )
%   | | | then return 0.10597772479230753;  // std dev = 2.408, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.0017709739663461768;  // std dev = 4.739, 112.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=31 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.1450317239164299;  // std dev = 1.896, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.046931041169774465;  // std dev = 3.681, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   else return -0.1099007421024911;  // std dev = 0.428, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1259040078435518;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(D, F), interaction(G, D) )
%   | | then if ( complex(A, H), phenotype(D, I) )
%   | | | then return 0.14385630226192908;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.19813180973150607;  // std dev = 1.576, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( interaction(D, D), interaction(A, D) )
%   | | | then return 0.2065505481145184;  // std dev = 1.655, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.006878440059869277;  // std dev = 5.269, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( phenotype(K, L), interaction(K, A) )
%   | | | then return -0.19113884763673744;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.14751732702160364;  // std dev = 2.239, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.44914543368805965;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15502601483513462;  // std dev = 3.661, 55.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=24 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11087850158535073;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(A, E), interaction(D, D) )
%   | | then if ( interaction(D, F), phenotype(F, G) )
%   | | | then return -0.26204754621951987;  // std dev = 1.598, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.006914940539736292;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(D, H) )
%   | | | then return -0.05810784456099131;  // std dev = 2.814, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.07430935975346202;  // std dev = 1.399, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), interaction(K, L) )
%   | | | then return -0.04616678499743477;  // std dev = 3.449, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | | else return 0.20070992232703994;  // std dev = 0.970, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.08084391063130628;  // std dev = 5.391, 125.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=46 */
%   | | | else return -0.10239168337274089;  // std dev = 1.714, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return -0.12984164343761395;  // std dev = 0.429, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | else if ( complex(C, F), complex(A, F) )
%   | | then return -0.08791096896688769;  // std dev = 0.430, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( complex(C, G) )
%   | | | then return 0.06151458705335916;  // std dev = 1.319, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1416656124588656;  // std dev = 1.475, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( interaction(H, A), location(H, I) )
%   | then if ( enzyme(A, J), interaction(K, H) )
%   | | then if ( interaction(A, L), location(A, I) )
%   | | | then return 0.1338874689790895;  // std dev = 1.832, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.03329669657040505;  // std dev = 3.606, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else if ( interaction(A, M), phenotype(H, N) )
%   | | | then return 0.008774981483464435;  // std dev = 2.495, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.10463444431312297;  // std dev = 4.259, 76.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=31 */
%   | else return -0.027496613581639663;  // std dev = 0.456, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.034', 'seconds']
Refined model CLL: -0.401779


******************************************
Best model found
******************************************
Results 

CLL : -0.384392 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.387 

Total Inference Time : 4.2240517139434814 

Total revision time: 20.572399414062502
Best scored revision CLL: -0.384983


Results 

CLL : -0.384392 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 20.66991261291504 

Total Inference Time : 4.2240517139434814 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.247
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18519296025674561;  // std dev = 8.366, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16112173660833135;  // std dev = 8.366, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14497010255015003;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14966742100604438;  // std dev = 8.143, 287.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09027357242600041;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0653513883590272;  // std dev = 8.403, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06506434651757804;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0553375365293176;  // std dev = 8.306, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03143538078054153;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03638351397218179;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.314', 'seconds']
Parameter learned model CLL:-0.369505 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.366, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.366, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.32, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.143, 183, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.353, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.403, 220, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.306, 205, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.385, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.313, 206, 104]}]
{'': [0.0, 0.22008623076618863], 'false': [nan, 0.22008623076618863], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22008623076618966], 'false': [nan, 0.22008623076618886]}
{'': [0.0, 0.22257834389636108], 'false': [nan, 0.22257834389636108], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.23105780087168612], 'false': [nan, 0.23105780087168507]}
{'': [0.0, 0.22079794904662778], 'false': [nan, 0.2207979490466282], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2179545800944968], 'false': [nan, 0.2179545800944968], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.222222222222223], 'false': [nan, 0.222222222222223], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2232904975859065], 'false': [nan, 0.22329049758590666], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21901961355188654], 'false': [nan, 0.21901961355188637], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22293444328824233], 'false': [nan, 0.22293444328824233], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 14.491
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D) )
%   | then if ( interaction(A, E), location(A, F) )
%   | | then if ( enzyme(E, G), location(E, F) )
%   | | | then return 0.3126943896449669;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.14847151574467363;  // std dev = 3.574, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.14981560176617903;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.058148935099512356;  // std dev = 2.191, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(J, J), phenotype(A, K) )
%   | | | then return 0.2295775065280825;  // std dev = 4.043, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | | | else return 0.1478685612677363;  // std dev = 4.692, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | else if ( location(A, L) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), complex(E, D) )
%   | then if ( interaction(C, E), phenotype(E, F) )
%   | | then return 0.0962188298812622;  // std dev = 0.439, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.49826172728846885;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15025342741458014;  // std dev = 2.965, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else if ( interaction(G, C), interaction(G, A) )
%   | | then if ( enzyme(G, H), enzyme(C, I) )
%   | | | then return 0.8316221906121638;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22885351774340054;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.1202690122308978;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.21197278406690737;  // std dev = 3.627, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else if ( interaction(K, A), interaction(L, K) )
%   | then return 0.13099529295819776;  // std dev = 0.455, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else return 0.08367084893018246;  // std dev = 0.439, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D) )
%   | then if ( interaction(A, E), complex(E, D) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.12141994875637312;  // std dev = 3.120, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.2559448854045028;  // std dev = 1.486, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(G, A), complex(G, D) )
%   | | | then return 0.35095415350588;  // std dev = 1.795, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.2048184806028492;  // std dev = 3.134, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( enzyme(H, J), phenotype(A, I) )
%   | | | then return 0.04794079566837557;  // std dev = 2.587, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.11627022496354772;  // std dev = 5.556, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.02897882904314628;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3069574365392044;  // std dev = 2.004, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A), phenotype(A, D) )
%   | then return 0.3075066535653594;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( interaction(E, G) )
%   | | | then return 0.15214642198690656;  // std dev = 4.825, 99.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=37 */
%   | | | else return -0.05684288851442346;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.07983506897562885;  // std dev = 5.612, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
%   | | | else return 0.16280015653510935;  // std dev = 2.575, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   else if ( enzyme(A, J) )
%   | then return 0.47131314920290146;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( complex(K, M) )
%   | | | then return 0.12316124577917781;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.14280757288885823;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.24559277166496996;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( complex(E, F), complex(A, F) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.13878667697474442;  // std dev = 2.344, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.37092090279440343;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(E, E), interaction(A, H) )
%   | | | then return 0.21898747253308684;  // std dev = 1.943, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.055103895391527234;  // std dev = 5.437, 141.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=42 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( enzyme(J, K), complex(A, L) )
%   | | | then return 0.2353418211711114;  // std dev = 0.995, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05611480282725726;  // std dev = 1.678, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.22092306032415568;  // std dev = 2.348, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.15402004655864476;  // std dev = 4.110, 71.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=28 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15868457809916184;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( enzyme(D, F), interaction(D, G) )
%   | | then if ( interaction(E, D), phenotype(E, H) )
%   | | | then return 0.011812245778719177;  // std dev = 2.684, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.10519623730406973;  // std dev = 2.557, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | else if ( interaction(D, D), phenotype(D, I) )
%   | | | then return 0.39967034965279585;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.026451006513910653;  // std dev = 4.218, 87.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=25 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.1353530324371785;  // std dev = 3.088, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.29122046129409124;  // std dev = 1.300, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.2080184990091865;  // std dev = 1.418, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.06887630214534891;  // std dev = 4.718, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( phenotype(D, E), phenotype(A, F) )
%   | | | then return 0.1877919643213508;  // std dev = 1.736, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.08109359274223432;  // std dev = 2.111, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( enzyme(D, G) )
%   | | | then return -0.28783979766597995;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.033688192468304304;  // std dev = 2.843, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(H, I), enzyme(I, J) )
%   | | | then return 0.10797972584464892;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.042752363266557486;  // std dev = 1.979, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.1434992078638583;  // std dev = 4.614, 87.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=36 */
%   | | | else return 0.05394568591102443;  // std dev = 4.893, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14090814940996377;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), interaction(F, D) )
%   | | then if ( complex(A, G), interaction(F, A) )
%   | | | then return -0.07558542737442339;  // std dev = 1.760, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.1674208272616765;  // std dev = 3.657, 54.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=25 */
%   | | else if ( enzyme(D, H), interaction(I, D) )
%   | | | then return -1.7183788133399172E-4;  // std dev = 3.965, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | | else return 0.04597429433447754;  // std dev = 5.626, 141.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=48 */
%   | else if ( enzyme(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return -0.24285221841810734;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.14389184616928558;  // std dev = 1.269, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.10377997987149619;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12575292698529725;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then if ( interaction(D, D), complex(D, G) )
%   | | | then return -0.026871957968929848;  // std dev = 2.636, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.11955853172721179;  // std dev = 2.328, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.05505550593986192;  // std dev = 2.239, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.22653392646060425;  // std dev = 3.434, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | else if ( location(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return -0.03774221860203461;  // std dev = 2.970, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.02718094853089859;  // std dev = 4.822, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.21133362692290555;  // std dev = 1.300, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.13056941573118558;  // std dev = 1.557, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( enzyme(A, G), interaction(F, F) )
%   | | | then return 0.08470814010557016;  // std dev = 2.864, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return -0.014321016921838013;  // std dev = 6.596, 206.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=62 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.41130521741071435;  // std dev = 0.909, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.13532448272055492;  // std dev = 2.396, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.11827867307733465;  // std dev = 1.804, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.3423754793707774;  // std dev = 1.141, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.2558926943485893;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.07434634993118613;  // std dev = 1.910, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.995', 'seconds']
Refined model CLL: -0.408943


******************************************
Best model found
******************************************
Results 

CLL : -0.370417 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.491 

Total Inference Time : 5.367403507232666 

Total revision time: 23.189546907424926
Best scored revision CLL: -0.369505


Results 

CLL : -0.370417 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 23.287060106277465 

Total Inference Time : 5.367403507232666 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.215
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2014325171890647;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1675844992199842;  // std dev = 7.817, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15422424111268998;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09913891690732035;  // std dev = 7.926, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10151590921338503;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06190718060975199;  // std dev = 7.932, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.087686807432652;  // std dev = 7.710, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06353650081317362;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.006911877016753913;  // std dev = 8.004, 303.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05298218129986076;  // std dev = 7.726, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.639', 'seconds']
Parameter learned model CLL:-0.373624 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.773, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.817, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.75, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.926, 198, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.81, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.932, 199, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.71, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.75, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.004, 211, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.726, 170, 92]}]
{'': [nan, 0.22543996435731875], 'false': [nan, 0.22543996435731875]}
{'': [0.0, 0.22302733230326724], 'false': [nan, 0.22302733230326685], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22664293342826655], 'false': [nan, 0.22664293342826655], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.2165992865636139], 'false': [nan, 0.21659928656361266], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.22342980584738759], 'false': [nan, 0.22342980584738734], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.21619961974941296], 'false': [nan, 0.21619961974941296], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.22863905325443692], 'false': [nan, 0.22863905325443692], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2266429334282668], 'false': [nan, 0.22664293342826522], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21143896567874598], 'false': [nan, 0.21143896567874573], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2278422003379765], 'false': [nan, 0.2278422003379765], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 6.866
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, A) )
%   then if ( complex(A, D) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(F, G), complex(A, H) )
%   | | then if ( enzyme(E, G) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.13983907594458278;  // std dev = 0.450, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), complex(K, J) )
%   | | | then return 0.1340110040650296;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.26555634250691973;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.3126943896449669;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.21617362645753654;  // std dev = 4.315, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( complex(F, H), interaction(G, G) )
%   | | | then return 0.06330218411269978;  // std dev = 1.214, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.34119410138182327;  // std dev = 2.692, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.06455876668733612;  // std dev = 1.518, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.19338210699501782;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( complex(J, L), enzyme(A, M) )
%   | | | then return 0.03688797791709359;  // std dev = 1.779, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.13343495709818623;  // std dev = 3.999, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.22846416486830837;  // std dev = 2.804, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.15720336962088785;  // std dev = 4.332, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.17186192606837658;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( phenotype(D, F), interaction(A, G) )
%   | | then if ( interaction(G, H), location(A, I) )
%   | | | then return 0.5415843907373229;  // std dev = 1.177, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.17038268007284582;  // std dev = 1.593, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( complex(A, J), interaction(K, D) )
%   | | | then return 0.07435959792634059;  // std dev = 2.969, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.26978433866365703;  // std dev = 1.933, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(A, L), interaction(L, M) )
%   | | then if ( location(A, N), location(L, N) )
%   | | | then return 0.06667488120586308;  // std dev = 4.196, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | | | else return 0.16788471085616943;  // std dev = 2.402, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( enzyme(A, P), interaction(A, Q) )
%   | | | then return 0.40897517666223776;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.13730036179320743;  // std dev = 4.225, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13730565854752577;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.06172185630222032;  // std dev = 1.858, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.26640560499482524;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(E, H), phenotype(A, H) )
%   | | | then return -0.09949052200556;  // std dev = 1.236, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.05305696217692275;  // std dev = 3.764, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | else if ( phenotype(A, I), location(A, J) )
%   | | then if ( phenotype(K, I), interaction(K, L) )
%   | | | then return 0.17819644730936138;  // std dev = 3.648, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | | else return 0.4527900859402587;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, M), interaction(M, A) )
%   | | | then return 0.011680927988417652;  // std dev = 1.750, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.12055469757052353;  // std dev = 4.746, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12183609690153503;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( phenotype(E, F), complex(E, G) )
%   | | then if ( interaction(H, A), complex(H, G) )
%   | | | then return 0.029469091524056825;  // std dev = 1.424, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.17743274074134333;  // std dev = 2.407, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.06252341469291423;  // std dev = 1.780, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.04138647728477883;  // std dev = 2.036, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.28687475499885856;  // std dev = 1.647, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.11793222117965448;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.1514984992001388;  // std dev = 3.906, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
%   | | | else return 0.07732077537691878;  // std dev = 4.940, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11942834394943949;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( location(D, E) )
%   | | then if ( location(A, E) )
%   | | | then return -0.0028006095016042632;  // std dev = 2.379, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.11998213131210034;  // std dev = 1.285, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(A, D) )
%   | | | then return 0.2682478180947168;  // std dev = 0.977, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06805162131224492;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), interaction(H, H) )
%   | | | then return 0.35423419382661275;  // std dev = 1.618, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.10616036126878324;  // std dev = 2.232, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.07863726632023514;  // std dev = 4.766, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | | | else return 0.15357243458894704;  // std dev = 4.141, 71.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=29 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09880326369247923;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( location(E, F), interaction(A, G) )
%   | | then if ( phenotype(A, H), complex(G, I) )
%   | | | then return 0.21123448339413745;  // std dev = 1.337, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.011505166497973686;  // std dev = 2.639, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( phenotype(A, J), phenotype(E, K) )
%   | | | then return 0.06487479546591304;  // std dev = 1.551, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.07917147952622018;  // std dev = 3.089, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | else if ( location(A, L) )
%   | | then if ( interaction(M, A) )
%   | | | then return 0.06116400465529618;  // std dev = 5.032, 114.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=39 */
%   | | | else return 0.010543222579997203;  // std dev = 3.721, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else return 0.22346050028530984;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), location(F, E) )
%   | | then if ( enzyme(D, G), phenotype(A, H) )
%   | | | then return -0.1789915338982099;  // std dev = 1.816, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.032993358730600615;  // std dev = 5.217, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | else if ( complex(D, I), phenotype(D, J) )
%   | | | then return 0.2846501045472576;  // std dev = 1.492, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.07685639499089811;  // std dev = 3.421, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | else if ( complex(A, K) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.047469419339011755;  // std dev = 1.628, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.10583384256190742;  // std dev = 1.539, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.011002901762241292;  // std dev = 2.518, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.0707677865866376;  // std dev = 2.111, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09902315419442459;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.15984801245970806;  // std dev = 1.547, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.059499369955260735;  // std dev = 2.088, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.019953023817529947;  // std dev = 2.181, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.3617397987015421;  // std dev = 0.876, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.0036420455354633334;  // std dev = 3.505, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.12560862858198085;  // std dev = 2.758, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.14385477969516777;  // std dev = 3.335, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   | | | else return 0.05196129185393468;  // std dev = 3.834, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09031512656031232;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(D, F), interaction(D, G) )
%   | | then if ( complex(G, F), enzyme(A, H) )
%   | | | then return 0.10121202096918847;  // std dev = 2.493, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.5079649338444363;  // std dev = 1.263, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( function(A, I), function(D, I) )
%   | | | then return -0.012470749644341948;  // std dev = 2.655, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.1749577521031822;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(A, L), location(K, M) )
%   | | | then return 0.012080884385688339;  // std dev = 3.596, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return -0.06636501861043935;  // std dev = 3.601, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.020109725902882777;  // std dev = 2.829, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.2740972417315991;  // std dev = 1.884, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.953', 'seconds']
Refined model CLL: -0.431168


******************************************
Best model found
******************************************
Results 

CLL : -0.373748 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.866 

Total Inference Time : 2.564882755279541 

Total revision time: 12.594275384902954
Best scored revision CLL: -0.373624


Results 

CLL : -0.373748 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.691788583755493 

Total Inference Time : 2.564882755279541 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.162
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21499540812855833;  // std dev = 7.437, 241.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16195845499133577;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11628482453416;  // std dev = 7.701, 277.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10548922011845334;  // std dev = 7.656, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12412290515583364;  // std dev = 7.446, 242.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07419838926189408;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07981648263428666;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01743469930639908;  // std dev = 7.749, 285.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.028295836296285102;  // std dev = 7.669, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.029592202376156205;  // std dev = 7.629, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.713', 'seconds']
Parameter learned model CLL:-0.361089 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.437, 155, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.701, 191, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.656, 184, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.446, 156, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.487, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.749, 199, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.669, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.629, 180, 86]}]
{'': [0.0, 0.22950706771577684], 'false': [nan, 0.22950706771577684], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2217915654209084], 'false': [nan, 0.2217915654209075]}
{'': [0.0, 0.21407811909447602], 'false': [nan, 0.21407811909447602], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21706447187928793], 'false': [nan, 0.21706447187928746], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22908271292944513], 'false': [nan, 0.22908271292944452], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2204999708641678], 'false': [nan, 0.2204999708641678], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22695012211313212], 'false': [nan, 0.22695012211313212]}
{'': [0.0, 0.21069867651584986], 'false': [nan, 0.21069867651584911], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2162089100346024], 'false': [nan, 0.21620891003460252], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21878003278874006], 'false': [nan, 0.21878003278874006], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.55
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), complex(D, F) )
%   | | then if ( interaction(A, G), complex(A, H) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.21529179224236947;  // std dev = 2.535, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.10814893509951237;  // std dev = 3.354, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return 0.19961234973365777;  // std dev = 5.259, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
%   | else if ( enzyme(A, K) )
%   | | then if ( complex(A, L) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.3875606998053947;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), interaction(C, E) )
%   | then return 0.10708335243230091;  // std dev = 0.448, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | else return 0.23774890992482658;  // std dev = 0.493, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   else if ( complex(A, F), interaction(A, G) )
%   | then if ( complex(G, F) )
%   | | then return 0.4987708577522334;  // std dev = 1.134, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(G, H) )
%   | | | then return 0.05415040024628992;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.42364513510652946;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.12486963203416031;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.40527182623256525;  // std dev = 1.313, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.12548635215532927;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.18212699611339203;  // std dev = 4.174, 76.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( complex(D, F) )
%   | | then if ( interaction(D, D), phenotype(D, G) )
%   | | | then return 0.02964296161842655;  // std dev = 1.736, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.1166178210648107;  // std dev = 2.713, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( interaction(H, A), complex(H, E) )
%   | | | then return 0.04618822747215098;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.05930156993222672;  // std dev = 1.557, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.14948676042505948;  // std dev = 2.684, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.2690163087497132;  // std dev = 2.728, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.30376335757350437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.15088502987524224;  // std dev = 5.112, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( phenotype(A, F), phenotype(D, F) )
%   | | then if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.004567237073356715;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.23465156643499344;  // std dev = 1.650, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(D, D), phenotype(D, H) )
%   | | | then return 0.19030085235144953;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.0050022911012602995;  // std dev = 3.497, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.22922135105558802;  // std dev = 2.622, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.12514437899154224;  // std dev = 4.618, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   | | else if ( location(A, M) )
%   | | | then return 0.22274949328236088;  // std dev = 2.723, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.4279891813674426;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( complex(A, F), phenotype(E, D) )
%   | | then if ( interaction(A, G), complex(G, F) )
%   | | | then return 0.35022656623710857;  // std dev = 1.295, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.026896708854510194;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -6.264518256394254E-4;  // std dev = 2.423, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.08341962305178643;  // std dev = 4.659, 100.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.3643931507704787;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.0044268507378411905;  // std dev = 1.228, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return -0.011958683738466494;  // std dev = 3.628, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return 0.05417955717176078;  // std dev = 3.519, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14963466660582292;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, E), enzyme(A, F) )
%   | | then if ( complex(D, G) )
%   | | | then return 0.40452681179388783;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.12528149561195756;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, H), phenotype(E, I) )
%   | | | then return 0.12946804927000594;  // std dev = 3.818, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | | | else return 0.05051409475067238;  // std dev = 3.981, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | else if ( interaction(A, J) )
%   | | then if ( complex(J, K), complex(A, K) )
%   | | | then return -0.0730969343109899;  // std dev = 1.742, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.015080432469704174;  // std dev = 3.372, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.14979621693683626;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.048306767511439294;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then return -0.07399650306352878;  // std dev = 0.428, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(H, D), complex(H, I) )
%   | | | then return 0.1001012176281033;  // std dev = 2.375, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.020835856650999268;  // std dev = 1.499, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.03326065044706079;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.22101067875442224;  // std dev = 1.584, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.07570251622861487;  // std dev = 4.884, 104.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=37 */
%   | | | else return 0.03095890475667156;  // std dev = 3.980, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   else if ( enzyme(A, N) )
%   | then return -0.1810518376470983;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.0059461579363900285;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.17339482127856504;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.07359473876635296;  // std dev = 2.580, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.0155259143265363;  // std dev = 5.536, 144.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=44 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.1571017028358641;  // std dev = 2.780, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.05104155768495954;  // std dev = 3.049, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(J, K) )
%   | | | then return -0.13731495573704477;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1190880164122805;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.07238205534651831;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11084934259164952;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( interaction(H, D), phenotype(D, I) )
%   | | | then return 0.28137479766984724;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.0669743223572057;  // std dev = 1.234, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(J, D), interaction(K, J) )
%   | | | then return -0.053281430715912306;  // std dev = 3.968, 85.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=21 */
%   | | | else return 0.10675792023604326;  // std dev = 2.020, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then if ( complex(L, N), phenotype(A, P) )
%   | | | then return -0.05315932825524494;  // std dev = 2.441, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.050794523960531246;  // std dev = 3.152, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else if ( interaction(Q, A), interaction(R, Q) )
%   | | | then return 0.18872136615789004;  // std dev = 2.478, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.0449173044866776;  // std dev = 3.059, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13634321158772533;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( enzyme(D, F), complex(E, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.14487408545889616;  // std dev = 1.946, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return -0.013066605152648996;  // std dev = 1.476, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(E, D), phenotype(A, I) )
%   | | | then return -0.06269663877019278;  // std dev = 2.281, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.0523204509800439;  // std dev = 3.728, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( interaction(L, K), interaction(L, L) )
%   | | | then return -0.061858629519749644;  // std dev = 1.456, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.05087984526529035;  // std dev = 2.559, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.1904601046413569;  // std dev = 1.785, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.057253416590302156;  // std dev = 4.318, 79.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.826', 'seconds']
Refined model CLL: -0.39905


******************************************
Best model found
******************************************
Results 

CLL : -0.360389 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.55 

Total Inference Time : 2.66463041305542 

Total revision time: 13.114099609375
Best scored revision CLL: -0.361089


Results 

CLL : -0.360389 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.211612808227539 

Total Inference Time : 2.66463041305542 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.096
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21914478572191903;  // std dev = 7.456, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17050207366460446;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15321922756593398;  // std dev = 7.523, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14562093992593333;  // std dev = 7.420, 237.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.062019609711943965;  // std dev = 7.750, 281.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08319728422296156;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.040744248912756055;  // std dev = 7.712, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02912161784411792;  // std dev = 7.731, 278.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04873675889623641;  // std dev = 7.586, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.015300459291780748;  // std dev = 7.719, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.485', 'seconds']
Parameter learned model CLL:-0.36555 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.456, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.571, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.523, 162, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.42, 150, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.75, 194, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.563, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.712, 188, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.731, 191, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 170, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.719, 189, 87]}]
{'': [nan, 0.2306778464558125], 'false': [nan, 0.2306778464558125]}
{'': [nan, 0.22477508650519068], 'false': [nan, 0.22477508650518996]}
{'': [0.0, 0.2273189142110611], 'false': [nan, 0.2273189142110611], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2323345617689474], 'false': [nan, 0.23233456176894743], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21375109231139452], 'false': [nan, 0.21375109231139397], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2251999503999001], 'false': [nan, 0.2251999503999001], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2162776859504135], 'false': [nan, 0.2162776859504135], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21501216293152448], 'false': [nan, 0.21501216293152434]}
{'': [0.0, 0.22392466199336797], 'false': [nan, 0.22392466199336944], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21585538752362937], 'false': [nan, 0.21585538752362937], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.896
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then return 0.11740819435877163;  // std dev = 0.438, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   else if ( phenotype(A, E) )
%   | then if ( interaction(F, A), phenotype(F, E) )
%   | | then if ( interaction(A, G), enzyme(A, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20597502205603407;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.06867525088898598;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.16584124279182005;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(M, K), interaction(M, A) )
%   | | | then return 0.29814893509951235;  // std dev = 2.482, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.15444523139580862;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( interaction(A, A), location(A, N) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.25814893509951237;  // std dev = 3.286, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), complex(D, C) )
%   | then if ( enzyme(D, E) )
%   | | then return 0.5058921612860089;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.17371504717723227;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.34318925545316487;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, H), enzyme(J, K) )
%   | | | then return 0.0932474239657981;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.22100150987640135;  // std dev = 1.753, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.21250744937020336;  // std dev = 3.063, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return 0.3764535694834713;  // std dev = 1.654, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else if ( location(A, M), interaction(A, N) )
%   | then return 0.09051405825141268;  // std dev = 0.444, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | else return 0.17254676987376946;  // std dev = 0.475, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( phenotype(F, E) )
%   | | | then return 0.30124928157135505;  // std dev = 0.977, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06853207006850924;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.24718234193331093;  // std dev = 2.245, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.5627474306334064;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( enzyme(A, K), phenotype(I, L) )
%   | | | then return 0.24235281312506904;  // std dev = 2.390, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.14676189748349291;  // std dev = 6.101, 164.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=57 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.051572808934377774;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.17191812211622162;  // std dev = 1.372, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.18692979256906925;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( location(A, G), location(D, G) )
%   | | | then return -0.04449801178706849;  // std dev = 1.788, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.1020255160930007;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(D, H), location(D, I) )
%   | | | then return 0.20441471007429732;  // std dev = 1.291, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.052775477607090636;  // std dev = 3.382, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then if ( complex(A, L), complex(J, L) )
%   | | | then return 0.4555005520930809;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.16654561257501221;  // std dev = 3.329, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.1707457367919051;  // std dev = 3.099, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.06844943606207946;  // std dev = 4.093, 79.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=24 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), complex(F, G) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.07275953221321949;  // std dev = 1.668, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.08697619691554627;  // std dev = 2.045, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return 0.40396115293948887;  // std dev = 1.185, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.03036309881446013;  // std dev = 1.849, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( complex(J, L), location(A, M) )
%   | | | then return 0.10885097729739945;  // std dev = 4.576, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
%   | | | else return 0.225331098055151;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( enzyme(A, N), interaction(P, A) )
%   | | | then return -0.03059922620653501;  // std dev = 2.154, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.0961215199196735;  // std dev = 3.632, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.17243785104628642;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( enzyme(A, F), interaction(D, G) )
%   | | then if ( complex(G, E) )
%   | | | then return -0.08317993468320735;  // std dev = 1.293, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 6.710836046746234E-5;  // std dev = 1.133, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, D), interaction(D, A) )
%   | | | then return -0.016051568058739838;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.06544340459106436;  // std dev = 2.649, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( phenotype(H, J), phenotype(I, J) )
%   | | | then return 0.061680294522563184;  // std dev = 2.194, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.20620240287338695;  // std dev = 2.906, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.07220950859123787;  // std dev = 5.313, 126.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=43 */
%   | | | else return -0.04696818996338411;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1458901752217435;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(D, F), phenotype(D, G) )
%   | | then if ( complex(F, H) )
%   | | | then return 0.004402487202305312;  // std dev = 2.350, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.24457397408035486;  // std dev = 1.204, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return -0.16067426577768487;  // std dev = 1.334, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.06410544193329767;  // std dev = 1.903, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(K, K), interaction(A, M) )
%   | | | then return 0.17395668410270299;  // std dev = 2.261, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.022720093520666788;  // std dev = 4.746, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | else if ( interaction(A, N), phenotype(A, P) )
%   | | | then return -0.016676192485807054;  // std dev = 1.475, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.17069179552273986;  // std dev = 3.637, 54.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, D), enzyme(D, F) )
%   | | then return 0.33917186815522177;  // std dev = 0.854, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, E), enzyme(D, G) )
%   | | | then return -0.08213445391493018;  // std dev = 1.258, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.06323638092230367;  // std dev = 4.303, 82.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
%   | else if ( phenotype(H, C), interaction(H, H) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.06068393795971013;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3125152012321689;  // std dev = 1.542, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return -0.036264623848011136;  // std dev = 0.456, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.08734750543464163;  // std dev = 0.419, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( interaction(A, K), interaction(K, A) )
%   | | then return 0.2975891241462561;  // std dev = 0.482, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return 0.0067050660663123315;  // std dev = 0.462, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1646608029387213;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), phenotype(E, H) )
%   | | | then return -0.05351514911798129;  // std dev = 1.730, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.12451920918894423;  // std dev = 2.041, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( interaction(I, A), enzyme(A, J) )
%   | | | then return 0.14528625909392573;  // std dev = 1.795, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.044405538547546496;  // std dev = 3.786, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | else if ( interaction(A, A), enzyme(A, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.10396601049868374;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07281832634261151;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return 0.1527272992157571;  // std dev = 1.945, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.03151032693107332;  // std dev = 5.236, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12044744836817521;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( enzyme(D, F), complex(E, G) )
%   | | then if ( phenotype(D, H), phenotype(E, H) )
%   | | | then return -0.04413584954180882;  // std dev = 1.949, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.20168378392751704;  // std dev = 1.709, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( phenotype(E, I), interaction(D, D) )
%   | | | then return 0.01787150839901943;  // std dev = 2.167, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.07725897162254608;  // std dev = 3.939, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.28184371856097534;  // std dev = 1.292, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.05139339513931541;  // std dev = 1.604, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return -0.01744155295157983;  // std dev = 2.281, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.04209897578104168;  // std dev = 4.548, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.580', 'seconds']
Refined model CLL: -0.402363


******************************************
Best model found
******************************************
Results 

CLL : -0.364946 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.896 

Total Inference Time : 3.5272932052612305 

Total revision time: 15.3034173412323
Best scored revision CLL: -0.36555


Results 

CLL : -0.364946 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.360417739868165 

Total Inference Time : 3.5272932052612305 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.264
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22306121580126734;  // std dev = 8.127, 285.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14108285047245125;  // std dev = 8.457, 333.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13179963755184254;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10553526443047319;  // std dev = 8.416, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09737550283796433;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08923689665379299;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.061469215259341056;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.058865877405296176;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04148315973872662;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0328544719732031;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.278', 'seconds']
Parameter learned model CLL:-0.368899 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.127, 181, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.457, 229, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.385, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.416, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.353, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.293, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.359, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.3, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.333, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.333, 209, 104]}]
{'': [0.0, 0.23175130809479888], 'false': [nan, 0.23175130809479888], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21477333189044787], 'false': [nan, 0.2147733318904501], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2190196135518883], 'false': [nan, 0.2190196135518883], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21724566223794742], 'false': [nan, 0.2172456622379443], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22079794904662772], 'false': [nan, 0.2207979490466253], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2240023766830403], 'false': [nan, 0.2240023766830403]}
{'': [nan, 0.22044203843206808], 'false': [nan, 0.22044203843206808]}
{'': [0.0, 0.22364648338674392], 'false': [nan, 0.2236464833867442], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22186610050117936], 'false': [nan, 0.2218661005011785], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2218661005011781], 'false': [nan, 0.2218661005011781], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.364
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(A, F), complex(D, F) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( enzyme(D, G), interaction(D, H) )
%   | | | then return 0.1824732594238367;  // std dev = 2.847, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.29717332534341473;  // std dev = 3.178, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | else if ( interaction(I, A) )
%   | | then if ( enzyme(I, J), interaction(K, I) )
%   | | | then return 0.14847151574467365;  // std dev = 3.574, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.22751830446888047;  // std dev = 5.085, 111.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=41 */
%   | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(A, F) )
%   | | then if ( complex(F, E), interaction(G, A) )
%   | | | then return 0.07144597208560531;  // std dev = 2.840, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.14242599100487166;  // std dev = 2.468, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( complex(H, E), interaction(H, H) )
%   | | | then return -0.04686289415251156;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.0681371058474884;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( phenotype(I, J) )
%   | | | then return 0.36601572517717107;  // std dev = 1.786, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.22108472463358722;  // std dev = 2.340, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.19505154797321603;  // std dev = 5.627, 137.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=50 */
%   | | | else return 0.12993942561186433;  // std dev = 2.774, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.2038772880262225;  // std dev = 2.976, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.10802660602606;  // std dev = 1.819, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(A, D) )
%   | | | then return 0.11089464890653107;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4516771365343606;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, G) )
%   | | then if ( complex(A, H), interaction(G, G) )
%   | | | then return 0.2164150774763048;  // std dev = 1.303, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.09142676799682228;  // std dev = 4.751, 108.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=32 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.22640019470982511;  // std dev = 2.548, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.14663090042981464;  // std dev = 4.656, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.11521050188462208;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.030603653015116805;  // std dev = 2.042, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(A, H), location(H, E) )
%   | | | then return 0.14401676402501437;  // std dev = 2.403, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.04891217435102881;  // std dev = 3.314, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( enzyme(I, K), interaction(I, L) )
%   | | | then return 0.03178721367978541;  // std dev = 2.288, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.16503722479328317;  // std dev = 3.863, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.10475362336833956;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.17363712988256375;  // std dev = 4.795, 96.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=38 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, D), interaction(F, A) )
%   | | then if ( complex(D, G), complex(F, G) )
%   | | | then return 0.08444508368157351;  // std dev = 2.682, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.3745786230180028;  // std dev = 1.380, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( phenotype(D, H) )
%   | | | then return -0.016843249964330394;  // std dev = 3.610, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | | else return 0.2950103940605788;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( complex(J, I) )
%   | | | then return 0.07653758668360167;  // std dev = 1.976, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.262697141298264;  // std dev = 2.636, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1421852184198857;  // std dev = 3.618, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   | | | else return 0.06287734854040154;  // std dev = 4.332, 88.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( complex(D, E) )
%   | then return 0.025005962692783323;  // std dev = 0.457, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
%   | else return -0.06277668905385628;  // std dev = 0.419, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return -0.05684586307165154;  // std dev = 0.423, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.20489963990271176;  // std dev = 1.004, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1105278522832422;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( complex(I, K), phenotype(I, L) )
%   | | | then return 0.5117267236715696;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.17827059400911172;  // std dev = 1.704, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( location(A, M) )
%   | | | then return 0.1125096053221473;  // std dev = 5.334, 120.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=46 */
%   | | | else return -0.024841357888920314;  // std dev = 1.941, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( phenotype(A, G), interaction(D, D) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.2521381184003247;  // std dev = 1.810, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.04819376837647865;  // std dev = 1.227, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.0012542589508802886;  // std dev = 0.456, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | else if ( enzyme(A, H), phenotype(D, I) )
%   | | then if ( interaction(D, J), interaction(J, A) )
%   | | | then return 0.11936805458328767;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5232551655997294;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(D, C), phenotype(D, K) )
%   | | | then return 0.0554320822655752;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17645650232398863;  // std dev = 1.795, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( interaction(L, A), interaction(M, L) )
%   | then return 9.537301828512536E-4;  // std dev = 0.458, 192.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=57 */
%   | else return 0.09694204818294767;  // std dev = 0.476, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08339505950800119;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.31614697256216145;  // std dev = 1.124, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.12132171274906162;  // std dev = 1.971, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return -0.028985225712870415;  // std dev = 1.661, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( interaction(J, J), complex(A, L) )
%   | | | then return -0.0327028161787027;  // std dev = 2.779, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.040029117143207546;  // std dev = 3.768, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.09334777135720561;  // std dev = 5.275, 118.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=46 */
%   | | | else return 0.01880098376366704;  // std dev = 3.116, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.463124420759506;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(D, F), complex(D, G) )
%   | | | then return 0.0325603628851163;  // std dev = 2.273, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.17392649064349305;  // std dev = 2.197, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( complex(I, J), phenotype(I, K) )
%   | | | then return -0.0786871068452408;  // std dev = 2.167, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.07510660916741489;  // std dev = 1.778, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return 0.11320896928976713;  // std dev = 3.278, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.029824241592168965;  // std dev = 5.936, 156.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=54 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), interaction(F, G) )
%   | | then if ( phenotype(F, D) )
%   | | | then return -0.06450611882255183;  // std dev = 3.482, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return 0.2960078083936466;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.09064795809220448;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.2478402729501724;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( phenotype(A, K), enzyme(J, L) )
%   | | | then return 0.34843770490541925;  // std dev = 1.149, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.05794454426930681;  // std dev = 4.041, 68.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return -0.19821054703621843;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.001322826818961754;  // std dev = 5.901, 159.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=51 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.861', 'seconds']
Refined model CLL: -0.409307


******************************************
Best model found
******************************************
Results 

CLL : -0.369813 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.364 

Total Inference Time : 4.475538969039917 

Total revision time: 17.208023765563965
Best scored revision CLL: -0.368899


Results 

CLL : -0.369813 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 17.26502416419983 

Total Inference Time : 4.475538969039917 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.193
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20795882103107147;  // std dev = 7.734, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14924218921810237;  // std dev = 7.919, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1547523785135094;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0894642148812304;  // std dev = 7.993, 301.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13190886733707782;  // std dev = 7.652, 253.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09113360980000125;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07603222890575764;  // std dev = 7.734, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02484149638872072;  // std dev = 7.944, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.026273198691538116;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.051374966102155764;  // std dev = 7.726, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.402', 'seconds']
Parameter learned model CLL:-0.37552 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.734, 171, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.919, 197, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.993, 209, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.652, 161, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.75, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.734, 171, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.944, 201, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.906, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.726, 170, 92]}]
{'': [nan, 0.2274429296361095], 'false': [nan, 0.2274429296361095]}
{'': [0.0, 0.21699931753690574], 'false': [nan, 0.2169993175369099], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22624229747300523], 'false': [nan, 0.22624229747300523], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21222723810995575], 'false': [nan, 0.21222723810995497]}
{'': [0.0, 0.23140495867768668], 'false': [nan, 0.23140495867768593], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22664293342826722], 'false': [nan, 0.22664293342826722], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2274429296361089], 'false': [nan, 0.2274429296361089], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21540146070426042], 'false': [nan, 0.21540146070425836], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2178003860675745], 'false': [nan, 0.21780038606757401], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22784220033797464], 'false': [nan, 0.22784220033797464]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.343
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(C, E), interaction(C, C) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(G, C), interaction(C, G) )
%   | | then if ( location(A, D) )
%   | | | then return 0.10814893509951237;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.21814893509951236;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( complex(C, H), enzyme(A, I) )
%   | | | then return 0.1824732594238367;  // std dev = 2.847, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.2684053453559221;  // std dev = 4.344, 78.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=32 */
%   else if ( interaction(A, J), complex(J, K) )
%   | then return 0.09814893509951238;  // std dev = 0.427, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | else if ( interaction(A, L), interaction(L, L) )
%   | | then return 0.13087620782678497;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.42957750652808363;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D) )
%   | then if ( enzyme(A, E), interaction(A, A) )
%   | | then return -0.018371060424704655;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.25816038953048603;  // std dev = 3.307, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | else return 0.1842272533889957;  // std dev = 3.936, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.29644965340031476;  // std dev = 1.795, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.15959570395928502;  // std dev = 2.579, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.08152240732721676;  // std dev = 2.107, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.14899716406149976;  // std dev = 4.213, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16554624538767002;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), phenotype(E, F) )
%   | | then if ( phenotype(D, G), enzyme(A, H) )
%   | | | then return 0.17192231906008762;  // std dev = 2.863, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.07878280585247067;  // std dev = 3.504, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( phenotype(D, I), phenotype(A, I) )
%   | | | then return 0.025887638927920145;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.213752113656256;  // std dev = 3.369, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( complex(A, L), complex(J, L) )
%   | | | then return 0.24854221648584873;  // std dev = 1.498, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.08278839457328172;  // std dev = 5.088, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
%   | | else return -0.067273437876585;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(A, E), complex(C, F) )
%   | then return 0.05913923434974693;  // std dev = 0.450, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else return 0.1356178159877131;  // std dev = 0.477, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
%   else if ( location(A, G), phenotype(A, H) )
%   | then if ( interaction(A, I), phenotype(I, H) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.21508992153752224;  // std dev = 1.036, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.09916804708808653;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.44554916257348337;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.24650810236511733;  // std dev = 1.632, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( enzyme(A, M) )
%   | | then if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.3900828157044799;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11981919566541473;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.10313875504837725;  // std dev = 0.465, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1560812542020745;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.11133027084571519;  // std dev = 1.792, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.01098139740770763;  // std dev = 2.588, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.1530460449480409;  // std dev = 2.026, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.41355293317070657;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( enzyme(K, L) )
%   | | | then return -0.057646732681710666;  // std dev = 1.946, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.1711106795385001;  // std dev = 2.433, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( interaction(A, M), phenotype(A, N) )
%   | | | then return 0.3470754247170174;  // std dev = 1.559, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.14400751435187867;  // std dev = 5.456, 126.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=48 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), location(D, G) )
%   | | then if ( enzyme(A, H), complex(D, I) )
%   | | | then return 0.15450224971946785;  // std dev = 1.315, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.013015427515271676;  // std dev = 3.953, 83.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.39930694123355875;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.09414878540376694;  // std dev = 2.525, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then if ( interaction(A, N), enzyme(A, P) )
%   | | | then return 0.5768718294824872;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1906548980258905;  // std dev = 2.685, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | else if ( interaction(A, Q), complex(Q, R) )
%   | | | then return 0.015982420721362092;  // std dev = 3.849, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | | | else return 0.1614834129838099;  // std dev = 2.872, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1400018376897581;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(F, D), location(F, G) )
%   | | then if ( interaction(H, F), complex(H, I) )
%   | | | then return -0.01681574191702872;  // std dev = 3.422, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.2057520207048594;  // std dev = 1.879, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.20318583474098395;  // std dev = 1.574, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return -0.03992720583684556;  // std dev = 1.499, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( phenotype(A, K) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.30313773649367853;  // std dev = 1.344, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.0748877193206368;  // std dev = 1.727, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( enzyme(A, M), complex(A, N) )
%   | | | then return 0.09023214229581769;  // std dev = 2.559, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.02751750636012938;  // std dev = 5.410, 136.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(D, F), enzyme(A, G) )
%   | | | then return 0.07345735833483526;  // std dev = 1.694, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.04086901777385421;  // std dev = 2.201, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( phenotype(D, H) )
%   | | | then return 0.3227371990177687;  // std dev = 1.344, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.025529518784978417;  // std dev = 1.688, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(A, K), interaction(L, I) )
%   | | | then return 0.13400359150536514;  // std dev = 2.514, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return -0.010715241845695365;  // std dev = 3.909, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return -0.12716086889138775;  // std dev = 2.647, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return -0.006922592946891031;  // std dev = 4.600, 104.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=30 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12922116994139835;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( enzyme(A, G), interaction(A, H) )
%   | | | then return -0.05113170732311544;  // std dev = 2.479, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.08770507396621872;  // std dev = 3.060, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return -0.10834574829678327;  // std dev = 1.957, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.009406128036514434;  // std dev = 3.187, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(A, M), phenotype(K, N) )
%   | | | then return 0.33199166597136637;  // std dev = 1.347, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.10297261197572903;  // std dev = 3.303, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | else if ( enzyme(A, P), location(A, Q) )
%   | | | then return 0.2145829112843459;  // std dev = 1.679, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.020164557477388042;  // std dev = 3.698, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then return -0.09578473175358472;  // std dev = 0.442, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else if ( enzyme(F, D), interaction(F, G) )
%   | | then if ( interaction(H, A), location(G, C) )
%   | | | then return 0.07888253592271399;  // std dev = 2.968, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.015359009082290242;  // std dev = 1.653, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.05544572530558396;  // std dev = 1.611, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.12407446277652528;  // std dev = 1.530, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( location(A, J) )
%   | then if ( location(K, J), complex(K, L) )
%   | | then if ( interaction(A, K), interaction(K, M) )
%   | | | then return -0.0016078762079243976;  // std dev = 3.045, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.08674669758563944;  // std dev = 4.822, 94.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=38 */
%   | | else return -0.15369331762421365;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else return 0.17921490599934295;  // std dev = 1.205, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.812', 'seconds']
Refined model CLL: -0.407769


******************************************
Best model found
******************************************
Results 

CLL : -0.375638 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.343 

Total Inference Time : 4.237659454345703 

Total revision time: 16.656885610580446
Best scored revision CLL: -0.37552


Results 

CLL : -0.375638 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.71388600921631 

Total Inference Time : 4.237659454345703 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.165
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20774243103447207;  // std dev = 7.479, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15792968788897405;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1529562803361528;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10238576499223195;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0774926780646509;  // std dev = 7.688, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06788294724439393;  // std dev = 7.662, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09298711236072195;  // std dev = 7.446, 242.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.030819706038608553;  // std dev = 7.694, 276.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02231244698325964;  // std dev = 7.707, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06670545378937559;  // std dev = 7.429, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.634', 'seconds']
Parameter learned model CLL:-0.369003 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.479, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.608, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.503, 163, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.649, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.688, 189, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.662, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.446, 156, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.694, 190, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.707, 192, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.429, 154, 86]}]
{'': [0.0, 0.2273778835349335], 'false': [nan, 0.2273778835349335], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22006968439618835], 'false': [nan, 0.22006968439618824], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22609312753020191], 'false': [nan, 0.22609312753020191]}
{'': [0.0, 0.21749284835753938], 'false': [nan, 0.21749284835753904], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2149289256198353], 'false': [nan, 0.21492892561983598], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21663648370800953], 'false': [nan, 0.21663648370800953], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2290827129294435], 'false': [nan, 0.2290827129294435], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21450325561856753], 'false': [nan, 0.21450325561856726]}
{'': [0.0, 0.2136535376015724], 'false': [nan, 0.2136535376015716], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2299305555555555], 'false': [nan, 0.2299305555555555], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.345
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then if ( interaction(G, E), enzyme(A, H) )
%   | | | then return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.18072958026080266;  // std dev = 2.603, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( interaction(I, E), complex(I, J) )
%   | | | then return 0.2993254056877464;  // std dev = 4.094, 68.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=30 */
%   | | | else return 0.16496711691769417;  // std dev = 4.326, 88.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
%   | else if ( phenotype(A, K) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.09344305274657114;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.03461952333480645;  // std dev = 2.223, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.19148226843284555;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.20640456483315184;  // std dev = 3.535, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return 0.11194563023362772;  // std dev = 2.239, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.17815284070595952;  // std dev = 3.541, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.12295669624427889;  // std dev = 5.095, 125.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=37 */
%   | else if ( interaction(J, A) )
%   | | then return 0.5067644098416436;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.10388224706183424;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( location(A, D), complex(A, E) )
%   | then if ( enzyme(C, F), interaction(A, G) )
%   | | then return 0.4771698761161051;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(C, E) )
%   | | | then return 0.09272052980885909;  // std dev = 2.386, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.28287721297842483;  // std dev = 2.171, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else return 0.09031569334635323;  // std dev = 0.454, 173.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=50 */
%   else if ( complex(A, H), phenotype(A, I) )
%   | then if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.19201368295147137;  // std dev = 0.482, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.01100230053480863;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, L), interaction(L, L) )
%   | | then if ( enzyme(L, M) )
%   | | | then return 0.24882528584432237;  // std dev = 1.314, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.08074479378992838;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.5685153310485846;  // std dev = 0.427, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1693661946493076;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.05228640434767296;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.033707160812584076;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.13952054114747908;  // std dev = 1.968, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.045520370054866005;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(L, A), enzyme(L, K) )
%   | | | then return 0.7481881977151801;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17753285068606586;  // std dev = 3.294, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | else if ( location(A, M), interaction(A, N) )
%   | | | then return 0.09035017946974323;  // std dev = 3.725, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.15538174964739426;  // std dev = 4.260, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( complex(D, H), enzyme(A, I) )
%   | | | then return -0.09689946803758606;  // std dev = 1.521, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.029019627462597068;  // std dev = 2.156, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( location(D, E) )
%   | | | then return 0.09221389986894361;  // std dev = 4.713, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | | | else return 0.22590966672380383;  // std dev = 1.939, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), enzyme(L, M) )
%   | | | then return 0.48140567351142416;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10585753605998838;  // std dev = 2.791, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.41682188891992045;  // std dev = 2.146, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.22385987435227594;  // std dev = 2.030, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11452000046505169;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(A, F), interaction(G, E) )
%   | | then if ( interaction(D, G), interaction(A, G) )
%   | | | then return 0.13118101507126145;  // std dev = 1.375, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.00851443110619333;  // std dev = 3.255, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( interaction(A, E), enzyme(D, H) )
%   | | | then return -0.1339048363990972;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.16014132267410863;  // std dev = 4.522, 85.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=36 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( interaction(I, K), complex(K, L) )
%   | | | then return 0.06367051272482965;  // std dev = 1.390, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.4036805895707034;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.06236588306221139;  // std dev = 2.316, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.036544077938681474;  // std dev = 3.638, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13307818025436524;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( interaction(D, E), interaction(F, F) )
%   | | | then return 0.06723934234254275;  // std dev = 2.718, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.250098578297619;  // std dev = 2.062, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( enzyme(E, G), interaction(A, D) )
%   | | | then return -0.22669453199315692;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.06160387621719679;  // std dev = 3.143, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(J, I), phenotype(I, K) )
%   | | | then return 0.008936471820987857;  // std dev = 3.286, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return 0.21576179316299038;  // std dev = 1.792, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return -0.125625896245148;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.007937491485896467;  // std dev = 4.121, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then if ( location(D, C) )
%   | | then if ( phenotype(D, F), interaction(D, G) )
%   | | | then return 0.3294078927551394;  // std dev = 1.547, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.08050932489712832;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( phenotype(D, H) )
%   | | | then return -0.17328772272722487;  // std dev = 1.269, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.07112490589123614;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(A, A), phenotype(A, K) )
%   | | | then return 0.3261667453474004;  // std dev = 1.121, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.022117500344084644;  // std dev = 5.453, 141.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=42 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.026179063023778894;  // std dev = 2.861, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.1155633484680918;  // std dev = 2.794, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   else return -0.15382269455097572;  // std dev = 0.381, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(D, E), complex(A, F) )
%   | | then return 0.4737970535907427;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, A), phenotype(A, H) )
%   | | | then return 0.18494798572046747;  // std dev = 1.989, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.04041987031618336;  // std dev = 2.734, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), interaction(J, J) )
%   | | | then return -0.04335023009806648;  // std dev = 4.234, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | | | else return 0.07356044342470755;  // std dev = 3.070, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.20950539132991577;  // std dev = 2.106, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.03189637758862477;  // std dev = 3.046, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09765990873813096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( phenotype(A, F), enzyme(D, G) )
%   | | then if ( location(D, E) )
%   | | | then return 0.11199818130196826;  // std dev = 2.543, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return -0.08472720832277793;  // std dev = 1.482, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(D, D), complex(A, H) )
%   | | | then return -0.13878407366873136;  // std dev = 2.392, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return -0.03536644587920841;  // std dev = 4.484, 99.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=28 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.04680764716196942;  // std dev = 2.393, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.21144797788229944;  // std dev = 1.692, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.06491750700505707;  // std dev = 2.667, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.08949049847301194;  // std dev = 2.545, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.822', 'seconds']
Refined model CLL: -0.414942


******************************************
Best model found
******************************************
Results 

CLL : -0.368325 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.345 

Total Inference Time : 3.2114131450653076 

Total revision time: 14.513518342971803
Best scored revision CLL: -0.369003


Results 

CLL : -0.368325 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.570518741607668 

Total Inference Time : 3.2114131450653076 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.088
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1993254056877476;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18291909948959675;  // std dev = 7.515, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1515998534600303;  // std dev = 7.540, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09416336927486832;  // std dev = 7.725, 277.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08813180513203235;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06474209361434051;  // std dev = 7.706, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08280083370939605;  // std dev = 7.532, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05041628649230825;  // std dev = 7.623, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05191712925368113;  // std dev = 7.555, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0754575618081751;  // std dev = 7.355, 230.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.445', 'seconds']
Parameter learned model CLL:-0.387824 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.571, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.515, 161, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.54, 164, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.725, 190, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.665, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.706, 187, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.532, 163, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.623, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.555, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.355, 143, 87]}]
{'': [nan, 0.22477508650519115], 'false': [nan, 0.22477508650519115]}
{'': [nan, 0.22774128511966835], 'false': [nan, 0.22774128511966796]}
{'': [nan, 0.22647259567308486], 'false': [nan, 0.22647259567308486]}
{'': [0.0, 0.21543353881843944], 'false': [nan, 0.21543353881843985], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21924426375584702], 'false': [nan, 0.21924426375584763], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21670041025094589], 'false': [nan, 0.21670041025094589], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22689599999999988], 'false': [nan, 0.22689599999999988], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22179651535458325], 'false': [nan, 0.2217965153545845], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22562452155165655], 'false': [nan, 0.22562452155165805], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23517958412098383], 'false': [nan, 0.23517958412098383], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 15.691
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.15814893509951236;  // std dev = 0.458, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.4295775065280837;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.19581127276185;  // std dev = 0.473, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   else if ( enzyme(A, G) )
%   | then if ( enzyme(H, G), interaction(H, I) )
%   | | then if ( enzyme(I, J), phenotype(I, K) )
%   | | | then return 0.3844647245731965;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.21529179224236936;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(L, A), location(L, M) )
%   | | then if ( enzyme(L, N), complex(A, P) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22322830017887738;  // std dev = 3.821, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), location(D, C) )
%   | then if ( interaction(A, E), complex(D, F) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.14906756563059195;  // std dev = 2.327, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.05702554288448974;  // std dev = 2.622, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( phenotype(A, G), interaction(H, D) )
%   | | | then return 0.1995825886016924;  // std dev = 3.471, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.12122177080455934;  // std dev = 4.336, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return 0.5851948292076055;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.4573101930854741;  // std dev = 0.847, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15999076660103256;  // std dev = 3.145, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   else if ( interaction(A, K), enzyme(K, L) )
%   | then return -0.04217276938309595;  // std dev = 0.351, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else return 0.16208015925808214;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), complex(G, H) )
%   | | then if ( location(C, F), location(E, F) )
%   | | | then return 0.12527164330670826;  // std dev = 2.716, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.31952536872178194;  // std dev = 1.796, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.052555144661682096;  // std dev = 0.430, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | else if ( location(C, I), interaction(J, C) )
%   | | then if ( interaction(J, A), location(J, I) )
%   | | | then return 0.09445841116214534;  // std dev = 2.533, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.24010900367595422;  // std dev = 2.910, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else return 0.5537873782327127;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( location(A, K) )
%   | then return 0.07102943872913188;  // std dev = 0.449, 101.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=28 */
%   | else if ( interaction(A, A) )
%   | | then return 0.1445152092258811;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.31957718804362945;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.19297477035343605;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(A, F), phenotype(D, F) )
%   | | then return 0.394763304553876;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, G), location(A, H) )
%   | | | then return -0.03834283954417428;  // std dev = 2.812, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.1730262142757552;  // std dev = 1.751, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( location(A, J), enzyme(I, K) )
%   | | | then return 0.19016352328943972;  // std dev = 2.151, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.09258598294128771;  // std dev = 6.203, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.00561483864917998;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.06276009195814088;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(E, E) )
%   | | then if ( location(E, F), enzyme(E, G) )
%   | | | then return 0.28240594401916813;  // std dev = 1.188, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.06352767050826348;  // std dev = 2.374, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( phenotype(E, H) )
%   | | | then return 0.19408484831753112;  // std dev = 2.770, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return -0.023065698947110448;  // std dev = 2.164, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(K, I), interaction(I, K) )
%   | | | then return 0.13850043104781848;  // std dev = 5.197, 116.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=43 */
%   | | | else return 0.0496537131353868;  // std dev = 2.233, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.20613949819473928;  // std dev = 1.477, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.06958784765786463;  // std dev = 1.538, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.20303196804659532;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D), enzyme(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.18671973833748545;  // std dev = 1.808, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.025337301588009533;  // std dev = 2.678, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.023916152251961847;  // std dev = 2.220, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return -0.03709055813259598;  // std dev = 2.715, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else if ( interaction(A, K), location(A, L) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.15656549842827813;  // std dev = 3.058, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.28866256434535315;  // std dev = 1.796, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(N, A), location(N, P) )
%   | | | then return 0.04644220125055661;  // std dev = 4.492, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
%   | | | else return 0.3872428782159936;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13117438872444456;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( complex(F, D), interaction(A, F) )
%   | | then if ( enzyme(F, E) )
%   | | | then return -0.1010211585100312;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.12693016663083828;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(G, E), interaction(G, G) )
%   | | | then return -0.14237055500173876;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.020235390591664158;  // std dev = 2.739, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(A, J), phenotype(H, K) )
%   | | | then return 0.08517002349928805;  // std dev = 3.617, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | | else return -0.002713112739137881;  // std dev = 3.813, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.06809681519495143;  // std dev = 4.377, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return 0.25468627819592626;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13921364121042543;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(G, G), phenotype(F, H) )
%   | | | then return 0.14360149661744456;  // std dev = 1.229, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.0027839876454606965;  // std dev = 1.679, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( enzyme(I, E), interaction(I, I) )
%   | | | then return -0.021238208123557322;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.33425519751608057;  // std dev = 1.753, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( enzyme(J, L), phenotype(A, M) )
%   | | | then return 0.16456748838142005;  // std dev = 1.672, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.015354175258179328;  // std dev = 5.253, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
%   | | else if ( location(A, N), enzyme(A, P) )
%   | | | then return 0.1260232913562839;  // std dev = 2.065, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.010016788994777906;  // std dev = 3.783, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( enzyme(D, F), enzyme(A, G) )
%   | | then if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.1603789901566374;  // std dev = 1.235, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.11754461927717405;  // std dev = 2.328, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.006016789288246619;  // std dev = 3.532, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.11589654886533125;  // std dev = 5.547, 127.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=52 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.11197405456736668;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.08081772475512063;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, N) )
%   | | | then return -0.1911182687002778;  // std dev = 1.311, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.08901002256100793;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, D), phenotype(D, F) )
%   | | then if ( complex(D, G), location(A, E) )
%   | | | then return 0.02149337759859702;  // std dev = 2.135, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.3162881106617114;  // std dev = 1.332, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.13821701181597634;  // std dev = 2.053, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.005372272290160981;  // std dev = 6.544, 194.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=62 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.10648643139253142;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.07853510073045857;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.16272484233018536;  // std dev = 1.591, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.310', 'seconds']
Refined model CLL: -0.398284


******************************************
Best model found
******************************************
Results 

CLL : -0.387235 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.691 

Total Inference Time : 4.049030542373657 

Total revision time: 22.658939794540405
Best scored revision CLL: -0.387824


Results 

CLL : -0.387235 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 22.687109664916992 

Total Inference Time : 4.049030542373657 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.227
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16952618060849475;  // std dev = 8.463, 334.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16850290755134403;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1539391986982955;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13269855403951575;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09744098939195124;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08820015197319638;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05607111095118455;  // std dev = 8.366, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.050077681834086014;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.047425206962913385;  // std dev = 8.286, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05138849296127743;  // std dev = 8.198, 294.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.421', 'seconds']
Parameter learned model CLL:-0.378694 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.463, 230, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.333, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.25, 197, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.366, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.333, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.286, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.198, 190, 104]}]
{'': [nan, 0.21442145648822186], 'false': [nan, 0.21442145648822186]}
{'': [0.0, 0.221866100501178], 'false': [nan, 0.22186610050117994], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22506925207756168], 'false': [nan, 0.22506925207756168], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22613436937782078], 'false': [nan, 0.2261343693778237], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2222222222222229], 'false': [nan, 0.2222222222222234], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22506925207756107], 'false': [nan, 0.22506925207756107]}
{'': [0.0, 0.22008623076618725], 'false': [nan, 0.22008623076618725], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2218661005011783], 'false': [nan, 0.22186610050117836], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2243581528471956], 'false': [nan, 0.22435815284719518], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [1.1564823173178713e-18, 0.22860845018279322], 'false': [nan, 0.22860845018279322], 'true': [nan, 1.1564823173178713e-18], 'true,false': [nan, 1.1564823173178713e-18], 'true,false,false': [nan, 1.1564823173178713e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 11.307
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( complex(D, E) )
%   | then if ( phenotype(D, F), location(A, G) )
%   | | then if ( phenotype(A, F), enzyme(D, H) )
%   | | | then return 0.3025933795439568;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.20857628552686225;  // std dev = 5.161, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.13814893509951237;  // std dev = 0.449, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   else if ( interaction(I, A), complex(I, J) )
%   | then if ( interaction(K, I), enzyme(K, L) )
%   | | then return 0.23745927992709853;  // std dev = 0.485, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else return 0.11167006186007575;  // std dev = 0.435, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | else if ( interaction(M, A), complex(A, N) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( location(A, P) )
%   | | | then return 0.2285193054698827;  // std dev = 2.509, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.17123302851621225;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( phenotype(E, F), phenotype(A, F) )
%   | | | then return 0.209821703363477;  // std dev = 2.226, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.07729533106461778;  // std dev = 3.131, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | else if ( interaction(G, A), enzyme(A, H) )
%   | | | then return 0.13632139555957565;  // std dev = 4.251, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
%   | | | else return 0.19926668398748693;  // std dev = 5.607, 135.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=50 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.09400440421459588;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.13434520275155862;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.5026726600811007;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15010551216267887;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.12257125412891606;  // std dev = 2.859, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.3596147171345444;  // std dev = 1.497, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( complex(D, H), phenotype(D, I) )
%   | | | then return 0.1333601655104916;  // std dev = 2.829, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.04979197067220029;  // std dev = 2.995, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), interaction(L, M) )
%   | | | then return 0.4087214226543187;  // std dev = 1.555, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.08150143213412882;  // std dev = 1.480, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(A, N), location(A, P) )
%   | | | then return 0.12092828719731057;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.16194920446252437;  // std dev = 4.305, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1310845615068241;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( interaction(A, F), enzyme(A, E) )
%   | | | then return 0.38297574511743443;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07385057426769821;  // std dev = 3.750, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.4819123410156054;  // std dev = 1.636, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.16861147445736274;  // std dev = 2.346, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return -0.01245037716205846;  // std dev = 1.764, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.11710583469163872;  // std dev = 5.292, 126.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=42 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.05228197853914516;  // std dev = 1.984, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.08471998137019086;  // std dev = 2.879, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( phenotype(A, F), enzyme(D, G) )
%   | | then if ( complex(D, H) )
%   | | | then return 0.13475442570303944;  // std dev = 2.056, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.10788218159373626;  // std dev = 1.258, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(I, D), interaction(D, I) )
%   | | | then return 0.23647459976538954;  // std dev = 2.893, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.05764649001717271;  // std dev = 1.875, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( enzyme(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return -0.12676552287564444;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.05739902991669345;  // std dev = 1.198, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.062495187580381584;  // std dev = 4.440, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
%   | | | else return 0.09948810528712913;  // std dev = 5.266, 124.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( complex(E, F), enzyme(A, G) )
%   | | then return -0.020620553088180407;  // std dev = 0.447, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return 0.11334871956610347;  // std dev = 0.486, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | else return 0.017274711024413567;  // std dev = 0.451, 138.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=39 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( enzyme(H, J) )
%   | | then if ( location(H, K), location(A, K) )
%   | | | then return 0.2689281447161489;  // std dev = 1.785, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.06823493101216101;  // std dev = 1.973, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else return 0.05040997091075283;  // std dev = 0.459, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | else if ( complex(A, L), location(A, M) )
%   | | then return 0.5483272942446403;  // std dev = 0.901, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.11936328870550525;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.24607262395668528;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12297506085105835;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), enzyme(A, F) )
%   | | then if ( complex(D, G), enzyme(E, F) )
%   | | | then return -0.12650707458947846;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.04753218322204305;  // std dev = 1.193, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( enzyme(D, H) )
%   | | | then return -0.0017094343722041314;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.19301375389265188;  // std dev = 3.237, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.04839902785720226;  // std dev = 2.014, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.11429670066887371;  // std dev = 2.665, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else if ( complex(A, M), location(A, N) )
%   | | | then return -0.05144659315303488;  // std dev = 2.561, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.044653292493165624;  // std dev = 5.960, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13048464866676324;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( location(A, D) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( enzyme(F, E), interaction(A, F) )
%   | | | then return -0.04327934841601718;  // std dev = 1.485, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.12740129882898613;  // std dev = 3.810, 58.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=25 */
%   | | else if ( location(G, D), interaction(G, A) )
%   | | | then return 0.036456173978844604;  // std dev = 6.252, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
%   | | | else return 0.10130295222193712;  // std dev = 2.598, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(A, J) )
%   | | | then return -0.19411481720509222;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.06355110476829776;  // std dev = 1.756, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0.18409694810859256;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(D, D), phenotype(D, G) )
%   | | | then return 0.14547155621929375;  // std dev = 1.629, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.005258500779037716;  // std dev = 4.057, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | | else if ( interaction(A, H), interaction(E, A) )
%   | | | then return 0.03089767272661576;  // std dev = 3.783, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | | else return 0.10933158109187269;  // std dev = 5.046, 106.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=43 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then return 0.3226176851204391;  // std dev = 1.079, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, K) )
%   | | | then return -0.15779771672926582;  // std dev = 2.036, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return -0.023630309983830994;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09448277173343192;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then if ( complex(D, G) )
%   | | | then return -0.020384901874030574;  // std dev = 2.618, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return -0.1310630589602981;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.41894549326207375;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1187630736650631;  // std dev = 2.006, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( complex(A, K), enzyme(J, I) )
%   | | | then return 0.10410278655413038;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.115487197738064;  // std dev = 2.648, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.09297929769974415;  // std dev = 2.396, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return -0.022685604382581222;  // std dev = 6.631, 206.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=62 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.687', 'seconds']
Refined model CLL: -0.399322


******************************************
Best model found
******************************************
Results 

CLL : -0.37957 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.307 

Total Inference Time : 5.475547552108765 

Total revision time: 20.08289702796936
Best scored revision CLL: -0.378694


Results 

CLL : -0.37957 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 20.111066898345946 

Total Inference Time : 5.475547552108765 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.186
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2053187464202672;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16950899778999778;  // std dev = 7.803, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14688872333661224;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11072888259251165;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11654887665345959;  // std dev = 7.710, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0695394170400087;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06194453108703473;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02680907102694369;  // std dev = 7.957, 295.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.018174504594846114;  // std dev = 7.975, 298.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04642987580293388;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.391', 'seconds']
Parameter learned model CLL:-0.366264 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.75, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.803, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.71, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.957, 203, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.975, 206, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
{'': [nan, 0.22664293342826716], 'false': [nan, 0.22664293342826716]}
{'': [0.0, 0.22383217993079482], 'false': [nan, 0.22383217993079746], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22463648834019076], 'false': [nan, 0.22463648834019076], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.22061224489795941], 'false': [nan, 0.22061224489795908], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [nan, 0.2286390532544381], 'false': [nan, 0.2286390532544387]}
{'': [0.0, 0.22061224489795928], 'false': [nan, 0.22061224489795928], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22262479338843036], 'false': [nan, 0.22262479338843036], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21460499856363185], 'false': [nan, 0.2146049985636315], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21341381018872949], 'false': [nan, 0.21341381018873104]}
{'': [0.0, 0.22463648834019098], 'false': [nan, 0.22463648834019098], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.482
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), interaction(F, A) )
%   | then if ( interaction(F, D) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(D, D) )
%   | | then return 0.13592671287729013;  // std dev = 0.448, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( phenotype(A, I) )
%   | then return 0.10008441897048011;  // std dev = 0.428, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.10259337954395681;  // std dev = 0.430, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else return 0.20241123018147883;  // std dev = 0.475, 122.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), location(A, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.15168219198787303;  // std dev = 2.455, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.3421425011268635;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(J, A), location(J, E) )
%   | | | then return 0.054113594730847585;  // std dev = 3.025, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return 0.1352660753853523;  // std dev = 3.015, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( interaction(M, A) )
%   | | | then return 0.24519572104271398;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.5951957210427142;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.24292108634785878;  // std dev = 3.071, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.15310968404132794;  // std dev = 4.280, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, D), interaction(F, E) )
%   | | then if ( location(F, G), location(E, G) )
%   | | | then return 0.09183125527349223;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return -0.02032818660412515;  // std dev = 1.774, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(E, D) )
%   | | | then return 0.08527781090094609;  // std dev = 1.687, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.15151392222210505;  // std dev = 3.121, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(H, I) )
%   | | | then return 0.02373508739266247;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.1393127241354124;  // std dev = 1.411, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.29644412136359705;  // std dev = 1.990, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.18977133550448147;  // std dev = 5.565, 130.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=50 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1774020476206712;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(D, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.27472296588215994;  // std dev = 1.034, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06266556210588604;  // std dev = 1.905, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( location(D, G), complex(A, H) )
%   | | | then return 0.1809842624240009;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.537116597099957;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), phenotype(A, L) )
%   | | | then return -0.010401539531979052;  // std dev = 2.611, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.10211165817353074;  // std dev = 3.638, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.2871770325456088;  // std dev = 1.833, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.0968584265875216;  // std dev = 5.427, 136.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return 0.03738091837479002;  // std dev = 0.457, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( complex(A, F), interaction(D, G) )
%   | | then if ( enzyme(G, H), phenotype(G, E) )
%   | | | then return 0.07138918681694188;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19446540465359963;  // std dev = 1.642, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( phenotype(D, E), interaction(D, I) )
%   | | | then return -0.1190354443124821;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07465249240969031;  // std dev = 2.856, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(J, K), complex(K, L) )
%   | | | then return 0.04321573242789739;  // std dev = 2.398, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.17812375819296436;  // std dev = 4.064, 68.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=28 */
%   | | else if ( interaction(M, A), interaction(A, N) )
%   | | | then return 0.7506352991798483;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17669477879693338;  // std dev = 3.457, 48.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16821990171903828;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( complex(A, F), complex(E, G) )
%   | | then if ( interaction(H, E), interaction(H, H) )
%   | | | then return -0.05313855698042994;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.09346775513332951;  // std dev = 2.524, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( interaction(A, I), complex(E, J) )
%   | | | then return -0.21201055345503592;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.010804989709172047;  // std dev = 3.524, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( complex(K, M) )
%   | | | then return 0.058498933190194384;  // std dev = 3.414, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return -0.06561915082384398;  // std dev = 2.286, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.1421890273213414;  // std dev = 2.826, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.07514777399473159;  // std dev = 4.017, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13396650368042717;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( interaction(A, H), phenotype(G, I) )
%   | | | then return 0.36976415735300144;  // std dev = 1.180, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.10411513914686134;  // std dev = 2.071, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.08870458416691544;  // std dev = 1.561, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.1191332566971169;  // std dev = 2.404, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( interaction(L, A), interaction(L, L) )
%   | | then if ( complex(A, M), phenotype(L, N) )
%   | | | then return 0.4108506425207182;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05312408449239564;  // std dev = 2.508, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( enzyme(A, P) )
%   | | | then return -0.02618625090873003;  // std dev = 2.964, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return 0.015496591423088008;  // std dev = 5.598, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11837681958500647;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(D, F), location(A, G) )
%   | | then if ( interaction(H, A), location(H, G) )
%   | | | then return 0.12651134351154608;  // std dev = 3.049, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return -0.047157704496026576;  // std dev = 2.579, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.06522478985022404;  // std dev = 1.954, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.4710392765486944;  // std dev = 1.259, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( enzyme(J, L), enzyme(A, L) )
%   | | | then return -0.13886609170615286;  // std dev = 1.226, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.008828536805243769;  // std dev = 4.024, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.29657773586694736;  // std dev = 1.850, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.024754943862193096;  // std dev = 3.840, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( enzyme(C, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return -0.021107015185509056;  // std dev = 0.448, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( enzyme(A, D), interaction(C, C) )
%   | | | then return -0.014446114750850256;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.39162656871519974;  // std dev = 1.207, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then return -0.1917255572294122;  // std dev = 0.388, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else return -0.036509820397049704;  // std dev = 0.462, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
%   else if ( interaction(I, A), interaction(I, I) )
%   | then return -0.057513114719007816;  // std dev = 0.436, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.22397311328584268;  // std dev = 1.218, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.0331502290836066;  // std dev = 3.546, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.119587934608426;  // std dev = 2.879, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1134384083371824;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(E, F), complex(A, F) )
%   | | then if ( phenotype(D, G), enzyme(D, H) )
%   | | | then return -0.13839918739228624;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.005425976856300131;  // std dev = 2.479, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( phenotype(A, I), phenotype(E, I) )
%   | | | then return 0.5102269340346505;  // std dev = 1.240, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.09385148163715099;  // std dev = 4.770, 94.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=38 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( interaction(L, A), location(L, K) )
%   | | | then return 0.6403649804566847;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.013922242850268303;  // std dev = 2.413, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.25908478239515753;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.04164624260541772;  // std dev = 3.891, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.998', 'seconds']
Refined model CLL: -0.427984


******************************************
Best model found
******************************************
Results 

CLL : -0.366368 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.482 

Total Inference Time : 2.651398181915283 

Total revision time: 13.22794176864624
Best scored revision CLL: -0.366264


Results 

CLL : -0.366368 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.256111639022826 

Total Inference Time : 2.651398181915283 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.129
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1901952671458448;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1603804721032164;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16381927636106494;  // std dev = 7.454, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12198503538375645;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10598985606455932;  // std dev = 7.511, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05841386315248644;  // std dev = 7.669, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04025697013530149;  // std dev = 7.707, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0379316982073392;  // std dev = 7.675, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07358476548871128;  // std dev = 7.429, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.009382953573126178;  // std dev = 7.707, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.824', 'seconds']
Parameter learned model CLL:-0.363895 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.608, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.454, 157, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.542, 168, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.511, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.669, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.707, 192, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.675, 187, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.429, 154, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.707, 192, 86]}]
{'': [0.0, 0.22179156542090964], 'false': [nan, 0.22179156542090964], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22006968439618851], 'false': [nan, 0.2200696843961891], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22865755558942513], 'false': [nan, 0.22865755558942513], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2239444478888945], 'false': [nan, 0.2239444478888951], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2256639999999994], 'false': [nan, 0.2256639999999996], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21620891003460185], 'false': [nan, 0.21620891003460185], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21365353760157446], 'false': [nan, 0.21365353760157446], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21578177622133693], 'false': [nan, 0.21578177622133665], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-5.782411586589357e-19, 0.2299305555555545], 'false': [nan, 0.22993055555555394], 'true': [nan, -5.782411586589357e-19], 'true,false': [nan, -5.782411586589357e-19], 'true,false,false': [nan, -5.782411586589357e-19]}
{'': [nan, 0.21365353760157324], 'false': [nan, 0.21365353760157324]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.685
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( complex(H, D), interaction(H, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( complex(J, I) )
%   | | | then return 0.21529179224236947;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.024815601766178884;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.13756069980539468;  // std dev = 3.700, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return 0.20241123018147872;  // std dev = 5.248, 122.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( complex(E, G), phenotype(A, F) )
%   | | | then return 0.037904690749614764;  // std dev = 2.480, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.15185630981030682;  // std dev = 4.253, 83.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=27 */
%   | | else if ( phenotype(H, D), interaction(H, H) )
%   | | | then return 0.34824160009434085;  // std dev = 2.404, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.13482750312954433;  // std dev = 2.050, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.24928680186901034;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.11829219264448129;  // std dev = 2.395, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.8370002128785948;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2701071010721608;  // std dev = 3.358, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), interaction(F, A) )
%   | | then if ( phenotype(F, E) )
%   | | | then return 0.02559175460681903;  // std dev = 1.474, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.40357791984846964;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.05724308860308247;  // std dev = 2.051, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.08676253480797044;  // std dev = 1.877, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.4404965529203511;  // std dev = 0.765, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12279213211983904;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.0812905917451297;  // std dev = 4.510, 101.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=28 */
%   | | | else return 0.14222847463188087;  // std dev = 4.948, 110.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=37 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), interaction(F, G) )
%   | | then if ( interaction(F, D), interaction(G, G) )
%   | | | then return 0.1735265781478029;  // std dev = 2.810, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.07103331474354528;  // std dev = 3.002, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.19380541606693638;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.46673840837491193;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), interaction(J, J) )
%   | | | then return 0.18356530621413322;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.018539420215966496;  // std dev = 2.805, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.05578407696840878;  // std dev = 3.313, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return 0.12254302032844257;  // std dev = 4.304, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(F, A), phenotype(A, G) )
%   | | then if ( interaction(D, D), complex(F, H) )
%   | | | then return -0.05241836653719949;  // std dev = 1.512, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.11960642276449669;  // std dev = 3.597, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | else if ( phenotype(D, I), enzyme(A, J) )
%   | | | then return 0.06012117367178493;  // std dev = 1.459, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.23388021384353064;  // std dev = 3.553, 51.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( complex(A, M) )
%   | | | then return -0.16160056792912858;  // std dev = 1.579, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.16615978610307894;  // std dev = 1.553, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( complex(A, N), location(A, P) )
%   | | | then return 0.12033781680861738;  // std dev = 1.959, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.03685716873458875;  // std dev = 4.053, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(D, F), location(A, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.019036456422287504;  // std dev = 2.803, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.1429852892531191;  // std dev = 2.535, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else if ( location(D, J), location(A, J) )
%   | | | then return 0.014453411398041072;  // std dev = 1.887, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.10962162527555333;  // std dev = 1.517, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(M, K), interaction(M, M) )
%   | | | then return 0.5566644276595494;  // std dev = 0.904, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.02680624380781648;  // std dev = 3.582, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.32285949236882777;  // std dev = 1.540, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.1332693137730812;  // std dev = 4.150, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(A, F), phenotype(D, G) )
%   | | then if ( phenotype(F, E), complex(F, H) )
%   | | | then return 0.4319072609365282;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.06495989263783707;  // std dev = 2.870, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( interaction(A, I), interaction(D, I) )
%   | | | then return -0.07948400053858723;  // std dev = 1.510, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.05747862647104496;  // std dev = 4.068, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( enzyme(J, L) )
%   | | | then return 0.02001426752009822;  // std dev = 2.196, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.060705785913220074;  // std dev = 3.254, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | else if ( complex(A, M) )
%   | | | then return -0.06785219941756579;  // std dev = 1.917, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.05857598241678168;  // std dev = 3.121, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), enzyme(F, G) )
%   | | then if ( complex(A, H), interaction(F, D) )
%   | | | then return 0.03486579942751848;  // std dev = 1.784, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.15503500392451364;  // std dev = 2.813, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.13636138095080658;  // std dev = 1.689, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.04796667308886263;  // std dev = 3.679, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(J, K), phenotype(J, L) )
%   | | | then return -0.01415250347442224;  // std dev = 2.603, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.09217967709578727;  // std dev = 3.458, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | else if ( location(A, M) )
%   | | | then return 0.21209285180236132;  // std dev = 2.617, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return -0.08076987525484487;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.17836189959684792;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12001588013777863;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, H), phenotype(H, I) )
%   | | | then return -0.08238629811036229;  // std dev = 2.712, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.10939177828980809;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then if ( interaction(L, A), complex(L, J) )
%   | | | then return -0.1271368739000766;  // std dev = 1.220, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.008993209523026994;  // std dev = 2.023, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return 0.14162169194102392;  // std dev = 2.277, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.045241267804036325;  // std dev = 5.838, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), interaction(F, C) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.10245880627182699;  // std dev = 1.413, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.13600617744642626;  // std dev = 1.485, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( complex(F, H), phenotype(C, I) )
%   | | | then return 0.40500521064340983;  // std dev = 1.455, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.14732263549181512;  // std dev = 1.654, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(J, C), interaction(K, J) )
%   | | then return -0.031030654906111867;  // std dev = 0.450, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else if ( phenotype(A, L), phenotype(C, M) )
%   | | | then return 4.488824835192481E-4;  // std dev = 1.163, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.24290450660180746;  // std dev = 1.319, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( interaction(A, N), enzyme(N, P) )
%   | then return 0.055084064169517374;  // std dev = 0.480, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | else return -0.053978594695627394;  // std dev = 0.448, 125.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.347', 'seconds']
Refined model CLL: -0.411452


******************************************
Best model found
******************************************
Results 

CLL : -0.363203 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.685 

Total Inference Time : 2.987919569015503 

Total revision time: 13.62696157836914
Best scored revision CLL: -0.363895


Results 

CLL : -0.363203 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.655131448745728 

Total Inference Time : 2.987919569015503 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.136
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1914822684328456;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16400397031900077;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17165266020647205;  // std dev = 7.447, 240.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0802011999743145;  // std dev = 7.810, 291.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09676190239709227;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07411759102994842;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08754597682526626;  // std dev = 7.507, 247.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.030883209783710727;  // std dev = 7.731, 278.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.036264558096686085;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05779766835641639;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.362', 'seconds']
Parameter learned model CLL:-0.372431 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.63, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.447, 153, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.81, 204, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.637, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.665, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.507, 160, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.731, 191, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.665, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.499, 159, 87]}]
{'': [nan, 0.2222222222222231], 'false': [nan, 0.2222222222222231]}
{'': [0.0, 0.22137084532088036], 'false': [nan, 0.2213708453208797], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23109375000000115], 'false': [nan, 0.23109375000000115], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2095865660537778], 'false': [nan, 0.2095865660537775]}
{'': [0.0, 0.22094524793388415], 'false': [nan, 0.22094524793388437], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21924426375584716], 'false': [nan, 0.21924426375584716], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22816305790948863], 'false': [nan, 0.22816305790948863]}
{'': [nan, 0.21501216293152525], 'false': [nan, 0.2150121629315268]}
{'': [0.0, 0.219244263755847], 'false': [nan, 0.2192442637558475], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22858417608566278], 'false': [nan, 0.22858417608566278], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 16.25
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(C, C), interaction(A, E) )
%   | then if ( complex(E, D) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, C), phenotype(G, H) )
%   | | then if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.324815601766179;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.17522210583121964;  // std dev = 4.214, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | | else if ( enzyme(C, K) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( phenotype(A, L), complex(A, M) )
%   | then return 0.24276431971489695;  // std dev = 0.487, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return 0.11414893509951204;  // std dev = 0.436, 125.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.17404366681621206;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( enzyme(F, G), interaction(H, F) )
%   | | | then return 0.22522638517001076;  // std dev = 1.305, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.13764224600194988;  // std dev = 2.982, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( enzyme(E, I), phenotype(A, J) )
%   | | | then return 0.15928966651712126;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0465711266820763;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( enzyme(L, M), location(A, N) )
%   | | | then return 0.19776121476117292;  // std dev = 5.146, 114.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=42 */
%   | | | else return 0.12284803984712825;  // std dev = 3.777, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | else if ( location(A, P) )
%   | | | then return 0.40262702033240905;  // std dev = 1.315, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.17701108831232867;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15958095567715838;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( phenotype(A, G), phenotype(E, G) )
%   | | | then return 0.06621535596693173;  // std dev = 2.240, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return -0.050794899934394705;  // std dev = 1.771, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( enzyme(D, H), enzyme(A, I) )
%   | | | then return 0.25371718341255184;  // std dev = 1.469, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.06807467952678428;  // std dev = 2.701, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(K, K), complex(K, L) )
%   | | | then return 0.13091981297969518;  // std dev = 2.024, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.3073971630691563;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.06907240897127052;  // std dev = 2.283, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.14671182188763496;  // std dev = 5.201, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), interaction(C, C) )
%   | then return -8.883131738246701E-4;  // std dev = 0.430, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | else if ( location(C, F), location(A, F) )
%   | | then return 0.07220423364874988;  // std dev = 0.454, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   | | else return 0.1815442732295758;  // std dev = 0.486, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( enzyme(H, I) )
%   | | then return 0.11473591766305763;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(H, G) )
%   | | | then return 0.5256366803118887;  // std dev = 0.879, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2499252674589931;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then return 0.30174636826227896;  // std dev = 0.994, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return 0.20516541716244066;  // std dev = 1.322, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.09347868966174237;  // std dev = 3.450, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14920206704406988;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( enzyme(E, G) )
%   | | | then return 0.25980782247470213;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13950934861231104;  // std dev = 1.932, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(E, E), phenotype(A, H) )
%   | | | then return -0.08779916244910013;  // std dev = 1.573, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.07285929273964777;  // std dev = 3.683, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), complex(K, L) )
%   | | | then return 0.17111289676185765;  // std dev = 2.564, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.5587649064172053;  // std dev = 0.871, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.15808412656387558;  // std dev = 3.135, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.06622010865515224;  // std dev = 4.169, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.17051695944243941;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, A), complex(A, D) )
%   | then if ( complex(E, D), enzyme(E, F) )
%   | | then return -0.0815179806631822;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.09857808275720388;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.014028235469546601;  // std dev = 2.761, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.13160320512494555;  // std dev = 3.618, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.0590676377111615;  // std dev = 5.932, 162.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=51 */
%   | | | else return -0.11551380815401217;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( interaction(C, E), interaction(E, F) )
%   | then if ( complex(C, G), interaction(F, E) )
%   | | then return -0.008944098873598153;  // std dev = 0.445, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( phenotype(C, H) )
%   | | | then return 0.20364304585467777;  // std dev = 1.418, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07838982753069369;  // std dev = 1.924, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return -0.027782436106649697;  // std dev = 0.449, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then if ( complex(A, K), interaction(J, J) )
%   | | then return -0.014288910182675113;  // std dev = 0.434, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( phenotype(J, L), enzyme(J, M) )
%   | | | then return 0.09212965895115888;  // std dev = 2.404, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.16701892071844807;  // std dev = 3.979, 65.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=28 */
%   | else if ( phenotype(A, N) )
%   | | then return 0.047915904962050594;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.021894922130185162;  // std dev = 1.136, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(C, D), interaction(A, C) )
%   | then return 0.03197811051165222;  // std dev = 0.457, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( phenotype(A, E), enzyme(A, F) )
%   | | then return 0.41637433476978447;  // std dev = 0.457, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(G, C), phenotype(G, H) )
%   | | | then return 0.0897289397283514;  // std dev = 2.269, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.35537450347893407;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, I), interaction(I, J) )
%   | then return -0.01882092040533498;  // std dev = 0.467, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else if ( enzyme(A, K) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.02769852172789593;  // std dev = 2.289, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.3605672825953469;  // std dev = 1.769, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.0610403460250099;  // std dev = 4.219, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
%   | | | else return -0.027219332702060103;  // std dev = 1.749, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10223269231636367;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( location(D, E), enzyme(D, F) )
%   | | then return 0.3892847715991794;  // std dev = 0.820, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, G), complex(D, H) )
%   | | | then return 0.1956873215557049;  // std dev = 2.337, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.01952457869712998;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( phenotype(J, K), interaction(L, J) )
%   | | | then return -0.08867243344196082;  // std dev = 3.134, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.04211462174243303;  // std dev = 2.027, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.010614785983987428;  // std dev = 3.788, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0.11441417048019473;  // std dev = 3.621, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09370597167307698;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( phenotype(E, F) )
%   | | | then return -0.00782884759909543;  // std dev = 2.647, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.2540420677166115;  // std dev = 1.493, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, G), phenotype(A, H) )
%   | | | then return -0.07256549008028995;  // std dev = 3.110, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return -0.01139980663376869;  // std dev = 6.134, 173.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=54 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return 0.1931137241521605;  // std dev = 0.940, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3275811088069103;  // std dev = 0.758, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.726', 'seconds']
Refined model CLL: -0.418201


******************************************
Best model found
******************************************
Results 

CLL : -0.371836 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.25 

Total Inference Time : 4.284817457199097 

Total revision time: 23.51247247314453
Best scored revision CLL: -0.372431


Results 

CLL : -0.371836 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 23.606308780670165 

Total Inference Time : 4.284817457199097 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.21
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18013035924811974;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18029210105741267;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17588038859304592;  // std dev = 8.111, 283.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11514576611735668;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10823951063009249;  // std dev = 8.228, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07224351130180647;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07140098086246652;  // std dev = 8.243, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.039378091525409074;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024075422678667916;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.021021595096969832;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.108', 'seconds']
Parameter learned model CLL:-0.370482 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.397, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.25, 197, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.111, 179, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.228, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.243, 196, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.353, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.397, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.385, 217, 104]}]
{'': [nan, 0.21830938665184232], 'false': [nan, 0.21830938665184232]}
{'': [nan, 0.2261343693778218], 'false': [nan, 0.22613436937782375]}
{'': [0.0, 0.23244140893256326], 'false': [nan, 0.23244140893256326], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2229344432882419], 'false': [nan, 0.2229344432882415], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22719697310931888], 'false': [nan, 0.2271969731093202], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22222222222222357], 'false': [nan, 0.22222222222222357], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22648888888888982], 'false': [nan, 0.22648888888888982]}
{'': [0.0, 0.22079794904662747], 'false': [nan, 0.22079794904662653], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21830938665184096], 'false': [nan, 0.21830938665184135], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2190196135518878], 'false': [nan, 0.2190196135518878]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 17.267
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), phenotype(E, D) )
%   | then return 0.16523554927274145;  // std dev = 0.461, 254.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=78 */
%   | else if ( location(A, F), location(C, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(H, A), complex(A, I) )
%   | then if ( complex(H, J) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, K), interaction(L, A) )
%   | | then if ( interaction(A, M) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.12481560176617898;  // std dev = 0.442, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( enzyme(A, E), phenotype(C, F) )
%   | then return 0.10310147216745587;  // std dev = 0.442, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | else if ( complex(C, G), enzyme(C, H) )
%   | | then if ( phenotype(A, I), phenotype(C, I) )
%   | | | then return 0.29136673036711264;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.07695128000680862;  // std dev = 2.748, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( complex(A, J), complex(C, J) )
%   | | | then return 0.11515690668574145;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.25989879566844265;  // std dev = 4.774, 92.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=40 */
%   else if ( location(A, K) )
%   | then return 0.5565515268768151;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( enzyme(A, L) )
%   | | then return 0.5034879424883248;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.21510076284564228;  // std dev = 1.343, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.052786247951007406;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( complex(E, F), interaction(G, E) )
%   | | then if ( interaction(E, G), phenotype(G, H) )
%   | | | then return 0.14065589641559387;  // std dev = 6.792, 208.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=69 */
%   | | | else return 0.37003521405719575;  // std dev = 1.991, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.2086612777025987;  // std dev = 1.703, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.02263238060764651;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, J) )
%   | | | then return -0.046264959922403495;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.13186750586464158;  // std dev = 1.764, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.04222293103750077;  // std dev = 1.485, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.029284347908891322;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.19516741559043893;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F), complex(D, G) )
%   | | then if ( interaction(A, H), complex(H, G) )
%   | | | then return 0.08301953272957703;  // std dev = 2.233, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.2774067263132753;  // std dev = 2.867, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( enzyme(D, I), interaction(J, D) )
%   | | | then return 0.15860199752833506;  // std dev = 3.346, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.0779799891163955;  // std dev = 5.633, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
%   | else if ( complex(A, K), enzyme(A, L) )
%   | | then if ( enzyme(M, L), interaction(M, N) )
%   | | | then return -0.07227089353163364;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.217170939755701;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(P, A) )
%   | | | then return 0.02941116418726439;  // std dev = 2.788, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.18039810127106679;  // std dev = 1.494, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.17180095035767584;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), enzyme(D, G) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.21411366506796858;  // std dev = 2.701, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.5827016139971161;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( phenotype(D, E), location(D, H) )
%   | | | then return 0.033094510257368065;  // std dev = 2.825, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.2003490685223159;  // std dev = 1.856, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( phenotype(J, K), enzyme(J, L) )
%   | | | then return 0.004237866556302617;  // std dev = 3.881, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else return 0.08758583826168168;  // std dev = 5.235, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.11412114653649263;  // std dev = 1.726, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.3256046802837462;  // std dev = 1.108, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, D), complex(A, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.08652307964330676;  // std dev = 2.602, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.2615935407025466;  // std dev = 1.805, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(F, D), phenotype(F, G) )
%   | | | then return 0.051146506969543884;  // std dev = 7.022, 228.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=72 */
%   | | | else return 0.1642566372594376;  // std dev = 2.342, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.05473102457185023;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10224815198201233;  // std dev = 1.558, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else return -0.21540540164849983;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), enzyme(E, F) )
%   | then return 0.04286835765061845;  // std dev = 0.470, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
%   | else if ( complex(C, G) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.20768311922583027;  // std dev = 1.813, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.07886073000808698;  // std dev = 3.936, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | else if ( interaction(H, C) )
%   | | | then return 0.24068199535400203;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.31243915424798113;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( complex(A, I), interaction(J, A) )
%   | then return -0.09608852062721172;  // std dev = 0.465, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then return -0.06579747356472897;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.00971012890602129;  // std dev = 2.066, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.212861279220169;  // std dev = 1.405, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1545084301355818;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( location(A, D) )
%   | then if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( complex(F, G), complex(A, G) )
%   | | | then return 0.09438682973600623;  // std dev = 2.603, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return -2.728132785126794E-4;  // std dev = 5.822, 163.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=48 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.012061654133107341;  // std dev = 2.775, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.13706232352965303;  // std dev = 3.931, 64.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return -0.02574084712210456;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.03819037749970263;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.11469705467952224;  // std dev = 1.282, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.20625452370012395;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15080461255764196;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), interaction(F, G) )
%   | | then if ( interaction(A, F), interaction(A, G) )
%   | | | then return 0.03274343347271334;  // std dev = 3.871, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | else return 0.17865799106647767;  // std dev = 2.940, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.20482167947384886;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.03853069902705031;  // std dev = 1.680, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( enzyme(A, I) )
%   | | then if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.06195707470867936;  // std dev = 1.820, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.05918540699275886;  // std dev = 3.330, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.1316765610898373;  // std dev = 1.285, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.01943694026049083;  // std dev = 5.081, 121.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=38 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( enzyme(D, E), interaction(F, A) )
%   | then return -0.08127602204924143;  // std dev = 0.448, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | else return 0.022017870614751654;  // std dev = 0.469, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( complex(A, I), interaction(A, J) )
%   | | then return -0.13629685895177335;  // std dev = 0.421, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( location(K, H), interaction(K, A) )
%   | | | then return -0.003230473826463786;  // std dev = 3.161, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.09979633500252659;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( phenotype(A, L), location(A, M) )
%   | | then if ( phenotype(N, L), interaction(N, N) )
%   | | | then return -0.040672771716286596;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.06506913771111754;  // std dev = 2.785, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.10609312288615666;  // std dev = 3.587, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | | else return 0.02931222502153619;  // std dev = 2.247, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.961', 'seconds']
Refined model CLL: -0.386179


******************************************
Best model found
******************************************
Results 

CLL : -0.371391 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 17.267 

Total Inference Time : 5.647046327590942 

Total revision time: 26.351954462051392
Best scored revision CLL: -0.370482


Results 

CLL : -0.371391 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 26.445790769577027 

Total Inference Time : 5.647046327590942 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.207
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20401359675364783;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16479001520073117;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15557250692392427;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12627323187870335;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07020310120619422;  // std dev = 7.963, 296.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08087808536878328;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.060467302264278114;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07663214404807117;  // std dev = 7.685, 257.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.036238379649279964;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03602292650149738;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.323', 'seconds']
Parameter learned model CLL:-0.378014 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.742, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.765, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.963, 204, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.853, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.685, 165, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
{'': [0.0, 0.2262422974730067], 'false': [nan, 0.2262422974730067], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22222222222222104], 'false': [nan, 0.2222222222222244]}
{'': [0.0, 0.2270431588613413], 'false': [nan, 0.2270431588613413], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22584129388825785], 'false': [nan, 0.225841293888257]}
{'': [0.0, 0.2142074506939365], 'false': [nan, 0.214207450693938], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22262479338842908], 'false': [nan, 0.22262479338842908], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22101463239166994], 'false': [nan, 0.22101463239166994]}
{'': [nan, 0.22982936910475518], 'false': [nan, 0.22982936910475507]}
{'': [0.0, 0.22222222222222188], 'false': [nan, 0.2222222222222216], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22463648834019243], 'false': [nan, 0.22463648834019243], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.838
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), location(A, E) )
%   | then if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( interaction(A, H), complex(G, I) )
%   | | | then return 0.08542166237223962;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.3318331456258281;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.1914822684328457;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.07353355048412774;  // std dev = 3.314, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then if ( interaction(N, A), complex(L, P) )
%   | | | then return 0.16849376268571928;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.3581489350995123;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(A, Q), complex(A, R) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.15814893509951156;  // std dev = 4.806, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then return 0.23427488717959044;  // std dev = 0.490, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return 0.0536075803783495;  // std dev = 0.421, 66.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( interaction(H, A), interaction(H, H) )
%   | | then return 0.503042540387462;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, I), interaction(I, F) )
%   | | | then return 0.3350524725032527;  // std dev = 1.217, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.14320730301525286;  // std dev = 2.748, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | else if ( interaction(J, A), enzyme(A, K) )
%   | | then if ( phenotype(J, L), interaction(M, J) )
%   | | | then return 0.2482013070077346;  // std dev = 1.697, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.09222065668873872;  // std dev = 3.324, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | else if ( location(A, N) )
%   | | | then return 0.15302294090976198;  // std dev = 4.758, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | | | else return 0.5044533214496457;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15529646424564628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A) )
%   | | then if ( enzyme(A, F), complex(E, G) )
%   | | | then return 0.41747607071382953;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10865404144764729;  // std dev = 2.371, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.3294000122051187;  // std dev = 1.573, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.6386545361822112;  // std dev = 0.919, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.45785137075861754;  // std dev = 1.181, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.15833277407380777;  // std dev = 4.274, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | else if ( interaction(K, A), interaction(A, K) )
%   | | | then return 0.012381163479038304;  // std dev = 1.990, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.11008707908636117;  // std dev = 4.880, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(E, C), location(C, F) )
%   | then if ( interaction(E, D), phenotype(A, G) )
%   | | then return 0.0013123516287055158;  // std dev = 0.438, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( phenotype(E, H) )
%   | | | then return 0.32040432882238945;  // std dev = 2.047, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.12106820615106481;  // std dev = 2.393, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( location(C, I), interaction(D, J) )
%   | | then return 0.2951783091826939;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.7895669570765431;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, K), interaction(L, A) )
%   | then if ( phenotype(A, M), complex(L, N) )
%   | | then if ( interaction(L, P), interaction(P, L) )
%   | | | then return 0.4787121618904397;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2452234537759055;  // std dev = 1.490, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.10199767712483429;  // std dev = 0.468, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | else return 0.10150830767544888;  // std dev = 0.466, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.22120792348856205;  // std dev = 0.047, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.20503420487074472;  // std dev = 1.294, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.47703860172264495;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.083528098954803;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1217766170853688;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), enzyme(I, J) )
%   | | | then return 0.07298362441839389;  // std dev = 4.216, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | | else return 0.19683893803291316;  // std dev = 1.972, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.09210457801987071;  // std dev = 3.081, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.047176405994801766;  // std dev = 4.882, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16093133836281265;  // std dev = 0.077, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(F, F) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.11084495142118785;  // std dev = 1.539, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.05975581005043483;  // std dev = 2.339, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.0571903825002159;  // std dev = 1.474, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.09161847714767812;  // std dev = 3.964, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | else if ( enzyme(A, G) )
%   | | then if ( interaction(A, H), location(A, I) )
%   | | | then return 0.14124831642661173;  // std dev = 2.554, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return -0.02031913112006373;  // std dev = 2.732, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.24977682095914797;  // std dev = 3.025, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | | else return 0.05694970479173712;  // std dev = 3.157, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( phenotype(E, C), interaction(E, F) )
%   | then return -0.03040457887821709;  // std dev = 0.446, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | else return 0.24325412954998327;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( complex(A, G) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( phenotype(H, J), interaction(K, A) )
%   | | | then return 0.009067838834799202;  // std dev = 1.438, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.27983470960280027;  // std dev = 1.288, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.011702490699709175;  // std dev = 0.455, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | else if ( phenotype(A, L), interaction(A, M) )
%   | | then if ( interaction(N, A) )
%   | | | then return 0.15707504273782102;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.33969919351340094;  // std dev = 1.547, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(P, A), enzyme(P, Q) )
%   | | | then return -0.09644687381177647;  // std dev = 1.503, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.11281906762021521;  // std dev = 4.441, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( interaction(C, C), complex(A, D) )
%   | then return -0.13727104596676962;  // std dev = 0.435, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.06282323775057114;  // std dev = 0.441, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0.08312915943881483;  // std dev = 0.491, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( complex(A, F), phenotype(A, G) )
%   | then if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(I, J), location(H, K) )
%   | | | then return 0.17694817438523552;  // std dev = 2.501, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.03350751964365728;  // std dev = 1.636, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.37548566103684106;  // std dev = 1.138, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, L), enzyme(L, M) )
%   | | then return -0.04270304861386379;  // std dev = 0.441, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.12330003785755207;  // std dev = 2.514, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.01154096442732672;  // std dev = 5.352, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( location(F, E), complex(F, H) )
%   | | | then return -0.086434528273907;  // std dev = 2.502, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.048870910569614456;  // std dev = 2.268, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.09704874757457678;  // std dev = 1.263, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.04726684208842952;  // std dev = 3.431, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return 0.09123906538487615;  // std dev = 1.473, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.07203138133548748;  // std dev = 2.219, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.02587855770029576;  // std dev = 2.076, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.0790091690547954;  // std dev = 4.906, 101.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=39 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12549999559756372;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), interaction(A, F) )
%   | | then if ( interaction(E, E), phenotype(E, G) )
%   | | | then return 0.2199436240209245;  // std dev = 1.571, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.05722446251197664;  // std dev = 4.052, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   | | else if ( location(H, D), interaction(H, H) )
%   | | | then return 0.04034321440374714;  // std dev = 5.916, 155.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=54 */
%   | | | else return 0.17392537041587314;  // std dev = 1.861, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return -0.14261933391881082;  // std dev = 0.413, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.394', 'seconds']
Refined model CLL: -0.406413


******************************************
Best model found
******************************************
Results 

CLL : -0.378131 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.838 

Total Inference Time : 3.04764461517334 

Total revision time: 13.911639852523804
Best scored revision CLL: -0.378014


Results 

CLL : -0.378131 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.005476160049438 

Total Inference Time : 3.04764461517334 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.196
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18267723698630525;  // std dev = 7.622, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1784255750895778;  // std dev = 7.511, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11217074237156514;  // std dev = 7.737, 283.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10302590768103613;  // std dev = 7.688, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08773243464883529;  // std dev = 7.675, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10511674667411844;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07971039783545363;  // std dev = 7.519, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.066726102243009;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05451044529331428;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04171624379488034;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.431', 'seconds']
Parameter learned model CLL:-0.378833 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.622, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.511, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.737, 197, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.688, 189, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.675, 187, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.487, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.519, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.503, 163, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.495, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.503, 163, 86]}]
{'': [0.0, 0.21920968316126796], 'false': [nan, 0.21920968316126796], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22566400000000023], 'false': [nan, 0.2256640000000003], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2115396621258844], 'false': [nan, 0.2115396621258844]}
{'': [0.0, 0.21492892561983556], 'false': [nan, 0.21492892561983606], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21578177622133513], 'false': [nan, 0.21578177622133474], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22695012211313026], 'false': [nan, 0.22695012211313026], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22523452008698275], 'false': [nan, 0.22523452008698275], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22609312753020114], 'false': [nan, 0.22609312753020114]}
{'': [nan, 0.22652185223725269], 'false': [nan, 0.22652185223725305]}
{'': [nan, 0.2260931275302016], 'false': [nan, 0.2260931275302016]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.6
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), enzyme(D, G) )
%   | | then if ( phenotype(D, H) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.18467954734441033;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.13087620782678508;  // std dev = 3.303, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | else if ( interaction(K, A), enzyme(A, L) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.32873717039363;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.26439893509951234;  // std dev = 2.778, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.17140194714770512;  // std dev = 4.226, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), complex(A, H) )
%   | | | then return 0.11392365611558032;  // std dev = 1.687, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.19592870953515484;  // std dev = 3.058, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.8090157773647637;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.28516258285783685;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( phenotype(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.16520547386185266;  // std dev = 2.825, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.2406242607639758;  // std dev = 3.613, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.19006392504132127;  // std dev = 2.259, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.0950913795978451;  // std dev = 3.541, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, A), complex(A, C) )
%   then return -0.0028572705613797785;  // std dev = 0.383, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), interaction(E, F) )
%   | | then if ( interaction(A, E), complex(F, G) )
%   | | | then return 0.298416701521254;  // std dev = 2.114, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.13212949475020308;  // std dev = 5.101, 116.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=39 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.01979079616474817;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.050268573576588274;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(K, A), interaction(I, K) )
%   | | | then return -0.02587172173154368;  // std dev = 1.518, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.08276143633880445;  // std dev = 2.838, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.06965221790975266;  // std dev = 2.179, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.18879135848104628;  // std dev = 2.505, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11910584022868753;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(A, F), enzyme(D, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.10608893746012858;  // std dev = 1.141, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.0018672672417882757;  // std dev = 1.226, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(I, D), interaction(I, A) )
%   | | | then return 0.33295853077892196;  // std dev = 2.056, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.14794146981149148;  // std dev = 2.352, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), phenotype(L, M) )
%   | | | then return 0.04281686801852239;  // std dev = 4.199, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   | | | else return 0.16079120755423457;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else if ( interaction(N, A), phenotype(A, P) )
%   | | | then return 0.4028734528630236;  // std dev = 1.604, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.08547625187356375;  // std dev = 3.439, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then return -0.19872857336421368;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.14608442224659118;  // std dev = 1.546, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.018274716124840898;  // std dev = 3.531, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( interaction(J, H), enzyme(H, K) )
%   | | | then return 0.011994934574590796;  // std dev = 2.984, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return 0.10465879589907806;  // std dev = 5.239, 115.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=42 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.2020810457764697;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.43673345294726856;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(D, A), enzyme(E, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.07281556393890369;  // std dev = 1.999, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.0828247103563061;  // std dev = 1.642, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(E, D), interaction(A, E) )
%   | | | then return 0.11215526167819327;  // std dev = 3.331, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.3211591340559849;  // std dev = 2.884, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.019892280336192596;  // std dev = 1.163, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.30469084560668136;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.14049414766976462;  // std dev = 2.400, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.038758894571683356;  // std dev = 4.288, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09865374721678558;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D) )
%   | | then if ( interaction(D, F), complex(F, E) )
%   | | | then return 0.01641984183238577;  // std dev = 3.587, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.18605026101727257;  // std dev = 2.767, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else return 0.48736213016302765;  // std dev = 0.929, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return 0.3716772669384309;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, G), interaction(H, A) )
%   | | | then return -0.08517901599994096;  // std dev = 2.846, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.013223200573638193;  // std dev = 5.118, 120.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=37 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( phenotype(A, E), phenotype(C, F) )
%   | then if ( interaction(G, C), complex(G, H) )
%   | | then if ( phenotype(G, E), phenotype(A, F) )
%   | | | then return 0.09208484154325788;  // std dev = 1.033, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4121831265986263;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(C, I) )
%   | | | then return -0.04218157856108975;  // std dev = 1.455, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.07069113882998244;  // std dev = 1.587, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return -0.0765340711243076;  // std dev = 0.448, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then return 0.029809711578546734;  // std dev = 0.464, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | else if ( interaction(A, L), complex(A, M) )
%   | | then return -0.03713812858415395;  // std dev = 0.435, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.3425153964328023;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08820420163522805;  // std dev = 4.305, 78.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=30 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(A, E), interaction(E, A) )
%   | then return 0.3546152529906201;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.06558623854174336;  // std dev = 0.456, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   else if ( phenotype(A, F), interaction(G, A) )
%   | then if ( complex(G, H), interaction(I, G) )
%   | | then if ( enzyme(G, J), phenotype(I, F) )
%   | | | then return 0.05291993138695998;  // std dev = 1.441, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2203554481493593;  // std dev = 1.877, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(K, G), interaction(K, K) )
%   | | | then return -0.14094331046620578;  // std dev = 1.539, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.08525044749693551;  // std dev = 3.066, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | else if ( complex(A, L), interaction(M, A) )
%   | | then return -0.031278798073573984;  // std dev = 0.452, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.15031570732144497;  // std dev = 1.981, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.009284713547445351;  // std dev = 3.919, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return -0.0778160803249224;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( phenotype(F, G), complex(F, H) )
%   | | | then return 0.00587026075766119;  // std dev = 1.612, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.08660137762975353;  // std dev = 2.322, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.08162059786755184;  // std dev = 1.120, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.28945171437279854;  // std dev = 1.290, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( interaction(K, A) )
%   | then if ( phenotype(K, L), phenotype(A, L) )
%   | | then return -0.07279950020403173;  // std dev = 0.448, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( complex(K, M) )
%   | | | then return -0.00874973016643637;  // std dev = 4.003, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return 0.06075398539946562;  // std dev = 3.934, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   | else return -0.08102073528772943;  // std dev = 0.432, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.734', 'seconds']
Refined model CLL: -0.407267


******************************************
Best model found
******************************************
Results 

CLL : -0.378182 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.6 

Total Inference Time : 2.937941312789917 

Total revision time: 13.417667385101318
Best scored revision CLL: -0.378833


Results 

CLL : -0.378182 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.511503692626952 

Total Inference Time : 2.937941312789917 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.148
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17918214543161554;  // std dev = 7.686, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16445334561299982;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16037359641619048;  // std dev = 7.523, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13315948701647742;  // std dev = 7.532, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11265327047940404;  // std dev = 7.515, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08065285837295327;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.033535507534125306;  // std dev = 7.756, 282.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05162223557032424;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.017335008174099446;  // std dev = 7.750, 281.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.025161067821624684;  // std dev = 7.686, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.268', 'seconds']
Parameter learned model CLL:-0.362859 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.686, 184, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.637, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.523, 162, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.532, 163, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.515, 161, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.578, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.756, 195, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.75, 194, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.686, 184, 87]}]
{'': [nan, 0.21797088819596772], 'false': [nan, 0.21797088819596772]}
{'': [0.0, 0.22094524793388395], 'false': [nan, 0.22094524793388404], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22731891421106218], 'false': [nan, 0.22731891421106218]}
{'': [0.0, 0.22689600000000076], 'false': [nan, 0.2268960000000011], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22774128511966715], 'false': [nan, 0.2277412851196679], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22434997558593642], 'false': [nan, 0.22434997558593642]}
{'': [0.0, 0.2133318243549115], 'false': [nan, 0.2133318243549115], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22222222222222177], 'false': [nan, 0.22222222222222288], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21375109231139333], 'false': [nan, 0.21375109231139353]}
{'': [nan, 0.2179708881959663], 'false': [nan, 0.2179708881959663]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 10.42
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( enzyme(A, E), interaction(A, F) )
%   | then return 0.15444523139580865;  // std dev = 0.457, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( interaction(C, C) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(C, G), phenotype(A, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.23745927992709853;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   else if ( interaction(H, A), location(H, I) )
%   | then if ( location(A, I), interaction(J, H) )
%   | | then return 0.1370604997253618;  // std dev = 0.448, 147.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=41 */
%   | | else return 0.274815601766179;  // std dev = 0.493, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | else if ( enzyme(A, K) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), phenotype(F, G) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.13308900305358862;  // std dev = 3.239, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.3115976881242895;  // std dev = 2.175, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( location(D, H) )
%   | | | then return 0.08873276534495468;  // std dev = 3.217, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return 0.3406322014585237;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.18016575086272119;  // std dev = 2.130, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.04063220145852371;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.35257612083649265;  // std dev = 1.924, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.2318382849120409;  // std dev = 4.311, 77.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return 0.07366276215017521;  // std dev = 0.455, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   else if ( interaction(E, A), enzyme(A, F) )
%   | then if ( complex(A, G) )
%   | | then if ( interaction(E, H), interaction(H, H) )
%   | | | then return 0.3605377580738862;  // std dev = 1.484, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.14832450699045582;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, I), complex(E, J) )
%   | | | then return 0.461015578154242;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1726985802929249;  // std dev = 2.504, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( complex(K, L) )
%   | | | then return 0.2075670251255783;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.32624980298400974;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.11949144951633671;  // std dev = 4.741, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | | | else return 0.20141609670993263;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(A, F), location(A, H) )
%   | | | then return 0.5133663762564888;  // std dev = 1.175, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.29124361518641784;  // std dev = 1.582, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.018702611178012286;  // std dev = 1.480, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.32365474158545116;  // std dev = 1.509, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( complex(K, M), enzyme(A, N) )
%   | | | then return 0.43376586388695154;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 2.124207662846746E-4;  // std dev = 3.024, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.09963853489755536;  // std dev = 4.373, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.18698637827214581;  // std dev = 3.975, 65.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.18917611361607398;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( complex(D, F), location(D, E) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.10699948704429232;  // std dev = 4.474, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | | else return 0.49510700033632216;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, D), enzyme(A, H) )
%   | | | then return -0.0669822856960186;  // std dev = 1.796, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.054356263339009864;  // std dev = 5.236, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(I, I) )
%   | | | then return -0.03586453855810327;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.19211104536996665;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.12954281122346747;  // std dev = 1.588, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.03396162893799609;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then if ( interaction(A, F), interaction(C, F) )
%   | | then if ( interaction(C, C), enzyme(F, G) )
%   | | | then return 0.4043921402260328;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07365708487121311;  // std dev = 1.798, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(H, C), interaction(A, I) )
%   | | | then return 0.5127816338877847;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20968875392155317;  // std dev = 1.646, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( complex(C, J), enzyme(A, K) )
%   | | then if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.13378154350044438;  // std dev = 1.721, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.049074073147563006;  // std dev = 2.577, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.012780813310434803;  // std dev = 2.548, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.14476346484648425;  // std dev = 3.306, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   else return -0.016267381734130105;  // std dev = 0.440, 119.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( complex(A, F), interaction(G, A) )
%   | | | then return 0.25182242461575133;  // std dev = 1.765, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.043782881840399156;  // std dev = 1.838, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.0981801783385118;  // std dev = 2.051, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.01805772547581796;  // std dev = 3.995, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( enzyme(A, K), phenotype(I, L) )
%   | | | then return 0.009777287374381773;  // std dev = 2.345, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.17413405327976722;  // std dev = 2.866, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.39683452962168797;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.181680018369703;  // std dev = 3.131, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, A), complex(A, D) )
%   | then if ( complex(E, D), enzyme(E, F) )
%   | | then return -0.30023207111903294;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return -0.06213303984884537;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.05945283906775984;  // std dev = 1.703, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.26556875919489914;  // std dev = 2.372, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.04579699659187073;  // std dev = 2.810, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.03374486489338399;  // std dev = 6.178, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then return -0.055484982510190586;  // std dev = 0.445, 186.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=50 */
%   else if ( phenotype(A, E) )
%   | then if ( interaction(A, F), location(F, G) )
%   | | then if ( interaction(F, F), location(A, G) )
%   | | | then return 0.0588126102790496;  // std dev = 1.149, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.06296342199506658;  // std dev = 1.735, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( phenotype(H, E), interaction(H, H) )
%   | | | then return 0.11892719697192262;  // std dev = 1.706, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.030276425395932585;  // std dev = 1.681, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( enzyme(I, K) )
%   | | | then return 0.020689241863804442;  // std dev = 1.622, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.6750915423116498;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.13753960804994328;  // std dev = 1.203, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.040696440392081035;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( location(A, E), location(C, E) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.03481389513312283;  // std dev = 1.455, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.08002511776330541;  // std dev = 1.761, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return -0.1385535231617209;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( location(A, H), enzyme(A, I) )
%   | | then return 0.45156646104500775;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.04462905157278561;  // std dev = 1.408, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.3631328863078871;  // std dev = 0.787, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(L, A), phenotype(L, M) )
%   | then if ( interaction(A, N), enzyme(A, P) )
%   | | then return 0.1093110212419683;  // std dev = 0.501, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return -0.029058103457012544;  // std dev = 0.459, 120.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=35 */
%   | else return -0.05291026274874293;  // std dev = 0.456, 95.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=27 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.499', 'seconds']
Refined model CLL: -0.401916


******************************************
Best model found
******************************************
Results 

CLL : -0.362263 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 10.42 

Total Inference Time : 3.3576738834381104 

Total revision time: 16.623452823638914
Best scored revision CLL: -0.362859


Results 

CLL : -0.362263 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.68148223686218 

Total Inference Time : 3.3576738834381104 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.267
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2013832585318561;  // std dev = 8.265, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1694873045387918;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15459172267169308;  // std dev = 8.236, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10651854012739259;  // std dev = 8.379, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09935636481929157;  // std dev = 8.306, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05203484366289559;  // std dev = 8.485, 338.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07983019799808537;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.033603882964771105;  // std dev = 8.439, 330.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024858416487271363;  // std dev = 8.451, 332.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0366359006590654;  // std dev = 8.346, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.225', 'seconds']
Parameter learned model CLL:-0.361711 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.265, 199, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.3, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.236, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.379, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.306, 205, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.485, 234, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.25, 197, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.439, 226, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.451, 228, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.346, 211, 104]}]
{'': [0.0, 0.2254245226502854], 'false': [nan, 0.2254245226502854], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22364648338674442], 'false': [nan, 0.2236464833867406], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22684310018903447], 'false': [nan, 0.22684310018903447]}
{'': [0.0, 0.21937499999999943], 'false': [nan, 0.21937499999999915], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22329049758590797], 'false': [nan, 0.22329049758590666]}
{'': [nan, 0.21301775147929103], 'false': [nan, 0.21301775147929103]}
{'': [0.0, 0.22613436937782097], 'false': [nan, 0.22613436937782097], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.21583103764921902], 'false': [nan, 0.21583103764921946], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.21512556249092854], 'false': [nan, 0.2151255624909287], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22115394305870473], 'false': [nan, 0.22115394305870473], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 10.416
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), interaction(E, E) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, G), phenotype(E, H) )
%   | | | then return 0.14386322081379807;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return 0.2914822684328457;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.21529179224236947;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.11529179224236952;  // std dev = 3.657, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | | else return 0.18614893509951144;  // std dev = 5.249, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( complex(E, F), phenotype(E, G) )
%   | | then if ( phenotype(A, G), complex(A, H) )
%   | | | then return 0.023000955250742933;  // std dev = 2.006, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.09443739586184767;  // std dev = 3.641, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | else if ( location(A, I), location(E, I) )
%   | | | then return 0.18543987597302422;  // std dev = 1.795, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.502536489808794;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.1634190087464754;  // std dev = 2.312, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.30022252413407835;  // std dev = 3.352, 45.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.17674488270677566;  // std dev = 3.856, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | | | else return 0.11057222947716568;  // std dev = 3.987, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(D, F), phenotype(A, G) )
%   | | then return 0.09697874105832248;  // std dev = 0.460, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.42015600943251774;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.33659876249543713;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.5513134157704833;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(L, C), phenotype(L, M) )
%   | | | then return 0.20848239480399355;  // std dev = 2.586, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.36195948154066837;  // std dev = 1.463, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( interaction(A, N), interaction(N, N) )
%   | then return 0.08493667998880892;  // std dev = 0.459, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | else if ( interaction(A, P), interaction(P, A) )
%   | | then return 0.2617475651489631;  // std dev = 0.497, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.12589568188247716;  // std dev = 0.466, 150.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15250813260762966;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(D, E), interaction(F, D) )
%   | | then if ( interaction(D, D), complex(A, G) )
%   | | | then return -0.07240462690980716;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.06830318400657846;  // std dev = 4.683, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.06851344711859599;  // std dev = 4.291, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | | | else return 0.14684678207635618;  // std dev = 5.096, 111.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=41 */
%   | else if ( complex(A, J) )
%   | | then return 0.5353070899630669;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19742386146607638;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), complex(E, F) )
%   | | then if ( phenotype(E, C), interaction(E, G) )
%   | | | then return 0.08410673419373622;  // std dev = 2.295, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.22071758541312106;  // std dev = 2.314, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else return 0.04366454145292998;  // std dev = 0.447, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( enzyme(H, J), phenotype(H, K) )
%   | | | then return 0.13332339527745188;  // std dev = 2.370, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.023922730688137838;  // std dev = 4.567, 108.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=28 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.06075318536885963;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.21881996041724672;  // std dev = 1.492, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( complex(A, M), location(A, N) )
%   | then return 0.08169851105596748;  // std dev = 0.469, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | else return 0.009060666931162129;  // std dev = 0.437, 106.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then return -0.046261312637399125;  // std dev = 0.411, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(I, E), interaction(I, I) )
%   | | | then return 0.4104227880032445;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12861945179124043;  // std dev = 1.303, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return -0.11966175306916622;  // std dev = 0.450, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else if ( interaction(A, J), complex(J, K) )
%   | then if ( enzyme(A, L) )
%   | | then if ( interaction(J, M), complex(M, K) )
%   | | | then return 0.19832365370285399;  // std dev = 1.804, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.42914245102047155;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, N), location(A, P) )
%   | | | then return 0.1862144455427434;  // std dev = 3.595, 53.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=23 */
%   | | | else return 0.06896514609863297;  // std dev = 2.485, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else return 0.08032857738325445;  // std dev = 0.469, 158.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.17537045718848468;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( enzyme(E, F), phenotype(E, G) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.1480278934902407;  // std dev = 2.181, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.024569843713851597;  // std dev = 2.801, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else if ( phenotype(D, H), interaction(E, I) )
%   | | | then return 0.14505257549426268;  // std dev = 3.720, 57.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
%   | | | else return 0.510460164114559;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( enzyme(A, L), phenotype(J, M) )
%   | | | then return 0.01028685148312596;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.08816432638922246;  // std dev = 4.612, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   | | else if ( complex(A, N), interaction(A, P) )
%   | | | then return -0.1157093376971262;  // std dev = 1.509, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.04175533602718315;  // std dev = 2.146, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14555835711147339;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( enzyme(D, E), interaction(A, D) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.10090521458447899;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.09816817729126748;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(D, G), interaction(H, D) )
%   | | | then return 0.1706760873738315;  // std dev = 1.965, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -5.803428312248539E-4;  // std dev = 3.699, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( phenotype(A, K), interaction(I, I) )
%   | | | then return 0.18117412805458646;  // std dev = 2.331, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.054312619396190774;  // std dev = 5.519, 137.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=46 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return -0.09504441648649792;  // std dev = 1.981, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.09144668654428463;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1275776328471742;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( complex(F, E) )
%   | | | then return -0.029398003820181224;  // std dev = 1.451, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.13165440896659092;  // std dev = 2.153, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( interaction(A, G), interaction(H, A) )
%   | | | then return 0.04577600301408673;  // std dev = 2.418, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.05934226093081607;  // std dev = 2.553, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( phenotype(A, K), phenotype(I, K) )
%   | | | then return 0.015578844213832594;  // std dev = 2.164, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.3088265423463369;  // std dev = 1.925, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.08027461076720242;  // std dev = 2.907, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.04836754746129988;  // std dev = 5.709, 143.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=50 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11254729248762826;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), interaction(G, E) )
%   | | then if ( interaction(E, G), complex(E, H) )
%   | | | then return -0.020879983802485697;  // std dev = 2.195, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.17095554604948116;  // std dev = 2.245, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( interaction(A, E), complex(D, I) )
%   | | | then return -0.1177276833538055;  // std dev = 3.066, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | | else return -0.01968403980187422;  // std dev = 3.549, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return 0.06094530086990366;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.07936245367189726;  // std dev = 2.751, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( location(A, M) )
%   | | | then return 0.06270944243179263;  // std dev = 4.768, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
%   | | | else return 0.39601518930499274;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.559', 'seconds']
Refined model CLL: -0.39647


******************************************
Best model found
******************************************
Results 

CLL : -0.362654 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 10.416 

Total Inference Time : 4.742504596710205 

Total revision time: 18.41370979118347
Best scored revision CLL: -0.361711


Results 

CLL : -0.362654 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 18.471739204406738 

Total Inference Time : 4.742504596710205 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.266
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1775933795439568;  // std dev = 7.913, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17841034690465327;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16566188186086647;  // std dev = 7.694, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10384444133663513;  // std dev = 7.900, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1059630711869708;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08380006288415152;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06628040662702803;  // std dev = 7.803, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05172178222757379;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.032635132920035496;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.016663381382267084;  // std dev = 7.913, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.506', 'seconds']
Parameter learned model CLL:-0.369381 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.913, 196, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.773, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.694, 166, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.9, 194, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.78, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.795, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.803, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.81, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.913, 196, 92]}]
{'': [0.0, 0.21739969135802562], 'false': [nan, 0.21739969135802562], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22543996435731858], 'false': [nan, 0.22543996435731845], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22943332732407976], 'false': [nan, 0.22943332732407976], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21820137904053932], 'false': [nan, 0.21820137904054124], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.2250383493871003], 'false': [nan, 0.22503834938710085], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.22423441946596662], 'false': [nan, 0.22423441946596662], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2238321799307964], 'false': [nan, 0.2238321799307964], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22342980584738792], 'false': [nan, 0.22342980584738958]}
{'': [0.0, 0.22061224489795947], 'false': [nan, 0.22061224489795778], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21739969135802523], 'false': [nan, 0.21739969135802523]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.117
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(D, E), enzyme(D, F) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(D, G), location(A, G) )
%   | | | then return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.35814893509951223;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( enzyme(A, H) )
%   | | then if ( location(A, I) )
%   | | | then return 0.2022349566048873;  // std dev = 4.581, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.17773656396549034;  // std dev = 4.593, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | | else return 0.11740819435877163;  // std dev = 3.220, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), location(F, E) )
%   | | then if ( interaction(G, F), complex(D, H) )
%   | | | then return 0.1921374621340922;  // std dev = 4.144, 74.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.11928816551304627;  // std dev = 3.963, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   | | else if ( location(A, E) )
%   | | | then return 0.28540036861200646;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.1970427816816812;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.8317057872919476;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2139193102131042;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.1404154512373575;  // std dev = 1.828, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.2646990648837363;  // std dev = 2.837, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.212953904797976;  // std dev = 1.320, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.8025241765753843;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, E), location(H, I) )
%   | | | then return 0.14449185378466264;  // std dev = 4.147, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | | else return 0.2917008549489113;  // std dev = 1.405, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.17726091928425758;  // std dev = 1.950, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.00461812524512913;  // std dev = 3.060, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.08491252738767005;  // std dev = 2.794, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.16906054271704937;  // std dev = 4.076, 72.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(F, A), interaction(D, D) )
%   | | then if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.3466794091384989;  // std dev = 1.343, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.08319311909253156;  // std dev = 1.655, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( enzyme(D, I), complex(A, J) )
%   | | | then return -0.018345345316212673;  // std dev = 1.748, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.09904642841034779;  // std dev = 3.749, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then if ( phenotype(A, M), phenotype(K, N) )
%   | | | then return 0.25454679257009943;  // std dev = 2.296, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.10697235750615129;  // std dev = 4.907, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | else if ( interaction(A, P), complex(P, Q) )
%   | | | then return 0.22793896622855364;  // std dev = 2.127, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.5749753049997464;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( interaction(A, F), complex(F, E) )
%   | | then if ( interaction(F, G) )
%   | | | then return -0.024082416278704926;  // std dev = 2.080, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return -0.1315393856108719;  // std dev = 1.274, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.02390807483846197;  // std dev = 1.875, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.11097403647919975;  // std dev = 2.618, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | else if ( location(A, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.0922820649622009;  // std dev = 4.050, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | | | else return 0.123279339609417;  // std dev = 5.044, 108.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=40 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.017166522377259866;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -9.89315677053515E-4;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, E) )
%   | | then if ( location(A, F), interaction(G, D) )
%   | | | then return 0.09254201313184907;  // std dev = 1.952, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.4257144994853534;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(D, H), phenotype(A, I) )
%   | | | then return 0.0879092141824036;  // std dev = 2.507, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return -0.004614020054608796;  // std dev = 3.815, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(K, L), complex(J, L) )
%   | | | then return 0.013959242832369451;  // std dev = 2.796, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.253082662632281;  // std dev = 2.878, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.07064002780590256;  // std dev = 3.354, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return -0.004957442376807974;  // std dev = 2.540, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, E), location(E, F) )
%   | | then if ( location(D, F), enzyme(A, G) )
%   | | | then return 0.00560476227238556;  // std dev = 2.230, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.17625960148176165;  // std dev = 3.007, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | else if ( location(D, H), phenotype(E, I) )
%   | | | then return 0.025055392542008958;  // std dev = 3.716, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return -0.06881189452907852;  // std dev = 3.145, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, J), phenotype(A, L) )
%   | | | then return -0.04744937886774454;  // std dev = 1.485, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.07768907534842583;  // std dev = 3.003, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.09619352110730793;  // std dev = 2.364, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.18224001951283816;  // std dev = 2.174, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, A) )
%   then return -0.1533097400959616;  // std dev = 0.411, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), complex(F, D) )
%   | | then if ( interaction(G, F), enzyme(G, H) )
%   | | | then return 0.2439935398119004;  // std dev = 1.382, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09226682220334864;  // std dev = 1.752, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(E, I), interaction(I, E) )
%   | | | then return 0.02823262574416097;  // std dev = 2.521, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.14662644862005783;  // std dev = 1.494, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), interaction(L, A) )
%   | | | then return -0.04472958446628107;  // std dev = 2.241, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.06603653478267074;  // std dev = 5.132, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.014226418755763855;  // std dev = 2.613, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return -0.08821410336835213;  // std dev = 2.282, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), enzyme(E, F) )
%   | | then if ( phenotype(E, G), complex(E, H) )
%   | | | then return 0.14802797527436581;  // std dev = 2.234, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return -0.005907553830009707;  // std dev = 3.285, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.09620760005125208;  // std dev = 4.045, 83.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
%   | | | else return -0.0086708982923208;  // std dev = 4.124, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.05495048550757382;  // std dev = 2.115, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.08944845398365257;  // std dev = 1.787, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( location(A, M) )
%   | | | then return 0.31856502609577914;  // std dev = 1.785, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.1791529651841648;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(C, D), enzyme(A, E) )
%   | then if ( complex(A, F), interaction(A, C) )
%   | | then if ( enzyme(C, E) )
%   | | | then return 0.08909337068016474;  // std dev = 1.323, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.12160094538271016;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.38163317180336137;  // std dev = 1.070, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( phenotype(C, G), location(A, H) )
%   | | then if ( location(D, H), phenotype(D, I) )
%   | | | then return 0.0039480739957942455;  // std dev = 2.985, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.1882321673718259;  // std dev = 2.371, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else return -0.003051216438284991;  // std dev = 0.457, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   else if ( interaction(J, A), complex(A, K) )
%   | then return -0.16961695834625007;  // std dev = 0.398, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then return 0.03223090020972624;  // std dev = 0.475, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | else return -0.06441639707487971;  // std dev = 0.461, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.791', 'seconds']
Refined model CLL: -0.403439


******************************************
Best model found
******************************************
Results 

CLL : -0.369495 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.117 

Total Inference Time : 2.7274575233459473 

Total revision time: 12.982998950958251
Best scored revision CLL: -0.369381


Results 

CLL : -0.369495 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.041028364181518 

Total Inference Time : 2.7274575233459473 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.145
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19941877636935404;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17887379702533943;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16097784831933737;  // std dev = 7.446, 242.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09416999006968986;  // std dev = 7.675, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08341810462063783;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0778572502279396;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06803375258741085;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07988847073281645;  // std dev = 7.411, 238.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03035348295758821;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.016617549706701963;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.672', 'seconds']
Parameter learned model CLL:-0.372088 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.495, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.446, 156, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.675, 187, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.642, 182, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.557, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.411, 152, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.642, 182, 86]}]
{'': [0.0, 0.22480473670949921], 'false': [nan, 0.22480473670949921], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22652185223725244], 'false': [nan, 0.22652185223725266], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22908271292944435], 'false': [nan, 0.22908271292944435], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21578177622133562], 'false': [nan, 0.21578177622133554], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21792158609935477], 'false': [nan, 0.21792158609935453]}
{'': [nan, 0.221360946745561], 'false': [nan, 0.221360946745561]}
{'': [2.3129646346357427e-18, 0.2230834960937505], 'false': [nan, 0.2230834960937505], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.23077466280629994], 'false': [nan, 0.23077466280630077], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22049997086416775], 'false': [nan, 0.22049997086416706], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [1.1564823173178713e-18, 0.21792158609935436], 'false': [nan, 0.21792158609935436], 'true': [nan, 1.1564823173178713e-18], 'true,false': [nan, 1.1564823173178713e-18], 'true,false,false': [nan, 1.1564823173178713e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 6.961
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(E, F), phenotype(A, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2029765213064089;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.132658739021081;  // std dev = 3.187, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else if ( interaction(D, D), phenotype(E, I) )
%   | | | then return 0.5724346493852266;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.2619950889456662;  // std dev = 3.538, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.15226658215833588;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.29564893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return 0.17814893509951235;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.03996711691769404;  // std dev = 2.216, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then return 0.5005961360092122;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.1766367938232437;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.4415103397197296;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( enzyme(A, J), phenotype(I, K) )
%   | | | then return 0.27339216963154866;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06750329540719999;  // std dev = 2.947, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return 0.18940492204967835;  // std dev = 5.257, 121.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=43 */
%   | | | else return 0.11016513195754124;  // std dev = 2.947, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.03600702601202835;  // std dev = 3.121, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | | else return -0.061741129614709574;  // std dev = 1.302, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( phenotype(A, H), location(D, I) )
%   | | | then return 0.18037492030329103;  // std dev = 3.713, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return 0.0695070595153414;  // std dev = 3.576, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.26962998408766853;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.037694277162319254;  // std dev = 1.745, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( location(A, M) )
%   | | | then return 0.2610935600550961;  // std dev = 3.558, 51.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
%   | | | else return 0.0888731758091538;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0.4378731452079072;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.542664865913305;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), complex(A, J) )
%   | | | then return 0.09250179444664137;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.22890782744161894;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( complex(K, M) )
%   | | | then return 0.5471667324842471;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15290318869143824;  // std dev = 3.033, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.0022702230365030654;  // std dev = 2.472, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.09774447020804236;  // std dev = 5.303, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), interaction(E, A) )
%   | then return 0.11842934927910209;  // std dev = 0.486, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else return -0.029339086482346562;  // std dev = 0.432, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   else if ( phenotype(A, F) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), interaction(I, A) )
%   | | | then return -0.04644555832479669;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.13464667714204148;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( phenotype(J, F), complex(J, K) )
%   | | | then return 0.22980063007008467;  // std dev = 3.453, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
%   | | | else return 0.08706089607433798;  // std dev = 2.005, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( location(A, L) )
%   | | then if ( interaction(A, M) )
%   | | | then return 0.10080140872760622;  // std dev = 3.323, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | | else return -0.02892519158999934;  // std dev = 1.970, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else return 0.31202926664455566;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then return -0.003211613645835502;  // std dev = 0.447, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( phenotype(E, G), phenotype(A, G) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.08207604440806908;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.48166089780490995;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, E), interaction(I, H) )
%   | | | then return 0.13255323565716579;  // std dev = 2.913, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.002700837322679128;  // std dev = 2.261, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( interaction(A, L), interaction(K, L) )
%   | | | then return -0.1120154180774971;  // std dev = 1.562, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.059416444104795116;  // std dev = 3.730, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.26903459513372735;  // std dev = 1.284, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.04354961121728385;  // std dev = 3.135, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14183940477036877;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), complex(E, G) )
%   | | then if ( enzyme(D, F) )
%   | | | then return 0.18240785996942277;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6706981507500208;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, H), phenotype(D, I) )
%   | | | then return 0.010148775803354352;  // std dev = 2.211, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.09873931903325853;  // std dev = 3.949, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return -0.10697456184913776;  // std dev = 1.953, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.18165129133868696;  // std dev = 0.969, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.020949152682495656;  // std dev = 4.875, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   | | | else return 0.09491714683160091;  // std dev = 2.197, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, A), phenotype(A, F) )
%   | | then if ( interaction(A, G), phenotype(G, F) )
%   | | | then return 0.5384980285606161;  // std dev = 0.894, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.19086932361368844;  // std dev = 1.400, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(D, H), phenotype(A, E) )
%   | | | then return -0.13298830509995987;  // std dev = 1.748, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.056598855853335475;  // std dev = 4.256, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return -0.12014736945212068;  // std dev = 1.802, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.07823214897424496;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return 0.02149294660670762;  // std dev = 4.797, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | | | else return 0.12346245862712424;  // std dev = 1.656, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10687874090377993;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(D, F), phenotype(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.031335430224978186;  // std dev = 1.826, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.13577496639656655;  // std dev = 1.698, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( phenotype(D, I), enzyme(A, J) )
%   | | | then return 0.1743257978776549;  // std dev = 1.579, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.01326470251078113;  // std dev = 3.208, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then if ( interaction(M, L), interaction(M, M) )
%   | | | then return 0.4742766865951539;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07253416729569113;  // std dev = 2.289, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( interaction(N, A), location(A, P) )
%   | | | then return 0.024495910010016837;  // std dev = 5.124, 121.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=39 */
%   | | | else return 0.11344212328403169;  // std dev = 1.827, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09455805738796517;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( enzyme(A, F), interaction(D, G) )
%   | | then if ( complex(D, H) )
%   | | | then return -0.06692106945970287;  // std dev = 2.171, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.19884986123061102;  // std dev = 1.508, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.05772676295697517;  // std dev = 2.808, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.06837036545444865;  // std dev = 3.728, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | else if ( enzyme(A, K), interaction(L, A) )
%   | | then if ( enzyme(L, M), phenotype(A, N) )
%   | | | then return -0.18807572708410816;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.019250972045632527;  // std dev = 3.160, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.08853539975812202;  // std dev = 2.506, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -6.32835327756566E-4;  // std dev = 3.603, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.775', 'seconds']
Refined model CLL: -0.403081


******************************************
Best model found
******************************************
Results 

CLL : -0.371419 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.961 

Total Inference Time : 2.62611985206604 

Total revision time: 12.460934453964233
Best scored revision CLL: -0.372088


Results 

CLL : -0.371419 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.5189638671875 

Total Inference Time : 2.62611985206604 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.096
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21325097591583891;  // std dev = 7.490, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18671559884640535;  // std dev = 7.482, 244.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11970744076061743;  // std dev = 7.706, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10118657976525401;  // std dev = 7.699, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1365879029549601;  // std dev = 7.393, 234.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03627034760145157;  // std dev = 7.821, 293.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05813443136901209;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10232126368535065;  // std dev = 7.335, 228.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0267583738773714;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.046264992965919204;  // std dev = 7.507, 247.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.504', 'seconds']
Parameter learned model CLL:-0.383512 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.49, 158, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.482, 157, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.706, 187, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.699, 186, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.393, 147, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.821, 206, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.658, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.335, 141, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.507, 160, 87]}]
{'': [nan, 0.2290045814244073], 'false': [nan, 0.2290045814244073]}
{'': [0.0, 0.2294242139209878], 'false': [nan, 0.2294242139209878], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21670041025094566], 'false': [nan, 0.21670041025094566], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21712353580485397], 'false': [nan, 0.21712353580485436], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2335634451019074], 'false': [nan, 0.23356344510190763], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.20876189588696495], 'false': [nan, 0.20876189588696495]}
{'': [nan, 0.2196692336826154], 'false': [nan, 0.2196692336826154]}
{'': [nan, 0.23597645429362865], 'false': [nan, 0.23597645429362868]}
{'': [nan, 0.22009440895471868], 'false': [nan, 0.2200944089547186]}
{'': [0.0, 0.22816305790949], 'false': [nan, 0.22816305790949], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 10.228
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(D, G), phenotype(C, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.28672036367094084;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( phenotype(C, H), phenotype(A, H) )
%   | | then return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1914822684328457;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   else if ( interaction(J, A), phenotype(A, K) )
%   | then return 0.15083186192877987;  // std dev = 0.455, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   | else if ( enzyme(A, L), interaction(A, M) )
%   | | then return 0.2929315437951645;  // std dev = 0.496, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else return 0.19148226843284535;  // std dev = 0.471, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.07836619814224545;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.16384360723942867;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(I, A), complex(E, D) )
%   | | | then return 0.6349322202237995;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.24410201740095128;  // std dev = 2.518, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( phenotype(J, K), enzyme(A, L) )
%   | | | then return 0.008019334621854564;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.31549008571206333;  // std dev = 1.853, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.016739231493924672;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.13554171444511837;  // std dev = 6.189, 181.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=55 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(D, E), interaction(A, A) )
%   | | then return 0.3515158910550803;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.2820362922926701;  // std dev = 1.583, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.15467496963586075;  // std dev = 2.641, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, I), enzyme(I, J) )
%   | | | then return 0.5204912418585228;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.04665119813555547;  // std dev = 3.099, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.2368907763853248;  // std dev = 2.149, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.12434114192715724;  // std dev = 5.502, 142.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1612214097892467;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(D, D), phenotype(D, F) )
%   | | then if ( interaction(A, G), enzyme(A, H) )
%   | | | then return 0.1744345791565822;  // std dev = 1.242, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03946985224498773;  // std dev = 2.646, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( phenotype(D, I), interaction(A, J) )
%   | | | then return 0.2389296585972263;  // std dev = 2.160, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.1442309604553408;  // std dev = 3.320, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( complex(A, M) )
%   | | | then return 0.12806708089225727;  // std dev = 2.143, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.027610485784524925;  // std dev = 3.464, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.003385656169519619;  // std dev = 1.531, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.1372540707539003;  // std dev = 3.762, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( complex(E, F), phenotype(E, D) )
%   | | | then return 0.0036860971345119543;  // std dev = 2.415, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.2575493958957221;  // std dev = 1.762, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.04388964280851855;  // std dev = 3.030, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return -0.014486290664511701;  // std dev = 3.256, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.220762836995647;  // std dev = 2.212, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.11706687594276556;  // std dev = 4.445, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.1083524277275147;  // std dev = 1.589, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.07188462434131875;  // std dev = 1.301, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return -0.017320672007435617;  // std dev = 0.441, 93.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=25 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(D, G), phenotype(G, F) )
%   | | | then return 0.050152002181290976;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.16904193000746556;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( complex(D, H), enzyme(D, I) )
%   | | | then return 0.4835684535010856;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22376550169558693;  // std dev = 1.394, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, J), complex(A, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.02031382740988147;  // std dev = 1.888, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.052274504008509;  // std dev = 1.138, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.3001659739006324;  // std dev = 1.510, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.10991219173734153;  // std dev = 4.974, 110.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(A, A) )
%   | then if ( location(A, D), enzyme(A, E) )
%   | | then return 0.02224841378689285;  // std dev = 1.124, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.10743523706772289;  // std dev = 0.409, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( phenotype(F, G), complex(A, H) )
%   | | | then return 0.12409351292888504;  // std dev = 1.689, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.05184362281615;  // std dev = 1.899, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( interaction(I, C), interaction(C, I) )
%   | | | then return 0.12514094570751833;  // std dev = 5.530, 130.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=51 */
%   | | | else return 0.03591031893123556;  // std dev = 2.983, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   else if ( interaction(A, J), enzyme(J, K) )
%   | then return -0.1669581982565628;  // std dev = 0.380, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then return 0.17279862544065058;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.05700919959616257;  // std dev = 0.411, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( complex(C, E), enzyme(C, F) )
%   | then if ( phenotype(C, G), interaction(A, D) )
%   | | then return 0.4147906425468218;  // std dev = 0.844, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(D, H) )
%   | | | then return -0.0666437436039519;  // std dev = 1.124, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1576528733999773;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.005934996855920149;  // std dev = 0.466, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   else if ( interaction(I, A), enzyme(A, J) )
%   | then if ( phenotype(A, K) )
%   | | then if ( enzyme(I, J) )
%   | | | then return -0.058200578214158805;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.13117016529155834;  // std dev = 1.926, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( enzyme(I, L) )
%   | | | then return 0.4882573836500132;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14295155140562282;  // std dev = 1.847, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.03724879823456787;  // std dev = 0.466, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( complex(C, E), phenotype(C, F) )
%   | then if ( complex(A, G), interaction(H, C) )
%   | | then return -0.05181776284094509;  // std dev = 0.465, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.16144184477178306;  // std dev = 0.495, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else return -0.054647240442045185;  // std dev = 0.454, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   else if ( interaction(A, I), phenotype(I, J) )
%   | then if ( interaction(K, A), interaction(K, K) )
%   | | then if ( enzyme(I, L), interaction(I, M) )
%   | | | then return -0.012079932750300448;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2361579029136472;  // std dev = 1.614, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return -0.028156789577638786;  // std dev = 0.461, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | else if ( interaction(N, A), location(N, P) )
%   | | then if ( location(A, P) )
%   | | | then return 0.1630175751621879;  // std dev = 3.711, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | | | else return -0.0033223988246968805;  // std dev = 2.092, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else return 0.23817419290551886;  // std dev = 1.214, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.20180194060763154;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( phenotype(E, D), complex(A, F) )
%   | | then if ( enzyme(A, G), interaction(H, A) )
%   | | | then return -0.3029580635915602;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.09831030033132782;  // std dev = 2.609, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( complex(E, I), complex(A, I) )
%   | | | then return 0.3226131157867442;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0284394931504418;  // std dev = 2.981, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), interaction(K, L) )
%   | | | then return 0.0389890084507518;  // std dev = 3.094, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.2520305811023838;  // std dev = 1.320, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return -0.04866343306497839;  // std dev = 2.616, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.01892005788450839;  // std dev = 4.748, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.013', 'seconds']
Refined model CLL: -0.409528


******************************************
Best model found
******************************************
Results 

CLL : -0.38293 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 10.228 

Total Inference Time : 4.8658342361450195 

Total revision time: 17.940123437881468
Best scored revision CLL: -0.383512


Results 

CLL : -0.38293 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 17.966940282821653 

Total Inference Time : 4.8658342361450195 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.23
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20251979602666512;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15464728064871472;  // std dev = 8.391, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12120527485284723;  // std dev = 8.457, 333.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11143380150027188;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08837605969322662;  // std dev = 8.422, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07831328056821447;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09691395294013132;  // std dev = 8.175, 291.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.060298275254312465;  // std dev = 8.286, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.057117725408772385;  // std dev = 8.228, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02633909529395934;  // std dev = 8.346, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.253', 'seconds']
Parameter learned model CLL:-0.373247 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.257, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.391, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.457, 229, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.397, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.422, 223, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.385, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.175, 187, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.286, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.228, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.346, 211, 104]}]
{'': [0.0, 0.22577957107144483], 'false': [nan, 0.22577957107144483], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21866440337950035], 'false': [nan, 0.21866440337949694]}
{'': [nan, 0.21477333189044956], 'false': [nan, 0.21477333189044956]}
{'': [0.0, 0.2183093866518417], 'false': [nan, 0.21830938665184188], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21689158226486618], 'false': [nan, 0.2168915822648655], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21901961355188632], 'false': [nan, 0.21901961355188632]}
{'': [0.0, 0.2296619076298108], 'false': [nan, 0.2296619076298108], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.224358152847196], 'false': [nan, 0.2243581528471962], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2271969731093188], 'false': [nan, 0.227196973109318], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22115394305870603], 'false': [nan, 0.22115394305870603], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 11.03
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), interaction(F, F) )
%   | | then if ( phenotype(A, G), phenotype(F, G) )
%   | | | then return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.11901850031690367;  // std dev = 2.978, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return 0.35814893509951234;  // std dev = 2.828, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.22656998773109124;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), interaction(K, L) )
%   | | | then return 0.21109011157010057;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.10259337954395681;  // std dev = 2.883, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.18145720577620333;  // std dev = 5.394, 133.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(D, C), interaction(D, A) )
%   | then return 0.5754186687351869;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.23797022080555785;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.07221459085895786;  // std dev = 1.498, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.5804626767261871;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.26619453834606144;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( interaction(H, A), complex(H, I) )
%   | then if ( interaction(A, H), phenotype(A, J) )
%   | | then return 0.09751114188267339;  // std dev = 0.442, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.10026098037996486;  // std dev = 3.198, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.1966545053507091;  // std dev = 5.232, 118.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=43 */
%   | else return 0.10417308819650578;  // std dev = 0.452, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(C, D) )
%   | then if ( location(A, E), interaction(C, F) )
%   | | then return 0.1259926987542871;  // std dev = 0.460, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else return 0.009229233385942759;  // std dev = 0.398, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( enzyme(C, G), interaction(C, H) )
%   | | then return 0.4041065022509291;  // std dev = 1.116, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.10328172458830719;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2681233483140746;  // std dev = 1.724, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( interaction(A, I), interaction(I, A) )
%   | then return 0.03907971170256377;  // std dev = 0.436, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else if ( complex(A, J) )
%   | | then return 0.059971800635227154;  // std dev = 0.447, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.06269424806514519;  // std dev = 1.939, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.12495855349350306;  // std dev = 5.675, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1491785735401655;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(D, F), phenotype(D, G) )
%   | | then if ( enzyme(E, H), interaction(A, I) )
%   | | | then return 0.058344752837277206;  // std dev = 2.797, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.3372001665998533;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | else if ( complex(D, J), complex(E, J) )
%   | | | then return 0.10880660801496046;  // std dev = 6.014, 163.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=53 */
%   | | | else return 0.038160281170192045;  // std dev = 3.228, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | else if ( phenotype(A, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.2076849658050887;  // std dev = 1.494, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.06067435329473603;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( location(A, M) )
%   | | | then return 0.4004651793342232;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.29319591824723124;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13382826800186712;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.05307352743960478;  // std dev = 1.507, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.14716658440247585;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( location(A, H), location(E, H) )
%   | | | then return 0.01908487925084862;  // std dev = 2.257, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.2614284056057744;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.11601190929593973;  // std dev = 1.598, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.2631022628453221;  // std dev = 1.752, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.15813346687320917;  // std dev = 3.230, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.070339446148599;  // std dev = 6.598, 203.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=63 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( enzyme(A, D), interaction(C, A) )
%   | then return -0.06941870750993605;  // std dev = 0.425, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.03163409717358736;  // std dev = 0.451, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   else if ( interaction(E, A), complex(A, F) )
%   | then if ( interaction(A, E), phenotype(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.03503986905829326;  // std dev = 1.207, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.4347808232800492;  // std dev = 1.136, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.010569422600217124;  // std dev = 0.444, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( complex(H, I) )
%   | | | then return 0.5199290686756451;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16431173126272014;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( location(A, J) )
%   | | | then return 0.1329327816706944;  // std dev = 5.168, 113.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=44 */
%   | | | else return 0.021149952814048;  // std dev = 1.912, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1445198745782567;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( phenotype(E, D) )
%   | | then if ( enzyme(E, F), complex(E, G) )
%   | | | then return 0.13866869880829596;  // std dev = 2.140, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.0067864732985084735;  // std dev = 4.432, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.34497409350225156;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.09611797518260155;  // std dev = 3.561, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( complex(A, J), enzyme(I, K) )
%   | | | then return 0.2474149632729676;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07065482960113023;  // std dev = 2.804, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.07050354989376438;  // std dev = 2.678, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return -0.005688049562210726;  // std dev = 3.731, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(A, E), complex(F, H) )
%   | | | then return 0.3380375273855432;  // std dev = 1.617, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.038247404565251816;  // std dev = 3.218, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else if ( interaction(A, D), phenotype(A, I) )
%   | | | then return -0.07338798185157223;  // std dev = 2.490, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.015278941868244201;  // std dev = 6.235, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.5306619338688223;  // std dev = 0.876, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.025089878027426172;  // std dev = 1.709, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.19709747618714077;  // std dev = 2.247, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14212474565130628;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( location(A, D) )
%   | then if ( interaction(A, E), location(E, D) )
%   | | then if ( interaction(E, F), interaction(F, E) )
%   | | | then return 0.009315874826866858;  // std dev = 4.963, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | | else return -0.08888721608701364;  // std dev = 2.767, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.11038097687053508;  // std dev = 2.095, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.007456378895145982;  // std dev = 5.534, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(J, K) )
%   | | | then return 0.11003167771750895;  // std dev = 1.602, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.06978507384809034;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.40063248615687225;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09146177061677038;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( enzyme(D, F), phenotype(A, G) )
%   | | then if ( interaction(D, A), complex(D, H) )
%   | | | then return 0.284080416887206;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.025992112362050835;  // std dev = 1.953, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return -0.0330818754120892;  // std dev = 1.185, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.1736415745494522;  // std dev = 1.815, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else if ( phenotype(A, K), interaction(L, A) )
%   | | then if ( phenotype(L, M), interaction(N, L) )
%   | | | then return 0.02181224745247762;  // std dev = 5.489, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   | | | else return -0.09330497832711276;  // std dev = 2.313, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( interaction(A, P), interaction(P, P) )
%   | | | then return -0.08044694000605038;  // std dev = 1.766, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.11888860840204728;  // std dev = 4.491, 84.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.900', 'seconds']
Refined model CLL: -0.387444


******************************************
Best model found
******************************************
Results 

CLL : -0.374144 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.03 

Total Inference Time : 4.891417026519775 

Total revision time: 19.203869113922117
Best scored revision CLL: -0.373247


Results 

CLL : -0.374144 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 19.230685958862303 

Total Inference Time : 4.891417026519775 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.165
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.206633783584361;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18089906511297796;  // std dev = 7.734, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13039592130249114;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16454487791705832;  // std dev = 7.542, 241.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06434040274677778;  // std dev = 7.963, 296.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08595550783313617;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024241389092226742;  // std dev = 8.027, 307.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.061710471416613545;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.036836208349975294;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04396929371572059;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.405', 'seconds']
Parameter learned model CLL:-0.374481 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.742, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.734, 171, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.873, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.542, 149, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.963, 204, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.765, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.027, 215, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.78, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.853, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.765, 175, 92]}]
{'': [nan, 0.22704315886134152], 'false': [nan, 0.22704315886134152]}
{'': [0.0, 0.22744292963610824], 'false': [nan, 0.22744292963611187], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21980785674764944], 'false': [nan, 0.21980785674764944], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23601522012362083], 'false': [nan, 0.23601522012362033], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-1.1564823173178713e-18, 0.21420745069393796], 'false': [nan, 0.2142074506939365], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [0.0, 0.2258412938882581], 'false': [nan, 0.2258412938882581], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.20986960073847025], 'false': [nan, 0.20986960073847025]}
{'': [0.0, 0.22503834938710027], 'false': [nan, 0.22503834938710082], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22101463239166955], 'false': [nan, 0.22101463239166985], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22584129388825752], 'false': [nan, 0.22584129388825752]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.469
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( enzyme(A, D), interaction(A, A) )
%   | then return 0.058148935099512175;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( phenotype(E, C), interaction(E, F) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.1993254056877463;  // std dev = 4.371, 85.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( interaction(H, J), interaction(K, A) )
%   | | then if ( enzyme(J, I) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.13592671287729005;  // std dev = 0.448, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else return 0.14193271888329556;  // std dev = 0.451, 148.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16002161209492638;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D), phenotype(A, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.33838244275564683;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.14175172364220417;  // std dev = 2.867, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.18930806642576617;  // std dev = 2.391, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.054462623516801194;  // std dev = 2.915, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | else if ( complex(A, J) )
%   | | then if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.22456117384179133;  // std dev = 2.192, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.12274471033706794;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.3058663428606687;  // std dev = 2.057, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.1920910639614117;  // std dev = 4.025, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14901558082952313;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( complex(D, F), location(A, E) )
%   | | then if ( interaction(G, D), interaction(H, G) )
%   | | | then return 0.14598737025431424;  // std dev = 3.630, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.3068965731808623;  // std dev = 2.238, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(A, D) )
%   | | | then return 0.3137341378212392;  // std dev = 1.221, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09618176008387617;  // std dev = 4.925, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.4557399870265561;  // std dev = 1.147, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.24927075780534075;  // std dev = 1.489, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.2105600347538566;  // std dev = 2.571, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.10091450431865379;  // std dev = 2.074, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12901323481169236;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), interaction(E, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.09059677189345286;  // std dev = 1.971, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.326821707498982;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.017368238715680506;  // std dev = 1.700, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.09419000942991873;  // std dev = 3.949, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( interaction(I, I), complex(I, J) )
%   | | | then return 0.12892460657249846;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.28544607129010185;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.15144646440811643;  // std dev = 3.359, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.10425539655323637;  // std dev = 4.235, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10918265551550943;  // std dev = 0.000413, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), enzyme(A, G) )
%   | | then if ( interaction(H, E), interaction(I, H) )
%   | | | then return 0.15292224450869202;  // std dev = 1.723, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.43382121692186043;  // std dev = 1.427, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( phenotype(A, J), location(E, K) )
%   | | | then return 0.07805716227398825;  // std dev = 2.853, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.20636898615417196;  // std dev = 2.780, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then if ( interaction(L, N), location(A, P) )
%   | | | then return 0.03367869804041349;  // std dev = 3.354, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.09397514560986438;  // std dev = 1.573, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( interaction(Q, A), enzyme(A, R) )
%   | | | then return 0.20256693280204624;  // std dev = 2.106, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.059020036632326446;  // std dev = 4.440, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09827897790646474;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), interaction(G, F) )
%   | | then if ( phenotype(G, E), complex(F, H) )
%   | | | then return 0.06657594703621057;  // std dev = 2.585, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return -0.08026610551739657;  // std dev = 2.699, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2445377462394001;  // std dev = 1.004, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03252319536462757;  // std dev = 3.417, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | else if ( phenotype(A, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.1998356627193374;  // std dev = 2.712, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.07916553680182603;  // std dev = 1.998, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.11910262439012384;  // std dev = 3.341, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.030462500689322405;  // std dev = 3.368, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), interaction(E, A) )
%   | then if ( complex(A, F), interaction(A, A) )
%   | | then return 0.053922569191218815;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.11586539224685204;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.0513091379473434;  // std dev = 0.450, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( complex(A, H), interaction(G, I) )
%   | | then return 0.11601024383378028;  // std dev = 0.495, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else return -0.0165332611516722;  // std dev = 0.436, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(J, L), enzyme(K, M) )
%   | | | then return 0.20222694769103722;  // std dev = 1.811, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.03327451653988063;  // std dev = 4.114, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.38442998982383525;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.11408312869997435;  // std dev = 2.747, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09751061955988216;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E), interaction(F, D) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.04068646371458213;  // std dev = 2.398, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.2617271775403002;  // std dev = 1.637, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(I, D), complex(I, E) )
%   | | | then return 0.056965338783166786;  // std dev = 2.552, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.05389197879737598;  // std dev = 3.105, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), interaction(M, L) )
%   | | | then return 0.10514314078515721;  // std dev = 2.242, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.29356256473672115;  // std dev = 2.028, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.1589292194491555;  // std dev = 3.052, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.025920272802751047;  // std dev = 3.636, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0986293426989384;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(D, E) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.015257431924268594;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.11889501611268982;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.25527524715964955;  // std dev = 1.307, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.0680099585668276;  // std dev = 1.868, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( location(H, J), location(A, J) )
%   | | | then return 0.01654407559147562;  // std dev = 4.573, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | | else return 0.16924781025643637;  // std dev = 2.852, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( interaction(K, A) )
%   | | | then return -0.07253579520881254;  // std dev = 3.070, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.047888248290730843;  // std dev = 3.783, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(C, E) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return -0.07691349639485734;  // std dev = 0.429, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( phenotype(C, G) )
%   | | | then return 0.15239541181646837;  // std dev = 2.127, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return -0.04852795539615482;  // std dev = 1.140, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return 0.4265523889924081;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( enzyme(A, H), location(A, I) )
%   | then if ( enzyme(J, H), interaction(J, K) )
%   | | then return -0.045984809193608665;  // std dev = 0.456, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else return 0.0874645495188115;  // std dev = 0.498, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( interaction(L, A), interaction(L, L) )
%   | | then return -0.057594112266204596;  // std dev = 0.429, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( location(A, M) )
%   | | | then return 0.04084672799038785;  // std dev = 5.315, 124.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=43 */
%   | | | else return 0.21109191340487365;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.937', 'seconds']
Refined model CLL: -0.406769


******************************************
Best model found
******************************************
Results 

CLL : -0.374598 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.469 

Total Inference Time : 2.6678826808929443 

Total revision time: 13.231049713134766
Best scored revision CLL: -0.374481


Results 

CLL : -0.374598 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.257866558074952 

Total Inference Time : 2.6678826808929443 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.089
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20214893509951284;  // std dev = 7.511, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1976752742963093;  // std dev = 7.384, 235.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1448412644624767;  // std dev = 7.519, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12085140909303373;  // std dev = 7.519, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05424314791530694;  // std dev = 7.772, 289.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08916887465381537;  // std dev = 7.519, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03865194963034931;  // std dev = 7.707, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05237065802669193;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04689696658001453;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02947210241574511;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.185', 'seconds']
Parameter learned model CLL:-0.368334 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.511, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.384, 149, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.519, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.519, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.772, 203, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.519, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.707, 192, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.557, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 176, 86]}]
{'': [0.0, 0.22566400000000056], 'false': [nan, 0.22566400000000056], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.23203259393390738], 'false': [nan, 0.23203259393390874]}
{'': [nan, 0.22523452008698364], 'false': [nan, 0.22523452008698364]}
{'': [nan, 0.22523452008698364], 'false': [nan, 0.22523452008698344]}
{'': [nan, 0.20902527508051721], 'false': [nan, 0.2090252750805171]}
{'': [0.0, 0.22523452008698225], 'false': [nan, 0.22523452008698225], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21365353760157413], 'false': [nan, 0.21365353760157413], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2213609467455629], 'false': [nan, 0.22136094674556292], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22308349609374933], 'false': [nan, 0.2230834960937492]}
{'': [nan, 0.22049997086416906], 'false': [nan, 0.22049997086416906]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 8.745
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(A, E), enzyme(D, G) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.06867525088898603;  // std dev = 3.078, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.12481560176617904;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.2510060779566552;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.26991364098186527;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.11968739663797391;  // std dev = 3.543, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.19661047356105021;  // std dev = 3.815, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( phenotype(C, E), complex(C, D) )
%   | then if ( interaction(A, F), enzyme(C, G) )
%   | | then return 0.1186133372249052;  // std dev = 0.448, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.18291512509470062;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.225956333183788;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( enzyme(A, I), interaction(J, C) )
%   | | then return 0.6704461651448325;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( enzyme(C, K) )
%   | | | then return 0.18291512509470062;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.31957754953038636;  // std dev = 1.887, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(A, L), enzyme(A, M) )
%   | then return 0.11011299687599281;  // std dev = 0.444, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else if ( interaction(A, N), interaction(N, P) )
%   | | then return 0.2090446500268515;  // std dev = 0.483, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | | else return 0.15142827066992073;  // std dev = 0.466, 94.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=30 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( phenotype(A, E), interaction(A, A) )
%   | then return 0.3246839134291472;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(F, A), location(F, C) )
%   | | then return 0.09286865955134808;  // std dev = 0.460, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | else if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0.0553342403987298;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.23878049024382758;  // std dev = 1.803, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( location(A, I) )
%   | then if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( location(J, I) )
%   | | | then return 0.19954065308510302;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.6371394299688103;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.266201279177551;  // std dev = 2.939, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | | else return 0.1347667317358327;  // std dev = 4.279, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | else return 0.5667817782150584;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then return 0.007847118964489036;  // std dev = 0.439, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   else if ( enzyme(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.1308199298752109;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5376310101706006;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(J, E), phenotype(J, K) )
%   | | | then return 0.09562304477333793;  // std dev = 3.312, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.25671861280446584;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, L), location(A, M) )
%   | | then if ( complex(L, N), phenotype(L, P) )
%   | | | then return 0.14487289513118734;  // std dev = 1.935, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 5.048050958567101E-4;  // std dev = 3.583, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | else if ( complex(A, Q) )
%   | | | then return 0.1931011325685589;  // std dev = 1.860, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.10476581758052396;  // std dev = 3.270, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(C, E) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return -0.04235006687511404;  // std dev = 0.401, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(G, C), phenotype(A, H) )
%   | | | then return 0.12906590608780144;  // std dev = 2.063, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.016169311665020374;  // std dev = 1.700, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else return -0.049017013878587354;  // std dev = 0.425, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   else if ( location(A, I) )
%   | then if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), complex(J, M) )
%   | | | then return 0.06548030259711933;  // std dev = 3.411, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return 0.19449168002740286;  // std dev = 3.659, 55.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=24 */
%   | | else if ( interaction(N, A), complex(A, P) )
%   | | | then return 0.40739582256959633;  // std dev = 1.199, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.03906689937006836;  // std dev = 3.975, 80.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=22 */
%   | else return -0.1031132525783771;  // std dev = 0.385, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1461812036418907;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( complex(D, G) )
%   | | | then return 0.30659274042992873;  // std dev = 1.109, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.12150957002435296;  // std dev = 1.593, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return -0.08215876974920736;  // std dev = 1.953, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.048584798784913036;  // std dev = 5.564, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( complex(A, L), phenotype(J, M) )
%   | | | then return 0.3330941768164282;  // std dev = 1.534, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.18450822775286385;  // std dev = 2.262, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( complex(A, N), interaction(A, P) )
%   | | | then return 0.3869310600954021;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04810544390717501;  // std dev = 2.910, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.2024121676421854;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( complex(A, F), phenotype(E, G) )
%   | | | then return 0.1704479585675418;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.024764176410058257;  // std dev = 3.147, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return -0.10530720695926195;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.11780103950191792;  // std dev = 4.371, 82.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=32 */
%   | else if ( location(A, J), enzyme(A, K) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.1449457983684814;  // std dev = 1.983, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.07081687117962454;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return -0.06077252816757058;  // std dev = 2.907, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return 0.01643144862574871;  // std dev = 3.134, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16118297236764106;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(G, D), enzyme(G, H) )
%   | | | then return 0.20187147675498984;  // std dev = 1.730, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.024274895495975165;  // std dev = 3.204, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.04023119682137663;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.27773073174515023;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( complex(K, M), interaction(N, A) )
%   | | | then return -0.03663923448999209;  // std dev = 1.879, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.08101117956666865;  // std dev = 3.483, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | else if ( interaction(A, P), interaction(P, P) )
%   | | | then return -0.13029261739640643;  // std dev = 1.982, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.009924529036425765;  // std dev = 3.847, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( interaction(C, G), phenotype(G, H) )
%   | | then if ( phenotype(C, H) )
%   | | | then return -0.060603890704019954;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.050273216891493576;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.3860110756537137;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.07489454882761543;  // std dev = 0.448, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   else if ( phenotype(A, I) )
%   | then if ( phenotype(J, I), interaction(J, K) )
%   | | then if ( enzyme(J, L), interaction(M, A) )
%   | | | then return 0.06518124622233785;  // std dev = 3.758, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | | else return 0.17687901499477734;  // std dev = 2.632, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.041602589195481765;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.03214103190277914;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.028131389753637596;  // std dev = 0.458, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then if ( phenotype(C, F), complex(C, E) )
%   | | then return -0.12784556664383864;  // std dev = 0.433, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( enzyme(A, G), interaction(H, A) )
%   | | | then return -0.024175823516347412;  // std dev = 1.204, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.15266015969600594;  // std dev = 1.423, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( complex(A, I), enzyme(C, J) )
%   | | then return 0.4206095603864031;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, K), interaction(C, C) )
%   | | | then return -0.09022034199288974;  // std dev = 1.189, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.06700158010318859;  // std dev = 4.598, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
%   else if ( interaction(L, A), interaction(M, L) )
%   | then if ( interaction(N, M), location(A, P) )
%   | | then return -0.020670105152992717;  // std dev = 0.451, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | else return 0.22414741909002514;  // std dev = 0.488, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else return -0.07453572330439856;  // std dev = 0.422, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.216', 'seconds']
Refined model CLL: -0.406857


******************************************
Best model found
******************************************
Results 

CLL : -0.367655 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.745 

Total Inference Time : 2.919987201690674 

Total revision time: 14.287999042510986
Best scored revision CLL: -0.368334


Results 

CLL : -0.367655 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.314815887451172 

Total Inference Time : 2.919987201690674 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.092
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1815690094489546;  // std dev = 7.672, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16164629972241884;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1535600940058659;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10505849587720781;  // std dev = 7.699, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13221511881032522;  // std dev = 7.438, 239.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06485935261846902;  // std dev = 7.686, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07788669769321532;  // std dev = 7.540, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02640896805387256;  // std dev = 7.744, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.041089106518992564;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06426291408538638;  // std dev = 7.447, 240.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.414', 'seconds']
Parameter learned model CLL:-0.377793 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.672, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.563, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.699, 186, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.438, 152, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.686, 184, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.54, 164, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.744, 193, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.63, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.447, 153, 87]}]
{'': [nan, 0.21881952985724443], 'false': [nan, 0.21881952985724443]}
{'': [0.0, 0.2200944089547171], 'false': [nan, 0.22009440895471813], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22519995039990096], 'false': [nan, 0.22519995039990096], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21712353580485472], 'false': [nan, 0.21712353580485524], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.23150855202114845], 'false': [nan, 0.23150855202114737]}
{'': [nan, 0.21797088819596716], 'false': [nan, 0.21797088819596716]}
{'': [0.0, 0.22647259567308511], 'false': [nan, 0.22647259567308511], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.21417091836734603], 'false': [nan, 0.21417091836734606], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [nan, 0.22137084532088033], 'false': [nan, 0.22137084532088047]}
{'': [0.0, 0.2310937500000004], 'false': [nan, 0.2310937500000004], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 11.538
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( complex(A, E) )
%   | then if ( enzyme(F, C), interaction(G, F) )
%   | | then if ( enzyme(G, H), phenotype(G, I) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.22178529873587588;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(J, K) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(L, A), interaction(L, L) )
%   | then return 0.11842290770225206;  // std dev = 0.439, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | else if ( phenotype(A, M) )
%   | | then return 0.14628452831985136;  // std dev = 0.453, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else return 0.20814893509951093;  // std dev = 0.477, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16060742503445127;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), interaction(F, D) )
%   | | then if ( complex(F, G) )
%   | | | then return 0.2790836417562128;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.5025788924833723;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, D), complex(A, H) )
%   | | | then return 0.2828371210919964;  // std dev = 1.494, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.10047347605710781;  // std dev = 5.193, 138.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=37 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( complex(I, K), phenotype(J, L) )
%   | | | then return 0.05001058654629347;  // std dev = 1.763, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.2733810181486808;  // std dev = 1.490, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.4330871017337106;  // std dev = 1.555, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.23863441483250988;  // std dev = 3.691, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14946260818596097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(A, A), location(A, F) )
%   | | then if ( enzyme(D, G) )
%   | | | then return 0.03141936966382711;  // std dev = 1.517, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.14930334511251922;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(H, E), interaction(H, H) )
%   | | | then return 0.2974990677038236;  // std dev = 3.337, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | | else return 0.18559647472741253;  // std dev = 2.714, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(A, K), phenotype(I, K) )
%   | | | then return 0.051983864883894726;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.27855426731900673;  // std dev = 1.930, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.0699431980054423;  // std dev = 3.313, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.14473556159345502;  // std dev = 4.028, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12305795271063441;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( enzyme(D, F), phenotype(A, G) )
%   | | then if ( interaction(D, H), complex(H, I) )
%   | | | then return 0.2647435692490043;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.031219841487932953;  // std dev = 1.931, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.3313987045780052;  // std dev = 1.839, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.13793801756897173;  // std dev = 3.367, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), interaction(J, L) )
%   | | | then return 0.039730519035111815;  // std dev = 5.373, 148.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=39 */
%   | | | else return 0.2014252643317292;  // std dev = 2.593, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else return 0.27187068889788163;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then return -0.2142855182678853;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(A, C), complex(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.4434153355153418;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05457165901190879;  // std dev = 1.369, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.03219293506672577;  // std dev = 0.448, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   else if ( location(A, I) )
%   | then if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(K, J), location(K, I) )
%   | | | then return 0.09116296168722526;  // std dev = 2.569, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.5334919346461702;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.039280895131533;  // std dev = 3.597, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | | else return 0.11094637053275368;  // std dev = 4.242, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | else return -0.030525062848571552;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), enzyme(C, F) )
%   | then return 0.13967722916854858;  // std dev = 0.495, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else return -0.021843353959030417;  // std dev = 0.447, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   else if ( complex(A, G) )
%   | then if ( interaction(H, A), interaction(H, H) )
%   | | then return 0.06640275344402938;  // std dev = 0.451, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( complex(I, G), phenotype(I, J) )
%   | | | then return 0.23109789068307138;  // std dev = 2.617, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.43958635687963055;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.30378749767596575;  // std dev = 1.544, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.07604464323931556;  // std dev = 2.018, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.02587771302250695;  // std dev = 1.226, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.07273552161875838;  // std dev = 3.977, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14812358631311792;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.020763803090056352;  // std dev = 2.420, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return -0.08017352964689413;  // std dev = 3.316, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | else if ( enzyme(J, D), interaction(J, K) )
%   | | | then return -0.004633824422453773;  // std dev = 2.397, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.4746081538998236;  // std dev = 0.834, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then if ( interaction(N, L), complex(N, M) )
%   | | | then return 0.08506383614088969;  // std dev = 3.651, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | | else return 0.2160664454029155;  // std dev = 2.358, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(A, P), interaction(P, A) )
%   | | | then return -0.1510911129109709;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.04172948092290043;  // std dev = 3.759, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10383234865291387;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(D, D), complex(A, F) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.028545726904569635;  // std dev = 1.958, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.33552071545847956;  // std dev = 1.063, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, A), enzyme(A, I) )
%   | | | then return 0.21813115189954058;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.03886867859401607;  // std dev = 5.413, 151.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=39 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.23213790861646444;  // std dev = 2.071, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.04615017684222317;  // std dev = 3.684, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.03242255992402207;  // std dev = 1.855, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.10110410606379935;  // std dev = 1.249, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( enzyme(G, H), phenotype(G, D) )
%   | | | then return 0.44348407685222513;  // std dev = 0.908, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.006331515608298426;  // std dev = 1.684, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return -0.13645025165485558;  // std dev = 0.415, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( phenotype(C, I) )
%   | | then if ( interaction(A, J), complex(C, K) )
%   | | | then return 0.12109575619303485;  // std dev = 1.105, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4104625416972749;  // std dev = 1.118, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(L, C), complex(L, M) )
%   | | | then return 0.23243218035336138;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.003859066825883939;  // std dev = 1.474, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   else if ( enzyme(A, N), interaction(P, A) )
%   | then return -0.07324665819823084;  // std dev = 0.449, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | else return 0.013071927068502688;  // std dev = 0.467, 133.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14308498860901778;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( interaction(A, F) )
%   | | then if ( complex(F, G), interaction(F, H) )
%   | | | then return 0.3362915962997345;  // std dev = 1.079, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.026029138264680864;  // std dev = 1.666, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( enzyme(I, D), interaction(I, I) )
%   | | | then return 0.08267898814618953;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.40556924689061524;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( enzyme(J, K), phenotype(A, L) )
%   | | | then return 0.3243412809497678;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.0626905325586904;  // std dev = 3.376, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.06158969335378718;  // std dev = 4.493, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | | | else return -0.009897606979209748;  // std dev = 3.967, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.494', 'seconds']
Refined model CLL: -0.409284


******************************************
Best model found
******************************************
Results 

CLL : -0.377202 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.538 

Total Inference Time : 4.276594638824463 

Total revision time: 18.625413064956668
Best scored revision CLL: -0.377793


Results 

CLL : -0.377202 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 18.719036941528323 

Total Inference Time : 4.276594638824463 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.175
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18314893509951274;  // std dev = 8.379, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16769372855028;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16361020995093914;  // std dev = 8.198, 294.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12105487819636127;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1123163714065124;  // std dev = 8.221, 297.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07559765299617087;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.048410157926188614;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07165228348330252;  // std dev = 8.191, 293.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03420055839500958;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.059639857474269;  // std dev = 8.127, 285.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.990', 'seconds']
Parameter learned model CLL:-0.385594 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.379, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.198, 190, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.3, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.221, 193, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.32, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.397, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.191, 189, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.333, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.127, 181, 104]}]
{'': [nan, 0.21937500000000063], 'false': [nan, 0.21937500000000063]}
{'': [0.0, 0.222222222222221], 'false': [nan, 0.22222222222222052], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22860845018279352], 'false': [nan, 0.22860845018279352], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22364648338674248], 'false': [nan, 0.2236464833867456]}
{'': [nan, 0.22755047670872458], 'false': [nan, 0.22755047670872625]}
{'': [nan, 0.222578343896362], 'false': [nan, 0.222578343896362]}
{'': [0.0, 0.21830938665184135], 'false': [nan, 0.21830938665184135], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-1.1564823173178713e-18, 0.22896015096273784], 'false': [nan, 0.22896015096273764], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [0.0, 0.2218661005011786], 'false': [nan, 0.2218661005011781], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.23175130809479805], 'false': [nan, 0.23175130809479805]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 11.705
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(A, E) )
%   | then return 0.2129876447769317;  // std dev = 0.478, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | else return 0.11842290770225206;  // std dev = 0.439, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   else if ( location(A, F), interaction(G, A) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then if ( phenotype(A, I), phenotype(G, I) )
%   | | | then return 0.2129876447769317;  // std dev = 2.664, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.08542166237223948;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.35814893509951234;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.20025419825740692;  // std dev = 5.065, 114.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=39 */
%   | else if ( interaction(A, L) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1640600442266007;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), enzyme(E, G) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.06493931758742351;  // std dev = 1.520, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.1847612101089755;  // std dev = 2.283, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( interaction(A, H), enzyme(H, D) )
%   | | | then return 0.08019534708769249;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.35407721872275727;  // std dev = 2.960, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( location(A, I) )
%   | | then if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.1614624772739516;  // std dev = 5.289, 126.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=42 */
%   | | | else return 0.11038988410720525;  // std dev = 4.401, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.33320549123154836;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2670719622367217;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14631432494150312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( phenotype(A, F), enzyme(D, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.18839060631107662;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.02687823550133086;  // std dev = 1.571, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( complex(D, I) )
%   | | | then return 0.2526700404840494;  // std dev = 3.863, 60.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=27 */
%   | | | else return 0.10350151551352046;  // std dev = 1.858, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( location(A, J), enzyme(A, K) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.4041188143602639;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.15781604318188994;  // std dev = 3.299, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.08671880716929936;  // std dev = 4.951, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
%   | | | else return 0.201216375114458;  // std dev = 2.642, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( complex(C, D), phenotype(C, E) )
%   | then if ( complex(A, D), phenotype(A, E) )
%   | | then return 0.26366516534930495;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.039256050399414925;  // std dev = 0.445, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( phenotype(C, F), phenotype(A, G) )
%   | | then return 0.5421528713863133;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.12565875054856876;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.28501228987335503;  // std dev = 2.247, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( interaction(A, I), enzyme(I, J) )
%   | then return 0.012507438566923889;  // std dev = 0.430, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return 0.023687714460998193;  // std dev = 1.466, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3683798739462118;  // std dev = 1.861, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else return 0.07610892338975717;  // std dev = 0.461, 166.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=50 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), phenotype(F, G) )
%   | | then if ( interaction(F, H), phenotype(A, G) )
%   | | | then return 0.12220861488972626;  // std dev = 1.791, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.013772830716031982;  // std dev = 1.908, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else return -0.07706209237813347;  // std dev = 0.356, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( interaction(A, I), location(I, C) )
%   | | then if ( interaction(J, A), interaction(A, J) )
%   | | | then return 0.08171949730371503;  // std dev = 4.121, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return 0.19137046255687684;  // std dev = 2.841, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( location(K, C), interaction(K, K) )
%   | | | then return 0.06760627041409549;  // std dev = 5.423, 139.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=42 */
%   | | | else return 0.28307601964659557;  // std dev = 0.986, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, L) )
%   | then return 0.09605804373429978;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.06014937496000633;  // std dev = 0.427, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then return 0.09440557507152615;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else return 0.02056647285244852;  // std dev = 0.462, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( phenotype(G, H) )
%   | | then return -0.06465683365680128;  // std dev = 0.425, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.14129470069609437;  // std dev = 1.892, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.05619509463336222;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( interaction(J, L), interaction(L, L) )
%   | | | then return 0.41990201639450947;  // std dev = 1.226, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.11638961328252947;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, M), enzyme(A, N) )
%   | | | then return 0.1722900823698067;  // std dev = 1.992, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.06931892904289934;  // std dev = 5.741, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, A), phenotype(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.024787976769954406;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0863231343411567;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( phenotype(D, H), complex(A, I) )
%   | | | then return 0.24109306227786054;  // std dev = 1.716, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.07511487281353785;  // std dev = 3.191, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | else if ( interaction(J, A), interaction(A, K) )
%   | | then if ( interaction(K, A), interaction(J, K) )
%   | | | then return 0.19490315779770284;  // std dev = 1.362, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.010065326872165553;  // std dev = 4.342, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return -0.015392028473921827;  // std dev = 2.837, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.06494931095201126;  // std dev = 5.048, 113.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=38 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1780511571336643;  // std dev = 0.000378, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( interaction(A, A), enzyme(E, G) )
%   | | | then return 0.36866711941829394;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.00477604864047093;  // std dev = 4.126, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | | else if ( phenotype(E, H), complex(E, D) )
%   | | | then return -0.2552040338436314;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.0614612358206998;  // std dev = 1.216, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( phenotype(J, K), interaction(J, J) )
%   | | | then return -0.08611055792800712;  // std dev = 1.988, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.0654541555364785;  // std dev = 4.901, 106.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=37 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.152907382195214;  // std dev = 3.547, 52.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=22 */
%   | | | else return 0.0357274672301629;  // std dev = 2.668, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.17747647816925582;  // std dev = 0.040, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( location(A, H) )
%   | | | then return 0.051107994251545254;  // std dev = 7.124, 222.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=78 */
%   | | | else return 0.37412240731959545;  // std dev = 1.123, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.04653119923547189;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07536628540762211;  // std dev = 1.504, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( complex(A, J), location(A, K) )
%   | | then if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.10949033182479277;  // std dev = 1.268, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.09330013300193457;  // std dev = 1.901, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.005589568062010148;  // std dev = 1.171, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.08649750448689315;  // std dev = 2.458, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then return 0.4735389562503254;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.08526676067409439;  // std dev = 1.135, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.027448159930906976;  // std dev = 1.374, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.36946444359420355;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22076293261891383;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, L), interaction(L, L) )
%   | then if ( interaction(L, A), phenotype(A, M) )
%   | | then return -0.024959319697170898;  // std dev = 0.457, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( enzyme(L, N) )
%   | | | then return -0.027814173599723834;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.24280718209634974;  // std dev = 2.074, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else return 1.3428671856576178E-4;  // std dev = 0.469, 224.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=71 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.099', 'seconds']
Refined model CLL: -0.401754


******************************************
Best model found
******************************************
Results 

CLL : -0.386446 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.705 

Total Inference Time : 4.422746419906616 

Total revision time: 19.263463621139525
Best scored revision CLL: -0.385594


Results 

CLL : -0.386446 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 19.35708749771118 

Total Inference Time : 4.422746419906616 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.152
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19148226843284577;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17020182822788615;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14767711877637915;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10369973491149784;  // std dev = 7.913, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12697748250017352;  // std dev = 7.669, 255.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.049349867333512855;  // std dev = 7.987, 300.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09967370735521977;  // std dev = 7.634, 251.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03713572863962651;  // std dev = 7.887, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.050105542001090186;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.007945657672803117;  // std dev = 7.951, 294.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.595', 'seconds']
Parameter learned model CLL:-0.369878 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.81, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.795, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.913, 196, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.669, 163, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.987, 208, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.634, 159, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.887, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.765, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.951, 202, 92]}]
{'': [nan, 0.2222222222222231], 'false': [nan, 0.2222222222222231]}
{'': [0.0, 0.22342980584738767], 'false': [nan, 0.22342980584738706], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22423441946596678], 'false': [nan, 0.22423441946596678]}
{'': [0.0, 0.2173996913580252], 'false': [nan, 0.2173996913580256], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23061899269511763], 'false': [nan, 0.23061899269511846], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21262222222222232], 'false': [nan, 0.21262222222222232], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2321867906858633], 'false': [nan, 0.2321867906858633], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21900416584011173], 'false': [nan, 0.21900416584011198], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22584129388825702], 'false': [nan, 0.2258412938882589], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-6.938893903907229e-19, 0.2150030080059224], 'false': [nan, 0.2150030080059224], 'true': [nan, -6.938893903907229e-19], 'true,false': [nan, -6.938893903907229e-19], 'true,false,false': [nan, -6.938893903907229e-19]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 6.34
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), complex(E, F) )
%   | then return 0.15148226843284515;  // std dev = 0.455, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   | else return 0.22178529873587596;  // std dev = 0.481, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( phenotype(A, H), interaction(G, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4137044906550678;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.1466104735610508;  // std dev = 0.453, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else if ( interaction(K, A), phenotype(A, L) )
%   | | then if ( enzyme(A, M), complex(K, N) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( enzyme(A, P) )
%   | | | then return 0.21529179224236947;  // std dev = 2.535, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.28314893509951233;  // std dev = 3.126, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(D, F), interaction(G, A) )
%   | | then if ( phenotype(D, H) )
%   | | | then return 0.2674500488471911;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.11558456758223591;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.1709394799636705;  // std dev = 2.936, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.05162506798295795;  // std dev = 3.515, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then return 0.42895152751901955;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.12605977512790134;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.22570554218310215;  // std dev = 4.643, 90.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.03520384224901484;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.13080730830327766;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.335409996075596;  // std dev = 0.499, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.04877230245319494;  // std dev = 0.425, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then if ( location(H, I) )
%   | | then return 0.04945176008744838;  // std dev = 0.430, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else return 0.2989376805099717;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.47349694467640485;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.25911976089835376;  // std dev = 3.441, 48.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=22 */
%   | | | else return 0.1602498133425312;  // std dev = 4.612, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.21096891122598685;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(A, F), interaction(D, G) )
%   | | then if ( complex(A, E), interaction(G, G) )
%   | | | then return 0.10017736998758878;  // std dev = 1.444, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3152352821403566;  // std dev = 2.486, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( interaction(D, H), phenotype(H, I) )
%   | | | then return 0.1797813205220715;  // std dev = 2.574, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.06999646149232298;  // std dev = 2.697, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.1287887335023109;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.45178553600059795;  // std dev = 0.828, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.006206584762416677;  // std dev = 4.014, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | | else return 0.0682378273885606;  // std dev = 4.428, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13996434510556152;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(A, E), interaction(A, A) )
%   | | then if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10988560884105632;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.483486591397537;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(D, H) )
%   | | | then return 0.18979357926181026;  // std dev = 1.305, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.10748225734861856;  // std dev = 1.921, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.00796894531273808;  // std dev = 2.962, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.07528288899498561;  // std dev = 3.768, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.17405739447593851;  // std dev = 2.992, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.08150330591785653;  // std dev = 4.594, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15372291402180507;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(A, F), complex(A, G) )
%   | | then if ( phenotype(F, E) )
%   | | | then return 0.28369618756826953;  // std dev = 1.638, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.4958502877422874;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(H, D), interaction(D, H) )
%   | | | then return 0.023389837929876617;  // std dev = 1.967, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.15096103007272937;  // std dev = 2.750, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.09582812765534285;  // std dev = 1.582, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0028352494594336927;  // std dev = 3.647, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.1800733762256669;  // std dev = 2.978, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return 0.060626953740584945;  // std dev = 4.112, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13351191540791452;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), phenotype(F, G) )
%   | | then if ( interaction(F, H), location(A, I) )
%   | | | then return 0.015303092737916543;  // std dev = 2.837, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return -0.0887450348323007;  // std dev = 1.975, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.01621601120358326;  // std dev = 1.313, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.12452285768579877;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(M, L), interaction(L, M) )
%   | | | then return 0.013696380427287366;  // std dev = 4.591, 98.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   | | | else return 0.16239590025073244;  // std dev = 2.789, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.26249836870163923;  // std dev = 2.317, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.11474608273538209;  // std dev = 2.799, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10609090184887329;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D) )
%   | then if ( enzyme(D, E), complex(A, F) )
%   | | then if ( phenotype(D, G), interaction(H, A) )
%   | | | then return 0.04449688548468484;  // std dev = 1.593, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.2956269729608182;  // std dev = 1.698, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(D, D), phenotype(A, I) )
%   | | | then return -0.09150835824619268;  // std dev = 2.723, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.016270789474353124;  // std dev = 4.577, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( complex(L, J), interaction(L, M) )
%   | | | then return 0.45726425575244245;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22029118674476542;  // std dev = 1.931, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.06305991210318042;  // std dev = 3.082, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.12492212404702666;  // std dev = 2.896, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10901323861509926;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, D) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.005602005844821246;  // std dev = 1.403, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.30497182802412737;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(G, D), phenotype(G, H) )
%   | | | then return 0.019338813486217875;  // std dev = 3.219, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return -0.06580179484161854;  // std dev = 3.376, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.14610338710074225;  // std dev = 1.223, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.03778262490561597;  // std dev = 3.050, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else if ( location(A, L) )
%   | | | then return 0.10872199562808149;  // std dev = 4.577, 85.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=36 */
%   | | | else return 0.3454478254956676;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08677349348348778;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), interaction(F, G) )
%   | | then if ( interaction(F, A), interaction(H, F) )
%   | | | then return -0.04767789762477823;  // std dev = 2.215, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.13307751505513937;  // std dev = 2.445, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return -0.014906143854016207;  // std dev = 2.108, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.11830887941215895;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), interaction(L, M) )
%   | | | then return 0.07003173627891851;  // std dev = 3.107, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.3710733055163285;  // std dev = 1.218, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( phenotype(A, N), location(A, P) )
%   | | | then return 0.11255521818043314;  // std dev = 2.931, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return -0.02379917042661357;  // std dev = 4.812, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.485', 'seconds']
Refined model CLL: -0.427921


******************************************
Best model found
******************************************
Results 

CLL : -0.369993 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.34 

Total Inference Time : 2.630446195602417 

Total revision time: 12.053175346374513
Best scored revision CLL: -0.369878


Results 

CLL : -0.369993 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.146799222946168 

Total Inference Time : 2.630446195602417 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.258
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18514513281814404;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21293895583484024;  // std dev = 7.309, 227.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13974264070577577;  // std dev = 7.550, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08221689875308319;  // std dev = 7.743, 284.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10219486118325816;  // std dev = 7.550, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06341330976119905;  // std dev = 7.662, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07112513846168289;  // std dev = 7.550, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05179657307794426;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05045430343099551;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.026914204899486448;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.757', 'seconds']
Parameter learned model CLL:-0.370997 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.608, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.309, 141, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.55, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.743, 198, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.55, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.662, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.55, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.527, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 176, 86]}]
{'': [0.0, 0.22006968439618962], 'false': [nan, 0.22006968439618962], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2353237982495293], 'false': [nan, 0.23532379824952837], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2235140330642066], 'false': [nan, 0.2235140330642066], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21111882562983464], 'false': [nan, 0.21111882562983433], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.22351403306420614], 'false': [nan, 0.22351403306420622], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [nan, 0.2166364837080101], 'false': [nan, 0.2166364837080101]}
{'': [0.0, 0.2235140330642057], 'false': [nan, 0.2235140330642057], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22179156542091], 'false': [nan, 0.22179156542091064], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [1.1564823173178713e-18, 0.22480473670949794], 'false': [nan, 0.22480473670949785], 'true': [nan, 1.1564823173178713e-18], 'true,false': [nan, 1.1564823173178713e-18], 'true,false,false': [nan, 1.1564823173178713e-18]}
{'': [nan, 0.2204999708641697], 'false': [nan, 0.2204999708641697]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.548
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( location(A, F), complex(E, G) )
%   | | then if ( interaction(H, E), location(H, F) )
%   | | | then return 0.30814893509951236;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.1658412427918199;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.1914822684328457;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.08037115732173453;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.14981560176617903;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(N, A), complex(A, P) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.25264434794354806;  // std dev = 5.103, 109.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.0663559447484886;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4174214094104142;  // std dev = 1.698, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.08224403757983909;  // std dev = 1.928, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.2207370548272579;  // std dev = 3.006, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), interaction(L, A) )
%   | | | then return 0.0688067592402553;  // std dev = 2.607, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.18417188574922977;  // std dev = 4.458, 87.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.24119814430366637;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.05899773127839663;  // std dev = 3.158, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), interaction(G, F) )
%   | | then if ( interaction(F, F), enzyme(G, H) )
%   | | | then return -0.09318480913709501;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.08481975409265748;  // std dev = 3.154, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else return 0.4618497229941952;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.023921614682242832;  // std dev = 2.166, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.13741942410751173;  // std dev = 3.171, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( interaction(A, M), phenotype(A, N) )
%   | | | then return 0.28497677858112125;  // std dev = 2.693, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.1553901884817339;  // std dev = 4.665, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(A, E), location(A, F) )
%   | | then if ( interaction(D, G), enzyme(G, H) )
%   | | | then return 0.018767363596104012;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2132217969626527;  // std dev = 1.284, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.1517058364745923;  // std dev = 1.599, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.3181564052652218;  // std dev = 1.801, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(M, L), phenotype(L, N) )
%   | | | then return 0.09170645731029602;  // std dev = 4.650, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   | | | else return 0.25163675321450857;  // std dev = 1.942, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(A, P), complex(P, Q) )
%   | | | then return 0.12269193828871154;  // std dev = 3.127, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0.04304955721305695;  // std dev = 3.417, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(D, F), interaction(D, G) )
%   | | then if ( complex(A, F), enzyme(G, H) )
%   | | | then return 0.33021103680648717;  // std dev = 1.737, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.07412499981479076;  // std dev = 2.590, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( phenotype(E, I), interaction(J, E) )
%   | | | then return 0.04973851946724113;  // std dev = 3.018, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return -0.08620258986122627;  // std dev = 2.405, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.11923875864363494;  // std dev = 3.402, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.03945725244074513;  // std dev = 2.780, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else if ( interaction(A, N), phenotype(A, P) )
%   | | | then return 0.06538994272796586;  // std dev = 2.322, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.22410910891377261;  // std dev = 2.537, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(A, E), interaction(F, C) )
%   | then if ( interaction(C, F), complex(F, D) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.026189618657525126;  // std dev = 1.444, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.22317627340112356;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.47265967610220117;  // std dev = 0.422, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( phenotype(C, H), interaction(A, I) )
%   | | then if ( phenotype(I, J) )
%   | | | then return 0.11616339644186915;  // std dev = 2.609, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.2685689101175148;  // std dev = 0.984, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.02119957951903712;  // std dev = 0.458, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   else if ( interaction(A, K), complex(K, L) )
%   | then if ( interaction(K, M), complex(M, L) )
%   | | then return 0.04183473951552811;  // std dev = 0.467, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else return 0.3604826140965983;  // std dev = 0.488, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return 0.0384633432487893;  // std dev = 0.464, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1035477191691821;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), interaction(F, F) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.09371721850086832;  // std dev = 1.358, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -1.7161636610470648E-4;  // std dev = 2.521, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.3532107450542869;  // std dev = 1.688, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.09496134557798368;  // std dev = 1.547, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), location(A, M) )
%   | | | then return -0.04461242526363752;  // std dev = 4.326, 96.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=25 */
%   | | | else return 0.20660067448405559;  // std dev = 1.229, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(N, A), interaction(A, P) )
%   | | | then return 0.11085109448367032;  // std dev = 2.215, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.0296981120417734;  // std dev = 4.239, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09580792037784891;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.36418835462907423;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.11587187098888127;  // std dev = 1.770, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(D, H), phenotype(H, I) )
%   | | | then return 0.05302768771126512;  // std dev = 3.474, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return -0.10099059488986072;  // std dev = 2.144, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.6967206419329378;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13745923590223827;  // std dev = 1.489, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return -0.014800530488969003;  // std dev = 2.622, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.06766896101313374;  // std dev = 4.980, 109.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=39 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0872721284687249;  // std dev = 0.001, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), interaction(E, F) )
%   | | then if ( interaction(E, D), location(A, G) )
%   | | | then return -0.040308168717579376;  // std dev = 3.476, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | | else return -0.16032051999618827;  // std dev = 2.161, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( phenotype(D, H) )
%   | | | then return 0.09157680523737885;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.1284807359412625;  // std dev = 1.532, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), complex(K, L) )
%   | | | then return 0.22771045427437864;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0957573370106636;  // std dev = 1.937, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return -0.0059131149471132625;  // std dev = 2.483, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.07342372080130642;  // std dev = 4.342, 82.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then return -0.1088255576072243;  // std dev = 0.433, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( complex(A, G), interaction(H, E) )
%   | | then if ( phenotype(A, I), phenotype(H, I) )
%   | | | then return 0.05869017391229515;  // std dev = 1.626, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.23842107426446557;  // std dev = 1.684, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( location(A, J), location(E, J) )
%   | | | then return -0.07098204755141535;  // std dev = 3.593, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | | else return 0.050416381041835844;  // std dev = 1.321, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( phenotype(A, K) )
%   | | then if ( enzyme(A, L), interaction(A, M) )
%   | | | then return -0.020034746328780283;  // std dev = 1.876, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.09597768099698023;  // std dev = 3.992, 64.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   | | else if ( complex(A, N), interaction(A, P) )
%   | | | then return -0.11114442855068349;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.03937117521661787;  // std dev = 2.894, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.896', 'seconds']
Refined model CLL: -0.40824


******************************************
Best model found
******************************************
Results 

CLL : -0.370325 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.548 

Total Inference Time : 2.67332124710083 

Total revision time: 13.257160907745362
Best scored revision CLL: -0.370997


Results 

CLL : -0.370325 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.350784784317018 

Total Inference Time : 2.67332124710083 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.117
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19667033587772242;  // std dev = 7.586, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16078512408192883;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12870131997610845;  // std dev = 7.692, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09998351202456435;  // std dev = 7.738, 279.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10431450065832919;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11606105071703345;  // std dev = 7.438, 239.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08200227962285818;  // std dev = 7.507, 247.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0479186895065192;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.028031434029737817;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.025825204738932662;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.526', 'seconds']
Parameter learned model CLL:-0.372267 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 170, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.644, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.692, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.738, 192, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.438, 152, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.507, 160, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.608, 173, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.665, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.644, 178, 87]}]
{'': [0.0, 0.22392466199336938], 'false': [nan, 0.22392466199336938], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.220519757920968], 'false': [nan, 0.220519757920968], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21754703719723226], 'false': [nan, 0.21754703719723226]}
{'': [nan, 0.21459128222916027], 'false': [nan, 0.2145912822291601]}
{'': [2.3129646346357427e-18, 0.22222222222222318], 'false': [nan, 0.2222222222222227], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.23150855202114798], 'false': [nan, 0.23150855202114798], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22816305790948752], 'false': [nan, 0.22816305790948752], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2226479289940829], 'false': [nan, 0.2226479289940828], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2192442637558477], 'false': [nan, 0.21924426375584627]}
{'': [0.0, 0.220519757920968], 'false': [nan, 0.220519757920968], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 15.129
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, D), enzyme(E, F) )
%   | | then if ( interaction(D, E), phenotype(D, G) )
%   | | | then return 0.2391013160518933;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.08037115732173455;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( complex(E, H), interaction(I, E) )
%   | | | then return 0.2890432440426028;  // std dev = 5.492, 123.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=53 */
%   | | | else return 0.13087620782678508;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( phenotype(J, K) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( location(A, L) )
%   | | | then return 0.05045662740720463;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(D, F), complex(F, G) )
%   | | then if ( phenotype(D, H), phenotype(A, I) )
%   | | | then return 0.40593307745196017;  // std dev = 1.303, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.13005016986435664;  // std dev = 2.054, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(D, J) )
%   | | | then return 0.5854618176811931;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3929218356420568;  // std dev = 1.485, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(M, K), interaction(M, M) )
%   | | | then return 0.1276023706183972;  // std dev = 4.093, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | | | else return 0.2356518196219782;  // std dev = 3.511, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | else if ( interaction(N, A), location(N, P) )
%   | | | then return 0.07985654956669755;  // std dev = 4.057, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   | | | else return 0.5116043761770418;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( location(A, E), complex(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.3818727368699984;  // std dev = 1.299, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1480685467497574;  // std dev = 3.868, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | | else if ( interaction(I, D), phenotype(I, J) )
%   | | | then return 0.0924246774209832;  // std dev = 5.487, 144.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=43 */
%   | | | else return 0.20818086959501272;  // std dev = 1.928, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( interaction(K, M) )
%   | | | then return -0.029807573343480432;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.4552083945219441;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.03410236083742434;  // std dev = 0.401, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   else if ( interaction(N, A), phenotype(N, P) )
%   | then return 0.1642343558283724;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.419413868866216;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( complex(E, D), interaction(E, E) )
%   | then return 0.1917635869235535;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.06860842148188219;  // std dev = 0.449, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else return -0.007735851346125767;  // std dev = 0.424, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( enzyme(G, I) )
%   | | then return 0.4074322742519599;  // std dev = 1.186, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(J, G), interaction(J, J) )
%   | | | then return 0.09055403139303114;  // std dev = 3.903, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | | else return 0.2147901060666041;  // std dev = 2.903, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | else if ( interaction(K, A) )
%   | | then if ( interaction(A, L), phenotype(K, M) )
%   | | | then return 0.1771798138392175;  // std dev = 1.881, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.08695624271727963;  // std dev = 4.165, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   | | else return -0.0637316774338355;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), enzyme(A, E) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( complex(H, F), interaction(H, I) )
%   | | | then return 0.2935813027539999;  // std dev = 1.802, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.0757615942639921;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(J, E), phenotype(J, K) )
%   | | | then return 0.09138183580131112;  // std dev = 3.625, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return 0.2520437669802386;  // std dev = 1.575, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( location(A, L) )
%   | | then if ( interaction(A, M), phenotype(A, N) )
%   | | | then return 0.13522567909310126;  // std dev = 3.118, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.045819793607158245;  // std dev = 4.926, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return -0.06826920248879788;  // std dev = 1.551, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.06875196523192133;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15404407638368872;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.18420457131537538;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.22793231393134228;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.14034274021221826;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.00998928508757489;  // std dev = 2.238, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), interaction(L, L) )
%   | | | then return 0.12689478753446815;  // std dev = 4.042, 68.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
%   | | | else return 0.2726958894240316;  // std dev = 1.798, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return 0.004373722148996233;  // std dev = 3.081, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.10398180626329184;  // std dev = 4.089, 72.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14323459168569128;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), interaction(E, A) )
%   | | then if ( complex(A, F), phenotype(A, G) )
%   | | | then return -0.02059923113900597;  // std dev = 3.580, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.05628208865307668;  // std dev = 5.479, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.2177962209117355;  // std dev = 1.969, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.057114912396050536;  // std dev = 2.819, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then return -0.14697064387199957;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.07293479310010327;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.009118242124833753;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), phenotype(F, G) )
%   | | then if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.0711791786855164;  // std dev = 2.885, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.028755451468453073;  // std dev = 3.388, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.1947645692120523;  // std dev = 1.570, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return -0.07185464493378037;  // std dev = 1.212, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(L, A), phenotype(L, M) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.3408328777446416;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.008935203119640042;  // std dev = 4.726, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.12456821584355937;  // std dev = 3.108, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.011370837935815352;  // std dev = 1.694, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then return -0.020043491841084147;  // std dev = 0.441, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( phenotype(A, G), interaction(E, H) )
%   | | then if ( interaction(E, A), enzyme(H, I) )
%   | | | then return 0.04202591153560791;  // std dev = 2.224, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.10167983902359617;  // std dev = 1.734, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( complex(E, J), interaction(K, A) )
%   | | | then return 0.11477979937291512;  // std dev = 2.589, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.04532771593968657;  // std dev = 1.873, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( enzyme(A, L), phenotype(A, M) )
%   | | then if ( enzyme(N, L), interaction(N, P) )
%   | | | then return 0.37809902131133216;  // std dev = 1.137, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.17133639904283104;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, Q) )
%   | | | then return 0.019649663729154578;  // std dev = 2.852, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.05414462396154384;  // std dev = 4.195, 78.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(D, F), interaction(G, D) )
%   | | then if ( location(A, H) )
%   | | | then return -0.17500490309125488;  // std dev = 2.219, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.07765212824264638;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.1844702893848051;  // std dev = 1.956, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return -0.06629060457548903;  // std dev = 2.566, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( interaction(A, K), enzyme(A, L) )
%   | | then if ( interaction(M, A), interaction(K, K) )
%   | | | then return -0.1385993350150182;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.012941674433373905;  // std dev = 2.501, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.14992264504952946;  // std dev = 2.627, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.04465614423074891;  // std dev = 5.101, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.538', 'seconds']
Refined model CLL: -0.397291


******************************************
Best model found
******************************************
Results 

CLL : -0.371668 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.129 

Total Inference Time : 5.853569507598877 

Total revision time: 23.860386796951293
Best scored revision CLL: -0.372267


Results 

CLL : -0.371668 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 23.91809267616272 

Total Inference Time : 5.853569507598877 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.278
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18013035924811974;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1996894315930539;  // std dev = 8.127, 285.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1430290036270282;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12406972155763227;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10444417332817228;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09913382923517962;  // std dev = 8.167, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.036166828313300904;  // std dev = 8.439, 330.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05244467461802281;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.017046376288524012;  // std dev = 8.445, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03914380664007085;  // std dev = 8.286, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.634', 'seconds']
Parameter learned model CLL:-0.372589 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.397, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.127, 181, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.3, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.257, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.167, 186, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.439, 226, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.293, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.445, 227, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.286, 202, 104]}]
{'': [0.0, 0.21830938665184232], 'false': [nan, 0.21830938665184232], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23175130809479882], 'false': [nan, 0.23175130809480088], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22364648338674192], 'false': [nan, 0.22364648338674192], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-1.1564823173178713e-18, 0.2250692520775619], 'false': [nan, 0.22506925207756204], 'true': [nan, -1.1564823173178713e-18], 'true,false': [nan, -1.1564823173178713e-18], 'true,false,false': [nan, -1.1564823173178713e-18]}
{'': [0.0, 0.22577957107144472], 'false': [nan, 0.22577957107144317], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2300118906064221], 'false': [nan, 0.2300118906064221], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21583103764921976], 'false': [nan, 0.21583103764921976], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2240023766830408], 'false': [nan, 0.22400237668304146], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21547813546791175], 'false': [nan, 0.21547813546791175], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22435815284719496], 'false': [nan, 0.22435815284719496], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 9.209
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D) )
%   | | then if ( complex(A, F), enzyme(E, G) )
%   | | | then return 0.25159155805033095;  // std dev = 3.815, 61.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=24 */
%   | | | else return 0.17924985253070602;  // std dev = 6.894, 218.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=70 */
%   | | else if ( enzyme(D, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K) )
%   | | | then return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( complex(D, E), interaction(D, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.3990308327560505;  // std dev = 1.316, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1267267056868747;  // std dev = 2.048, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( complex(A, F), enzyme(A, G) )
%   | | | then return 0.00650192434364675;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.1164174732689047;  // std dev = 3.383, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(A, J), phenotype(H, K) )
%   | | | then return 0.3328555951711041;  // std dev = 2.742, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.18805108344973548;  // std dev = 5.018, 110.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=39 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.282496964416959;  // std dev = 1.656, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.10302603724579239;  // std dev = 3.520, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( complex(F, H), phenotype(A, I) )
%   | | | then return 0.1989798043947595;  // std dev = 3.018, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.09169338571179753;  // std dev = 2.535, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.05827263429386564;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.47918654198843097;  // std dev = 1.437, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( complex(A, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.1340140356117389;  // std dev = 3.554, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.010713684173085254;  // std dev = 2.793, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.09321426493855027;  // std dev = 2.667, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.15755902906509475;  // std dev = 4.701, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( phenotype(A, G), complex(F, H) )
%   | | | then return 0.15676740449096743;  // std dev = 1.743, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.02767499528170936;  // std dev = 2.078, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return -0.12161673858196534;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(A, A), enzyme(I, J) )
%   | | | then return 0.4482125219247157;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11214176812779746;  // std dev = 7.578, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.060737746294853734;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5459475183090863;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.52140541712353;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.18375241053693722;  // std dev = 2.003, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.025058784127680252;  // std dev = 1.675, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.14196926082852704;  // std dev = 2.083, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), enzyme(A, I) )
%   | | | then return -0.06664916768941101;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.007167996732438284;  // std dev = 2.989, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.06955094872875563;  // std dev = 6.274, 185.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=57 */
%   | | | else return 0.19639622309044757;  // std dev = 2.542, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(E, F), interaction(D, A) )
%   | | | then return 0.011399505721294502;  // std dev = 2.666, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.10429945298210087;  // std dev = 4.154, 74.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | else if ( phenotype(D, G), enzyme(D, H) )
%   | | | then return 0.07717541338932557;  // std dev = 1.990, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.3753116307668292;  // std dev = 1.833, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( complex(K, J), interaction(K, L) )
%   | | | then return -0.0742601506725403;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.010066676005679997;  // std dev = 1.917, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( location(A, M) )
%   | | | then return 0.05799298466961006;  // std dev = 5.237, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
%   | | | else return -0.01866560192106457;  // std dev = 1.941, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(D, D), interaction(A, F) )
%   | | then if ( phenotype(D, G), phenotype(A, H) )
%   | | | then return 0.010944435449797703;  // std dev = 2.349, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.06353872299173252;  // std dev = 1.766, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( enzyme(D, I), complex(A, J) )
%   | | | then return 0.24935849985901098;  // std dev = 1.815, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.09445198332037381;  // std dev = 6.316, 172.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=63 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then if ( interaction(A, M) )
%   | | | then return 0.08936675107888377;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10968751437926506;  // std dev = 1.821, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return -0.05342281311486697;  // std dev = 1.983, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.1101130358584632;  // std dev = 2.667, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.07282647504835559;  // std dev = 1.071, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.28063321314533907;  // std dev = 1.305, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( enzyme(D, H), interaction(I, D) )
%   | | | then return 0.11807725424615696;  // std dev = 2.360, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.04175968022228339;  // std dev = 3.851, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( complex(J, L) )
%   | | | then return 0.007433087258749264;  // std dev = 5.709, 154.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=46 */
%   | | | else return 0.1879538237317067;  // std dev = 2.103, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( enzyme(A, M), interaction(N, A) )
%   | | | then return -0.2229358047173426;  // std dev = 1.300, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.006756680491566678;  // std dev = 2.627, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( phenotype(E, D), interaction(A, F) )
%   | | then if ( interaction(F, F), interaction(F, E) )
%   | | | then return 0.02705500122189247;  // std dev = 2.649, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.26762377472158044;  // std dev = 2.465, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else if ( interaction(A, G), phenotype(E, H) )
%   | | | then return -0.09304151268908659;  // std dev = 1.760, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.056325708190681605;  // std dev = 4.514, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(I, A) )
%   | | | then return -0.05747672638081662;  // std dev = 1.708, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.24671124414948245;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06321121247379105;  // std dev = 2.939, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.019454047507354227;  // std dev = 4.147, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(A, F), enzyme(D, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.20852989930224994;  // std dev = 1.302, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.12250015050720488;  // std dev = 1.226, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, H), interaction(D, H) )
%   | | | then return 0.07864500075662989;  // std dev = 4.244, 72.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=30 */
%   | | | else return -0.020888908771472547;  // std dev = 5.875, 165.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=48 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.07672604139788992;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.004139818053647301;  // std dev = 1.472, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.5170517715401238;  // std dev = 0.915, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.089029603776879;  // std dev = 2.763, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.096', 'seconds']
Refined model CLL: -0.404172


******************************************
Best model found
******************************************
Results 

CLL : -0.373488 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.209 

Total Inference Time : 4.06550669670105 

Total revision time: 16.816676628112795
Best scored revision CLL: -0.372589


Results 

CLL : -0.373488 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.87438250732422 

Total Inference Time : 4.06550669670105 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.184
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21752393509951257;  // std dev = 7.677, 256.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16655124035429975;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13924421696743516;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10132865710829944;  // std dev = 7.913, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10110738012861684;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0682102949004615;  // std dev = 7.893, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08473375518139903;  // std dev = 7.718, 261.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03145822429184008;  // std dev = 7.932, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04959836765867992;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04832647356818043;  // std dev = 7.734, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.635', 'seconds']
Parameter learned model CLL:-0.376983 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.677, 164, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.81, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.913, 196, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.81, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.893, 193, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.718, 169, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.932, 199, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.734, 171, 92]}]
{'': [nan, 0.2302246093750008], 'false': [nan, 0.2302246093750008]}
{'': [0.0, 0.22342980584738728], 'false': [nan, 0.22342980584738747], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22262479338842872], 'false': [nan, 0.22262479338842872], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2173996913580234], 'false': [nan, 0.21739969135802428], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22342980584738933], 'false': [nan, 0.22342980584738867], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21860264696829873], 'false': [nan, 0.21860264696829873], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22824092423775302], 'false': [nan, 0.22824092423775302], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2161996197494117], 'false': [nan, 0.21619961974941193], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22463648834019265], 'false': [nan, 0.22463648834019095], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2274429296361085], 'false': [nan, 0.2274429296361085], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.269
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return 0.15814893509951197;  // std dev = 0.458, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   else if ( complex(A, D) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( interaction(G, F), enzyme(G, H) )
%   | | | then return 0.26723984419042146;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.0962441731947503;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.23745927992709853;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( enzyme(K, M) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.35814893509951234;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.07689893509951237;  // std dev = 2.339, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.21109011157009963;  // std dev = 3.941, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.19798063067295105;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( phenotype(A, G), complex(A, H) )
%   | | | then return 0.33934283367447016;  // std dev = 1.215, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.13664222321848324;  // std dev = 3.013, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.13040696797772983;  // std dev = 2.213, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.34967961742710285;  // std dev = 2.501, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | else if ( location(A, K) )
%   | | then if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.12043663590194167;  // std dev = 3.675, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.16378661004961642;  // std dev = 4.744, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | | else return 0.08674941196697027;  // std dev = 0.448, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13707119885900854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), phenotype(F, G) )
%   | | then if ( enzyme(A, H), interaction(D, D) )
%   | | | then return 0.09054674894466903;  // std dev = 1.680, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.22502712755734725;  // std dev = 4.288, 75.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=32 */
%   | | else if ( interaction(I, D), location(I, E) )
%   | | | then return 0.061039080199036665;  // std dev = 3.419, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | | else return 0.16330462178512176;  // std dev = 3.305, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( complex(A, L) )
%   | | | then return 0.14856949040184758;  // std dev = 1.813, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.45946945930016586;  // std dev = 1.597, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( location(A, M), enzyme(A, N) )
%   | | | then return 0.44312143283883115;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1456288703231921;  // std dev = 2.421, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12449164846776678;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(A, A) )
%   | | then if ( complex(D, F), enzyme(A, G) )
%   | | | then return -0.02935417328473592;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.04165097490731359;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( phenotype(D, H), phenotype(A, H) )
%   | | | then return 0.5527402168193678;  // std dev = 0.858, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.13236750822693594;  // std dev = 6.257, 170.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=61 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.19585487496001908;  // std dev = 1.337, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.016797909730758304;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, M) )
%   | | | then return 0.02767756213761127;  // std dev = 3.438, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return 0.13482323335001611;  // std dev = 1.377, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10896135288006166;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), enzyme(D, G) )
%   | | then if ( interaction(A, D), complex(F, H) )
%   | | | then return -0.09618257600799708;  // std dev = 1.579, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.054752315513815396;  // std dev = 2.476, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( interaction(I, D), interaction(D, I) )
%   | | | then return 0.1742752437830757;  // std dev = 3.056, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.04303305409041906;  // std dev = 5.202, 131.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=39 */
%   | else if ( location(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), interaction(L, L) )
%   | | | then return -0.05723000625090946;  // std dev = 1.777, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.25778536851691475;  // std dev = 1.392, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.06237159176942364;  // std dev = 1.471, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.23821980463415995;  // std dev = 2.679, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10220755948685838;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( enzyme(A, F), interaction(E, G) )
%   | | then if ( phenotype(D, H) )
%   | | | then return 0.15420310283208757;  // std dev = 1.545, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.013386137658472328;  // std dev = 2.288, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(I, D), interaction(D, I) )
%   | | | then return 0.3362290817603076;  // std dev = 1.872, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.07440861788264838;  // std dev = 2.417, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), enzyme(L, M) )
%   | | | then return -0.10034460430311003;  // std dev = 1.993, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.041966878649626276;  // std dev = 3.447, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | else if ( interaction(N, A), complex(A, P) )
%   | | | then return 0.22386054866270905;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.02839373131811782;  // std dev = 4.796, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0900877922726394;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, E), location(E, F) )
%   | | then if ( phenotype(E, G), interaction(A, H) )
%   | | | then return 0.01765291358693703;  // std dev = 2.333, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.08349302812649466;  // std dev = 2.638, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( complex(E, I), enzyme(A, J) )
%   | | | then return 0.19601096317991729;  // std dev = 2.492, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.02160575902784815;  // std dev = 4.382, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | else if ( location(A, K), interaction(A, L) )
%   | | then if ( phenotype(L, M), complex(A, N) )
%   | | | then return 0.17586002812030835;  // std dev = 1.846, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.046662963340718636;  // std dev = 3.465, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return 0.1215781131731598;  // std dev = 2.100, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.3712938843729008;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09165769712424722;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( interaction(A, G), complex(A, H) )
%   | | | then return -0.09369245376440999;  // std dev = 1.567, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.12098297763974279;  // std dev = 2.241, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.3341485605791812;  // std dev = 1.799, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.09911723999538764;  // std dev = 2.820, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | else if ( interaction(A, K) )
%   | | then if ( phenotype(A, L), complex(K, M) )
%   | | | then return -0.10850818144708278;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.009561878290287049;  // std dev = 3.184, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else if ( phenotype(A, N), complex(A, P) )
%   | | | then return 0.14115574562154867;  // std dev = 2.438, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.05326363624997298;  // std dev = 4.452, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08203610535459391;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.027440741305227827;  // std dev = 1.900, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.2156612062333532;  // std dev = 2.050, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.03841284413174217;  // std dev = 3.025, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return -0.11821067324079088;  // std dev = 2.983, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return -0.07483114760195043;  // std dev = 2.500, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.035494689045077604;  // std dev = 2.790, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return 0.33799387540249787;  // std dev = 1.524, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.06408941907269283;  // std dev = 4.108, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07317958016288421;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( enzyme(A, E), complex(A, G) )
%   | | | then return 0.1169342271624227;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.016664600373533605;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(H, D), complex(H, I) )
%   | | | then return -0.1651108010017781;  // std dev = 2.544, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return -0.014334164543052233;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.08238394406057013;  // std dev = 2.019, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.07337167112451806;  // std dev = 3.899, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.005934960926885895;  // std dev = 4.284, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | | else return 0.09050507294348192;  // std dev = 3.770, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.158', 'seconds']
Refined model CLL: -0.408926


******************************************
Best model found
******************************************
Results 

CLL : -0.377112 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.269 

Total Inference Time : 2.7384145259857178 

Total revision time: 13.132164886474609
Best scored revision CLL: -0.376983


Results 

CLL : -0.377112 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.189870765686035 

Total Inference Time : 2.7384145259857178 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.247
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1641987571635697;  // std dev = 7.725, 281.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18655629776433222;  // std dev = 7.479, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1580603407498421;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13536803642079204;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06992425056406008;  // std dev = 7.707, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06850295166507812;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06396568341329306;  // std dev = 7.594, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06857738021627846;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.021694099524196965;  // std dev = 7.682, 274.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.035365150838252014;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.411', 'seconds']
Parameter learned model CLL:-0.367017 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.725, 195, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.479, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.487, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.471, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.707, 192, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.642, 182, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.495, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.682, 188, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.579, 173, 86]}]
{'': [0.0, 0.21238332847861668], 'false': [nan, 0.21238332847861668], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22737788353493335], 'false': [nan, 0.22737788353493377]}
{'': [0.0, 0.22695012211313095], 'false': [nan, 0.22695012211313095], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22780508121616078], 'false': [nan, 0.22780508121616033], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21365353760157466], 'false': [nan, 0.21365353760157524], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21792158609935472], 'false': [nan, 0.21792158609935472], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22093040325303462], 'false': [nan, 0.22093040325303462]}
{'': [nan, 0.22652185223725232], 'false': [nan, 0.22652185223725155]}
{'': [nan, 0.2153551068250847], 'false': [nan, 0.21535510682508516]}
{'': [0.0, 0.22179156542091003], 'false': [nan, 0.22179156542091003], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.616
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( location(E, D), phenotype(A, F) )
%   | | then if ( interaction(A, G), phenotype(G, F) )
%   | | | then return 0.1402002171507944;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.2735335504841277;  // std dev = 3.973, 65.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=27 */
%   | | else if ( interaction(H, E), location(H, D) )
%   | | | then return 0.18167834686421766;  // std dev = 3.858, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | else return 0.08314893509951231;  // std dev = 2.641, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K), phenotype(I, L) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.15814893509951225;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(E, A), phenotype(E, C) )
%   | then if ( interaction(E, D) )
%   | | then if ( interaction(D, D), complex(A, F) )
%   | | | then return 0.24021112445524503;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.33982355427410105;  // std dev = 1.403, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.4912757917612804;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(D, G) )
%   | | then return 0.1469833233876139;  // std dev = 0.465, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | else return 0.49040032115077253;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(H, A), complex(A, I) )
%   | then return 0.09055998496027537;  // std dev = 0.441, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.08456353518643846;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.28087037604024995;  // std dev = 2.221, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return 0.1580541189725971;  // std dev = 0.470, 91.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=30 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1357213806890205;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( enzyme(E, G), interaction(F, A) )
%   | | | then return 0.594670467853632;  // std dev = 0.927, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.08912842975937106;  // std dev = 5.990, 174.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=50 */
%   | | else if ( interaction(H, A), location(H, D) )
%   | | | then return 0.3529951967097862;  // std dev = 2.232, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.13081066049288734;  // std dev = 3.468, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | else if ( interaction(I, A) )
%   | | then return 0.09500418599971128;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.1589497089911792;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13736366344762613;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.21270282669832516;  // std dev = 1.641, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.0015347802763700537;  // std dev = 2.908, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( phenotype(I, D), interaction(I, I) )
%   | | | then return 0.11305705434051767;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2772504851755825;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.11977203157394911;  // std dev = 1.958, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.4149515699972579;  // std dev = 1.455, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.11050535022429507;  // std dev = 5.056, 115.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=38 */
%   | | | else return 0.17923020110335197;  // std dev = 3.194, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10675006872367196;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(A, E), complex(D, F) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.02306744669940819;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.020864814259787094;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.1479346687160202;  // std dev = 1.937, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.465066059831306;  // std dev = 1.432, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.21019701759115753;  // std dev = 1.224, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04485164453058647;  // std dev = 4.037, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.3359394833432829;  // std dev = 1.273, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0830780524524646;  // std dev = 5.168, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11091042922712899;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(D, E), location(A, F) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.07961185073326661;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 2.64328991969139E-4;  // std dev = 1.718, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( enzyme(D, I) )
%   | | | then return -0.22799758600432973;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.015375005763044285;  // std dev = 2.414, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( interaction(J, A) )
%   | | then if ( complex(J, K) )
%   | | | then return 0.05620902893814393;  // std dev = 4.203, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | | | else return 0.17391400858228862;  // std dev = 4.030, 66.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=29 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.0581260886554816;  // std dev = 2.835, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.11175323124703909;  // std dev = 1.526, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, A) )
%   | | then return 0.01289081757219627;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.22299248037558564;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17330812752781422;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.4256670216283867;  // std dev = 1.106, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( complex(A, H), interaction(I, A) )
%   | then return -0.0656925114450107;  // std dev = 0.447, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( enzyme(J, L), interaction(M, A) )
%   | | | then return -0.05111026494036033;  // std dev = 2.107, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.14748647545909194;  // std dev = 3.128, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.07971593711534615;  // std dev = 3.050, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return -0.032572336307061654;  // std dev = 4.397, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( complex(A, C), phenotype(A, D) )
%   | then return 0.07388430198372638;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.43468078928841397;  // std dev = 0.834, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.21232278934071666;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( complex(A, G) )
%   | then if ( interaction(H, A), complex(H, I) )
%   | | then return 0.0061818263975747705;  // std dev = 0.469, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else return -0.05046017167856084;  // std dev = 0.448, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( complex(J, K) )
%   | | | then return -0.045328961768608636;  // std dev = 1.197, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2626612432672787;  // std dev = 1.736, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.08010397511629035;  // std dev = 3.246, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.004693296676646113;  // std dev = 4.539, 99.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=29 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), enzyme(E, D) )
%   | then return -0.20577784862162973;  // std dev = 0.434, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( enzyme(A, D), phenotype(C, H) )
%   | | | then return -0.07373968079457978;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.16514130135011418;  // std dev = 1.270, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.031048909115852;  // std dev = 0.437, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   else if ( interaction(A, I), enzyme(I, J) )
%   | then return -0.04830459511176194;  // std dev = 0.447, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(M, K), enzyme(M, N) )
%   | | | then return 0.20709162933109035;  // std dev = 1.727, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.03020522657993082;  // std dev = 3.311, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return 0.233849290836864;  // std dev = 2.711, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return 0.022082146108352928;  // std dev = 3.176, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09747402218403708;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), interaction(F, A) )
%   | | then if ( complex(F, G) )
%   | | | then return -0.13720124435024383;  // std dev = 1.281, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.30498223130525454;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.035115170559033286;  // std dev = 3.601, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.03368453932863654;  // std dev = 1.957, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.1304751038621782;  // std dev = 1.501, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.07495261497384018;  // std dev = 3.347, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( interaction(A, N), interaction(P, A) )
%   | | | then return 0.16374126871646907;  // std dev = 2.505, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.03574668975590905;  // std dev = 4.275, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.852', 'seconds']
Refined model CLL: -0.399818


******************************************
Best model found
******************************************
Results 

CLL : -0.366333 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.616 

Total Inference Time : 2.723292350769043 

Total revision time: 13.254637086868286
Best scored revision CLL: -0.367017


Results 

CLL : -0.366333 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.312342966079711 

Total Inference Time : 2.723292350769043 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.212
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20338703033760755;  // std dev = 7.547, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18377118908535797;  // std dev = 7.507, 247.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13627484884442748;  // std dev = 7.623, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11392589431942371;  // std dev = 7.623, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09261075292850716;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0741481296018508;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07412170901842922;  // std dev = 7.555, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06479826320630254;  // std dev = 7.523, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04726367198412505;  // std dev = 7.547, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03188900503316722;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.949', 'seconds']
Parameter learned model CLL:-0.381809 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.547, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.507, 160, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.623, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.623, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.63, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.637, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.555, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.523, 162, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.547, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.32e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.578, 169, 87]}]
{'': [0.0, 0.22604875283446793], 'false': [nan, 0.22604875283446793], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2281630579094888], 'false': [nan, 0.2281630579094899], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22179651535458306], 'false': [nan, 0.22179651535458306], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22179651535458403], 'false': [nan, 0.2217965153545833], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.22137084532087953], 'false': [nan, 0.22137084532087978], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.22094524793388423], 'false': [nan, 0.22094524793388423], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2256245215516572], 'false': [nan, 0.2256245215516572], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [1.1564823173178713e-18, 0.2273189142110619], 'false': [nan, 0.22731891421106143], 'true': [nan, 1.1564823173178713e-18], 'true,false': [nan, 1.1564823173178713e-18], 'true,false,false': [nan, 1.1564823173178713e-18]}
{'': [0.0, 0.2260487528344673], 'false': [nan, 0.22604875283446693], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [5.782411586589357e-19, 0.22434997558593728], 'false': [nan, 0.22434997558593728], 'true': [nan, 5.782411586589357e-19], 'true,false': [nan, 5.782411586589357e-19], 'true,false,false': [nan, 5.782411586589357e-19]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 12.451
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(E, F), phenotype(D, G) )
%   | | then if ( interaction(A, E), complex(A, H) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.15125238337537442;  // std dev = 3.467, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.5581489350995124;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.20430278125335852;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( interaction(L, A), complex(L, K) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.3318331456258281;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.1273797043302816;  // std dev = 3.199, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.20663378358436005;  // std dev = 3.871, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.2493400980035457;  // std dev = 1.305, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.07249401867185946;  // std dev = 1.501, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.8216042034514013;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3419248619849085;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, J), location(J, K) )
%   | | then if ( location(A, K) )
%   | | | then return 0.13960242105269358;  // std dev = 4.461, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
%   | | | else return 0.02915747162470783;  // std dev = 2.174, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.10760107600595235;  // std dev = 2.398, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.19647117136985287;  // std dev = 4.373, 83.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(D, D), complex(D, F) )
%   | | then if ( location(A, E), complex(A, G) )
%   | | | then return 0.14610988380796514;  // std dev = 1.791, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.050081471755992306;  // std dev = 3.025, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | else if ( location(A, E) )
%   | | | then return 0.1412554321878965;  // std dev = 5.623, 137.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=48 */
%   | | | else return 0.22684416927297674;  // std dev = 2.937, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then return 0.4813697927688922;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.09376455359838638;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4683573834358287;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( location(A, E) )
%   | | then if ( phenotype(D, F), location(D, E) )
%   | | | then return 0.18465283907966412;  // std dev = 2.692, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.08202360392073829;  // std dev = 2.783, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else return 0.4619700034843042;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G) )
%   | | | then return -0.017407108900346368;  // std dev = 2.331, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.11298277211543306;  // std dev = 1.646, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1937080889344887;  // std dev = 2.379, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.09485166899247881;  // std dev = 5.234, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then if ( interaction(D, F), interaction(F, G) )
%   | | | then return 0.17573141298212983;  // std dev = 1.480, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.03981826720001882;  // std dev = 1.787, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( enzyme(A, H), interaction(D, I) )
%   | | | then return 0.058906192787679425;  // std dev = 2.854, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.2915348897619959;  // std dev = 3.297, 45.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | else if ( complex(A, J) )
%   | | then if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return -0.09581143374028377;  // std dev = 1.478, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.03402808097946403;  // std dev = 2.957, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.11661178365743681;  // std dev = 4.111, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | | | else return -0.017151965267747076;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, E), complex(E, F) )
%   | | then if ( interaction(A, G), phenotype(D, H) )
%   | | | then return 0.03440542913763862;  // std dev = 3.673, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.18834942806838467;  // std dev = 2.982, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | else if ( interaction(E, A), complex(D, I) )
%   | | | then return 0.2746800195635818;  // std dev = 1.398, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.017998448338538548;  // std dev = 5.193, 130.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=38 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.04881413977039901;  // std dev = 1.134, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.6533903057022445;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.29253877819247276;  // std dev = 1.283, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), interaction(E, A) )
%   | | then if ( interaction(E, E), enzyme(A, F) )
%   | | | then return -0.016440524268675042;  // std dev = 2.095, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.09956509301385469;  // std dev = 5.912, 148.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=57 */
%   | | else if ( interaction(G, A), interaction(A, H) )
%   | | | then return -0.05568345748524567;  // std dev = 1.945, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.06541291613693472;  // std dev = 2.971, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then return -0.22259317249051652;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.0742787216743406;  // std dev = 0.480, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( location(D, E), enzyme(D, F) )
%   | | then if ( interaction(G, D), location(A, H) )
%   | | | then return 0.06271836477035304;  // std dev = 3.308, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return 0.23958993235937243;  // std dev = 1.479, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(I, D), interaction(I, A) )
%   | | | then return -0.02953873851965182;  // std dev = 4.428, 98.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=27 */
%   | | | else return 0.05958772443475326;  // std dev = 4.568, 89.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=33 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.0331201796853983;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.3109411396368517;  // std dev = 1.217, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.055315532417792565;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, A), location(A, F) )
%   | | then if ( location(D, F), complex(D, G) )
%   | | | then return -0.0376876444881108;  // std dev = 3.624, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | | else return 0.04571884302430568;  // std dev = 3.922, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.1452879135201295;  // std dev = 1.640, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.0668195693855121;  // std dev = 4.894, 123.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=32 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.008810039783067566;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(L, A) )
%   | | | then return -0.13025849399129816;  // std dev = 1.738, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.2543046094830683;  // std dev = 1.535, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), complex(E, D) )
%   | | then if ( enzyme(E, F) )
%   | | | then return -0.16602430733820978;  // std dev = 1.292, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.10283840844541364;  // std dev = 2.010, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( interaction(A, G), enzyme(A, H) )
%   | | | then return -0.1156610173427326;  // std dev = 2.325, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.012499761395640772;  // std dev = 3.775, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.10038270534519983;  // std dev = 3.185, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return -0.07716842352223123;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.009012798703227584;  // std dev = 4.679, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | | | else return 0.29828776827713455;  // std dev = 0.851, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.955', 'seconds']
Refined model CLL: -0.388129


******************************************
Best model found
******************************************
Results 

CLL : -0.381205 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.451 

Total Inference Time : 5.690537452697754 

Total revision time: 21.2662452583313
Best scored revision CLL: -0.381809


Results 

CLL : -0.381205 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 21.29360212135315 

Total Inference Time : 5.690537452697754 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.268
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16859669629354257;  // std dev = 8.468, 335.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1505611824083271;  // std dev = 8.445, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16252583141567653;  // std dev = 8.236, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11801536869299528;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1062406490423203;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08035571706561177;  // std dev = 8.340, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06182022028888432;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09160073659748563;  // std dev = 8.094, 281.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024701326878347127;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05990331429640422;  // std dev = 8.143, 287.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.397', 'seconds']
Parameter learned model CLL:-0.381461 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.468, 231, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), location(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.445, 227, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.236, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.353, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.3, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.34, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.359, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.094, 177, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.397, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.143, 183, 104]}]
{'': [0.0, 0.21406994876364516], 'false': [nan, 0.21406994876364516], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21547813546791375], 'false': [nan, 0.2154781354679097], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.226843100189037], 'false': [nan, 0.226843100189037], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.2207979490466266], 'false': [nan, 0.22079794904662967], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22364648338674323], 'false': [nan, 0.2236464833867436]}
{'': [0.0, 0.22151000040569652], 'false': [nan, 0.22151000040569652], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22044203843206656], 'false': [nan, 0.22044203843206656]}
{'': [0.0, 0.23312774660908475], 'false': [nan, 0.2331277466090847], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21830938665184216], 'false': [nan, 0.21830938665184246], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2310578008716882], 'false': [nan, 0.2310578008716882], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 15.757
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), complex(F, G) )
%   | | then if ( interaction(F, H), phenotype(H, I) )
%   | | | then return 0.10405057444377466;  // std dev = 3.363, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.23314893509951218;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( complex(A, K), interaction(A, L) )
%   | | then if ( interaction(M, A), interaction(L, N) )
%   | | | then return 0.30912932725637404;  // std dev = 3.554, 51.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
%   | | | else return 0.08891816586874295;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(P, A), enzyme(P, Q) )
%   | | | then return 0.16584124279181922;  // std dev = 4.076, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | | else return 0.216844587273424;  // std dev = 4.600, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(D, A), enzyme(D, E) )
%   | | then return 0.5878059543583541;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.12176447538598811;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.2671581146862053;  // std dev = 1.986, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.15996624541197063;  // std dev = 2.718, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.45978638429571084;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.14507378257278514;  // std dev = 5.985, 166.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=52 */
%   | | | else return 0.08433279829616226;  // std dev = 3.350, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(D, D), complex(A, F) )
%   | | then if ( complex(D, G), interaction(A, H) )
%   | | | then return 0.16595646572323478;  // std dev = 2.508, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.3651573225044862;  // std dev = 1.119, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.05458608387625985;  // std dev = 3.442, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | | else return 0.13177594065809592;  // std dev = 6.541, 195.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=63 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(A, M) )
%   | | | then return 0.14149073841428803;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.14711832535617425;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.18303315625474326;  // std dev = 1.758, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.3262429945938404;  // std dev = 1.418, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), phenotype(D, G) )
%   | | then if ( interaction(D, F), enzyme(F, H) )
%   | | | then return 0.15881129509103858;  // std dev = 4.660, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | | | else return 0.09127667082296895;  // std dev = 5.529, 143.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=44 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.19658646358712323;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.013554070383415393;  // std dev = 2.912, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then return 0.3685121751339885;  // std dev = 1.114, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, M), phenotype(A, N) )
%   | | | then return -0.005733688319743191;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20243230562258177;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, G), enzyme(E, H) )
%   | | then return 0.4065751654832603;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, E), phenotype(E, C) )
%   | | | then return 0.02907575148377986;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2553341009937505;  // std dev = 2.388, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else if ( complex(A, I) )
%   | | then return -0.008304746400930369;  // std dev = 0.461, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.21536443906605157;  // std dev = 1.019, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( location(A, J), interaction(K, A) )
%   | then return 0.08596374416818024;  // std dev = 0.465, 235.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=75 */
%   | else if ( complex(A, L) )
%   | | then return 0.49140449633503563;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.08143833158752152;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1827449683583701;  // std dev = 1.492, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( phenotype(F, G), complex(F, H) )
%   | | | then return 0.03906706747929505;  // std dev = 2.476, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return -0.08542216461730652;  // std dev = 2.501, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | else if ( interaction(E, A), phenotype(A, I) )
%   | | | then return 0.17178047491256465;  // std dev = 2.489, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.004281110977344271;  // std dev = 3.982, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.11499434317301226;  // std dev = 4.989, 108.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=39 */
%   | | | else return 0.039501666880732346;  // std dev = 2.681, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.12273672170805798;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.07110143947860564;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), interaction(A, E) )
%   | then if ( interaction(E, D), enzyme(A, F) )
%   | | then if ( enzyme(D, G), complex(D, H) )
%   | | | then return 0.14976694445890693;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3942400636738485;  // std dev = 1.185, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(A, A), enzyme(E, I) )
%   | | | then return -0.0658104292309859;  // std dev = 1.251, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.13377082551454822;  // std dev = 3.984, 66.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=27 */
%   | else return 0.023431817094434534;  // std dev = 0.465, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then return 0.041476848277617426;  // std dev = 0.462, 126.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=39 */
%   | else if ( interaction(A, L) )
%   | | then return -0.17159348364026455;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.17556722887843737;  // std dev = 1.672, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.08893688204335766;  // std dev = 2.414, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12118934299819122;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(D, D) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.08438963262048219;  // std dev = 1.431, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.18910782301694906;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.10807459451874929;  // std dev = 2.676, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.016564055624921695;  // std dev = 4.207, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(I, I), phenotype(I, H) )
%   | | | then return -0.036266167771343;  // std dev = 1.728, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.17927037094763143;  // std dev = 2.907, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05537508736309787;  // std dev = 5.211, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return -0.18494356166276407;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), complex(A, E) )
%   | | then if ( interaction(F, D), complex(F, G) )
%   | | | then return 0.04787761877747309;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.39483095861859496;  // std dev = 1.203, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.04745776805424028;  // std dev = 3.952, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | | | else return 0.15191839342405675;  // std dev = 1.550, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then if ( enzyme(K, L), phenotype(J, M) )
%   | | | then return 0.3896678159641709;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1902715734042732;  // std dev = 1.796, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( complex(A, N), enzyme(A, P) )
%   | | | then return 0.17704851915749112;  // std dev = 1.999, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.051365240975827314;  // std dev = 5.465, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), location(A, F) )
%   | | then if ( phenotype(E, G) )
%   | | | then return -3.354561658696164E-4;  // std dev = 5.990, 163.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=53 */
%   | | | else return 0.11325340357707164;  // std dev = 1.871, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.2669506014426115;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.004592240681879583;  // std dev = 1.520, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(I, J) )
%   | | | then return -0.2380105736170475;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.02716333509667717;  // std dev = 1.450, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.2429586758809296;  // std dev = 2.307, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.06821889451877389;  // std dev = 3.896, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.219', 'seconds']
Refined model CLL: -0.413299


******************************************
Best model found
******************************************
Results 

CLL : -0.382326 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.757 

Total Inference Time : 9.341902256011963 

Total revision time: 28.522604370117186
Best scored revision CLL: -0.381461


Results 

CLL : -0.382326 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 28.549961233139037 

Total Inference Time : 9.341902256011963 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.288
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18672036367094097;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17334961787003167;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13819291810477985;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.141339544239199;  // std dev = 7.702, 259.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09353490925475741;  // std dev = 7.839, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06455731158766118;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.088100740834597;  // std dev = 7.694, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04598974560078891;  // std dev = 7.839, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05023877111023291;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.015484870450878268;  // std dev = 7.900, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.166', 'seconds']
Parameter learned model CLL:-0.373976 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.795, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.853, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.702, 167, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.839, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.906, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.694, 166, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.839, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.9, 194, 92]}]
{'': [0.0, 0.2206122448979601], 'false': [nan, 0.2206122448979601], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22423441946596698], 'false': [nan, 0.22423441946596734]}
{'': [nan, 0.22101463239167077], 'false': [nan, 0.22101463239167077]}
{'': [nan, 0.2290365379168461], 'false': [nan, 0.22903653791684853]}
{'': [nan, 0.221819650979421], 'false': [nan, 0.2218196509794206]}
{'': [nan, 0.21780038606757537], 'false': [nan, 0.21780038606757537]}
{'': [0.0, 0.22943332732407892], 'false': [nan, 0.22943332732407892], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22181965097942147], 'false': [nan, 0.22181965097941977], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2262422974730051], 'false': [nan, 0.22624229747300686], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21820137904054054], 'false': [nan, 0.21820137904054054], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 6.767
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( complex(A, F), enzyme(E, G) )
%   | | then if ( interaction(A, E), interaction(H, A) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.10814893509951233;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( complex(A, I), phenotype(E, J) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.23496052930241015;  // std dev = 4.025, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( enzyme(K, M) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.13446472457319622;  // std dev = 3.898, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | | else if ( enzyme(A, N), complex(A, P) )
%   | | | then return 0.14386322081379807;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.212315601766179;  // std dev = 3.313, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( enzyme(E, G) )
%   | | then return 0.14101761021425355;  // std dev = 0.459, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(H, E), phenotype(H, C) )
%   | | | then return 0.42408349523543976;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.18225349067987368;  // std dev = 2.137, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then return 0.5883755079329545;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.2763175458178335;  // std dev = 1.489, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.17780077116908885;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(A, L), interaction(L, L) )
%   | then return 0.09623722959464791;  // std dev = 0.442, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | else if ( interaction(M, A), enzyme(M, N) )
%   | | then return 0.09167750954958367;  // std dev = 0.438, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else return 0.163476376705202;  // std dev = 0.470, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.12984142036173013;  // std dev = 0.468, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | else return 0.0834014968618188;  // std dev = 0.451, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(H, F), enzyme(H, I) )
%   | | then return 0.10337161748574354;  // std dev = 0.448, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( phenotype(F, J), interaction(A, K) )
%   | | | then return 0.5562629847497754;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16102815281633687;  // std dev = 2.689, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | else if ( interaction(A, L), interaction(L, L) )
%   | | then if ( interaction(L, M), enzyme(M, N) )
%   | | | then return 0.21979043410123125;  // std dev = 1.542, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.803302527364162;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, P), location(A, Q) )
%   | | | then return 0.30992725196986626;  // std dev = 1.418, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1833042696845077;  // std dev = 3.434, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), enzyme(D, E) )
%   | then if ( interaction(D, D), complex(A, F) )
%   | | then return 0.08680283003088347;  // std dev = 0.460, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(G, A), interaction(D, H) )
%   | | | then return 0.24257042577968999;  // std dev = 2.918, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.11597465805269816;  // std dev = 2.472, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( phenotype(I, C) )
%   | | | then return 0.12049335900026588;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2998569829681843;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.45336903663710243;  // std dev = 1.138, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, J), interaction(J, J) )
%   | then return -0.00706443794386239;  // std dev = 0.447, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then return 0.19304307732474404;  // std dev = 0.488, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else return 0.09104401804958143;  // std dev = 0.464, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( enzyme(A, D) )
%   | then return 0.05481592832493561;  // std dev = 0.455, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else return -0.0339475228620052;  // std dev = 0.442, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(G, E), enzyme(G, H) )
%   | | | then return 0.16419487514894773;  // std dev = 2.419, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return -2.2026424616952995E-4;  // std dev = 2.990, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( interaction(I, E), phenotype(I, J) )
%   | | | then return 0.08811222953703457;  // std dev = 3.473, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.15918132126169443;  // std dev = 3.389, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( phenotype(L, M) )
%   | | | then return 0.3834342679425113;  // std dev = 1.594, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.19140718945324797;  // std dev = 1.484, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.020973298345608904;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(A, F), complex(D, G) )
%   | | then return 0.1571106474157211;  // std dev = 0.489, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.021477233893325252;  // std dev = 0.436, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else return -0.025834238505234766;  // std dev = 0.443, 106.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=27 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( interaction(J, A) )
%   | | then return 0.48813350327280103;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.07056919898982146;  // std dev = 1.167, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then if ( interaction(A, M), interaction(M, N) )
%   | | | then return -0.06188594891812207;  // std dev = 1.493, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.07393149069973454;  // std dev = 2.141, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(P, A), complex(A, Q) )
%   | | | then return 0.16136070271257;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.05274323612488255;  // std dev = 4.710, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.24907690322336185;  // std dev = 0.074, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.006503781330285341;  // std dev = 1.710, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.08207812108948559;  // std dev = 1.853, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.010629507082677727;  // std dev = 1.646, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.09471365061065326;  // std dev = 2.010, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), interaction(K, A) )
%   | | | then return -0.0334339494911269;  // std dev = 2.699, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.12355723226881371;  // std dev = 5.275, 117.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=46 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.13452228457629475;  // std dev = 2.157, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.013444276910965091;  // std dev = 2.620, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14116206857474586;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D) )
%   | then if ( interaction(A, A) )
%   | | then if ( complex(A, E) )
%   | | | then return -0.03204870464680332;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.09707693225774187;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( enzyme(F, D), interaction(F, G) )
%   | | | then return 0.07901203970114425;  // std dev = 4.337, 82.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
%   | | | else return 0.17727707112294244;  // std dev = 1.965, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return -0.048221616533831856;  // std dev = 2.821, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.06142444109971472;  // std dev = 2.525, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.22469954090990957;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.033663339868273884;  // std dev = 4.357, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(A, F), interaction(G, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.03717369342173959;  // std dev = 2.325, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.21198492979204292;  // std dev = 1.428, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.1512850398412318;  // std dev = 1.552, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.009387986327180914;  // std dev = 4.022, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), interaction(K, K) )
%   | | | then return 0.04146752582426155;  // std dev = 5.403, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   | | | else return 0.3776352121338793;  // std dev = 1.382, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.2964762073547923;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14637261200645707;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( complex(E, F), enzyme(A, G) )
%   | | then if ( phenotype(E, H) )
%   | | | then return 0.0062914457634441;  // std dev = 1.693, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.10099950359708854;  // std dev = 1.193, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(I, E), interaction(J, I) )
%   | | | then return 0.08600154893647598;  // std dev = 3.091, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.3391148785579968;  // std dev = 1.588, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( enzyme(A, M), interaction(N, K) )
%   | | | then return -0.010948530113803456;  // std dev = 2.409, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.10133709297950423;  // std dev = 2.967, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | else if ( interaction(A, P), interaction(P, P) )
%   | | | then return -0.07493159538266549;  // std dev = 3.015, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return 0.00321155596758742;  // std dev = 4.259, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.951', 'seconds']
Refined model CLL: -0.408491


******************************************
Best model found
******************************************
Results 

CLL : -0.37408 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.767 

Total Inference Time : 2.944624900817871 

Total revision time: 12.874726943969726
Best scored revision CLL: -0.373976


Results 

CLL : -0.37408 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.902083806991577 

Total Inference Time : 2.944624900817871 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.182
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18891816586874358;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1681918808882374;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1461566803238065;  // std dev = 7.550, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11991503507005977;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), location(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10031273226623817;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0667276356568421;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05267927800619104;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03755883400946189;  // std dev = 7.675, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024300836907949003;  // std dev = 7.707, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( location(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), location(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), location(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), location(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05814825528698135;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.617', 'seconds']
Parameter learned model CLL:-0.364247 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.565, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.55, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.565, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), location(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.557, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.642, 182, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.649, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.675, 187, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.707, 192, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'location(D, C)', 'true,false': 'complex(A, E), location(F, E)', 'true,false,false': 'complex(B, G), location(H, G)', 'false': 'complex(A, I), location(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.487, 161, 86]}]
{'': [nan, 0.22136094674556273], 'false': [nan, 0.22136094674556273]}
{'': [nan, 0.22265287892322236], 'false': [nan, 0.22265287892322205]}
{'': [0.0, 0.22351403306420659], 'false': [nan, 0.22351403306420659], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22265287892322463], 'false': [nan, 0.2226528789232243], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2230834960937495], 'false': [nan, 0.22308349609374836]}
{'': [0.0, 0.2179215860993546], 'false': [nan, 0.2179215860993546], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2174928483575417], 'false': [nan, 0.2174928483575417], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21578177622133762], 'false': [nan, 0.2157817762213373], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21365353760157435], 'false': [nan, 0.21365353760157507], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22695012211313023], 'false': [nan, 0.22695012211313023], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.628
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, E), interaction(E, E) )
%   | then if ( complex(E, F), complex(C, F) )
%   | | then return 0.6081489350995123;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( phenotype(C, D), interaction(E, C) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.38756069980539465;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( interaction(C, G), phenotype(G, H) )
%   | | then return 0.12644161802634163;  // std dev = 0.443, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( enzyme(A, I) )
%   | then if ( interaction(A, J), interaction(J, J) )
%   | | then return 0.058148935099512175;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.274815601766179;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else return 0.14703782398840007;  // std dev = 0.453, 135.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=39 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(A, E), enzyme(E, C) )
%   | then return 0.8450071237710312;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F), phenotype(D, G) )
%   | | then if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.22411214453306508;  // std dev = 1.701, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.42306522331873564;  // std dev = 1.541, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3405310341038535;  // std dev = 1.200, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.14767707244050715;  // std dev = 2.313, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   else if ( interaction(A, K), interaction(K, L) )
%   | then return 0.1380560500001951;  // std dev = 0.462, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
%   | else if ( interaction(M, A), interaction(N, M) )
%   | | then return 0.18711708214873507;  // std dev = 0.476, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.08929099519221373;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.39016679228842255;  // std dev = 1.992, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.17719005484516118;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( phenotype(A, G), complex(A, H) )
%   | | | then return 0.16436732240605403;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.024665026388465745;  // std dev = 2.789, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.426243473106241;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07978773694484768;  // std dev = 1.884, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( complex(A, M), complex(K, M) )
%   | | | then return 0.09148723833653309;  // std dev = 2.199, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.2260588698623228;  // std dev = 3.816, 58.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=25 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.0890116047649004;  // std dev = 3.486, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | | else return 0.16011744336177305;  // std dev = 3.384, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1556280335040277;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( complex(D, F), interaction(A, A) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.040079761004339395;  // std dev = 1.904, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.07372038291668419;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( location(D, E), interaction(G, D) )
%   | | | then return 0.17721383814400948;  // std dev = 4.937, 102.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=41 */
%   | | | else return 0.08456455454396865;  // std dev = 3.873, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( phenotype(A, J), phenotype(H, K) )
%   | | | then return 0.12265994892149618;  // std dev = 1.622, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.01895934301245002;  // std dev = 2.351, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.4422453154977219;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04250095498110374;  // std dev = 1.638, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), complex(D, E) )
%   | then if ( enzyme(D, F), interaction(G, D) )
%   | | then return 0.032640643669650644;  // std dev = 0.467, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
%   | | else return 0.14823160408819852;  // std dev = 0.488, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | else return -0.04345519520583108;  // std dev = 0.405, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then if ( complex(I, J), complex(H, J) )
%   | | then if ( phenotype(H, K) )
%   | | | then return 0.5132411409443135;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.28549665546740344;  // std dev = 0.994, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(L, I), interaction(L, A) )
%   | | | then return 0.11343616797833733;  // std dev = 1.360, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.21475425869994988;  // std dev = 1.794, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( location(A, M) )
%   | | then return 0.06609543703742948;  // std dev = 0.462, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | else return 0.23632403914531522;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( phenotype(G, D) )
%   | | | then return -0.01035819991231727;  // std dev = 1.203, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.15986785474475246;  // std dev = 1.263, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( complex(H, E), enzyme(H, I) )
%   | | | then return 0.08967718592596868;  // std dev = 1.822, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.018375810228390712;  // std dev = 2.414, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(L, J), phenotype(J, M) )
%   | | | then return 0.09990556707048304;  // std dev = 1.924, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.10897334270488233;  // std dev = 2.023, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( complex(A, N), interaction(A, A) )
%   | | | then return -0.0684316293546701;  // std dev = 1.263, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.07554152167699203;  // std dev = 6.055, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.1926293958078343;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), phenotype(F, G) )
%   | | then if ( complex(A, H), enzyme(A, I) )
%   | | | then return 0.2523723485839131;  // std dev = 1.634, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.0650377185341656;  // std dev = 4.642, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.06947111170682227;  // std dev = 2.147, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.0011818764721014828;  // std dev = 2.958, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( enzyme(A, L) )
%   | | | then return -0.2461529930384865;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.07220119175012314;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.0481371007355582;  // std dev = 2.720, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.21839858953133193;  // std dev = 2.877, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.19085083725006174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(A, F), complex(E, G) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.09958149100990787;  // std dev = 1.729, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.11691210400114123;  // std dev = 1.516, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.37308353272512457;  // std dev = 1.161, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.12318700938471513;  // std dev = 4.427, 81.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=33 */
%   | else if ( enzyme(A, L), complex(A, M) )
%   | | then if ( complex(N, M), interaction(A, N) )
%   | | | then return -0.218998227234513;  // std dev = 1.276, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.008303701023535639;  // std dev = 1.400, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.16594875716240995;  // std dev = 1.644, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.0065636459760008235;  // std dev = 4.679, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.18061165965652778;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), phenotype(F, G) )
%   | | then if ( interaction(F, A), enzyme(E, H) )
%   | | | then return 0.4048823787255877;  // std dev = 0.884, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.04910139045247198;  // std dev = 4.285, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   | | else if ( complex(E, I) )
%   | | | then return 0.022458383464112514;  // std dev = 1.663, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.22572388232445117;  // std dev = 1.337, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( phenotype(L, K), interaction(L, L) )
%   | | | then return -0.02036934339055194;  // std dev = 1.891, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.0710397721633407;  // std dev = 1.753, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.24899617017209585;  // std dev = 1.561, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.09212688028622305;  // std dev = 4.552, 87.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08529831373806075;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( complex(D, F) )
%   | | | then return -0.07946076650067985;  // std dev = 1.863, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.17041322457922922;  // std dev = 1.811, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.17442749130505558;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3271951439220358;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.2561045426931146;  // std dev = 1.687, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.018841958961670128;  // std dev = 4.774, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.019912087366860006;  // std dev = 3.495, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return -0.06582004419269771;  // std dev = 2.999, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.299', 'seconds']
Refined model CLL: -0.416179


******************************************
Best model found
******************************************
Results 

CLL : -0.363555 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.628 

Total Inference Time : 2.907130002975464 

Total revision time: 13.579226789474488
Best scored revision CLL: -0.364247


Results 

CLL : -0.363555 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.606583652496338 

Total Inference Time : 2.907130002975464 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.192
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16023226843284544;  // std dev = 7.792, 288.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18411687595398998;  // std dev = 7.540, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1441999163876181;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09958380621613062;  // std dev = 7.738, 279.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10653648588403401;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11076170750158856;  // std dev = 7.465, 242.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05461629398018464;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.046157761130748806;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06333121885303122;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01867518278488479;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.573', 'seconds']
Parameter learned model CLL:-0.371613 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.792, 201, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.54, 164, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.738, 192, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.465, 155, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.665, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.499, 159, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.679, 183, 87]}]
{'': [0.0, 0.2108289930555565], 'false': [nan, 0.2108289930555565], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22647259567308545], 'false': [nan, 0.22647259567308517], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22222222222222116], 'false': [nan, 0.22222222222222116], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2145912822291598], 'false': [nan, 0.21459128222916068]}
{'': [0.0, 0.2230735975909724], 'false': [nan, 0.22307359759097178], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23026091113994965], 'false': [nan, 0.23026091113994965], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2192442637558474], 'false': [nan, 0.2192442637558474], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2200944089547181], 'false': [nan, 0.22009440895471824], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22858417608566312], 'false': [nan, 0.22858417608566337]}
{'': [0.0, 0.2183950617283946], 'false': [nan, 0.2183950617283946], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 16.444
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(E, F), phenotype(D, G) )
%   | | then if ( phenotype(A, H), phenotype(E, H) )
%   | | | then return 0.08395538671241559;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.17296374991432717;  // std dev = 4.827, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | | else if ( complex(E, I), phenotype(A, J) )
%   | | | then return 0.31648226843284566;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.18726285915014493;  // std dev = 4.176, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.0399671169176941;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( phenotype(F, H), phenotype(E, H) )
%   | | | then return 0.10777334852681082;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.335171577808481;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(A, E), phenotype(A, I) )
%   | | | then return -0.011041086706091708;  // std dev = 1.296, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.09637650710530353;  // std dev = 3.835, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.20490939443102563;  // std dev = 2.105, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.5717591393544335;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.10072541396611702;  // std dev = 2.265, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.17033966365363887;  // std dev = 5.157, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( phenotype(E, F), location(A, G) )
%   | | then if ( interaction(E, H), complex(H, I) )
%   | | | then return 0.3341043003833484;  // std dev = 1.829, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.050334820572215624;  // std dev = 1.938, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( location(A, J), location(E, J) )
%   | | | then return 0.8166834945004297;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.39024625960770976;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( complex(A, K), interaction(A, L) )
%   | | then if ( phenotype(A, M), phenotype(L, M) )
%   | | | then return 0.12146742773117444;  // std dev = 2.347, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.009099649578437905;  // std dev = 1.995, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.3913340386883953;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.16089649666272196;  // std dev = 5.822, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(A, E), interaction(C, C) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( interaction(A, G), phenotype(A, H) )
%   | | | then return 0.2428037705319436;  // std dev = 1.238, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.7644553743815903;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.10916352816858328;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.04491108326646187;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( enzyme(C, J), phenotype(C, K) )
%   | | then return -0.02259910518611818;  // std dev = 0.406, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else if ( location(C, L), location(A, M) )
%   | | | then return 0.10179233480593297;  // std dev = 6.331, 186.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=59 */
%   | | | else return 0.36850080800238877;  // std dev = 1.069, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, N), enzyme(A, P) )
%   | then return -0.029028474345750958;  // std dev = 0.446, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else return 0.053630126819321534;  // std dev = 0.434, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11127138943364616;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( interaction(D, H), complex(A, I) )
%   | | | then return 0.15153298855536207;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.44416160793870274;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, J), phenotype(D, K) )
%   | | | then return 0.07112915308299299;  // std dev = 1.881, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.06699553621860502;  // std dev = 2.630, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | else if ( location(A, L), interaction(M, A) )
%   | | then if ( enzyme(M, N), location(M, L) )
%   | | | then return -0.004645515625223073;  // std dev = 2.457, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.10852204332676281;  // std dev = 6.048, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
%   | | else if ( enzyme(A, P) )
%   | | | then return 0.05307060245682529;  // std dev = 1.163, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3944942678681887;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), phenotype(E, F) )
%   | | then if ( interaction(E, G), interaction(G, E) )
%   | | | then return 0.18569355643481186;  // std dev = 2.710, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.04856127219188851;  // std dev = 3.746, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else return 0.4160896348117505;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( interaction(H, J), enzyme(A, K) )
%   | | | then return -0.10859792580414972;  // std dev = 1.518, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.008796352440547417;  // std dev = 2.088, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.048931077466603766;  // std dev = 5.234, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return -0.07856873810554735;  // std dev = 1.531, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10073439491232036;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( interaction(E, A) )
%   | | then if ( location(E, D), interaction(A, E) )
%   | | | then return 0.13194240935606333;  // std dev = 3.021, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.041203788024771246;  // std dev = 6.553, 200.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=62 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.06947542640834925;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.4550924302658097;  // std dev = 0.918, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13057393227691336;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.1705996536613307;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.04422040238444458;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.05076174726029722;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09196911892602873;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), phenotype(F, G) )
%   | | then if ( complex(A, H), complex(D, I) )
%   | | | then return 0.09807687591368972;  // std dev = 3.811, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | | else return 0.022870428555475053;  // std dev = 5.732, 153.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=48 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.528386137099857;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.166054907433783;  // std dev = 1.706, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then return 0.07731381067744607;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return -0.28819587641664046;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.09519580104204202;  // std dev = 1.909, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then return -0.04864058326817052;  // std dev = 0.451, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( phenotype(E, G), interaction(A, H) )
%   | | then if ( complex(H, I) )
%   | | | then return 0.008970777795883633;  // std dev = 1.875, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.20737557563359887;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.4227042697493336;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.13394575983292203;  // std dev = 2.003, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.018784943680818896;  // std dev = 1.827, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.13640285442143263;  // std dev = 1.996, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.15768072521632448;  // std dev = 1.008, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.02228906561574017;  // std dev = 5.161, 123.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08565893009965106;  // std dev = 0.000925, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.2119007881256247;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.04343998364023329;  // std dev = 2.084, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( enzyme(H, E), interaction(H, H) )
%   | | | then return -0.16250074017155422;  // std dev = 1.573, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.03368716760833991;  // std dev = 1.890, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( phenotype(J, K), location(A, L) )
%   | | | then return 0.03833990487214908;  // std dev = 3.880, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | | | else return -0.09564885857696079;  // std dev = 2.707, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.0724680387407847;  // std dev = 4.639, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
%   | | | else return 0.16302921394295683;  // std dev = 1.426, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.344', 'seconds']
Refined model CLL: -0.399648


******************************************
Best model found
******************************************
Results 

CLL : -0.371009 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.444 

Total Inference Time : 5.133080244064331 

Total revision time: 24.557381950378417
Best scored revision CLL: -0.371613


Results 

CLL : -0.371009 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 24.649951301574706 

Total Inference Time : 5.133080244064331 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.251
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19801821614526446;  // std dev = 8.286, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20910677874168904;  // std dev = 8.051, 276.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14428514814809287;  // std dev = 8.265, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08566100446240776;  // std dev = 8.480, 337.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08686449520077744;  // std dev = 8.379, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07486240128313643;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05031323679324724;  // std dev = 8.416, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05040779556213985;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05428264599070425;  // std dev = 8.265, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.059630628556078716;  // std dev = 8.159, 289.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.343', 'seconds']
Parameter learned model CLL:-0.378134 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.286, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.051, 172, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.265, 199, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.48, 233, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.379, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.353, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.416, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.353, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.265, 199, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.159, 185, 104]}]
{'': [0.0, 0.22435815284719612], 'false': [nan, 0.22435815284719612], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23482461667716814], 'false': [nan, 0.23482461667716611], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2254245226502846], 'false': [nan, 0.2254245226502846]}
{'': [2.3129646346357427e-18, 0.2133680846005517], 'false': [nan, 0.21336808460055198], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [nan, 0.21937500000000093], 'false': [nan, 0.21937499999999927]}
{'': [0.0, 0.22079794904662634], 'false': [nan, 0.22079794904662634], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21724566223794772], 'false': [nan, 0.21724566223794772], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22079794904662736], 'false': [nan, 0.220797949046628], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22542452265028376], 'false': [nan, 0.22542452265028426], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23036122651788074], 'false': [nan, 0.23036122651788074], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 13.764
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( phenotype(A, G), complex(F, H) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2867203636709407;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(E, E), phenotype(E, I) )
%   | | | then return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.24590403714032869;  // std dev = 3.411, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then if ( enzyme(K, L), complex(A, M) )
%   | | | then return 0.27920156667845974;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.11490569185626912;  // std dev = 3.758, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | else if ( location(A, N), interaction(A, P) )
%   | | | then return 0.31968739663797385;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.19795476034222967;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( phenotype(D, F), phenotype(A, F) )
%   | | then if ( interaction(D, A), complex(D, E) )
%   | | | then return 0.10191015531448377;  // std dev = 1.920, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.24784027366458966;  // std dev = 2.644, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.5702571737815519;  // std dev = 1.504, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.15911909346475717;  // std dev = 1.407, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( location(A, I) )
%   | | then if ( interaction(J, A), location(J, I) )
%   | | | then return 0.13432940704604285;  // std dev = 6.223, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
%   | | | else return 0.23457176235465443;  // std dev = 2.769, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.1656373748406564;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.5789042852748063;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, F), interaction(F, F) )
%   | | then if ( complex(D, E), phenotype(A, G) )
%   | | | then return 0.25562578379916917;  // std dev = 1.991, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.10414629568444307;  // std dev = 2.836, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( complex(D, H), enzyme(D, I) )
%   | | | then return 0.09480563360243248;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.011608529735540373;  // std dev = 2.164, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( phenotype(K, L), interaction(K, K) )
%   | | | then return 0.4007321708492307;  // std dev = 1.413, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.11099572230608247;  // std dev = 5.001, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | else if ( location(M, C), complex(M, N) )
%   | | | then return 0.25113677050116706;  // std dev = 3.789, 58.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=26 */
%   | | | else return 0.04303709205171385;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else return 0.007548492061795929;  // std dev = 0.425, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13151101129238882;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( phenotype(F, H), interaction(I, F) )
%   | | | then return 0.1130754258686579;  // std dev = 5.642, 142.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=48 */
%   | | | else return 0.007705073077433931;  // std dev = 1.769, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.06962352568920573;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.28378630075648953;  // std dev = 2.120, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(A, L), interaction(L, M) )
%   | | then if ( interaction(M, N), interaction(L, N) )
%   | | | then return -0.03634156962338944;  // std dev = 2.773, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return 0.10410538743269847;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.03597598620240577;  // std dev = 2.079, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.10472882106136937;  // std dev = 3.645, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(A, D), enzyme(C, E) )
%   | then return -0.08324115898325249;  // std dev = 0.431, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else return 0.03763347525504138;  // std dev = 0.451, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( enzyme(F, H), phenotype(F, I) )
%   | | then if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.3793214195786791;  // std dev = 1.386, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.19001284632697307;  // std dev = 2.520, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else if ( complex(A, L), phenotype(F, M) )
%   | | | then return 0.21163872213796636;  // std dev = 2.652, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.06851814427787108;  // std dev = 4.820, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
%   | else if ( interaction(N, A), enzyme(A, P) )
%   | | then return -0.05040660051046545;  // std dev = 0.414, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( interaction(Q, A), enzyme(Q, R) )
%   | | | then return 0.1342932942093281;  // std dev = 1.765, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.048108688764757816;  // std dev = 2.654, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11561723025442684;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( phenotype(A, H), interaction(F, F) )
%   | | | then return -0.06393086792521624;  // std dev = 2.155, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.03283050913776626;  // std dev = 3.315, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.19219737797113262;  // std dev = 1.300, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.0375566479424421;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, A) )
%   | | then return 0.36131477950725743;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return 0.06493346693068416;  // std dev = 6.842, 210.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=70 */
%   | | | else return 0.18583129630762674;  // std dev = 1.669, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11044926285861545;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( interaction(D, G), phenotype(E, H) )
%   | | | then return 0.029953245825760522;  // std dev = 5.098, 119.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=38 */
%   | | | else return -0.07999652912625914;  // std dev = 2.187, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( complex(E, I) )
%   | | | then return -0.19529543258206125;  // std dev = 1.327, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.10739914742226593;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return 0.13098798206785778;  // std dev = 1.747, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.6793596432500193;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.06795992274453527;  // std dev = 5.056, 113.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.1749158590101139;  // std dev = 2.342, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10020987571041448;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), interaction(E, F) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.003313483918658983;  // std dev = 4.149, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | | | else return 0.07388991075898775;  // std dev = 5.986, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.15708708484399153;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.03104040937395408;  // std dev = 2.569, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.14567239194902437;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return 0.7076373803162892;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30811162475182796;  // std dev = 1.764, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08366031816640235;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(D, E) )
%   | | then if ( interaction(E, A), enzyme(A, F) )
%   | | | then return -0.06335144148772968;  // std dev = 3.041, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.035795017193849706;  // std dev = 6.968, 217.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=73 */
%   | | else if ( complex(A, G), enzyme(D, H) )
%   | | | then return 0.37326595007130875;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15234625365934454;  // std dev = 2.403, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then return -0.06132508096235663;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.27127560700071;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.17840684921532018;  // std dev = 1.268, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.0709463030126503;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(A, E), interaction(A, A) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.06584880075422805;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.13977213260400626;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( complex(A, H), interaction(D, D) )
%   | | | then return 0.33561727737061764;  // std dev = 1.635, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.07183217928397653;  // std dev = 3.352, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | else if ( phenotype(A, I), location(A, J) )
%   | | then if ( interaction(K, A), phenotype(K, I) )
%   | | | then return -0.04121688613041112;  // std dev = 3.336, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.056653363158161;  // std dev = 4.109, 71.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=27 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return -0.03924731620336781;  // std dev = 4.317, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   | | | else return -0.12178145946443415;  // std dev = 2.430, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.638', 'seconds']
Refined model CLL: -0.403629


******************************************
Best model found
******************************************
Results 

CLL : -0.379012 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.764 

Total Inference Time : 5.951701641082764 

Total revision time: 23.0629793548584
Best scored revision CLL: -0.378134


Results 

CLL : -0.379012 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 23.155548706054688 

Total Inference Time : 5.951701641082764 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.19
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2106393565554512;  // std dev = 7.718, 261.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17000952589757945;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15372152044099574;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1194770839687032;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07067186302722697;  // std dev = 7.957, 295.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09150244764177186;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04296535824692342;  // std dev = 7.938, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02597086848731461;  // std dev = 7.987, 300.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07623552232320056;  // std dev = 7.660, 254.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.007978091530853909;  // std dev = 7.969, 297.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.555', 'seconds']
Parameter learned model CLL:-0.365423 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.718, 169, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.795, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.742, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.795, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.957, 203, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.938, 200, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.987, 208, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.66, 162, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.969, 205, 92]}]
{'': [0.0, 0.22824092423775424], 'false': [nan, 0.22824092423775424], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2242344194659679], 'false': [nan, 0.22423441946596695]}
{'': [0.0, 0.2270431588613413], 'false': [nan, 0.2270431588613413], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2242344194659658], 'false': [nan, 0.2242344194659666], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21460499856363185], 'false': [nan, 0.2146049985636303]}
{'': [0.0, 0.22624229747300503], 'false': [nan, 0.22624229747300503], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21580033777444282], 'false': [nan, 0.21580033777444282], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21262222222222193], 'false': [nan, 0.21262222222222335], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2310124620249248], 'false': [nan, 0.23101246202492323], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2138103821605514], 'false': [nan, 0.2138103821605514], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.188
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), complex(F, E) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.35814893509951234;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.2719420385477871;  // std dev = 3.751, 58.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=24 */
%   | else if ( complex(A, H) )
%   | | then if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22549587387502257;  // std dev = 3.375, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | else if ( interaction(J, A), enzyme(A, K) )
%   | | | then return 0.09624417319475045;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.2033870303376076;  // std dev = 4.358, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), interaction(D, A) )
%   | then return 0.10699793270498176;  // std dev = 0.453, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.579984613913665;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4284247593897456;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, H), interaction(I, A) )
%   | | | then return 0.1497088724732483;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.2942719375348108;  // std dev = 3.103, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   else if ( location(A, J), phenotype(A, K) )
%   | then if ( phenotype(L, K), interaction(L, M) )
%   | | then if ( location(L, J) )
%   | | | then return 0.20563655395268404;  // std dev = 3.240, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return -0.025598388705272694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.4959704746707249;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1185610001442823;  // std dev = 0.453, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.17079913198842117;  // std dev = 0.047, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( location(D, E) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.051110178036197;  // std dev = 2.276, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return -0.014415222582209774;  // std dev = 1.582, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( location(A, G) )
%   | | | then return 0.2829571796670657;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06427816188687296;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( complex(H, I), interaction(A, J) )
%   | | | then return 0.09580535570188344;  // std dev = 3.116, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.1904834204463102;  // std dev = 5.082, 110.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=43 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.021873512606875204;  // std dev = 2.119, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.14377810548015144;  // std dev = 3.240, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12012352485641849;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, F), complex(F, G) )
%   | | then if ( phenotype(D, H), complex(D, G) )
%   | | | then return -0.01182464452601808;  // std dev = 3.017, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | | else return 0.06673609658397948;  // std dev = 2.378, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( complex(D, E) )
%   | | | then return 0.5069108829579091;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07512612839875663;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.1733781783212408;  // std dev = 1.349, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.03347576395165817;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.2085265034130425;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.08177000639151703;  // std dev = 5.308, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then if ( phenotype(D, E), interaction(F, A) )
%   | | then return 0.01936310003927191;  // std dev = 0.415, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.1415303494532183;  // std dev = 0.491, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return 0.025997356436810445;  // std dev = 0.451, 92.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=26 */
%   else if ( complex(A, G), interaction(H, A) )
%   | then if ( complex(H, G) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.3275310141231001;  // std dev = 1.285, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.07395518023090542;  // std dev = 1.399, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.03314168716695074;  // std dev = 0.446, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.0786992382522993;  // std dev = 0.449, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.31281154719128923;  // std dev = 1.455, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.13162892075466662;  // std dev = 4.197, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11552436736437799;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, A) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.1215351602625468;  // std dev = 1.297, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.25166719055383774;  // std dev = 1.229, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, G), phenotype(G, E) )
%   | | | then return -0.11104965268184751;  // std dev = 2.065, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.040148660372106626;  // std dev = 2.947, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, H), complex(A, J) )
%   | | | then return 0.18928449309712836;  // std dev = 1.494, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.045128861309284896;  // std dev = 5.249, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.3525151988509522;  // std dev = 1.553, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.09185560887168055;  // std dev = 3.422, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10586287381648246;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(D, E), enzyme(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, E) )
%   | | | then return 0.062239906100794266;  // std dev = 1.835, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.27010896445732124;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.05393624594331013;  // std dev = 3.685, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | | else return 0.020081577263265534;  // std dev = 5.619, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
%   | else if ( location(A, I), enzyme(A, J) )
%   | | then if ( location(K, I), interaction(A, K) )
%   | | | then return 0.13576747541614054;  // std dev = 1.489, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.3611820334579383;  // std dev = 0.834, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.030848034040815635;  // std dev = 1.529, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.079298056038297;  // std dev = 2.870, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09292311922895928;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(D, F), phenotype(D, G) )
%   | | then if ( complex(A, H), interaction(I, D) )
%   | | | then return -0.039965022017260744;  // std dev = 1.503, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.19630211191625252;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.06855725220170984;  // std dev = 2.181, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return -0.16555110988734628;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( location(A, K) )
%   | | then if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.13485431181090818;  // std dev = 3.997, 65.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=28 */
%   | | | else return 0.052599991350149;  // std dev = 5.597, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.0829872828273076;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.142449409325105;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08711245957596081;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(D, F), enzyme(E, G) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.08312714773381365;  // std dev = 1.399, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.22531133960992694;  // std dev = 2.422, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.06288367262694308;  // std dev = 3.109, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.04896397854263786;  // std dev = 4.379, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | else if ( location(A, K) )
%   | | then if ( interaction(L, A), complex(A, M) )
%   | | | then return -0.14945886501930675;  // std dev = 1.556, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.0027834284348631885;  // std dev = 4.532, 96.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
%   | | else return 0.3727999089562463;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.07709457465245656;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( complex(D, E), interaction(F, A) )
%   | | then if ( phenotype(A, G), interaction(D, D) )
%   | | | then return -0.11569404967149728;  // std dev = 1.589, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.07161518180539615;  // std dev = 2.455, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( phenotype(A, H), complex(D, I) )
%   | | | then return 0.4646172130710154;  // std dev = 0.863, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11167318582593308;  // std dev = 2.307, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.10074730964474704;  // std dev = 2.049, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.017008878164625138;  // std dev = 6.266, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   | | else return 0.2384134076429345;  // std dev = 1.125, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.403', 'seconds']
Refined model CLL: -0.40122


******************************************
Best model found
******************************************
Results 

CLL : -0.365531 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.188 

Total Inference Time : 2.657813310623169 

Total revision time: 12.944247463226318
Best scored revision CLL: -0.365423


Results 

CLL : -0.365531 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.036816814422608 

Total Inference Time : 2.657813310623169 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.114
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17785153732999603;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17501216459751542;  // std dev = 7.534, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12457563119807818;  // std dev = 7.675, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12952836790527142;  // std dev = 7.534, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11546108742608313;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.057628285461058186;  // std dev = 7.694, 276.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0722163839708632;  // std dev = 7.550, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), enzyme(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), enzyme(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.047653935238438076;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( enzyme(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(B, I), enzyme(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02598273814943861;  // std dev = 7.675, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05237019494016473;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.517', 'seconds']
Parameter learned model CLL:-0.368806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.649, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), enzyme(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.534, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.675, 187, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.534, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.487, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(A, G), enzyme(H, G)', 'false': 'complex(A, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.694, 190, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.55, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(A, E), enzyme(F, E)', 'true,false,false': 'complex(B, G), enzyme(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.608, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'enzyme(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(B, I), enzyme(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.675, 187, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), enzyme(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.495, 162, 86]}]
{'': [nan, 0.2174928483575413], 'false': [nan, 0.2174928483575413]}
{'': [0.0, 0.2243746973081919], 'false': [nan, 0.2243746973081926], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21578177622133818], 'false': [nan, 0.21578177622133818], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22437469730819087], 'false': [nan, 0.22437469730819026]}
{'': [0.0, 0.2269501221131312], 'false': [nan, 0.22695012211313165], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21450325561856756], 'false': [nan, 0.21450325561856756], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2235140330642065], 'false': [nan, 0.2235140330642065]}
{'': [2.3129646346357427e-18, 0.22006968439618965], 'false': [nan, 0.22006968439618935], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.21578177622133782], 'false': [nan, 0.21578177622133826], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2265218522372534], 'false': [nan, 0.2265218522372534]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 6.843
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( phenotype(C, E), location(A, F) )
%   | then if ( interaction(G, C), phenotype(G, E) )
%   | | then if ( interaction(A, H), phenotype(A, I) )
%   | | | then return 0.1273797043302816;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.3097618383253188;  // std dev = 2.771, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | else return 0.12285481745245352;  // std dev = 0.441, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( enzyme(C, J) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(A, D) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(K, A), phenotype(K, L) )
%   | then return 0.10567368757475913;  // std dev = 0.432, 101.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=25 */
%   | else if ( interaction(M, A) )
%   | | then return 0.3126943896449669;  // std dev = 0.498, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else return 0.12600607795665522;  // std dev = 0.443, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.18432648501714544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.298101965421439;  // std dev = 2.056, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.16896559796653132;  // std dev = 1.825, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.3204426196099209;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.5876227030070241;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( phenotype(H, J), enzyme(H, K) )
%   | | | then return 0.2381963944885943;  // std dev = 1.546, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.064605348746251;  // std dev = 3.920, 86.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=20 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.12769061220067635;  // std dev = 3.358, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.20407303906584798;  // std dev = 3.910, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15820669945488108;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), complex(F, G) )
%   | | then if ( complex(A, G), interaction(F, A) )
%   | | | then return 0.18618901449555544;  // std dev = 1.736, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.059816789896985426;  // std dev = 3.772, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | else if ( phenotype(E, H) )
%   | | | then return 0.13970681400627893;  // std dev = 3.196, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return 0.3325594509192573;  // std dev = 1.656, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), interaction(A, K) )
%   | | | then return 0.15400318575671948;  // std dev = 2.264, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.07743670770535344;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.3114324757261872;  // std dev = 2.008, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.17920786543484565;  // std dev = 3.255, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.7912612634458953;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.12903773263081927;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.39589054989818645;  // std dev = 1.075, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(C, H), enzyme(H, I) )
%   | | | then return 0.13739400385426084;  // std dev = 1.756, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.07082688210307964;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( phenotype(A, J) )
%   | then if ( interaction(A, K), interaction(K, A) )
%   | | then if ( enzyme(K, L) )
%   | | | then return 0.4565461673665781;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1874650884527855;  // std dev = 1.364, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.1285435911110084;  // std dev = 0.474, 125.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=43 */
%   | else return 0.063423191476294;  // std dev = 0.455, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.15480107418254563;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(A, F), location(A, G) )
%   | | then if ( complex(E, H), phenotype(A, I) )
%   | | | then return 0.2751899941163546;  // std dev = 1.865, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.07990944754191666;  // std dev = 2.706, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.052306048344687224;  // std dev = 3.875, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | | else return -0.030795667640554452;  // std dev = 3.427, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | else if ( phenotype(A, L), interaction(M, A) )
%   | | then if ( phenotype(M, N) )
%   | | | then return 0.16775849705409077;  // std dev = 2.198, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.07624324170931307;  // std dev = 1.769, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( interaction(P, A) )
%   | | | then return 0.33850001816873554;  // std dev = 1.318, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.15569165740705013;  // std dev = 3.037, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.134816289975795;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(A, A) )
%   | then if ( phenotype(E, D), enzyme(E, F) )
%   | | then return -0.057699023546991725;  // std dev = 1.178, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.2717960522677751;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( enzyme(G, H), phenotype(A, I) )
%   | | | then return -0.13828931492505572;  // std dev = 1.291, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.11612283327353694;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.050534404773452314;  // std dev = 4.318, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return 0.10755665215535229;  // std dev = 5.357, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(G, A), interaction(A, G) )
%   | | then return -0.11135394337122799;  // std dev = 0.398, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.18065333673831277;  // std dev = 0.496, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return -0.06995912172767524;  // std dev = 0.426, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   else if ( location(A, H), interaction(A, I) )
%   | then if ( interaction(I, I), interaction(J, A) )
%   | | then return -0.03268877233232162;  // std dev = 0.438, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( interaction(I, K), location(K, H) )
%   | | | then return 0.13348849655733533;  // std dev = 3.193, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.0015733414422871236;  // std dev = 2.565, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( enzyme(A, L), phenotype(A, M) )
%   | | then return -0.002198854756119244;  // std dev = 0.444, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.08578433570285246;  // std dev = 2.403, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.19651824733264828;  // std dev = 2.817, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12351265774889207;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(D, F), complex(A, E) )
%   | | then if ( interaction(A, G), interaction(D, G) )
%   | | | then return -0.1521907978341951;  // std dev = 1.281, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.044429301664607436;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( complex(A, E), interaction(H, A) )
%   | | | then return 0.16602444049435702;  // std dev = 1.894, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.005288848069581094;  // std dev = 3.678, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | else if ( enzyme(A, I) )
%   | | then if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.199396018410645;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.002910858736837199;  // std dev = 3.137, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.16267226101965845;  // std dev = 3.534, 50.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=22 */
%   | | | else return 0.07822173663606057;  // std dev = 3.247, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(A, A) )
%   | then return 0.29135009269052903;  // std dev = 1.136, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( phenotype(G, E), interaction(G, G) )
%   | | | then return 0.19548297064909276;  // std dev = 2.572, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.009383723906504046;  // std dev = 2.029, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return -0.010670397902792686;  // std dev = 3.095, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0.046702483645314125;  // std dev = 5.636, 140.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=49 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( location(A, E) )
%   | then if ( enzyme(D, F), phenotype(D, G) )
%   | | then if ( complex(D, C) )
%   | | | then return 0.15690735995948288;  // std dev = 1.452, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.0645579924698187;  // std dev = 1.216, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, H), phenotype(A, I) )
%   | | | then return 0.07600236202719511;  // std dev = 1.626, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.29971047229260644;  // std dev = 1.843, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else return -0.18962987290474087;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(J, A), enzyme(J, K) )
%   | then return -0.08419487772992966;  // std dev = 0.433, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then return -0.0172745983658286;  // std dev = 0.464, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.019712080948947112;  // std dev = 3.680, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0.13385778281719168;  // std dev = 2.222, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.861', 'seconds']
Refined model CLL: -0.420302


******************************************
Best model found
******************************************
Results 

CLL : -0.368127 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.843 

Total Inference Time : 2.759599208831787 

Total revision time: 12.439788562774659
Best scored revision CLL: -0.368806


Results 

CLL : -0.368127 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.532357913970948 

Total Inference Time : 2.759599208831787 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.212
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2020224528860736;  // std dev = 7.555, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17697362484897755;  // std dev = 7.547, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13256342067813054;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14190780228275857;  // std dev = 7.473, 243.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07524066694282257;  // std dev = 7.712, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08074988290334781;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06640429604306226;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08297307870114422;  // std dev = 7.420, 237.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03461781020366936;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0435999163109379;  // std dev = 7.507, 247.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.595', 'seconds']
Parameter learned model CLL:-0.386425 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.555, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.547, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.473, 156, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.712, 188, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.42, 150, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.507, 160, 87]}]
{'': [nan, 0.22562452155165766], 'false': [nan, 0.22562452155165766]}
{'': [0.0, 0.22604875283446751], 'false': [nan, 0.2260487528344684], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22009440895471696], 'false': [nan, 0.22009440895471696], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22984301173601698], 'false': [nan, 0.22984301173601682], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2162776859504143], 'false': [nan, 0.21627768595041397], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22307359759097162], 'false': [nan, 0.22307359759097162], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22349918875067618], 'false': [nan, 0.22349918875067618], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.23233456176894773], 'false': [nan, 0.2323345617689475]}
{'': [0.0, 0.22307359759097217], 'false': [nan, 0.22307359759097337], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2281630579094884], 'false': [nan, 0.2281630579094884], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 17.096
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(E, A), enzyme(A, F) )
%   | then if ( interaction(E, D), phenotype(A, G) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(E, E), complex(D, H) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( interaction(D, D), complex(A, I) )
%   | | then if ( complex(D, J), phenotype(A, K) )
%   | | | then return 0.26991364098186527;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1544452313958086;  // std dev = 0.457, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   else if ( interaction(L, A) )
%   | then if ( enzyme(L, M) )
%   | | then return 0.0826387310178797;  // std dev = 0.417, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else return 0.21298764477693158;  // std dev = 0.478, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.18053175856333625;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( enzyme(A, F), enzyme(D, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.47303123982280626;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19150264942678996;  // std dev = 1.547, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( complex(D, I), interaction(J, A) )
%   | | | then return 0.1250100408134551;  // std dev = 3.632, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.028444342822074323;  // std dev = 2.526, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( location(K, M), interaction(N, K) )
%   | | | then return 0.32120807616666003;  // std dev = 2.395, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.07851068455602184;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.12104012206775215;  // std dev = 3.576, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.17737994034211263;  // std dev = 3.873, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.24556956180908102;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(D, F), interaction(G, D) )
%   | | then if ( phenotype(G, F) )
%   | | | then return 0.20223742943020598;  // std dev = 4.100, 70.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=28 */
%   | | | else return 0.06492154212628591;  // std dev = 2.806, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( phenotype(D, H), phenotype(A, H) )
%   | | | then return 0.06244441323386274;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.36790402794082205;  // std dev = 2.104, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else if ( location(A, I) )
%   | | then if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.04890473152971118;  // std dev = 1.944, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.10535710484995989;  // std dev = 4.556, 98.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   | | else return 0.21268388602095975;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.13377882644728448;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(D, F), complex(E, G) )
%   | | then if ( interaction(E, D), interaction(D, H) )
%   | | | then return 0.018864908623049053;  // std dev = 2.584, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.08451758776136545;  // std dev = 2.965, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else if ( phenotype(E, I), interaction(E, D) )
%   | | | then return 0.4163133348692308;  // std dev = 1.112, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.0727332445278836;  // std dev = 3.035, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then if ( enzyme(L, J), interaction(L, A) )
%   | | | then return -0.042289042059473515;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.10542511404868034;  // std dev = 2.481, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( enzyme(A, M), complex(A, N) )
%   | | | then return 0.33842432568294006;  // std dev = 1.452, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.16285260192485637;  // std dev = 4.506, 86.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10734890983863571;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(D, A), interaction(D, D) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.19783336544999033;  // std dev = 1.282, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.10036297470799861;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( phenotype(A, G), complex(A, H) )
%   | | | then return -0.009651771650812612;  // std dev = 1.935, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.10024924328516342;  // std dev = 2.432, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(I, J), phenotype(J, K) )
%   | | | then return 0.12320120940645926;  // std dev = 5.846, 145.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=54 */
%   | | | else return 0.0047832104981589095;  // std dev = 2.748, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.11872358881202001;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.020349524073458684;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11244001852215266;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then if ( complex(E, F) )
%   | | | then return 0.028552480812130576;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.135339124596544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.2705394397500665;  // std dev = 1.944, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.0957317482930012;  // std dev = 3.027, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return -0.05666618784389443;  // std dev = 1.921, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.004000973861910104;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.14904205121079048;  // std dev = 2.416, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.057226259858847904;  // std dev = 5.457, 136.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=44 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( phenotype(D, F), enzyme(A, G) )
%   | | then if ( interaction(D, H), location(H, E) )
%   | | | then return -0.0537422770282188;  // std dev = 2.646, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.2392645160494919;  // std dev = 1.341, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( phenotype(D, I), interaction(J, A) )
%   | | | then return 0.18016591247081118;  // std dev = 3.174, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0.39572648088023654;  // std dev = 1.805, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( phenotype(A, M), interaction(N, L) )
%   | | | then return 0.07735308730624528;  // std dev = 3.244, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.009558216660225605;  // std dev = 4.283, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | | else if ( enzyme(A, P) )
%   | | | then return 0.02781186661566411;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2511109144716333;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( complex(C, G) )
%   | | then if ( enzyme(C, H) )
%   | | | then return 0.1280743654080805;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.011473699474085126;  // std dev = 2.169, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else return 0.2594634861745707;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.02828363975742375;  // std dev = 0.454, 153.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
%   else if ( complex(A, I) )
%   | then return -0.014387723767626608;  // std dev = 0.440, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), interaction(K, K) )
%   | | | then return 0.32912259270178107;  // std dev = 1.070, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0983209647389057;  // std dev = 1.564, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.015189065961514217;  // std dev = 2.019, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.17465683227025408;  // std dev = 2.434, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08665272343642985;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D), enzyme(A, E) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.19572991101974402;  // std dev = 0.903, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.016638435554704973;  // std dev = 2.129, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.05015640184896986;  // std dev = 2.251, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.08567931784969657;  // std dev = 3.596, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else if ( interaction(A, L), phenotype(A, M) )
%   | | then if ( enzyme(L, N), interaction(L, A) )
%   | | | then return 0.3418599132069011;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.033843210512499604;  // std dev = 3.200, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.05063703288249233;  // std dev = 3.444, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.14423706374602918;  // std dev = 3.237, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.06837222306346055;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( enzyme(F, G), phenotype(E, H) )
%   | | | then return -0.11186823439289889;  // std dev = 2.962, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return -0.04021688084721758;  // std dev = 3.244, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else return 0.3026161344078311;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( location(J, K) )
%   | | | then return 0.07415133348020496;  // std dev = 2.463, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.4243688942553532;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.23465721968138062;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.03375963639795405;  // std dev = 5.437, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.386', 'seconds']
Refined model CLL: -0.402496


******************************************
Best model found
******************************************
Results 

CLL : -0.385831 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 17.096 

Total Inference Time : 10.61496877670288 

Total revision time: 30.748326929092407
Best scored revision CLL: -0.386425


Results 

CLL : -0.385831 

AUC ROC : 0.503646 

AUC PR : 0.007067 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 30.806839378356933 

Total Inference Time : 10.61496877670288 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.259
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19913254165688996;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1687091687734052;  // std dev = 8.306, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1405707128801863;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13936458724385725;  // std dev = 8.191, 293.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10090032733609602;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0691045154936345;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0361534645728124;  // std dev = 8.480, 337.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), function(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.028015373243199058;  // std dev = 8.485, 338.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.044803202408540584;  // std dev = 8.346, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04752595916010898;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.267', 'seconds']
Parameter learned model CLL:-0.366415 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.279, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.306, 205, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.191, 189, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.279, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.359, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.48, 233, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), function(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.485, 234, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.346, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.272, 200, 104]}]
{'': [0.0, 0.2247137866165015], 'false': [nan, 0.2247137866165015], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22329049758590805], 'false': [nan, 0.22329049758590813], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22222222222222252], 'false': [nan, 0.22222222222222252], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22896015096273653], 'false': [nan, 0.22896015096274003], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2247137866165018], 'false': [nan, 0.22471378661650052]}
{'': [0.0, 0.22044203843206794], 'false': [nan, 0.22044203843206794], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21336808460055093], 'false': [nan, 0.21336808460055093], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21301775147929036], 'false': [nan, 0.2130177514792907]}
{'': [nan, 0.22115394305870534], 'false': [nan, 0.22115394305870534]}
{'': [0.0, 0.2250692520775621], 'false': [nan, 0.2250692520775621], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
2;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 19.559
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.23592671287729014;  // std dev = 3.252, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | else return 0.1710741051675388;  // std dev = 5.622, 147.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=46 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.21447077417997076;  // std dev = 4.467, 87.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, D), complex(D, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.026937066406559473;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.09401027973927117;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return 0.30064288888059293;  // std dev = 3.926, 62.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=29 */
%   | | | else return 0.09805515250330069;  // std dev = 1.916, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then return -0.04501383359810231;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.09304604489119057;  // std dev = 2.279, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.1503512522160125;  // std dev = 5.936, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), location(A, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.16835662562474304;  // std dev = 1.973, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.09650769868136899;  // std dev = 3.147, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.3332797281192992;  // std dev = 1.794, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.1505493305721197;  // std dev = 4.866, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | else if ( interaction(I, A) )
%   | | then if ( complex(A, J), complex(I, J) )
%   | | | then return 0.017421522689495903;  // std dev = 2.166, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.10962511363549944;  // std dev = 4.849, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | | else return -0.0618467213074934;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( phenotype(D, F), location(A, E) )
%   | | then if ( enzyme(D, G), interaction(D, H) )
%   | | | then return 0.19317152985155242;  // std dev = 2.649, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.09211980716938335;  // std dev = 4.261, 82.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=27 */
%   | | else if ( complex(D, I), interaction(J, A) )
%   | | | then return 0.2241280551154769;  // std dev = 2.132, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.5655849627359066;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( complex(A, M) )
%   | | | then return 0.1644173137883772;  // std dev = 2.645, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.06337365062253637;  // std dev = 5.195, 137.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=37 */
%   | | else if ( complex(A, N) )
%   | | | then return -0.04281952268306338;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.015405772835990773;  // std dev = 1.732, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), enzyme(C, E) )
%   | then if ( interaction(F, C), phenotype(C, G) )
%   | | then if ( enzyme(A, E), phenotype(A, G) )
%   | | | then return -0.03370096109175327;  // std dev = 1.252, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.10898229237699965;  // std dev = 3.523, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | else return -0.03990414208455808;  // std dev = 0.389, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( interaction(H, C), location(A, I) )
%   | | then if ( location(H, I), enzyme(A, J) )
%   | | | then return 0.08215490809632192;  // std dev = 3.101, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.1480622359660004;  // std dev = 5.588, 132.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=51 */
%   | | else if ( interaction(K, C), interaction(K, A) )
%   | | | then return -0.050005181520919095;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.06635511302492846;  // std dev = 2.529, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   else if ( phenotype(A, L) )
%   | then return 0.005628204663912066;  // std dev = 0.451, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else return -0.2618852929204005;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11592998346670699;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), complex(F, E) )
%   | | then if ( phenotype(F, G), interaction(D, F) )
%   | | | then return 0.17834460846100786;  // std dev = 3.041, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.04984113822081446;  // std dev = 3.201, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( interaction(H, D), enzyme(H, I) )
%   | | | then return -0.01144224875767928;  // std dev = 4.450, 110.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=26 */
%   | | | else return 0.06921728662336926;  // std dev = 4.040, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then return 0.39631963046550417;  // std dev = 1.125, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.25215153365999676;  // std dev = 1.847, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.07167474414266348;  // std dev = 2.716, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10276544692542508;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( enzyme(D, F), interaction(D, G) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.012663942004536003;  // std dev = 1.709, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.1237552720434269;  // std dev = 2.651, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( phenotype(A, E), location(D, H) )
%   | | | then return 0.017066488188489454;  // std dev = 3.049, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return -0.06917991931275298;  // std dev = 3.303, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), interaction(K, K) )
%   | | | then return -0.029623794268914858;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.05020407706788137;  // std dev = 2.186, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.11095369619702221;  // std dev = 4.990, 108.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=39 */
%   | | | else return 0.17943355394678093;  // std dev = 2.645, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, E), complex(A, F) )
%   | then if ( enzyme(C, G), interaction(A, C) )
%   | | then return -0.164705953137019;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( complex(C, H), enzyme(A, I) )
%   | | | then return 0.07792853783769195;  // std dev = 1.637, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.04158525242284131;  // std dev = 3.639, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | else if ( complex(C, J), location(A, K) )
%   | | then if ( interaction(C, C) )
%   | | | then return 0.33407116268239434;  // std dev = 1.113, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04262360212043659;  // std dev = 5.765, 151.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=49 */
%   | | else if ( interaction(L, C), interaction(L, A) )
%   | | | then return 0.04762506685203488;  // std dev = 1.398, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.23787831544200033;  // std dev = 1.975, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( enzyme(A, M) )
%   | then return 0.023387084093656366;  // std dev = 0.480, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else return -0.09007099509432626;  // std dev = 0.418, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), location(A, F) )
%   | then if ( interaction(E, E), complex(C, G) )
%   | | then if ( interaction(E, A), complex(E, H) )
%   | | | then return 0.011590165680296843;  // std dev = 2.755, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.10823538997344079;  // std dev = 4.033, 68.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.11546090874115045;  // std dev = 1.756, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.02985908232826453;  // std dev = 5.006, 113.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=37 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.3955937487188767;  // std dev = 0.844, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.04100375844303483;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2195492445519685;  // std dev = 1.395, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(A, L), interaction(M, A) )
%   | then return -0.13092873545204733;  // std dev = 0.375, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else return 0.013902203649811724;  // std dev = 0.463, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.09432182299230238;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(A, E), enzyme(D, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.09279957034896877;  // std dev = 1.252, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.17314970724625287;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( phenotype(D, G) )
%   | | | then return -0.015562888922262475;  // std dev = 3.929, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | | | else return 0.10266090811567086;  // std dev = 1.298, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.20119170630848587;  // std dev = 2.103, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.019688145416695876;  // std dev = 6.241, 177.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=57 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.013905598423147208;  // std dev = 1.651, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.4007998569320379;  // std dev = 1.148, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.218', 'seconds']
Refined model CLL: -0.394702


******************************************
Best model found
******************************************
Results 

CLL : -0.36734 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 19.559 

Total Inference Time : 10.83790922164917 

Total revision time: 33.83794109153747
Best scored revision CLL: -0.366415


Results 

CLL : -0.36734 

AUC ROC : 0.50357 

AUC PR : 0.007535 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 33.896453540802 

Total Inference Time : 10.83790922164917 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.205
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2053187464202672;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14103801343666067;  // std dev = 7.969, 297.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1288975993698098;  // std dev = 7.919, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10830927428945691;  // std dev = 7.919, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10237105996807486;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06581140322653696;  // std dev = 7.951, 294.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08760927106873702;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05901727602664062;  // std dev = 7.817, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03752494473661543;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.056007473917587786;  // std dev = 7.718, 261.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.628', 'seconds']
Parameter learned model CLL:-0.372123 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.75, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), interaction(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.969, 205, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.919, 197, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.919, 197, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.951, 202, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.75, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.817, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.873, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.718, 169, 92]}]
{'': [0.0, 0.22664293342826716], 'false': [nan, 0.22664293342826716], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2138103821605494], 'false': [nan, 0.2138103821605525], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21699931753690577], 'false': [nan, 0.21699931753690577]}
{'': [0.0, 0.21699931753690582], 'false': [nan, 0.21699931753690635], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22141711091558347], 'false': [nan, 0.22141711091558366], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21500300800592237], 'false': [nan, 0.21500300800592237], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22664293342826694], 'false': [nan, 0.22664293342826694], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.2230273323032672], 'false': [nan, 0.22302733230326663], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-6.938893903907229e-19, 0.21980785674764805], 'false': [nan, 0.21980785674764858], 'true': [nan, -6.938893903907229e-19], 'true,false': [nan, -6.938893903907229e-19], 'true,false,false': [nan, -6.938893903907229e-19]}
{'': [-5.782411586589357e-19, 0.22824092423775386], 'false': [nan, 0.22824092423775386], 'true': [nan, -5.782411586589357e-19], 'true,false': [nan, -5.782411586589357e-19], 'true,false,false': [nan, -5.782411586589357e-19]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
1;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
6;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
9;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.811
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(D, H), complex(A, H) )
%   | | | then return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.06327714022771748;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3126943896449669;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return 0.14582016797622432;  // std dev = 3.868, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | | else return 0.21949347291463742;  // std dev = 5.240, 119.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), complex(D, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.21192676579904882;  // std dev = 2.360, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.8156735149828546;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(D, I), enzyme(A, J) )
%   | | | then return 0.09594290926972934;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.17944303171151543;  // std dev = 3.799, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | else if ( interaction(K, A), enzyme(A, L) )
%   | | then if ( interaction(M, K) )
%   | | | then return 0.03604470934125902;  // std dev = 3.069, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | | else return 0.4985624083553865;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, N), phenotype(A, P) )
%   | | | then return 0.22458327631495537;  // std dev = 2.591, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.13335958258184252;  // std dev = 4.501, 96.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), complex(E, F) )
%   | then if ( phenotype(A, G), enzyme(C, H) )
%   | | then return 0.024269744456514915;  // std dev = 0.424, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.46208771518011216;  // std dev = 1.174, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.12615110602892404;  // std dev = 4.732, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | else if ( location(A, D) )
%   | | then return 0.027696052235171905;  // std dev = 0.432, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | else return 0.13317992365808112;  // std dev = 0.468, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   else if ( interaction(J, A), phenotype(J, K) )
%   | then return 0.480442955609754;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, L), phenotype(A, M) )
%   | | then return 0.0588500234157369;  // std dev = 0.434, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.24185417584913704;  // std dev = 2.104, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.17516962819865203;  // std dev = 2.765, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11510750439770412;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(D, D), phenotype(D, F) )
%   | | then return 0.5022059161246507;  // std dev = 0.896, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G), phenotype(D, H) )
%   | | | then return -0.060001389229552865;  // std dev = 2.355, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.06448963445481389;  // std dev = 4.428, 98.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=27 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( complex(A, K), interaction(J, L) )
%   | | | then return 0.8023834244362673;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21291226876479608;  // std dev = 2.079, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.2895939324082138;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.10275638370601753;  // std dev = 5.288, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.11377652578102185;  // std dev = 0.000501, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( enzyme(D, E), phenotype(D, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.022832252786202257;  // std dev = 1.447, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.28304665345280283;  // std dev = 1.076, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, A), phenotype(D, I) )
%   | | | then return 0.018544852532373736;  // std dev = 2.295, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return -0.05846051237988169;  // std dev = 2.763, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.11830669535920585;  // std dev = 1.233, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.02992937902603936;  // std dev = 2.531, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.12108099698280286;  // std dev = 5.147, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   | | | else return 0.0604466054076583;  // std dev = 3.553, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, A), complex(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.18557782404334608;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.10519840817563175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.04427392876412961;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(A, I), interaction(H, A) )
%   | | | then return 0.3415468451740651;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.08638907291350759;  // std dev = 5.784, 150.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=50 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return -0.06370798036992308;  // std dev = 1.787, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.056950501886628556;  // std dev = 4.593, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( interaction(E, A), location(E, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.026353407446193428;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3469977776335122;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, G), location(E, G) )
%   | | | then return -0.04930281187090526;  // std dev = 3.271, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return 0.17608700392950433;  // std dev = 1.425, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( location(H, I), interaction(J, H) )
%   | | | then return 0.11599219204054381;  // std dev = 4.189, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
%   | | | else return 0.03295616815167602;  // std dev = 4.305, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.12683955407525743;  // std dev = 2.181, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.36084042409330086;  // std dev = 1.598, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.10842849397372334;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( phenotype(A, D), location(A, E) )
%   | then if ( interaction(A, F), location(F, E) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.04817342102610389;  // std dev = 2.336, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return -0.083273156022309;  // std dev = 3.048, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | else if ( interaction(I, A), enzyme(A, J) )
%   | | | then return -0.03811383652111541;  // std dev = 2.167, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.058733379639876175;  // std dev = 2.800, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else if ( enzyme(A, K) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.025439511127525;  // std dev = 2.210, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.19274108097619388;  // std dev = 2.562, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.07461449592623974;  // std dev = 3.743, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | | else return -0.0071708727945310495;  // std dev = 2.935, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08893660222288727;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), enzyme(A, G) )
%   | | then if ( complex(A, H), interaction(F, F) )
%   | | | then return 0.3911105867328331;  // std dev = 0.787, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.010513930997553853;  // std dev = 2.513, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( complex(A, I), interaction(D, D) )
%   | | | then return -0.11263831296925207;  // std dev = 2.326, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return -0.0067287772785599885;  // std dev = 3.632, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.0011510901321306558;  // std dev = 3.015, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.06775258114934617;  // std dev = 2.015, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.14365306981554635;  // std dev = 2.824, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.0604962574935375;  // std dev = 3.783, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.08587722451693726;  // std dev = 0.000451, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( location(A, D) )
%   | then if ( complex(A, E), interaction(A, F) )
%   | | then if ( interaction(F, A), location(F, D) )
%   | | | then return -0.1251581476875803;  // std dev = 2.161, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return -0.010243253127907442;  // std dev = 3.767, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | else if ( location(G, D), interaction(G, G) )
%   | | | then return 0.004925855463556182;  // std dev = 6.309, 186.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=57 */
%   | | | else return 0.13401494651869936;  // std dev = 1.810, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10881899285582715;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.13091560201689711;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.759', 'seconds']
Refined model CLL: -0.376077


******************************************
Best model found
******************************************
Results 

CLL : -0.372246 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.811 

Total Inference Time : 3.115623950958252 

Total revision time: 14.095561233520508
Best scored revision CLL: -0.372123


Results 

CLL : -0.372246 

AUC ROC : 0.503446 

AUC PR : 0.007122 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.154073682785034 

Total Inference Time : 3.115623950958252 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.167
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.207742431034472;  // std dev = 7.479, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(B, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1892668235036759;  // std dev = 7.429, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14943223936855157;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10868447848685285;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09190672540468002;  // std dev = 7.572, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(A, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06958857023632688;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0745523094874548;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(B, G), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), function(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0372882543602117;  // std dev = 7.622, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then if ( interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(B, E), function(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G), function(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( complex(B, I), interaction(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.016659860857617018;  // std dev = 7.694, 276.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.037526976443616196;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.379', 'seconds']
Parameter learned model CLL:-0.370099 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.479, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(B, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.429, 154, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.495, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.586, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.572, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), function(F, E)', 'true,false,false': 'complex(A, G), interaction(H, G)', 'false': 'complex(A, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.601, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.495, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(A, E), interaction(F, E)', 'true,false,false': 'complex(B, G), interaction(H, G)', 'false': 'complex(B, I), function(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.622, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'true': 'interaction(D, C)', 'true,false': 'complex(B, E), function(F, E)', 'true,false,false': 'complex(A, G), function(H, G)', 'false': 'complex(B, I), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.694, 190, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), complex(B, C)', 'false': 'complex(A, D), interaction(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.557, 170, 86]}]
{'': [0.0, 0.22737788353493352], 'false': [nan, 0.22737788353493352], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2299305555555547], 'false': [nan, 0.229930555555555]}
{'': [nan, 0.22652185223725357], 'false': [nan, 0.22652185223725357]}
{'': [0.0, 0.22136094674556375], 'false': [nan, 0.22136094674556375], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.22222222222222324], 'false': [nan, 0.22222222222222357], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [0.0, 0.22049997086416898], 'false': [nan, 0.22049997086416898], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22652185223725246], 'false': [nan, 0.22652185223725246]}
{'': [0.0, 0.21920968316126715], 'false': [nan, 0.21920968316126732], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21450325561856745], 'false': [nan, 0.2145032556185674], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22308349609375097], 'false': [nan, 0.22308349609375097]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
3;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
4;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
5;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
7;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true
8;;proteinclass(A, B) :- complex(A, C), complex(B, C).;true;true


Refining candidate
***************************
Model training time 7.572
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(A, E), interaction(F, A) )
%   | | then if ( enzyme(A, G), phenotype(E, D) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.14386322081379807;  // std dev = 3.586, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.34090755578916754;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.23024195835532632;  // std dev = 3.170, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | else if ( interaction(A, J) )
%   | | then if ( enzyme(J, K), phenotype(J, L) )
%   | | | then return 0.09344305274657114;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.26291083986141706;  // std dev = 3.181, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.04564893509951222;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.14847151574467365;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, E) )
%   | | then return 0.03259720856698163;  // std dev = 0.415, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.18014536563190459;  // std dev = 1.592, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.4918903542566431;  // std dev = 1.141, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(I, A), phenotype(I, C) )
%   | | then return 0.5557097026125922;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(J, C), interaction(J, J) )
%   | | | then return 0.16507231821424387;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.48351225564954037;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(K, A), enzyme(K, L) )
%   | then return 0.0703906637132564;  // std dev = 0.430, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | else if ( interaction(M, A), interaction(N, M) )
%   | | then return 0.23208358930495557;  // std dev = 0.489, 85.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=34 */
%   | | else return 0.12053495240135294;  // std dev = 0.452, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(A, E), phenotype(D, F) )
%   | then if ( complex(D, G), interaction(C, A) )
%   | | then if ( enzyme(D, H), phenotype(C, F) )
%   | | | then return 0.1268788620466709;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.25843206250572426;  // std dev = 1.486, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.03682145650992654;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.1273309844687683;  // std dev = 2.793, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | else if ( enzyme(D, I), location(A, J) )
%   | | then if ( interaction(K, A), location(D, J) )
%   | | | then return 0.09694043043882093;  // std dev = 2.225, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.2604588135407363;  // std dev = 2.224, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( enzyme(A, L), complex(C, M) )
%   | | | then return 0.5447174218926679;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.26185223564678445;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else return 0.09310488110336529;  // std dev = 0.453, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.16566565362410765;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(D, D), enzyme(D, F) )
%   | | then return 0.4650060480462556;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.029086015079609517;  // std dev = 2.767, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.08375869220023553;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(A, J), interaction(K, H) )
%   | | | then return 0.024583646912581667;  // std dev = 2.974, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return 0.11308575848048491;  // std dev = 3.273, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | else if ( location(A, L) )
%   | | | then return 0.1275669267990198;  // std dev = 5.157, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
%   | | | else return 0.3027689280644531;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.14297769416906173;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( phenotype(E, D) )
%   | | then if ( interaction(E, F), enzyme(F, G) )
%   | | | then return 0.2264779662055781;  // std dev = 1.859, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.05070328303670615;  // std dev = 2.547, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(H, A), interaction(E, H) )
%   | | | then return 0.1409012073030139;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.01854991531382847;  // std dev = 3.275, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.026951205179555314;  // std dev = 1.461, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.22673811557188223;  // std dev = 3.410, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.05771641115552484;  // std dev = 4.004, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return 0.24996041493777302;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return -0.12727105223242124;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( phenotype(E, D), enzyme(E, F) )
%   | | then if ( interaction(E, G), interaction(G, G) )
%   | | | then return 0.10210454530510696;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.680853151540617;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(E, H), enzyme(A, H) )
%   | | | then return -0.20557449110109893;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.09208802203713883;  // std dev = 4.059, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( complex(K, I), phenotype(K, L) )
%   | | | then return -0.018989511460653623;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.5296185704878169;  // std dev = 0.849, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return -0.030083999184070877;  // std dev = 3.649, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | | else return 0.04629488225923789;  // std dev = 4.697, 100.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(E, D), phenotype(E, F) )
%   | then return 0.04464457556523725;  // std dev = 0.486, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | else return -0.08296460068687857;  // std dev = 0.425, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   else if ( interaction(A, G), phenotype(A, H) )
%   | then if ( complex(G, I), interaction(G, G) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.48708840160498057;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2422694617062779;  // std dev = 0.978, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(G, J) )
%   | | | then return 0.023234870038432196;  // std dev = 2.527, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.1856505676913533;  // std dev = 2.133, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( location(A, K) )
%   | | then if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.11549888843943569;  // std dev = 2.082, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.0483514303021351;  // std dev = 4.505, 91.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=30 */
%   | | else return 0.36463079796369624;  // std dev = 0.848, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(A, A) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.029390380508894823;  // std dev = 0.490, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.16846578133899834;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(I, I) )
%   | | | then return 0.01173197750871137;  // std dev = 3.212, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.1769107492205154;  // std dev = 2.661, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.04085087295139607;  // std dev = 5.172, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
%   | | | else return -0.04274879749690722;  // std dev = 3.090, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(A, G), phenotype(G, D) )
%   | | | then return -0.20121432938655076;  // std dev = 2.226, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.011880415363427217;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( interaction(H, A), phenotype(H, D) )
%   | | | then return 0.18144187426529473;  // std dev = 1.583, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.018098905029294014;  // std dev = 4.479, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( complex(J, K), phenotype(J, L) )
%   | | | then return 0.5065160911083988;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11443907319099234;  // std dev = 1.518, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.11705574793249354;  // std dev = 3.263, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return -0.031468579039980564;  // std dev = 2.248, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), phenotype(D, C) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( complex(E, F), interaction(G, D) )
%   | | | then return -0.053525216535516756;  // std dev = 1.476, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.28859864496188026;  // std dev = 1.149, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.12416040177672137;  // std dev = 0.433, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | else if ( enzyme(A, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.018893875818323237;  // std dev = 2.441, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.08869368586647175;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( phenotype(J, C), complex(J, K) )
%   | | | then return 0.16033789710525007;  // std dev = 3.446, 48.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=22 */
%   | | | else return -0.0023236177391243403;  // std dev = 1.880, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   else if ( interaction(L, A) )
%   | then return -0.006856459057913066;  // std dev = 0.464, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | else return -0.09281430846371355;  // std dev = 0.441, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.077', 'seconds']
Refined model CLL: -0.406237


******************************************
Best model found
******************************************
Results 

CLL : -0.369424 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.572 

Total Inference Time : 3.214573860168457 

Total revision time: 13.620864786148072
Best scored revision CLL: -0.370099


Results 

CLL : -0.369424 

AUC ROC : 0.503557 

AUC PR : 0.006992 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.679377235412598 

Total Inference Time : 3.214573860168457 

