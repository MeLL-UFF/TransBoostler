Starting experiment 32_twitter_nell_sports 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.665
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 392.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 419.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 396.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.463, 427.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 394.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 416.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 403.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.462, 430.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 381.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.882', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 283.046
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.8581489350995104;  // std dev = 7.35e-07, 127.000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | then return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( athleteplaysforteam(H, A), teamalsoknownas(I, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14185106490048782;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( teamalsoknownas(D, A), athleteledsportsteam(C, D) )
%   | | then if ( teamalsoknownas(F, D) )
%   | | | then return 0.3861400788776214;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109547;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7204056423668617;  // std dev = 0.113, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return 0.4441086724301469;  // std dev = 1.091, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamalsoknownas(G, A), athleteledsportsteam(H, A) )
%   | then if ( athleteledsportsteam(I, G) )
%   | | then return -0.1254446385283914;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.19410540472492188;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.12596585538015714;  // std dev = 0.071, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(A, D) )
%   then if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then if ( teamalsoknownas(A, G), athleteledsportsteam(H, G) )
%   | | then return 0.35513622503954284;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5620698358397913;  // std dev = 0.218, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( teamalsoknownas(I, A), teamalsoknownas(C, I) )
%   | | then if ( teamalsoknownas(I, C) )
%   | | | then return -0.12226343579197034;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.19327606478813297;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11479318560304252;  // std dev = 0.116, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( athleteplayssport(J, B) )
%   | then if ( teamplaysagainstteam(K, A) )
%   | | then return 0.5676418713240696;  // std dev = 0.106, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( athleteplaysinleague(J, L), teamplaysinleague(A, L) )
%   | | | then return 0.5551362250395429;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.47601363614627423;  // std dev = 1.834, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | else return -0.11288587507596962;  // std dev = 0.083, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then if ( teamplaysagainstteam(A, G), athleteplaysforteam(H, G) )
%   | | then if ( teamalsoknownas(G, I) )
%   | | | then return 0.4294071351816582;  // std dev = 0.233, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return 0.3400024173192674;  // std dev = 0.976, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( athleteledsportsteam(C, F) )
%   | | | then return 0.41475598599705527;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.361512151955617;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.428372432309813;  // std dev = 0.085, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( athleteledsportsteam(J, A), athleteplaysforteam(J, A) )
%   | then if ( athleteplaysforteam(K, A), athleteplayssport(K, L) )
%   | | then return -0.10353894335012324;  // std dev = 0.055, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0.18987247425029244;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, M) )
%   | | then return -0.10577511662746124;  // std dev = 0.420, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | | else return -0.09152066120607212;  // std dev = 0.085, 67.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.3259171862512382;  // std dev = 0.159, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | else if ( athleteledsportsteam(C, D), teamalsoknownas(D, G) )
%   | | | then return 0.28003219539297863;  // std dev = 0.990, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.3690541046800202;  // std dev = 0.272, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1709031796702621;  // std dev = 0.949, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamalsoknownas(A, H), teamalsoknownas(H, A) )
%   | then return -0.1024165729501316;  // std dev = 0.145, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( athleteplaysforteam(I, A), teamalsoknownas(J, A) )
%   | | then if ( teamalsoknownas(K, J), athleteledsportsteam(L, K) )
%   | | | then return 0.12754182598469518;  // std dev = 0.756, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09750645906112117;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09268194402412247;  // std dev = 0.039, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysinleague(A, E), teamplaysinleague(D, E) )
%   | | then return 0.25838496697003616;  // std dev = 0.135, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   | | else if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | | then return -0.04710893723204325;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.2433933526346245;  // std dev = 0.996, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return 0.41943638170605774;  // std dev = 0.129, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamalsoknownas(H, A), teamalsoknownas(I, H) )
%   | then if ( teamalsoknownas(A, J) )
%   | | then return -0.09128755376868315;  // std dev = 0.099, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.174313004470095;  // std dev = 0.658, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08588828105061304;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08618357191424031;  // std dev = 0.088, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteplaysinleague(E, D) )
%   | then if ( teamplaysinleague(A, D), athleteplayssport(E, F) )
%   | | then return 0.21330979519279933;  // std dev = 0.100, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.11704991206343433;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( athleteledsportsteam(C, G), teamplaysinleague(A, H) )
%   | | then if ( teamalsoknownas(A, I) )
%   | | | then return 0.228447878616116;  // std dev = 0.079, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.19115224215461496;  // std dev = 0.980, 50.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=49 */
%   | | else return 0.24551221664391584;  // std dev = 0.039, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( teamplaysagainstteam(A, J), teamalsoknownas(K, J) )
%   | then return -0.08176028405568167;  // std dev = 0.238, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( athleteledsportsteam(L, A), teamplaysagainstteam(M, A) )
%   | | then return 0.005974478809192174;  // std dev = 0.765, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( athleteplaysforteam(N, A), teamalsoknownas(A, P) )
%   | | | then return -0.11109184162771835;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07770491665649984;  // std dev = 0.631, 163.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A), athleteplaysforteam(C, A) )
%   | then if ( teamalsoknownas(F, E) )
%   | | then return -0.12537758575507485;  // std dev = 0.860, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1726324750749155;  // std dev = 0.000146, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1881220758957419;  // std dev = 0.252, 124.000 (wgt'ed) examples reached here.  /* #pos=124 */
%   else if ( athleteledsportsteam(G, A), athleteplaysinleague(G, H) )
%   | then if ( teamplaysinleague(A, H) )
%   | | then return -0.07884179037180075;  // std dev = 0.086, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0.1762182293852895;  // std dev = 0.609, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamalsoknownas(A, I), teamalsoknownas(I, A) )
%   | | then return -0.0802374184444278;  // std dev = 0.110, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.07350812154167338;  // std dev = 0.037, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.07152014753099672;  // std dev = 0.634, 89.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.16406935033072964;  // std dev = 0.028, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( athleteplaysforteam(C, G), teamplaysinleague(G, F) )
%   | | | then return 0.1566630867676216;  // std dev = 0.019, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.07818812523576808;  // std dev = 0.955, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.15831711604607127;  // std dev = 0.023, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( athleteplaysforteam(H, A), athleteplaysinleague(H, I) )
%   | then if ( athleteplayssport(H, J), teamplaysinleague(A, K) )
%   | | then return -0.0751229765885428;  // std dev = 0.158, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( athleteplaysforteam(L, A), athleteplayssport(L, M) )
%   | | | then return -0.2678913236020861;  // std dev = 0.263, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08921635518166025;  // std dev = 0.869, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( teamplaysinleague(A, N) )
%   | | then return -0.07273797498717564;  // std dev = 0.040, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else return -0.06028574857419556;  // std dev = 0.069, 60.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteplayssport(E, F) )
%   | then if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then return 0.1400869281422298;  // std dev = 0.024, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else return -0.32092646525017343;  // std dev = 0.975, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.14037929128222199;  // std dev = 0.140, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( teamalsoknownas(A, I), teamplaysinleague(A, J) )
%   | then if ( teamplaysagainstteam(K, A) )
%   | | then return -0.06787441484744144;  // std dev = 0.056, 37.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
%   | | else if ( teamplaysinleague(I, J) )
%   | | | then return -0.11830058355057212;  // std dev = 0.760, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06370379932315758;  // std dev = 0.000102, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(L, B), athleteplaysinleague(L, M) )
%   | | then return 0.1894868290626397;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamalsoknownas(N, A), teamalsoknownas(P, N) )
%   | | | then return -0.028398707876896932;  // std dev = 0.704, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return -0.06400444586713032;  // std dev = 0.676, 192.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.924', 'seconds']
Refined model CLL: -0.085502


******************************************
Best model found
******************************************
Results 

CLL : -0.086217 

AUC ROC : 0.99544 

AUC PR : 0.298897 

Precision : 0.187726 

Recall : 0.984848 

F1 : 0.315343 

Total Learning Time : 283.046 

Total Inference Time : 16.796610116958618 

Total revision time: 304.2729604587555
Best scored revision CLL: -0.085502


Results 

CLL : -0.086217 

AUC ROC : 0.99544 

AUC PR : 0.298897 

Precision : 0.187726 

Recall : 0.984848 

F1 : 0.315343 

Total Learning Time : 304.30666521644594 

Total Inference Time : 16.796610116958618 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.482
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 399.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 402.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.457, 448.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 382.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.464, 425.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 395.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 405.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 415.000 (wgt'ed) examples reached here.  /* #neg=282 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 377.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 410.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.832', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 237.716
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(C, A), athleteledsportsteam(C, A) )
%   | then if ( teamalsoknownas(E, A), athleteledsportsteam(F, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.8581489350995114;  // std dev = 4.46e-07, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   else if ( teamalsoknownas(G, A), athleteplaysforteam(H, G) )
%   | then if ( teamplaysagainstteam(A, G) )
%   | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysinleague(A, I) )
%   | | then return -0.14185106490048838;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else if ( teamalsoknownas(A, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.11962884267826547;  // std dev = 0.989, 45.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(C, D) )
%   | then return 0.7217336132060214;  // std dev = 0.086, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(A, F) )
%   | | then if ( teamplaysagainstteam(E, F) )
%   | | | then return 0.2194734122109545;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( athleteplaysinleague(C, G) )
%   | | | then return 0.7194734122109541;  // std dev = 1.88e-07, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | | else return 0.5303732794699906;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.1262984721641927;  // std dev = 0.061, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then if ( teamplaysinleague(A, D), teamalsoknownas(F, A) )
%   | | then if ( athleteledsportsteam(C, F) )
%   | | | then return 0.5948720368546141;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22147491206592826;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5583535331500273;  // std dev = 0.165, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then return 0.5550873410727731;  // std dev = 0.001, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamalsoknownas(I, A) )
%   | | | then return 0.5553664367462847;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.46161643674628466;  // std dev = 1.649, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   else if ( athleteplayssport(J, B) )
%   | then if ( teamplaysagainstteam(A, K) )
%   | | then return -0.19277140245956687;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.2916366999845773;  // std dev = 0.979, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.11326931372599772;  // std dev = 0.067, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), athleteplaysforteam(E, A) )
%   | then if ( athleteplaysforteam(C, D) )
%   | | then return 0.4232161668322786;  // std dev = 0.151, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else if ( athleteledsportsteam(F, D), athleteplaysinleague(F, G) )
%   | | | then return -0.36555435728884716;  // std dev = 0.436, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.416814519400602;  // std dev = 0.000962, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( athleteledsportsteam(C, H) )
%   | | then if ( teamplaysinleague(A, I) )
%   | | | then return 0.42269457635951724;  // std dev = 0.068, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0.3991171485997737;  // std dev = 0.977, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return 0.5617759828652628;  // std dev = 0.314, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.1024585723773158;  // std dev = 0.066, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.32535268171983733;  // std dev = 0.178, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( athleteledsportsteam(C, E), teamalsoknownas(F, A) )
%   | | then if ( athleteplaysforteam(C, E), teamalsoknownas(E, G) )
%   | | | then return -0.012251176624442658;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.32179072119307733;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( athleteledsportsteam(C, H) )
%   | | | then return 0.31361793439078267;  // std dev = 0.982, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | | | else return 0.12211853224608438;  // std dev = 1.191, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.09336554323958283;  // std dev = 0.057, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A), athleteplaysinleague(D, E) )
%   | then if ( athleteplaysforteam(C, A) )
%   | | then return 0.2584086449631115;  // std dev = 0.104, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( athleteplaysinleague(C, E), athleteledsportsteam(F, A) )
%   | | | then return 0.26251905535596515;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2594637550190686;  // std dev = 1.182, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then if ( athleteplaysinleague(C, H) )
%   | | | then return 0.24571413549671633;  // std dev = 0.990, 58.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=57 */
%   | | | else return -0.0027381417810102746;  // std dev = 0.692, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( athleteledsportsteam(C, I) )
%   | | | then return 0.2718604642515556;  // std dev = 0.080, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.34040807655820826;  // std dev = 0.299, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08556948063887344;  // std dev = 0.043, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(D, A), teamplaysinleague(D, E) )
%   | then if ( athleteledsportsteam(C, F) )
%   | | then if ( teamplaysinleague(F, E), teamalsoknownas(A, D) )
%   | | | then return 0.21694656285400063;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.24428720993834535;  // std dev = 0.125, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3422762099969808;  // std dev = 0.256, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(G, A), athleteplaysinleague(G, H) )
%   | | then if ( athleteplaysinleague(C, H) )
%   | | | then return 0.20666695445518068;  // std dev = 0.003, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.1488741763722207;  // std dev = 0.916, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0.20185717774752798;  // std dev = 0.602, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   | | | else return 0.23007921419170901;  // std dev = 0.301, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else return -0.07926422058436955;  // std dev = 0.049, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(D, A), athleteplaysforteam(E, D) )
%   | then if ( athleteplaysforteam(C, D) )
%   | | then return 0.1932594752862916;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2877603126591005;  // std dev = 0.203, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( athleteledsportsteam(F, A), athleteplaysforteam(F, A) )
%   | | then if ( athleteledsportsteam(C, G), teamplaysagainstteam(A, H) )
%   | | | then return 0.17491634219637361;  // std dev = 0.004, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.07977823441895975;  // std dev = 0.237, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteledsportsteam(C, I) )
%   | | | then return 0.18651835168413403;  // std dev = 0.241, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | | else return 0.22342943552770866;  // std dev = 0.265, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07367997497205234;  // std dev = 0.046, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A), teamalsoknownas(D, E) )
%   | then if ( athleteledsportsteam(C, F) )
%   | | then if ( teamalsoknownas(G, D), teamalsoknownas(F, G) )
%   | | | then return 0.03872626201643624;  // std dev = 1.262, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.1573764896987486;  // std dev = 0.159, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.11195596075704128;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( athleteledsportsteam(C, H) )
%   | | then if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | | then return 0.12372680085897295;  // std dev = 0.997, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return 0.16218772433009623;  // std dev = 0.074, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0.25211780390492144;  // std dev = 0.270, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06856425274616894;  // std dev = 0.031, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.14437550136931657;  // std dev = 0.028, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else if ( teamplaysagainstteam(A, E), teamplaysagainstteam(D, E) )
%   | | then if ( teamplaysinleague(A, F), teamplaysagainstteam(E, A) )
%   | | | then return -0.5328355567608221;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.12988461136899349;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( athleteledsportsteam(C, D), teamalsoknownas(D, G) )
%   | | | then return 0.05924039257302631;  // std dev = 1.335, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.13583981506825968;  // std dev = 0.392, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   else if ( teamalsoknownas(A, H), teamplaysagainstteam(I, A) )
%   | then if ( athleteplayssport(J, B) )
%   | | then return 0.1517856242907881;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.06390490824165568;  // std dev = 8.33e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( teamplaysagainstteam(K, A), teamalsoknownas(L, K) )
%   | | then return -0.07158802243137483;  // std dev = 0.066, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return -0.06254304966218811;  // std dev = 0.064, 157.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.122', 'seconds']
Refined model CLL: -0.083026


******************************************
Best model found
******************************************
Results 

CLL : -0.084258 

AUC ROC : 0.994001 

AUC PR : 0.28439 

Precision : 0.154438 

Recall : 0.988636 

F1 : 0.267144 

Total Learning Time : 237.716 

Total Inference Time : 17.758918046951294 

Total revision time: 259.7129869918823
Best scored revision CLL: -0.083026


Results 

CLL : -0.084258 

AUC ROC : 0.994001 

AUC PR : 0.28439 

Precision : 0.154438 

Recall : 0.988636 

F1 : 0.267144 

Total Learning Time : 259.74669174957273 

Total Inference Time : 17.758918046951294 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.509
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 393.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 382.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 410.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 379.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 397.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 402.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.464, 416.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 383.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 403.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.464, 416.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.855', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 815.598
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), teamplaysagainstteam(A, F) )
%   | then if ( teamplaysagainstteam(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 1.69e-07, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995127;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( teamplaysinleague(A, G) )
%   | then return -0.1418510649004884;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.11962884267826547;  // std dev = 0.989, 45.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then if ( athleteplaysforteam(C, A), teamalsoknownas(F, A) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7211763033716214;  // std dev = 0.087, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0.7194734122109542;  // std dev = 2.98e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.568017855571121;  // std dev = 1.812, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | | else return 0.6606498827991895;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.12544463852839166;  // std dev = 0.000, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | else if ( teamalsoknownas(J, A), teamplaysagainstteam(K, A) )
%   | | then return 0.044467437835755616;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.1051756881701197;  // std dev = 0.989, 44.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.5666900986716116;  // std dev = 0.197, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then return 0.5550510300783565;  // std dev = 0.000364, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3086695921668823;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(A, G) )
%   | then return -0.11231637819360658;  // std dev = 0.000, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then if ( teamplaysagainstteam(I, A), teamalsoknownas(I, H) )
%   | | | then return 0.204634790050544;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11490041446083654;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( teamplaysagainstteam(A, J) )
%   | | | then return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08328977197232332;  // std dev = 0.983, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then if ( teamalsoknownas(F, A), athleteplaysforteam(C, A) )
%   | | then return 0.45570498254594594;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( athleteplaysforteam(C, G), teamplaysinleague(G, E) )
%   | | | then return 0.4240012388130127;  // std dev = 0.154, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | | else return 0.3762315187323705;  // std dev = 0.951, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0.4314056816829144;  // std dev = 0.117, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.10159632948783648;  // std dev = 0.000, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | else if ( teamplaysagainstteam(A, I), teamalsoknownas(I, J) )
%   | | then if ( teamalsoknownas(J, A) )
%   | | | then return 0.14221329704237315;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10521424712674803;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return -0.1149958562644912;  // std dev = 0.053, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08335986743450359;  // std dev = 0.989, 40.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(G, F) )
%   | | then if ( teamalsoknownas(G, E), teamplaysinleague(E, D) )
%   | | | then return 0.3197766435012982;  // std dev = 0.058, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | | else return 0.06998421633353438;  // std dev = 1.231, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.3330947520786287;  // std dev = 0.157, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | else if ( teamalsoknownas(H, A) )
%   | | then return -0.003617906052517846;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.35558127691534563;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.09269127618926061;  // std dev = 8.30e-08, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else if ( teamalsoknownas(J, A), teamplaysagainstteam(K, A) )
%   | | then return 0.1572677391667451;  // std dev = 0.770, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.09693816613916476;  // std dev = 0.039, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07853213888748317;  // std dev = 0.989, 47.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamplaysinleague(E, D) )
%   | then return 0.2574414670974342;  // std dev = 0.126, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | else if ( athleteplaysforteam(F, A), athleteplaysforteam(C, G) )
%   | | then return 0.09434339964001164;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( teamalsoknownas(A, H), athleteledsportsteam(C, I) )
%   | | | then return 0.2056049648409554;  // std dev = 0.944, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.25201086958250224;  // std dev = 1.011, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.08518475138839678;  // std dev = 8.02e-08, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else if ( teamalsoknownas(K, A), teamplaysagainstteam(L, A) )
%   | | then return -0.025416048194808482;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysagainstteam(M, A) )
%   | | | then return -0.08828116108499011;  // std dev = 0.036, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06953190336787478;  // std dev = 0.988, 43.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then return 0.21848632766652087;  // std dev = 0.195, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return 0.24418342680402752;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.0024436863576071943;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(A, F) )
%   | then return -0.07877675473109148;  // std dev = 7.88e-08, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else if ( teamalsoknownas(G, A), teamalsoknownas(A, G) )
%   | | then return 0.1285051785931533;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return -0.10036128056514508;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06307129084675549;  // std dev = 0.988, 41.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysforteam(F, A) )
%   | then if ( athleteplaysinleague(G, E), athleteplaysforteam(C, H) )
%   | | then if ( athleteplaysforteam(G, H) )
%   | | | then return 0.17669065080934027;  // std dev = 0.076, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return 0.015248774116944586;  // std dev = 0.911, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.05814581963072005;  // std dev = 0.889, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.18836155686175482;  // std dev = 0.158, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.07324622576333666;  // std dev = 1.18e-07, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | else if ( teamplaysagainstteam(A, J), teamalsoknownas(A, K) )
%   | | then return 0.12648693257316063;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(A, L) )
%   | | | then return -0.08965044117728843;  // std dev = 0.034, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.05635976230284809;  // std dev = 0.989, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then return 0.1609194059944072;  // std dev = 0.201, 99.000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | else if ( athleteledsportsteam(C, F) )
%   | | then if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.16594742382549424;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10750501218665241;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return -0.03542791113044641;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamalsoknownas(H, A), teamplaysagainstteam(A, I) )
%   | then if ( teamalsoknownas(J, I) )
%   | | then return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.19230035212881136;  // std dev = 0.639, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(K, A) )
%   | | then return -0.07050237777259238;  // std dev = 0.102, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.06882168438965028;  // std dev = 0.023, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.04933632734462018;  // std dev = 0.985, 34.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then return 0.1404134883904397;  // std dev = 0.181, 99.000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | else if ( teamalsoknownas(F, A), teamplaysinleague(F, G) )
%   | | then return -0.032232117912067516;  // std dev = 0.915, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.1742595997829845;  // std dev = 0.103, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.08454924463210767;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.06431339965547073;  // std dev = 0.025, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else if ( teamalsoknownas(A, J), teamplaysagainstteam(A, K) )
%   | | then return 0.041287649236562154;  // std dev = 0.755, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamalsoknownas(A, L) )
%   | | | then return -0.07871835034391907;  // std dev = 0.020, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.05405804468770015;  // std dev = 0.989, 53.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.204', 'seconds']
Refined model CLL: -0.086438


******************************************
Best model found
******************************************
Results 

CLL : -0.085388 

AUC ROC : 0.996421 

AUC PR : 0.351643 

Precision : 0.20092 

Recall : 0.984962 

F1 : 0.333758 

Total Learning Time : 815.598 

Total Inference Time : 14.188850402832031 

Total revision time: 834.1514910526275
Best scored revision CLL: -0.086438


Results 

CLL : -0.085388 

AUC ROC : 0.996421 

AUC PR : 0.351643 

Precision : 0.20092 

Recall : 0.984962 

F1 : 0.333758 

Total Learning Time : 834.185195810318 

Total Inference Time : 14.188850402832031 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.524
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 400.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.454, 458.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 409.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 387.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 401.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 419.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 383.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.834', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 155.767
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( teamplaysagainstteam(A, E), teamplaysinleague(A, D) )
%   | | | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.842019902841448;  // std dev = 0.992, 62.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=61 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamalsoknownas(H, A), athleteplaysforteam(I, A) )
%   | then if ( teamplaysagainstteam(H, A) )
%   | | then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysinleague(A, J) )
%   | | then return -0.1418510649004884;  // std dev = 0.000, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.12262029566971845;  // std dev = 0.990, 52.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( athleteledsportsteam(F, A), athleteplayssport(F, G) )
%   | | then if ( athleteledsportsteam(C, A) )
%   | | | then return 0.7228380122498785;  // std dev = 0.040, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.5533473776281748;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7239920501219359;  // std dev = 0.155, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else return 0.4441086724301469;  // std dev = 1.091, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamalsoknownas(H, A), athleteledsportsteam(I, A) )
%   | then if ( teamplaysagainstteam(A, H) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.17780077116908896;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.12605094759827756;  // std dev = 0.052, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.5595785209292607;  // std dev = 0.110, 127.000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | else return 0.46768704160028535;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | then return -0.11385879842648586;  // std dev = 0.104, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( teamplaysinleague(A, H), teamalsoknownas(I, A) )
%   | | then if ( athleteplaysforteam(J, I) )
%   | | | then return 0.19838293319225345;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11421521844482016;  // std dev = 0.026, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return -0.11313727424327902;  // std dev = 0.070, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return -0.09724494855812424;  // std dev = 0.874, 53.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(D, A), athleteplaysforteam(C, D) )
%   | then return 0.42268808756491066;  // std dev = 0.105, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then if ( athleteledsportsteam(F, G), teamplaysagainstteam(G, A) )
%   | | | then return -0.0721612569745273;  // std dev = 0.979, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3453760549880454;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0.4188470014936477;  // std dev = 0.008, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   else if ( athleteledsportsteam(H, A), teamalsoknownas(I, A) )
%   | then if ( athleteplayssport(H, J) )
%   | | then return -0.10145563231579048;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.2581814521719498;  // std dev = 0.849, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysinleague(A, K), athleteplaysinleague(L, K) )
%   | | then return -0.1079417397455378;  // std dev = 0.078, 150.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=1 */
%   | | else if ( athleteplayssport(M, B) )
%   | | | then return 0.43274482032943845;  // std dev = 0.719, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.10312444136890765;  // std dev = 0.035, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then return 0.327932096679212;  // std dev = 0.194, 127.000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | else return 0.535797500656051;  // std dev = 0.217, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamalsoknownas(E, A), athleteplaysforteam(F, E) )
%   | then if ( athleteledsportsteam(F, E) )
%   | | then return -0.09459165413768411;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.11049146602850776;  // std dev = 0.730, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.09344741217670748;  // std dev = 0.116, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamplaysagainstteam(D, A), athleteledsportsteam(C, D) )
%   | | then if ( teamalsoknownas(A, E), teamalsoknownas(E, F) )
%   | | | then return 0.0585609088536724;  // std dev = 0.900, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2567607526611695;  // std dev = 0.078, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return 0.2577320303503699;  // std dev = 0.030, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.27247975589310175;  // std dev = 0.343, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | else return 0.09300605819556046;  // std dev = 0.958, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamalsoknownas(H, A), athleteledsportsteam(I, A) )
%   | then if ( teamplaysagainstteam(A, H) )
%   | | then return -0.09156822200089848;  // std dev = 0.034, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.08436429309576626;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.0855398057904048;  // std dev = 0.046, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then if ( teamalsoknownas(F, A), teamalsoknownas(F, D) )
%   | | | then return 0.0884636213924455;  // std dev = 0.912, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.215833058074733;  // std dev = 0.159, 98.000 (wgt'ed) examples reached here.  /* #pos=98 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return -0.043512339379944476;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1573209294367426;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0.3779208762522104;  // std dev = 0.183, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamalsoknownas(A, H), athleteledsportsteam(I, A) )
%   | then return -0.09795341765167376;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamalsoknownas(J, A), athleteledsportsteam(K, A) )
%   | | then if ( teamplaysagainstteam(A, J) )
%   | | | then return -0.08109028360689988;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.046790125166881594;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.07948541392076032;  // std dev = 0.069, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), teamplaysinleague(A, D) )
%   | then return 0.18146179716311256;  // std dev = 0.080, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else if ( athleteledsportsteam(F, A), athleteplaysinleague(F, G) )
%   | | then if ( teamplaysinleague(A, D) )
%   | | | then return -0.15479201059032147;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.02028260370587262;  // std dev = 0.798, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysagainstteam(A, H), teamalsoknownas(H, I) )
%   | | | then return 0.10427674492173164;  // std dev = 1.260, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.16611792705397688;  // std dev = 0.994, 60.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   else if ( teamalsoknownas(A, J), teamalsoknownas(J, A) )
%   | then if ( athleteledsportsteam(K, A), athleteplaysforteam(K, A) )
%   | | then return -0.15701716393429002;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.10892420398964353;  // std dev = 0.530, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.07533314780023294;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.0720567967387671;  // std dev = 0.068, 238.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.16117971238160086;  // std dev = 0.180, 127.000 (wgt'ed) examples reached here.  /* #pos=127 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( athleteplaysforteam(F, E), athleteplayssport(F, G) )
%   | | then if ( athleteledsportsteam(F, H) )
%   | | | then return -0.07416097426277671;  // std dev = 0.632, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | | else return -0.008891533823683555;  // std dev = 0.281, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( athleteledsportsteam(I, E), athleteledsportsteam(J, A) )
%   | | | then return 0.20074131911836177;  // std dev = 0.650, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.04590245056571061;  // std dev = 0.459, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | else if ( teamalsoknownas(K, A), teamplaysinleague(K, L) )
%   | | then if ( teamplaysinleague(A, L) )
%   | | | then return -0.1618816459828993;  // std dev = 0.775, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07028630491212796;  // std dev = 0.000277, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( athleteplayssport(M, B) )
%   | | | then return -0.2695999368631467;  // std dev = 0.901, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06882621212375398;  // std dev = 0.010, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then if ( athleteplaysinleague(G, F) )
%   | | | then return 0.14192889333012346;  // std dev = 0.149, 83.000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | | else return 0.08963922332618281;  // std dev = 0.980, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else if ( athleteledsportsteam(C, D), teamalsoknownas(D, H) )
%   | | | then return 0.14318988484034367;  // std dev = 0.043, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.1877345303170575;  // std dev = 0.340, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.03457228113849694;  // std dev = 0.993, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamalsoknownas(I, A), athleteplaysforteam(J, I) )
%   | then if ( teamplaysagainstteam(A, I) )
%   | | then return -0.06960803443786279;  // std dev = 0.041, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.07424248226354441;  // std dev = 0.684, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.06460396129650722;  // std dev = 0.134, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.617', 'seconds']
Refined model CLL: -0.084274


******************************************
Best model found
******************************************
Results 

CLL : -0.085049 

AUC ROC : 0.996433 

AUC PR : 0.450664 

Precision : 0.179434 

Recall : 0.984848 

F1 : 0.303561 

Total Learning Time : 155.767 

Total Inference Time : 13.511003732681274 

Total revision time: 173.47570311164856
Best scored revision CLL: -0.084274


Results 

CLL : -0.085049 

AUC ROC : 0.996433 

AUC PR : 0.450664 

Precision : 0.179434 

Recall : 0.984848 

F1 : 0.303561 

Total Learning Time : 173.55001079177856 

Total Inference Time : 13.511003732681274 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.557
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 398.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 393.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 415.000 (wgt'ed) examples reached here.  /* #neg=282 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 391.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 405.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.464, 424.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 387.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 390.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 394.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 383.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.764', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 208.558
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( teamplaysagainstteam(E, A), teamalsoknownas(E, F) )
%   | | then if ( athleteledsportsteam(C, E) )
%   | | | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return 0.762910839861417;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.1418510649004885;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamalsoknownas(D, A) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.7291514088907358;  // std dev = 0.088, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.12544463852839136;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then if ( teamplaysinleague(A, H), teamplaysinleague(G, H) )
%   | | | then return 0.7208987572863633;  // std dev = 0.040, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | | else return 0.6805230078483717;  // std dev = 1.376, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | else return 0.5739562178052017;  // std dev = 0.939, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.1254446385283919;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamplaysinleague(E, D) )
%   | then if ( teamplaysagainstteam(A, F), athleteplaysforteam(C, F) )
%   | | then return 0.5566144207692071;  // std dev = 0.037, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( athleteledsportsteam(G, E), teamplaysinleague(A, H) )
%   | | | then return 0.0663693708971508;  // std dev = 1.215, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.5774342045219397;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5655160918658046;  // std dev = 0.113, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( teamalsoknownas(I, A), athleteplaysforteam(J, I) )
%   | then if ( athleteledsportsteam(J, I) )
%   | | then return -0.11231637819360628;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.1487882180203771;  // std dev = 0.640, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.11768468788629867;  // std dev = 0.420, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | | else if ( teamalsoknownas(L, A) )
%   | | | then return -0.14327155124475627;  // std dev = 0.201, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09137730514391687;  // std dev = 0.806, 39.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( teamplaysagainstteam(F, A) )
%   | | then return 0.4266863597318349;  // std dev = 0.184, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.36769633904952365;  // std dev = 1.174, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | | else return 0.4234069186997325;  // std dev = 0.016, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( teamalsoknownas(A, H), athleteplaysinleague(C, I) )
%   | | then return 0.4685773581343407;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5772965593519419;  // std dev = 0.214, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.1018700217737315;  // std dev = 0.061, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then if ( teamalsoknownas(D, C), teamplaysagainstteam(G, D) )
%   | | then if ( athleteplaysforteam(E, D) )
%   | | | then return 0.3183837161449835;  // std dev = 0.009, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.017555168502856835;  // std dev = 1.343, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.3275915166800839;  // std dev = 0.063, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else return -0.09573455660725433;  // std dev = 0.274, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( athleteplayssport(H, B), athleteplaysinleague(H, I) )
%   | then if ( teamplaysinleague(A, J) )
%   | | then return 0.3319516635398072;  // std dev = 0.153, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.33354454663396316;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2804430911578171;  // std dev = 0.976, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( teamplaysagainstteam(L, A) )
%   | | then return -0.09272620962648803;  // std dev = 0.007, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.08702641599638973;  // std dev = 0.098, 105.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, D) )
%   | then if ( teamplaysagainstteam(A, D), athleteplaysforteam(C, D) )
%   | | then return 0.05533793963261433;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2575266507795345;  // std dev = 0.069, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.2651040839520701;  // std dev = 0.188, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else if ( teamalsoknownas(F, A), teamplaysagainstteam(F, G) )
%   | then if ( athleteplayssport(H, B) )
%   | | then return 0.41124779048463916;  // std dev = 0.183, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.08964508867612918;  // std dev = 0.041, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( teamplaysagainstteam(A, I), teamplaysinleague(I, J) )
%   | | then if ( teamplaysinleague(A, K) )
%   | | | then return -0.08898784223713155;  // std dev = 0.386, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | | else return -0.146648763707785;  // std dev = 0.637, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( teamplaysagainstteam(L, A), athleteplayssport(M, B) )
%   | | | then return 0.26860379881741603;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08239116750752921;  // std dev = 1.016, 109.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E), athleteplaysforteam(F, A) )
%   | then if ( teamplaysinleague(A, D) )
%   | | then return 0.2171568051943076;  // std dev = 0.041, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.016257965990320124;  // std dev = 0.901, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.21745804725472995;  // std dev = 0.210, 83.000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.22051361806272565;  // std dev = 0.078, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.17654695871391793;  // std dev = 0.981, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( teamplaysagainstteam(I, A), teamalsoknownas(A, J) )
%   | then if ( teamplaysagainstteam(A, K) )
%   | | then return -0.07823278234807006;  // std dev = 0.023, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( athleteplaysforteam(L, I), athleteplaysinleague(L, M) )
%   | | | then return -0.253760982404554;  // std dev = 0.348, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07895291284637018;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.0759498776942297;  // std dev = 0.063, 231.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then if ( teamalsoknownas(G, E), athleteledsportsteam(H, G) )
%   | | | then return 0.18067395395789998;  // std dev = 0.115, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return 0.016824665052910248;  // std dev = 1.294, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0.18668506521792214;  // std dev = 0.123, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.20327377646128425;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.43967738215711316;  // std dev = 0.297, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07326130450594506;  // std dev = 0.042, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A), athleteplaysforteam(E, A) )
%   | then if ( teamplaysinleague(A, D), athleteledsportsteam(C, F) )
%   | | then return 0.15905457733174755;  // std dev = 0.096, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.2771315360166984;  // std dev = 0.936, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.1594053342626237;  // std dev = 0.159, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.16367106550997695;  // std dev = 0.070, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.11891757361223615;  // std dev = 0.977, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( athleteplayssport(I, B) )
%   | then if ( athleteplaysforteam(J, A) )
%   | | then return -0.3859556106427377;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.14386194466943877;  // std dev = 0.739, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.06868154219948419;  // std dev = 0.058, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | then return 0.1408997123152607;  // std dev = 0.166, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( teamalsoknownas(G, A), teamplaysinleague(A, H) )
%   | | then if ( teamplaysinleague(D, H) )
%   | | | then return 0.1502614440112248;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19812734956375588;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.1428358356963155;  // std dev = 0.069, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( teamalsoknownas(I, A), teamplaysagainstteam(I, J) )
%   | then if ( athleteplayssport(K, B) )
%   | | then return 0.21678146000275433;  // std dev = 0.130, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.06981736758871628;  // std dev = 0.036, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( teamalsoknownas(A, L), athleteplaysforteam(M, A) )
%   | | then if ( teamplaysagainstteam(A, N), teamplaysinleague(L, P) )
%   | | | then return -0.06347579301860579;  // std dev = 0.000172, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.24794756730846673;  // std dev = 0.799, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.060051511617917094;  // std dev = 0.055, 231.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.567', 'seconds']
Refined model CLL: -0.082895


******************************************
Best model found
******************************************
Results 

CLL : -0.084055 

AUC ROC : 0.993034 

AUC PR : 0.352851 

Precision : 0.187185 

Recall : 0.984848 

F1 : 0.31458 

Total Learning Time : 208.558 

Total Inference Time : 15.547423601150513 

Total revision time: 228.37327908515928
Best scored revision CLL: -0.082895


Results 

CLL : -0.084055 

AUC ROC : 0.993034 

AUC PR : 0.352851 

Precision : 0.187185 

Recall : 0.984848 

F1 : 0.31458 

Total Learning Time : 228.4475867652893 

Total Inference Time : 15.547423601150513 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.549
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.464, 419.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 394.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 378.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 389.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 396.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 374.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 403.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 385.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 406.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.464, 416.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.016', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 194.026
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, A) )
%   | then if ( teamplaysinleague(A, D), athleteledsportsteam(C, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( athleteplaysinleague(E, D) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.8581489350995124;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( teamplaysinleague(A, G) )
%   | then return -0.14185106490048843;  // std dev = 0.000, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | else if ( teamalsoknownas(A, H), teamalsoknownas(H, I) )
%   | | then if ( teamalsoknownas(H, A) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamplaysagainstteam(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.1148240378734607;  // std dev = 0.986, 37.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | then if ( teamalsoknownas(A, G), teamalsoknownas(G, F) )
%   | | | then return 0.46947341221095434;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7008562638199932;  // std dev = 1.000, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | else if ( athleteledsportsteam(H, A) )
%   | | then return 0.05280674554428777;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7194734122109542;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( teamalsoknownas(I, A), teamplaysagainstteam(A, J) )
%   | then if ( athleteledsportsteam(K, J) )
%   | | then return -0.12544463852839133;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.19785938692632435;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, L) )
%   | | then return -0.12544463852839158;  // std dev = 0.000, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | | else return -0.11358390066447185;  // std dev = 0.129, 60.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), athleteplaysforteam(C, E) )
%   | then return 0.5631626330661442;  // std dev = 0.186, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( teamplaysagainstteam(A, F), teamalsoknownas(G, F) )
%   | | then if ( athleteledsportsteam(H, F), teamplaysinleague(A, I) )
%   | | | then return -0.15400576836051266;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5728075931441872;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamalsoknownas(A, J), teamplaysinleague(J, K) )
%   | | | then return 0.45034498153716795;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.5588757440473069;  // std dev = 0.152, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( teamplaysinleague(A, L) )
%   | then return -0.11288066038656268;  // std dev = 0.063, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | else if ( teamplaysagainstteam(A, M), teamalsoknownas(M, N) )
%   | | then if ( teamalsoknownas(N, A) )
%   | | | then return 0.06667664584069355;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.11350435913857528;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09995231531424742;  // std dev = 0.137, 53.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A), teamalsoknownas(F, E) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return 0.5382487712996556;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4348130981975672;  // std dev = 0.050, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0.42244791181144836;  // std dev = 0.175, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.37665081651653787;  // std dev = 0.982, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.4183224654885746;  // std dev = 0.026, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.10206057781384527;  // std dev = 0.058, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | else if ( teamalsoknownas(A, J), teamalsoknownas(J, A) )
%   | | then return 0.0576965607098233;  // std dev = 0.837, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.10358247848789906;  // std dev = 0.005, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07845176524672158;  // std dev = 0.986, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A) )
%   | then return 0.3288076432545226;  // std dev = 0.030, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else if ( athleteledsportsteam(C, F) )
%   | | then if ( teamalsoknownas(G, A), teamplaysinleague(A, H) )
%   | | | then return 0.24312572536492397;  // std dev = 0.948, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.29672320612442526;  // std dev = 1.288, 62.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=60 */
%   | | else return 0.34536990311147614;  // std dev = 0.127, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.09275970222738468;  // std dev = 0.031, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | else if ( teamplaysagainstteam(J, A), teamplaysagainstteam(A, J) )
%   | | then if ( teamalsoknownas(J, K), teamalsoknownas(K, L) )
%   | | | then return 0.16707086800589024;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09429001782026863;  // std dev = 0.00100, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamalsoknownas(M, A) )
%   | | | then return -0.11394196433469927;  // std dev = 0.057, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07121337804673893;  // std dev = 0.986, 37.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.26246312169623703;  // std dev = 0.027, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else if ( teamplaysinleague(A, F), teamalsoknownas(G, A) )
%   | | then if ( athleteplaysforteam(C, H), teamplaysinleague(H, F) )
%   | | | then return 0.284217318805161;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.052327139932625465;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | | then return 0.14744739106441707;  // std dev = 0.942, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.26464782019385164;  // std dev = 0.045, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   else if ( teamplaysagainstteam(A, K), teamalsoknownas(A, L) )
%   | then if ( teamplaysinleague(A, M) )
%   | | then return -0.08829732375134323;  // std dev = 0.038, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.15038277976795913;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamalsoknownas(A, N) )
%   | | then return -0.09211664501282349;  // std dev = 0.091, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.08173820882092593;  // std dev = 0.072, 189.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamplaysinleague(E, D) )
%   | then if ( teamplaysinleague(A, D), athleteledsportsteam(C, E) )
%   | | then return 0.20966923499642717;  // std dev = 0.034, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else if ( teamalsoknownas(F, E), teamplaysagainstteam(F, A) )
%   | | | then return -0.1814596407544943;  // std dev = 1.295, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.20773362967133643;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( teamalsoknownas(G, A), athleteledsportsteam(C, H) )
%   | | then if ( athleteplaysforteam(C, H), teamalsoknownas(H, I) )
%   | | | then return -0.09474409060352178;  // std dev = 0.855, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22570201229586706;  // std dev = 0.035, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.22353442494422562;  // std dev = 0.188, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.07916676352038564;  // std dev = 0.046, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else if ( teamalsoknownas(A, K), teamalsoknownas(K, A) )
%   | | then return 0.028271707051334118;  // std dev = 0.807, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.06649110418211462;  // std dev = 0.139, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysforteam(F, A) )
%   | then if ( athleteplaysinleague(F, G) )
%   | | then return 0.18633617159804014;  // std dev = 0.035, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( athleteplaysforteam(C, H), teamplaysinleague(H, E) )
%   | | | then return 0.07467284941989742;  // std dev = 0.950, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.14327131658613412;  // std dev = 1.130, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.1891178466890999;  // std dev = 0.216, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( teamalsoknownas(A, I) )
%   | then if ( teamplaysagainstteam(A, J), teamplaysinleague(J, K) )
%   | | then if ( teamplaysinleague(A, L) )
%   | | | then return -0.07486605701923969;  // std dev = 0.034, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.029925294180875594;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.08883209205178635;  // std dev = 0.135, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( teamplaysinleague(A, M) )
%   | | then return -0.07354654464923507;  // std dev = 0.025, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else return -0.055922825561893;  // std dev = 0.156, 40.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E), athleteledsportsteam(C, F) )
%   | then if ( athleteplaysinleague(G, E), teamplaysagainstteam(F, A) )
%   | | then return 0.15411341314243854;  // std dev = 0.066, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else return 0.17569220992624446;  // std dev = 0.034, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( teamplaysagainstteam(A, H), athleteplaysforteam(I, H) )
%   | | then if ( teamalsoknownas(H, J) )
%   | | | then return 0.17017658146493653;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.6005643665968505;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.1586618592356657;  // std dev = 0.117, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( teamplaysinleague(A, K) )
%   | then return -0.06860325275199601;  // std dev = 0.041, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else if ( teamalsoknownas(L, A), teamplaysagainstteam(A, M) )
%   | | then return 0.0748407977984692;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(A, N), teamalsoknownas(N, A) )
%   | | | then return -0.10771375280539315;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06128698530732236;  // std dev = 0.993, 65.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(D, A), athleteledsportsteam(E, A) )
%   | then if ( athleteplaysforteam(F, A) )
%   | | then return 0.14097512743827695;  // std dev = 0.032, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.03292768057216607;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.14254824730001656;  // std dev = 0.020, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( teamalsoknownas(A, G), teamalsoknownas(G, H) )
%   | then if ( athleteplayssport(I, B), athleteplaysinleague(I, J) )
%   | | then return 0.16898496731538146;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamalsoknownas(G, A), teamplaysagainstteam(A, K) )
%   | | | then return 0.019102022183564812;  // std dev = 0.751, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.07053616425340495;  // std dev = 0.084, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( athleteplayssport(L, B), teamplaysagainstteam(M, A) )
%   | | then return 0.149857932628417;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysinleague(A, N) )
%   | | | then return -0.0642681315295997;  // std dev = 0.000932, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | | else return -0.07013848262010161;  // std dev = 1.282, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.171', 'seconds']
Refined model CLL: -0.083874


******************************************
Best model found
******************************************
Results 

CLL : -0.082879 

AUC ROC : 0.991019 

AUC PR : 0.253879 

Precision : 0.208599 

Recall : 0.984962 

F1 : 0.344284 

Total Learning Time : 194.026 

Total Inference Time : 15.951180934906006 

Total revision time: 214.3132357120514
Best scored revision CLL: -0.083874


Results 

CLL : -0.082879 

AUC ROC : 0.991019 

AUC PR : 0.253879 

Precision : 0.208599 

Recall : 0.984962 

F1 : 0.344284 

Total Learning Time : 214.3875433921814 

Total Inference Time : 15.951180934906006 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.567
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.480, 371.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 394.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 397.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 393.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 421.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 379.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 401.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 376.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 414.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.833', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 182.903
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return 0.8581489350995104;  // std dev = 7.44e-07, 128.000 (wgt'ed) examples reached here.  /* #pos=128 */
%   | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamalsoknownas(E, A), athleteledsportsteam(F, A) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.14185106490048835;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteplaysinleague(E, F) )
%   | then if ( athleteplaysforteam(C, A) )
%   | | then return 0.7194734122109548;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.4337591264966691;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.7194734122109548;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.7223421288585392;  // std dev = 0.105, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.7350122940520398;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.663917856655399;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( teamalsoknownas(I, A), athleteledsportsteam(J, A) )
%   | then if ( athleteledsportsteam(K, I) )
%   | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.11421789391159357;  // std dev = 0.830, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.12380103591818648;  // std dev = 0.058, 231.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D), teamplaysagainstteam(D, A) )
%   | then return 0.560749550193746;  // std dev = 0.149, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | else if ( athleteledsportsteam(E, A) )
%   | | then return 0.2294743716046166;  // std dev = 1.040, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( teamplaysagainstteam(F, A), teamalsoknownas(A, G) )
%   | | | then return 0.4425028895578023;  // std dev = 0.945, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.5479866895210738;  // std dev = 1.024, 61.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=60 */
%   else if ( athleteplaysforteam(H, A), athleteplaysinleague(H, I) )
%   | then if ( teamplaysinleague(A, J), athleteplayssport(H, K) )
%   | | then return -0.11246171873454908;  // std dev = 0.000488, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else return 0.07336027383883473;  // std dev = 0.831, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.11334892135716924;  // std dev = 0.103, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( athleteledsportsteam(F, A), athleteplayssport(F, G) )
%   | | then if ( teamplaysinleague(A, D) )
%   | | | then return 0.4186280934906296;  // std dev = 0.069, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.2368386380904187;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.42391770009316126;  // std dev = 0.130, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else return 0.3315192498185672;  // std dev = 0.935, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamalsoknownas(H, A), athleteledsportsteam(I, A) )
%   | then if ( athleteplayssport(I, J) )
%   | | then return -0.10398850115725884;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.17899576511073145;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.10333390124259967;  // std dev = 0.273, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.10165211722235636;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.08431274063258994;  // std dev = 0.720, 42.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(D, A), athleteledsportsteam(E, D) )
%   | then if ( athleteledsportsteam(F, A) )
%   | | then return 0.3284215899221051;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.014674555491652827;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteplaysforteam(C, G) )
%   | | then if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.31767111272705306;  // std dev = 0.704, 68.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=67 */
%   | | | else return 0.33190136722752334;  // std dev = 0.322, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else return 0.4577370691184147;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamalsoknownas(I, A), athleteplaysforteam(J, I) )
%   | then if ( teamplaysagainstteam(I, A) )
%   | | then return -0.09358558239662465;  // std dev = 0.022, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.15306925941433516;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.0941499798729511;  // std dev = 0.147, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.26754755466117386;  // std dev = 0.280, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | else if ( teamplaysinleague(A, F), teamalsoknownas(A, G) )
%   | | then if ( athleteplaysforteam(C, H), teamplaysinleague(H, F) )
%   | | | then return 0.25269374477664797;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.033020540937637746;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | | then return 0.16754603002204663;  // std dev = 0.896, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.2600111554945427;  // std dev = 0.027, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( teamplaysinleague(A, K), teamalsoknownas(L, A) )
%   | then if ( teamplaysinleague(L, K) )
%   | | then return -0.09038245604019632;  // std dev = 0.095, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( athleteledsportsteam(M, A) )
%   | | | then return 0.19277811291642868;  // std dev = 0.680, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08502868434083523;  // std dev = 0.000124, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08599401219813306;  // std dev = 0.052, 229.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then if ( athleteledsportsteam(D, A), athleteplaysforteam(F, A) )
%   | | then if ( athleteledsportsteam(F, A) )
%   | | | then return 0.20672637600601954;  // std dev = 0.003, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.10940061188601957;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22266337348938425;  // std dev = 0.256, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   | else if ( teamalsoknownas(A, G), athleteledsportsteam(H, A) )
%   | | then return -0.10594714544514361;  // std dev = 0.062, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07638847357484094;  // std dev = 0.065, 175.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=1 */
%   else if ( teamplaysagainstteam(A, I) )
%   | then if ( athleteplayssport(J, B) )
%   | | then return 0.22367072240172228;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07865255257457344;  // std dev = 9.13e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( athleteplayssport(K, B) )
%   | | then return 0.23460161677228647;  // std dev = 0.081, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.08057234886217172;  // std dev = 0.026, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(F, E) )
%   | | then if ( teamplaysinleague(E, D) )
%   | | | then return 0.178758609737516;  // std dev = 0.102, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.016719504134455082;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.18169764124699508;  // std dev = 0.134, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | else return 0.24748276427828989;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysagainstteam(G, A), teamalsoknownas(H, G) )
%   | then return -0.08259791212941908;  // std dev = 0.040, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( athleteplaysforteam(I, A), athleteledsportsteam(I, J) )
%   | | then if ( athleteplayssport(I, K) )
%   | | | then return -0.07664065912641028;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.16683103885090056;  // std dev = 0.687, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.07314260748844433;  // std dev = 0.001, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | | else return -0.069654846049903;  // std dev = 0.722, 48.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamalsoknownas(E, F) )
%   | then return 0.16311142887319155;  // std dev = 0.216, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( athleteplaysforteam(G, A), athleteledsportsteam(G, H) )
%   | | then return -0.01129716302560622;  // std dev = 0.878, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( teamalsoknownas(I, A), teamplaysinleague(A, J) )
%   | | | then return 0.029138001002490057;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.13626081079285915;  // std dev = 0.999, 56.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=55 */
%   else if ( teamplaysagainstteam(A, K), teamalsoknownas(L, K) )
%   | then return -0.07442250162819189;  // std dev = 0.037, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( teamalsoknownas(M, A), teamplaysinleague(A, N) )
%   | | then if ( teamplaysagainstteam(P, A), teamalsoknownas(Q, M) )
%   | | | then return 0.18528632793595032;  // std dev = 0.620, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07465012971998093;  // std dev = 0.104, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( teamplaysinleague(A, R) )
%   | | | then return -0.068285281100756;  // std dev = 0.002, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return -0.05796335209335928;  // std dev = 0.613, 49.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.14027939473906292;  // std dev = 0.200, 127.000 (wgt'ed) examples reached here.  /* #pos=127 */
%   else if ( teamalsoknownas(E, A), teamplaysagainstteam(E, F) )
%   | then if ( athleteledsportsteam(G, E) )
%   | | then if ( athleteplaysforteam(G, F) )
%   | | | then return -0.13364510343261868;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06693889459826538;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.12262397694306111;  // std dev = 0.639, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | then if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.06440669642722469;  // std dev = 0.312, 116.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=1 */
%   | | | else return -0.0946102843883909;  // std dev = 0.747, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return -0.06672005293855122;  // std dev = 0.071, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.05085485959845558;  // std dev = 0.706, 78.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.128', 'seconds']
Refined model CLL: -0.085397


******************************************
Best model found
******************************************
Results 

CLL : -0.085936 

AUC ROC : 0.995028 

AUC PR : 0.321428 

Precision : 0.195636 

Recall : 0.984848 

F1 : 0.326428 

Total Learning Time : 182.903 

Total Inference Time : 14.081731081008911 

Total revision time: 201.24757740020752
Best scored revision CLL: -0.085397


Results 

CLL : -0.085936 

AUC ROC : 0.995028 

AUC PR : 0.321428 

Precision : 0.195636 

Recall : 0.984848 

F1 : 0.326428 

Total Learning Time : 201.28868934631348 

Total Inference Time : 14.081731081008911 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.495
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 372.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 380.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 414.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 387.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 414.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 389.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 385.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 416.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 411.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 417.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.914', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 179.609
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamplaysagainstteam(D, A) )
%   | | then return 0.8581489350995123;  // std dev = 8.43e-08, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else if ( athleteledsportsteam(C, D), teamalsoknownas(D, E) )
%   | | | then return 0.7510060779566546;  // std dev = 1.637, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return 0.8581489350995122;  // std dev = 1.69e-07, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.1418510649004883;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamalsoknownas(D, E) )
%   | then if ( teamalsoknownas(D, A) )
%   | | then if ( athleteledsportsteam(C, F), teamplaysagainstteam(F, E) )
%   | | | then return 0.7282685145420396;  // std dev = 0.036, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.4902893554506908;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.56336086834159;  // std dev = 0.902, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3445694650405853;  // std dev = 1.066, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( athleteledsportsteam(C, H) )
%   | | then if ( athleteplaysforteam(I, A), athleteledsportsteam(I, H) )
%   | | | then return 0.6694734122109541;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.723355388412261;  // std dev = 0.076, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.5443356231566908;  // std dev = 0.854, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1254446385283919;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E) )
%   | then return 0.5876071105578785;  // std dev = 0.203, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( teamplaysagainstteam(A, F), teamplaysinleague(A, G) )
%   | | then if ( teamalsoknownas(H, F), athleteledsportsteam(C, H) )
%   | | | then return 0.560254274357343;  // std dev = 0.043, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return 0.4289696034612189;  // std dev = 1.319, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0.5613809252284367;  // std dev = 0.094, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( teamalsoknownas(I, A), athleteplaysforteam(J, I) )
%   | then if ( teamplaysagainstteam(K, A) )
%   | | then return -0.11231637819360625;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0.12879257458491764;  // std dev = 0.591, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, L), teamplaysagainstteam(A, M) )
%   | | then return -0.11739695801131449;  // std dev = 0.406, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( teamalsoknownas(A, N), teamalsoknownas(N, A) )
%   | | | then return -0.12615003527682772;  // std dev = 0.270, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.11001780793268208;  // std dev = 0.865, 124.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamalsoknownas(A, E), athleteledsportsteam(F, A) )
%   | | then if ( teamplaysagainstteam(G, E) )
%   | | | then return 0.41946048704690475;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.07938781878952876;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4285449790482347;  // std dev = 0.241, 117.000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.4569642483033933;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.609269761722503;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10152103144008504;  // std dev = 0.035, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.33186692315986804;  // std dev = 0.191, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | else if ( teamplaysagainstteam(A, G), athleteledsportsteam(H, G) )
%   | | | then return 0.19418163183368276;  // std dev = 0.913, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.30989577789729483;  // std dev = 0.948, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | then return -0.2559064445974318;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.39247703627705616;  // std dev = 0.186, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.09280781378693168;  // std dev = 0.039, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E), teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(E, F) )
%   | | then if ( teamplaysagainstteam(A, E) )
%   | | | then return 0.2549144790903873;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.04987503584354683;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.29873767326244244;  // std dev = 0.044, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2612807417434405;  // std dev = 0.138, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   else if ( athleteledsportsteam(G, A), athleteplaysinleague(G, H) )
%   | then if ( athleteplaysforteam(I, A), athleteplaysinleague(I, H) )
%   | | then if ( athleteledsportsteam(J, A), athleteplayssport(J, K) )
%   | | | then return -0.08484530454438892;  // std dev = 0.000964, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.18144011171122912;  // std dev = 0.432, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.16542689745135877;  // std dev = 0.441, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamalsoknownas(L, A), athleteplaysforteam(M, L) )
%   | | then return -0.0385609594286948;  // std dev = 0.139, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return -0.08247209709077555;  // std dev = 0.544, 208.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.21855959423924626;  // std dev = 0.260, 125.000 (wgt'ed) examples reached here.  /* #pos=125 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then return 0.2561119034219201;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.0613511914248109;  // std dev = 0.685, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | then if ( athleteledsportsteam(H, A), teamalsoknownas(I, A) )
%   | | then return -0.15706310045639835;  // std dev = 0.429, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08120450386301592;  // std dev = 0.036, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | else if ( teamalsoknownas(A, J), teamplaysinleague(A, K) )
%   | | then if ( teamalsoknownas(J, L), teamalsoknownas(L, A) )
%   | | | then return 0.020187092459284087;  // std dev = 0.398, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07849399190419044;  // std dev = 0.004, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.07923965168534156;  // std dev = 0.004, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.06934991124670682;  // std dev = 0.555, 58.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamalsoknownas(E, D) )
%   | then if ( teamplaysagainstteam(A, D) )
%   | | then return 0.1766761995152199;  // std dev = 0.057, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.06983946235091656;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.18621334912958432;  // std dev = 0.219, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysinleague(F, G), athleteplaysforteam(H, F) )
%   | | then return -0.07386978160727074;  // std dev = 0.046, 163.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=1 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.22705486692150076;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07338092497371405;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(J, B), athleteplaysinleague(J, K) )
%   | | then return -0.4387743349212913;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(A, L), teamalsoknownas(A, M) )
%   | | | then return -0.05328848926980092;  // std dev = 0.422, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | | else return -0.07831967923918848;  // std dev = 0.872, 79.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( athleteplaysforteam(E, A), athleteplayssport(E, F) )
%   | | then if ( teamplaysagainstteam(A, D) )
%   | | | then return 0.15332976163688788;  // std dev = 0.058, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.16335879225987593;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | | then return 0.13179241659575458;  // std dev = 0.991, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return 0.16124365284651465;  // std dev = 0.173, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.1907895328689805;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.39386496357558204;  // std dev = 0.161, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06860836934799959;  // std dev = 0.049, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A) )
%   | then return 0.14297648265216875;  // std dev = 0.153, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else if ( teamplaysinleague(A, F), teamalsoknownas(G, A) )
%   | | then if ( athleteplaysforteam(C, H), teamplaysinleague(H, F) )
%   | | | then return 0.15239272672574736;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.030895678549896433;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( athleteledsportsteam(I, A), athleteplayssport(I, J) )
%   | | | then return -0.1934551570550432;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12523334576439826;  // std dev = 1.006, 66.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=65 */
%   else if ( teamalsoknownas(A, K), teamalsoknownas(K, L) )
%   | then if ( teamalsoknownas(K, A), athleteledsportsteam(M, L) )
%   | | then return -0.052920685967329406;  // std dev = 0.062, 31.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | else return -0.0654396838801693;  // std dev = 0.029, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( athleteplayssport(N, B) )
%   | | then return -0.24843762916234804;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.06368559160010817;  // std dev = 0.026, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.413', 'seconds']
Refined model CLL: -0.083931


******************************************
Best model found
******************************************
Results 

CLL : -0.084907 

AUC ROC : 0.991197 

AUC PR : 0.338933 

Precision : 0.150519 

Recall : 0.988636 

F1 : 0.261261 

Total Learning Time : 179.609 

Total Inference Time : 21.65911293029785 

Total revision time: 205.52125087165834
Best scored revision CLL: -0.083931


Results 

CLL : -0.084907 

AUC ROC : 0.991197 

AUC PR : 0.338933 

Precision : 0.150519 

Recall : 0.988636 

F1 : 0.261261 

Total Learning Time : 205.5623628177643 

Total Inference Time : 21.65911293029785 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.551
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 390.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.464, 418.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 379.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 388.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 381.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 374.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 405.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 401.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 415.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.482, 358.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.955', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 137.107
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, A) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( athleteplaysinleague(E, F) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995124;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( teamplaysinleague(A, G) )
%   | then return -0.1418510649004884;  // std dev = 0.000, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | else if ( teamplaysagainstteam(A, H), teamalsoknownas(A, I) )
%   | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11859525094699933;  // std dev = 0.988, 43.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then if ( athleteledsportsteam(G, A), athleteplaysinleague(F, D) )
%   | | | then return 0.417872445561466;  // std dev = 1.170, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( athleteledsportsteam(C, H) )
%   | | | then return 0.7019295525618316;  // std dev = 0.991, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | | else return 0.5766162693538115;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.1254446385283917;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else if ( teamplaysagainstteam(A, J), teamplaysagainstteam(J, A) )
%   | | then if ( teamalsoknownas(K, A) )
%   | | | then return 0.10510121752573909;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.12760621007793244;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11118076813385394;  // std dev = 0.129, 59.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(F, A) )
%   | | then return 0.5623530109892437;  // std dev = 0.228, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.5256396620629064;  // std dev = 0.987, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.5596943071262308;  // std dev = 6.66e-08, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( teamplaysagainstteam(A, H), athleteplaysforteam(I, H) )
%   | | then return 0.24532683703423638;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5903070371782124;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamalsoknownas(J, A), teamplaysagainstteam(A, K) )
%   | then if ( athleteplaysforteam(L, A) )
%   | | then return -0.11459999254236174;  // std dev = 0.024, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.19028581459384677;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, M) )
%   | | then return -0.11231637819360633;  // std dev = 4.21e-08, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | | else return -0.1005896331768794;  // std dev = 0.120, 68.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteledsportsteam(C, F) )
%   | then if ( teamplaysinleague(E, D) )
%   | | then return 0.42440393724741626;  // std dev = 0.240, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else if ( teamplaysagainstteam(E, F), teamalsoknownas(G, E) )
%   | | | then return -0.2052197482589734;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.41918305090787483;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.42890211058058414;  // std dev = 0.133, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.10157659050775428;  // std dev = 0.000886, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | else if ( teamalsoknownas(I, A), teamplaysagainstteam(J, A) )
%   | | then return 0.07563116789966916;  // std dev = 0.826, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return -0.10908055351269941;  // std dev = 0.026, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.08707025233725499;  // std dev = 0.990, 55.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.3260616779944519;  // std dev = 0.268, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( teamalsoknownas(F, A) )
%   | | then return 0.039978624853077384;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18897211718604737;  // std dev = 0.931, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( teamplaysinleague(A, G) )
%   | then return -0.09311849771798572;  // std dev = 0.049, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else if ( teamalsoknownas(H, A), teamplaysagainstteam(I, A) )
%   | | then return 0.008857007948781989;  // std dev = 0.874, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.09695577346021347;  // std dev = 0.018, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07157479997305331;  // std dev = 0.986, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D), athleteplaysforteam(E, A) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.2515352492952483;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( athleteledsportsteam(E, A) )
%   | | | then return 0.0015352492952483976;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.25145834902548986;  // std dev = 0.000807, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.26793308775218677;  // std dev = 0.301, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( teamplaysinleague(A, F) )
%   | then return -0.08512872706626837;  // std dev = 0.000874, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else if ( teamplaysagainstteam(A, G), teamalsoknownas(G, H) )
%   | | then if ( teamalsoknownas(H, I), teamplaysagainstteam(G, I) )
%   | | | then return 0.1720447891043295;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09042894366931438;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.09526752965196095;  // std dev = 0.047, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.061457964360933;  // std dev = 0.984, 33.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(C, E), teamplaysagainstteam(A, E) )
%   | then return 0.21704204065970228;  // std dev = 0.218, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( athleteledsportsteam(C, F) )
%   | | then if ( teamplaysagainstteam(G, A), teamplaysagainstteam(A, G) )
%   | | | then return -0.1265391449706655;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.17735040875351327;  // std dev = 1.391, 62.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=60 */
%   | | else return 0.2719132959901959;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.07872992348778976;  // std dev = 0.000772, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(J, A) )
%   | | then return 0.08482217244784704;  // std dev = 0.801, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.08163212166675454;  // std dev = 0.029, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06057592235253349;  // std dev = 0.987, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | | then if ( teamplaysagainstteam(F, A), teamalsoknownas(D, G) )
%   | | | then return 0.1778283820141787;  // std dev = 0.123, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.011947599345932147;  // std dev = 0.867, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.18835346519478935;  // std dev = 0.168, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | else if ( teamalsoknownas(H, A) )
%   | | then return -0.09540215731041361;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.212763116751298;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.0734339201677822;  // std dev = 0.033, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | else if ( teamplaysagainstteam(A, J), teamplaysinleague(J, K) )
%   | | then if ( athleteplaysforteam(L, J), athleteledsportsteam(L, M) )
%   | | | then return -0.0781669441157975;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1992671829591924;  // std dev = 0.684, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.0657079630845897;  // std dev = 0.127, 61.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, F), teamalsoknownas(A, G) )
%   | | then if ( teamplaysinleague(G, F) )
%   | | | then return 0.1547018310270347;  // std dev = 0.013, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.02398137552699277;  // std dev = 0.937, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( teamplaysinleague(A, D), athleteledsportsteam(H, A) )
%   | | | then return 0.11605878094002406;  // std dev = 0.922, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.16008013040135227;  // std dev = 0.178, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else return 0.20304048434516522;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.06880489567777483;  // std dev = 0.042, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | else if ( teamalsoknownas(A, J), teamplaysagainstteam(A, K) )
%   | | then return 0.18715358714943311;  // std dev = 0.651, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, L) )
%   | | | then return -0.07329595857246071;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.05449331920302958;  // std dev = 0.988, 44.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(F, A) )
%   | | then return 0.14164541066711708;  // std dev = 0.178, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | | else if ( athleteplaysforteam(C, E), teamalsoknownas(E, G) )
%   | | | then return 0.07779440314870942;  // std dev = 0.973, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.13789537301861335;  // std dev = 0.037, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.18344098890269042;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09612208617268389;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamalsoknownas(A, I), teamalsoknownas(I, A) )
%   | then if ( teamplaysinleague(A, J) )
%   | | then return -0.06754325018958655;  // std dev = 0.033, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.05309647006409892;  // std dev = 0.686, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( teamplaysagainstteam(K, A) )
%   | | then return -0.0668687611597811;  // std dev = 0.126, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else return -0.056610811091270065;  // std dev = 0.109, 82.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.733', 'seconds']
Refined model CLL: -0.085271


******************************************
Best model found
******************************************
Results 

CLL : -0.084312 

AUC ROC : 0.989707 

AUC PR : 0.332507 

Precision : 0.20092 

Recall : 0.984962 

F1 : 0.333758 

Total Learning Time : 137.107 

Total Inference Time : 11.43979001045227 

Total revision time: 152.94797588157653
Best scored revision CLL: -0.085271


Results 

CLL : -0.084312 

AUC ROC : 0.989707 

AUC PR : 0.332507 

Precision : 0.20092 

Recall : 0.984962 

F1 : 0.333758 

Total Learning Time : 152.98908782768248 

Total Inference Time : 11.43979001045227 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.547
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 408.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 401.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 410.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 390.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 398.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 396.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.481, 367.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 389.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 406.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 402.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.916', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 231.55
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( athleteledsportsteam(F, A), athleteplaysinleague(F, D) )
%   | | then if ( athleteplayssport(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995117;  // std dev = 2.06e-07, 100.000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamalsoknownas(G, A), athleteledsportsteam(H, A) )
%   | then if ( athleteplaysforteam(H, A), teamplaysagainstteam(A, G) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.1081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysinleague(A, I) )
%   | | then return -0.14185106490048838;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.1148240378734607;  // std dev = 0.986, 37.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( teamalsoknownas(F, A), athleteplaysforteam(G, A) )
%   | | then if ( athleteledsportsteam(G, A), teamalsoknownas(H, F) )
%   | | | then return 0.5443356231566908;  // std dev = 0.854, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109545;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0.7201490157692618;  // std dev = 0.062, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | | else return 0.6841436922885399;  // std dev = 0.997, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else if ( athleteplaysinleague(C, J), teamplaysagainstteam(K, A) )
%   | | then return 0.7580193346218546;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.20313532309489404;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(L, A), athleteledsportsteam(M, A) )
%   | then if ( athleteplaysinleague(M, N), teamalsoknownas(P, L) )
%   | | then return 0.03119272025965762;  // std dev = 0.891, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.14048860034631788;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.1259325488738654;  // std dev = 0.016, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( teamalsoknownas(A, E), teamplaysagainstteam(A, D) )
%   | then if ( teamplaysagainstteam(D, E) )
%   | | then return 0.5551996006461599;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.22192187934620144;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5613983308482031;  // std dev = 0.267, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then return 0.26146360292241394;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( teamplaysagainstteam(A, H), teamalsoknownas(H, I) )
%   | | then if ( teamplaysagainstteam(H, A) )
%   | | | then return -0.11349950798089005;  // std dev = 0.049, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | | else return -0.025668278386880083;  // std dev = 0.908, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return -0.11289505387754492;  // std dev = 0.017, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamalsoknownas(E, A), teamplaysagainstteam(D, E) )
%   | | then if ( teamalsoknownas(E, D) )
%   | | | then return 0.4463846484604249;  // std dev = 0.115, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.08265934234752721;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteledsportsteam(F, A), athleteplaysinleague(F, G) )
%   | | | then return 0.3840016572378654;  // std dev = 0.907, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0.42026884300744416;  // std dev = 0.126, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | else return 0.5567116065403929;  // std dev = 0.117, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( athleteledsportsteam(H, A), teamalsoknownas(I, A) )
%   | then if ( athleteplaysinleague(H, J), teamalsoknownas(K, I) )
%   | | then return 0.20345365865930864;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11119121787200832;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.10267563273650457;  // std dev = 0.040, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(C, E), teamplaysagainstteam(E, A) )
%   | then return 0.33088249033389494;  // std dev = 0.197, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( athleteplaysforteam(F, A), athleteplaysforteam(C, G) )
%   | | then if ( teamalsoknownas(A, H) )
%   | | | then return 0.32657731885539243;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06865383805865559;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( athleteledsportsteam(C, I) )
%   | | | then return 0.32137729564473905;  // std dev = 0.027, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return 0.2402195144514161;  // std dev = 0.684, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamplaysagainstteam(A, J), teamalsoknownas(K, J) )
%   | then return -0.0999899252202561;  // std dev = 0.405, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( teamalsoknownas(L, A), teamplaysagainstteam(A, M) )
%   | | then return 0.07052631372777703;  // std dev = 0.836, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysinleague(A, N) )
%   | | | then return -0.09413414418107138;  // std dev = 0.067, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | | else return -0.08183998767357883;  // std dev = 0.616, 50.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, F) )
%   | | then if ( teamalsoknownas(G, F), athleteplayssport(E, H) )
%   | | | then return 0.09647491596520798;  // std dev = 1.223, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.26603184351103226;  // std dev = 0.129, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.2589537881881102;  // std dev = 0.142, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   | else return 0.3796707106361751;  // std dev = 0.189, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamalsoknownas(I, A), athleteplaysforteam(J, I) )
%   | then if ( teamplaysagainstteam(I, A) )
%   | | then return -0.10448246898507113;  // std dev = 0.084, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.1093751280132217;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.08600445542418966;  // std dev = 0.047, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then if ( athleteplaysforteam(C, F) )
%   | | then return 0.21985124839142076;  // std dev = 0.168, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else if ( athleteledsportsteam(G, F), athleteplaysinleague(G, H) )
%   | | | then return -0.4230800485126948;  // std dev = 1.162, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2459057328306291;  // std dev = 0.063, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.21112284894359382;  // std dev = 0.076, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( athleteplaysforteam(I, A), teamalsoknownas(J, A) )
%   | then if ( athleteplayssport(I, K) )
%   | | then return -0.09800138301911789;  // std dev = 0.066, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( athleteplaysforteam(L, J) )
%   | | | then return 0.11966799399170842;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08653647388101016;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamalsoknownas(M, A), teamplaysinleague(A, N) )
%   | | then return -0.11860565896302307;  // std dev = 0.129, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.07780110247261073;  // std dev = 0.041, 208.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.1848838485642987;  // std dev = 0.289, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( teamplaysinleague(F, E), teamalsoknownas(F, A) )
%   | | then return -0.08558319497086408;  // std dev = 0.119, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( athleteplaysforteam(G, A), athleteledsportsteam(H, A) )
%   | | | then return -0.06554160543073768;  // std dev = 0.882, 50.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
%   | | | else return -0.07648054236104565;  // std dev = 0.198, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( teamalsoknownas(I, A) )
%   | | then return -0.07854821356313778;  // std dev = 0.017, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.07383899089833473;  // std dev = 0.005, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.05742396000157253;  // std dev = 0.540, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then if ( teamalsoknownas(A, E), athleteledsportsteam(F, E) )
%   | | then return 0.014414382583150717;  // std dev = 0.835, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.1625538176194163;  // std dev = 0.028, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then if ( athleteplayssport(H, I) )
%   | | | then return -0.10021685673875891;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.1497831432612411;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( teamplaysinleague(A, J) )
%   | | | then return 0.14978314326124112;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.05908973118600686;  // std dev = 1.426, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   else if ( teamalsoknownas(K, A), athleteledsportsteam(L, A) )
%   | then if ( teamplaysagainstteam(A, K) )
%   | | then return -0.08811936003836576;  // std dev = 0.059, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.20418729534261246;  // std dev = 0.702, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.06935032944669534;  // std dev = 0.056, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteplayssport(E, F) )
%   | then return 0.14568162724095776;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( athleteledsportsteam(G, A), athleteplaysforteam(G, A) )
%   | | then return -0.19451680320028633;  // std dev = 0.960, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.1387489161025179;  // std dev = 0.114, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return 0.08184112437442517;  // std dev = 1.662, 50.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=47 */
%   else if ( teamalsoknownas(I, A), athleteledsportsteam(J, A) )
%   | then if ( athleteplayssport(J, K) )
%   | | then return -0.0791264541858771;  // std dev = 0.087, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.13531089085428355;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, L), teamplaysagainstteam(A, M) )
%   | | then if ( teamplaysagainstteam(N, A) )
%   | | | then return -0.0687580960156765;  // std dev = 0.481, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | | else return -0.20299854717133062;  // std dev = 0.342, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.061112375658198236;  // std dev = 0.046, 134.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.914', 'seconds']
Refined model CLL: -0.083792


******************************************
Best model found
******************************************
Results 

CLL : -0.084563 

AUC ROC : 0.995994 

AUC PR : 0.298938 

Precision : 0.165079 

Recall : 0.984848 

F1 : 0.282762 

Total Learning Time : 231.55 

Total Inference Time : 18.7744882106781 

Total revision time: 254.652171251297
Best scored revision CLL: -0.083792


Results 

CLL : -0.084563 

AUC ROC : 0.995994 

AUC PR : 0.298938 

Precision : 0.165079 

Recall : 0.984848 

F1 : 0.282762 

Total Learning Time : 254.67823683929444 

Total Inference Time : 18.7744882106781 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.472
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 384.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 409.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 395.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 400.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 393.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 410.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 409.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 378.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 422.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 374.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.917', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 133.868
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then if ( teamalsoknownas(D, E) )
%   | | | then return 0.8581489350995118;  // std dev = 2.31e-07, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | | else return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else return 0.8581489350995124;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( athleteplaysinleague(C, G) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048804;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(F, A), teamalsoknownas(A, G) )
%   | | then if ( teamalsoknownas(G, F), teamplaysagainstteam(A, F) )
%   | | | then return 0.46947341221095434;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7194734122109542;  // std dev = 5.16e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.7236268332577652;  // std dev = 0.129, 109.000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else if ( athleteplaysforteam(H, A), teamplaysinleague(A, I) )
%   | | then return -0.2805265877890456;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.7194734122109544;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( teamalsoknownas(J, A), athleteplaysforteam(K, J) )
%   | then if ( athleteledsportsteam(K, J) )
%   | | then return -0.12544463852839136;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.1769132208395042;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, L) )
%   | | then return -0.12595243318356267;  // std dev = 0.093, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | else return -0.11036783933936582;  // std dev = 0.123, 54.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return 0.5620168017290567;  // std dev = 0.269, 126.000 (wgt'ed) examples reached here.  /* #pos=126 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return 0.0916121001904214;  // std dev = 0.847, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.6042693961562715;  // std dev = 0.219, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11330283782891708;  // std dev = 0.082, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.42637086338917884;  // std dev = 0.234, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( teamalsoknownas(A, F), athleteledsportsteam(C, G) )
%   | | then if ( teamalsoknownas(F, A) )
%   | | | then return 0.4148885116139787;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1648885116139788;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | | then return 0.34608542708952006;  // std dev = 0.972, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.41460045539764395;  // std dev = 0.009, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   else if ( teamplaysagainstteam(J, A) )
%   | then return -0.1047245333709026;  // std dev = 0.306, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( teamalsoknownas(K, A), teamplaysinleague(A, L) )
%   | | then if ( teamalsoknownas(A, K) )
%   | | | then return -0.04914568875159555;  // std dev = 0.706, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return -0.10146002332236097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09402327270351131;  // std dev = 0.079, 98.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.328418236346661;  // std dev = 0.174, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | else if ( teamplaysagainstteam(G, A), teamalsoknownas(H, G) )
%   | | | then return 0.17137393279125795;  // std dev = 1.073, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3067135897490611;  // std dev = 1.050, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   | else if ( teamplaysagainstteam(A, I) )
%   | | then return 0.3378536732031504;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.48108570388718713;  // std dev = 0.287, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09320017817959467;  // std dev = 0.039, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.2622296505515184;  // std dev = 0.236, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( athleteledsportsteam(F, A), athleteplaysforteam(F, E) )
%   | | then if ( teamalsoknownas(G, A), teamplaysagainstteam(E, G) )
%   | | | then return -0.1580058490840193;  // std dev = 0.224, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10379678676097148;  // std dev = 0.256, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.0858138089739664;  // std dev = 0.052, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( teamplaysinleague(A, H), teamalsoknownas(A, I) )
%   | | then if ( teamalsoknownas(I, A) )
%   | | | then return -0.045307055148519425;  // std dev = 0.636, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return -0.08552307090860078;  // std dev = 0.000530, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( teamplaysinleague(A, J) )
%   | | | then return -0.0856052977630368;  // std dev = 0.000573, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.07866354687283016;  // std dev = 0.752, 45.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( teamplaysinleague(A, E), teamplaysinleague(D, E) )
%   | then if ( teamalsoknownas(F, D) )
%   | | then return 0.21059721015232993;  // std dev = 0.101, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( athleteplaysinleague(G, E) )
%   | | | then return 0.05368785718596203;  // std dev = 0.917, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.20958930766144;  // std dev = 7.25e-05, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.2394574748633897;  // std dev = 0.078, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.2178495160587371;  // std dev = 0.107, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( athleteplayssport(I, B), teamplaysagainstteam(A, J) )
%   | then return 0.12823129297352734;  // std dev = 0.418, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.076953206863845;  // std dev = 0.341, 186.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=1 */
%   | | else if ( athleteplayssport(L, B), athleteplaysinleague(L, M) )
%   | | | then return -0.49067167213996593;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07023865304219624;  // std dev = 0.691, 69.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then if ( teamalsoknownas(F, D), athleteledsportsteam(C, F) )
%   | | | then return 0.020919156194099786;  // std dev = 1.280, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.16111352957600103;  // std dev = 1.327, 87.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=84 */
%   | | else return 0.18307568745280045;  // std dev = 0.095, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0.19884118500651965;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.389471345583478;  // std dev = 0.298, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07400850910949613;  // std dev = 0.042, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamalsoknownas(E, A), teamplaysagainstteam(E, D) )
%   | then if ( teamalsoknownas(F, E) )
%   | | then return 0.16853710402399735;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1703457184803975;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1591162269224603;  // std dev = 0.149, 117.000 (wgt'ed) examples reached here.  /* #pos=117 */
%   else if ( teamalsoknownas(G, A), teamplaysagainstteam(G, H) )
%   | then if ( athleteplayssport(I, B) )
%   | | then return 0.28607056987033946;  // std dev = 0.245, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07322329357008278;  // std dev = 0.039, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( teamalsoknownas(A, J), teamplaysagainstteam(K, A) )
%   | | then if ( athleteplaysforteam(L, K), teamplaysinleague(K, M) )
%   | | | then return -0.06817366211931347;  // std dev = 0.004, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.013643845651164542;  // std dev = 0.309, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( teamplaysagainstteam(A, N) )
%   | | | then return -0.07060643602117304;  // std dev = 0.396, 102.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=1 */
%   | | | else return -0.08852804472914748;  // std dev = 1.405, 111.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A), teamplaysinleague(A, D) )
%   | then if ( athleteledsportsteam(C, E) )
%   | | then return 0.1650808681516557;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.16340084109499542;  // std dev = 0.758, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysagainstteam(A, F), teamplaysinleague(F, D) )
%   | | then return 0.14155225040240976;  // std dev = 0.098, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else if ( teamplaysagainstteam(G, A), teamalsoknownas(H, G) )
%   | | | then return 0.05474545789918321;  // std dev = 0.946, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.12424920004883212;  // std dev = 0.992, 66.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=65 */
%   else if ( teamplaysinleague(A, I), athleteplayssport(J, B) )
%   | then return -0.20660339623917084;  // std dev = 0.712, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.06415767450095561;  // std dev = 0.040, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | | else if ( teamalsoknownas(L, A) )
%   | | | then return -0.06510892351934205;  // std dev = 0.000264, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.05160657294882085;  // std dev = 0.619, 46.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.251', 'seconds']
Refined model CLL: -0.082554


******************************************
Best model found
******************************************
Results 

CLL : -0.083543 

AUC ROC : 0.994991 

AUC PR : 0.312213 

Precision : 0.192735 

Recall : 0.984848 

F1 : 0.322381 

Total Learning Time : 133.868 

Total Inference Time : 12.963175535202026 

Total revision time: 150.99782713890076
Best scored revision CLL: -0.082554


Results 

CLL : -0.083543 

AUC ROC : 0.994991 

AUC PR : 0.312213 

Precision : 0.192735 

Recall : 0.984848 

F1 : 0.322381 

Total Learning Time : 151.0238927268982 

Total Inference Time : 12.963175535202026 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.593
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 388.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 407.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 401.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 383.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 380.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 388.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 378.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 378.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 394.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 392.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.948', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 165.49
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D), teamplaysinleague(A, E) )
%   | then if ( athleteledsportsteam(F, A), athleteplaysforteam(F, A) )
%   | | then if ( teamplaysagainstteam(A, D) )
%   | | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995125;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( teamalsoknownas(A, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6581489350995123;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.1418510649004884;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | else if ( teamplaysagainstteam(A, J), teamalsoknownas(A, K) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.12224322176323282;  // std dev = 0.139, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, F) )
%   | then if ( athleteledsportsteam(G, A), athleteplaysforteam(G, F) )
%   | | then if ( teamalsoknownas(H, A), athleteledsportsteam(C, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.724653039491316;  // std dev = 0.084, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.38614007887762103;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.725703056236958;  // std dev = 0.141, 99.000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.12688058250302742;  // std dev = 0.218, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | else if ( teamplaysagainstteam(J, A), teamalsoknownas(K, A) )
%   | | then if ( teamalsoknownas(J, K) )
%   | | | then return 0.17959978524994702;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1276116267132557;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.13320918129256945;  // std dev = 0.063, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.10488435398598299;  // std dev = 0.989, 44.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E), teamplaysinleague(E, F) )
%   | then if ( athleteplaysforteam(C, G), teamplaysinleague(G, F) )
%   | | then return 0.5538685619071417;  // std dev = 0.000412, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.22049426323126;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5538275965645933;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5676287549020798;  // std dev = 0.267, 104.000 (wgt'ed) examples reached here.  /* #pos=104 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.11422664277094591;  // std dev = 0.228, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(I, J) )
%   | | then return 0.19324248471295438;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return -0.11638399327118616;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0936495241688506;  // std dev = 0.988, 45.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, D) )
%   | | then return 0.4205538732786682;  // std dev = 0.160, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else if ( athleteplaysforteam(F, A), athleteplayssport(F, B) )
%   | | | then return 0.13568819206030547;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4137073317936079;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.43016465173992213;  // std dev = 0.229, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( athleteplayssport(G, B) )
%   | then return -0.21925561926399126;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamalsoknownas(H, A), teamplaysagainstteam(A, I) )
%   | | then if ( teamalsoknownas(J, I) )
%   | | | then return -0.10129131283913038;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.11773410757882607;  // std dev = 0.759, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.10345571761049531;  // std dev = 0.107, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | | else return -0.09388368009465331;  // std dev = 0.992, 101.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.32817610874323866;  // std dev = 0.289, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | | then return -0.3259480398182223;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3276805020378612;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysagainstteam(A, H), teamalsoknownas(A, I) )
%   | | then if ( teamalsoknownas(H, I), teamalsoknownas(I, A) )
%   | | | then return 0.07677266800500457;  // std dev = 0.757, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.09313380985661375;  // std dev = 0.020, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.0958659781993692;  // std dev = 0.124, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | | else return -0.08569565392586741;  // std dev = 0.992, 105.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E), athleteledsportsteam(C, F) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then return 0.2629392570772724;  // std dev = 0.210, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else if ( teamplaysagainstteam(A, H), teamplaysinleague(H, E) )
%   | | | then return 0.08299113332510387;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.22235990826227772;  // std dev = 0.988, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return 0.27316794706956715;  // std dev = 0.168, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( teamplaysagainstteam(A, I), teamalsoknownas(J, A) )
%   | then if ( athleteplaysforteam(K, A) )
%   | | then return -0.09625616341209624;  // std dev = 0.062, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.1898907442235418;  // std dev = 0.673, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(L, A), teamalsoknownas(A, M) )
%   | | then return -0.09672053309096641;  // std dev = 0.119, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( teamplaysinleague(A, N) )
%   | | | then return -0.08516730127966202;  // std dev = 0.010, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | | | else return -0.0759034319965753;  // std dev = 0.993, 66.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.2160296204439173;  // std dev = 0.206, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( athleteplaysforteam(C, E), teamalsoknownas(E, G) )
%   | | | then return 0.13144952014897612;  // std dev = 0.942, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.2211981194125715;  // std dev = 0.066, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( teamplaysagainstteam(A, H), teamplaysagainstteam(H, A) )
%   | | then return -0.04843273061964596;  // std dev = 0.772, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21334077451678288;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.08082169628163076;  // std dev = 0.162, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | else if ( teamplaysagainstteam(J, A), teamalsoknownas(A, K) )
%   | | then return 0.04863627302489938;  // std dev = 0.770, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.10056193509109082;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06486079854669075;  // std dev = 0.999, 44.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysforteam(F, A) )
%   | then if ( athleteplaysinleague(F, D), athleteledsportsteam(C, G) )
%   | | then return 0.18500173456673866;  // std dev = 0.153, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( athleteplaysinleague(F, E) )
%   | | | then return -0.2179855134370831;  // std dev = 1.069, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05901802562973331;  // std dev = 1.225, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return 0.1873953701941463;  // std dev = 0.201, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( athleteplayssport(H, B) )
%   | then return -0.16647597900202604;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysinleague(A, I) )
%   | | then return -0.07375262281801638;  // std dev = 0.065, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | | else if ( teamalsoknownas(A, J), teamalsoknownas(J, A) )
%   | | | then return -7.995297271807317E-5;  // std dev = 0.735, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.057229538834957926;  // std dev = 0.994, 37.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then return 0.1607952408831144;  // std dev = 0.197, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return 0.19463726204914306;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09018541944987954;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(A, F) )
%   | then return -0.06916146675080564;  // std dev = 0.059, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( teamalsoknownas(G, A), teamplaysagainstteam(A, H) )
%   | | then return 0.023889694528719658;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return -0.07997823962753631;  // std dev = 0.057, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.04724671947760721;  // std dev = 0.985, 35.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A), athleteplaysforteam(E, A) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return 0.13614416783600364;  // std dev = 0.097, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( athleteledsportsteam(C, F), teamplaysagainstteam(A, F) )
%   | | | then return 0.16710586269924615;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12955435004295393;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.14095624355417816;  // std dev = 0.174, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( teamplaysinleague(A, G) )
%   | then return -0.06691566996396163;  // std dev = 0.232, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | | then return -0.08101331837772295;  // std dev = 0.034, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( teamplaysagainstteam(A, J), teamalsoknownas(J, K) )
%   | | | then return 0.08138218340347968;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.056261742760359286;  // std dev = 0.999, 53.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.149', 'seconds']
Refined model CLL: -0.08626


******************************************
Best model found
******************************************
Results 

CLL : -0.085266 

AUC ROC : 0.996205 

AUC PR : 0.289523 

Precision : 0.20092 

Recall : 0.984962 

F1 : 0.333758 

Total Learning Time : 165.49 

Total Inference Time : 13.533392429351807 

Total revision time: 183.42208534049988
Best scored revision CLL: -0.08626


Results 

CLL : -0.085266 

AUC ROC : 0.996205 

AUC PR : 0.289523 

Precision : 0.20092 

Recall : 0.984962 

F1 : 0.333758 

Total Learning Time : 183.4481509284973 

Total Inference Time : 13.533392429351807 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.583
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 405.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 400.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 394.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 379.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 408.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 402.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.463, 428.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 378.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.458, 444.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.929', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 720.294
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( teamplaysagainstteam(F, A), athleteledsportsteam(G, F) )
%   | | | then return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.8581489350995122;  // std dev = 1.69e-07, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamalsoknownas(H, A), athleteplaysforteam(I, H) )
%   | then if ( teamplaysagainstteam(H, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.14185106490048838;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.7233981704304994;  // std dev = 0.086, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | else if ( teamplaysagainstteam(E, A), teamplaysinleague(A, F) )
%   | | then if ( athleteledsportsteam(G, E) )
%   | | | then return 0.6731660906325099;  // std dev = 0.952, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.21947341221095445;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7202935382196975;  // std dev = 0.038, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( athleteledsportsteam(H, A), athleteplaysforteam(H, A) )
%   | then if ( teamplaysagainstteam(A, I), teamalsoknownas(J, I) )
%   | | then return -0.12544463852839124;  // std dev = 4.34e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0.03334425181892383;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.12869028370627872;  // std dev = 0.229, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.12544463852839136;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.10432168725990772;  // std dev = 0.834, 40.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, A), athleteplaysforteam(C, A) )
%   | then if ( teamalsoknownas(E, A) )
%   | | then return 0.38773040224547656;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.5543970689121432;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.5703982658541593;  // std dev = 0.213, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.5227574247154183;  // std dev = 0.984, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return 0.5551639101082043;  // std dev = 5.16e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( teamalsoknownas(H, A), athleteplaysforteam(I, A) )
%   | then if ( teamplaysagainstteam(A, H) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.0796693126598971;  // std dev = 0.858, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( teamplaysagainstteam(J, A) )
%   | | then return -0.11558904789119596;  // std dev = 0.271, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | else return -0.10626228393214063;  // std dev = 0.084, 105.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then if ( teamalsoknownas(G, A), teamalsoknownas(A, G) )
%   | | then return 0.2749569979017564;  // std dev = 0.878, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( athleteplaysforteam(H, A), athleteplaysforteam(E, I) )
%   | | | then return 0.40269441534264844;  // std dev = 1.002, 62.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=61 */
%   | | | else return 0.4606225165761162;  // std dev = 0.140, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.09788119859993576;  // std dev = 0.076, 158.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=1 */
%   else if ( athleteplayssport(J, B) )
%   | then if ( teamplaysinleague(A, K), athleteplaysinleague(L, K) )
%   | | then if ( athleteledsportsteam(J, M), teamplaysinleague(M, K) )
%   | | | then return 0.42475842392458674;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.20342860886320513;  // std dev = 0.768, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysinleague(A, N) )
%   | | | then return 0.42526418437424063;  // std dev = 2.11e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.38276297365018275;  // std dev = 1.046, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return -0.10308606422305572;  // std dev = 0.043, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), teamalsoknownas(E, A) )
%   | then if ( athleteplaysforteam(F, A), teamalsoknownas(G, E) )
%   | | then return 0.3608877179540498;  // std dev = 0.062, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( athleteledsportsteam(C, E) )
%   | | | then return 0.3402965473112039;  // std dev = 0.050, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0015592230508605488;  // std dev = 1.377, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( athleteledsportsteam(C, H) )
%   | | then return 0.3290861913697097;  // std dev = 0.180, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | else return 0.4404114846773813;  // std dev = 0.281, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamalsoknownas(I, A), athleteledsportsteam(J, A) )
%   | then if ( teamplaysagainstteam(A, I) )
%   | | then return -0.09298596216303469;  // std dev = 0.000264, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.09899222450519685;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.09366376825769854;  // std dev = 0.065, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A), teamplaysinleague(A, F) )
%   | then if ( athleteplaysforteam(G, A), athleteplaysforteam(C, H) )
%   | | then return 0.2729834138689651;  // std dev = 0.056, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.32534590547831116;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( teamplaysagainstteam(I, A), teamplaysinleague(I, D) )
%   | | then return 0.2577531516624756;  // std dev = 0.069, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else if ( teamplaysagainstteam(A, J), teamplaysinleague(J, D) )
%   | | | then return -0.07551364500229918;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2454808473445347;  // std dev = 1.007, 51.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=50 */
%   else if ( teamalsoknownas(K, A), athleteplaysforteam(L, K) )
%   | then if ( athleteledsportsteam(L, K) )
%   | | then return -0.09002002660245845;  // std dev = 0.032, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.1954214072126612;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( athleteplayssport(M, B) )
%   | | then return 0.006573582147033056;  // std dev = 0.705, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.08637434465218587;  // std dev = 0.089, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), athleteledsportsteam(C, D) )
%   | then return 0.21612636253626624;  // std dev = 0.017, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( teamplaysinleague(D, F) )
%   | | | then return 0.22400322063953426;  // std dev = 0.086, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.058652474767444805;  // std dev = 1.330, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( teamalsoknownas(D, G), teamalsoknownas(G, H) )
%   | | | then return 0.21569435829146277;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2677350147686534;  // std dev = 0.337, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( athleteledsportsteam(I, A), teamalsoknownas(J, A) )
%   | then if ( athleteplayssport(I, K) )
%   | | then return -0.08681076985214328;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.21845401581394758;  // std dev = 0.738, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysagainstteam(A, L), teamalsoknownas(L, M) )
%   | | then return -0.06931738931128986;  // std dev = 0.052, 96.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=3 */
%   | | else return -0.0840004668155879;  // std dev = 0.056, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( teamalsoknownas(A, E), athleteledsportsteam(F, A) )
%   | then return 0.015675054312919417;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then if ( teamplaysagainstteam(A, D) )
%   | | | then return 0.1799924612028882;  // std dev = 0.078, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | | else return 0.10576273421150846;  // std dev = 1.393, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else return 0.19723560333795165;  // std dev = 0.053, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   else if ( athleteledsportsteam(I, A), teamalsoknownas(J, A) )
%   | then if ( teamplaysagainstteam(A, J), athleteplaysforteam(K, J) )
%   | | then return -0.07834155992366626;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.12044739964723547;  // std dev = 0.788, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( teamplaysagainstteam(A, L), teamalsoknownas(M, L) )
%   | | then return -0.06615334388049883;  // std dev = 0.050, 113.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=3 */
%   | | else if ( teamplaysinleague(A, N) )
%   | | | then return -0.07317050998927678;  // std dev = 0.020, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | | else return -0.08858900899943521;  // std dev = 0.725, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then return 0.16662415237016137;  // std dev = 0.023, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | else if ( teamalsoknownas(F, A) )
%   | | then return -0.09603902907008;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1563801934746078;  // std dev = 0.022, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( teamalsoknownas(A, G), teamalsoknownas(G, A) )
%   | then if ( athleteledsportsteam(H, A) )
%   | | then return -0.15313410775070643;  // std dev = 0.218, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07363691490152188;  // std dev = 0.043, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( athleteledsportsteam(I, A), teamalsoknownas(J, A) )
%   | | then if ( athleteplaysinleague(I, K), teamplaysinleague(A, K) )
%   | | | then return -0.06884422006840177;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.19744396514938087;  // std dev = 0.676, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.070409561706426;  // std dev = 0.277, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | | else return -0.058330563755522195;  // std dev = 0.528, 50.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamplaysagainstteam(A, D) )
%   | then if ( athleteledsportsteam(C, E), teamplaysagainstteam(A, E) )
%   | | then return 0.14709387813657243;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.5103987197179988;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | | then if ( athleteledsportsteam(C, F) )
%   | | | then return 0.13417760712402294;  // std dev = 0.047, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return -0.06891086353313845;  // std dev = 1.554, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( teamalsoknownas(H, A), teamalsoknownas(I, H) )
%   | | | then return 0.17132001765178337;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.14067966503406473;  // std dev = 0.595, 60.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   else if ( athleteledsportsteam(J, A), athleteplaysinleague(J, K) )
%   | then if ( athleteplayssport(J, L) )
%   | | then return -0.06534672675852955;  // std dev = 0.022, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0.19375432792989342;  // std dev = 0.632, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.06630240839392895;  // std dev = 0.142, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '19.330', 'seconds']
Refined model CLL: -0.085074


******************************************
Best model found
******************************************
Results 

CLL : -0.085845 

AUC ROC : 0.992426 

AUC PR : 0.377181 

Precision : 0.176391 

Recall : 0.984848 

F1 : 0.299194 

Total Learning Time : 720.294 

Total Inference Time : 41.14237380027771 

Total revision time: 765.7744792957305
Best scored revision CLL: -0.085074


Results 

CLL : -0.085845 

AUC ROC : 0.992426 

AUC PR : 0.377181 

Precision : 0.176391 

Recall : 0.984848 

F1 : 0.299194 

Total Learning Time : 765.8478468914032 

Total Inference Time : 41.14237380027771 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.612
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 383.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 416.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 378.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 408.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 412.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 378.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 410.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 403.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 396.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 390.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.074', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 224.209
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.8581489350995128;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | | else if ( athleteplaysforteam(G, A), teamalsoknownas(H, A) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8230612158012667;  // std dev = 1.389, 57.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.1418510649004882;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.7224458475687058;  // std dev = 0.067, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | | then return 0.5694734122109542;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return 0.681762176480996;  // std dev = 1.383, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | else return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.12544463852839188;  // std dev = 0.000, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(E, A), teamplaysinleague(A, F) )
%   | | then return 0.5596383144601824;  // std dev = 0.102, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( teamplaysagainstteam(G, A), teamplaysagainstteam(D, G) )
%   | | | then return 0.453279935265934;  // std dev = 0.933, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.5418441197066777;  // std dev = 1.383, 57.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | else if ( teamplaysagainstteam(A, H), teamplaysinleague(H, I) )
%   | | then return 0.02536893084575643;  // std dev = 0.659, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(J, A), athleteplaysinleague(C, K) )
%   | | | then return 0.24995562310164599;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.646284445105303;  // std dev = 0.202, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360689;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, F) )
%   | | then if ( athleteledsportsteam(G, A) )
%   | | | then return 0.4195079678399556;  // std dev = 0.071, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.21917176853492792;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.41813852696517956;  // std dev = 0.997, 64.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=63 */
%   | | | else return 0.44169483664877884;  // std dev = 0.029, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.4675626978858595;  // std dev = 0.152, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5833399819256374;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.1015963294878366;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(D, A), athleteplayssport(D, E) )
%   | then if ( athleteplaysforteam(D, F) )
%   | | then return 0.3202893572704882;  // std dev = 0.038, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.014333424732054642;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteplaysinleague(C, G) )
%   | | then if ( teamalsoknownas(H, A), athleteledsportsteam(C, I) )
%   | | | then return 0.28101811349703154;  // std dev = 0.972, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.338685601779741;  // std dev = 0.199, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   | | else return 0.14255675469892895;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926046;  // std dev = 1.13e-07, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then return 0.2639267121076437;  // std dev = 0.164, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else return -0.08939935607311197;  // std dev = 0.411, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   else if ( athleteplayssport(G, B) )
%   | then if ( athleteplaysinleague(G, H) )
%   | | then if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | | then return 0.23063255015421597;  // std dev = 0.969, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.27025277427004324;  // std dev = 0.117, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else return 0.10718190527009457;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.08518475138839678;  // std dev = 4.83e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamplaysagainstteam(A, E) )
%   | then if ( teamalsoknownas(D, E), athleteledsportsteam(C, E) )
%   | | then return -0.1242241607056939;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21536698723492942;  // std dev = 0.093, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( athleteplaysinleague(C, F) )
%   | | then return 0.2203918856241694;  // std dev = 0.171, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | | else return 0.08095798111286849;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07863172986525956;  // std dev = 0.003, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return 0.19904975341376252;  // std dev = 0.110, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( athleteplaysforteam(F, A), teamplaysagainstteam(A, G) )
%   | | then if ( athleteledsportsteam(F, H) )
%   | | | then return 0.17761677485451707;  // std dev = 0.056, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.0736568299596763;  // std dev = 1.347, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0.18695308143684766;  // std dev = 0.071, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return 0.14522351337779527;  // std dev = 0.984, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( teamalsoknownas(J, A), athleteplaysforteam(K, J) )
%   | then if ( athleteledsportsteam(K, L) )
%   | | then return -0.07297045704639342;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.04389887428872185;  // std dev = 0.405, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysinleague(A, M) )
%   | | then return -0.07796931823326705;  // std dev = 0.047, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | else return -0.06305005731789877;  // std dev = 0.068, 46.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamalsoknownas(E, F) )
%   | then if ( athleteledsportsteam(C, F), teamalsoknownas(G, E) )
%   | | then if ( teamplaysinleague(A, D) )
%   | | | then return 0.1593175728792597;  // std dev = 0.068, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.08377335462902238;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.16290828538129407;  // std dev = 0.121, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.16218760601754958;  // std dev = 0.040, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( athleteplaysforteam(C, I), teamplaysagainstteam(A, I) )
%   | | | then return 0.1564801964954108;  // std dev = 0.042, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.03545504827538185;  // std dev = 2.471, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   else if ( teamplaysinleague(A, J), athleteplayssport(K, B) )
%   | then return -0.2507199357854287;  // std dev = 0.749, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysinleague(A, L) )
%   | | then return -0.0683565204151428;  // std dev = 0.024, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | | else return -0.0604799760085677;  // std dev = 0.063, 56.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), athleteledsportsteam(C, E) )
%   | then if ( athleteplaysforteam(F, A) )
%   | | then if ( athleteledsportsteam(G, A), athleteplaysforteam(G, H) )
%   | | | then return 0.1331076242005543;  // std dev = 0.051, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.1561849777628246;  // std dev = 0.087, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( teamalsoknownas(D, I) )
%   | | | then return 0.13463980400890818;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.08909664929922985;  // std dev = 1.513, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else if ( athleteledsportsteam(C, J) )
%   | | then return 0.15434954625081027;  // std dev = 0.066, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.15174018631600694;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.34017930823781767;  // std dev = 0.232, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06422090332913086;  // std dev = 0.014, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.715', 'seconds']
Refined model CLL: -0.085897


******************************************
Best model found
******************************************
Results 

CLL : -0.087112 

AUC ROC : 0.993382 

AUC PR : 0.192777 

Precision : 0.155265 

Recall : 0.988636 

F1 : 0.26838 

Total Learning Time : 224.209 

Total Inference Time : 13.63753867149353 

Total revision time: 242.20974101638794
Best scored revision CLL: -0.085897


Results 

CLL : -0.087112 

AUC ROC : 0.993382 

AUC PR : 0.192777 

Precision : 0.155265 

Recall : 0.988636 

F1 : 0.26838 

Total Learning Time : 242.28310861206054 

Total Inference Time : 13.63753867149353 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.497
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 388.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 377.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.480, 365.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 377.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 375.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 389.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 393.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 366.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 388.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.464, 417.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.734', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 108.64099999999999
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D), athleteledsportsteam(C, E) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( teamalsoknownas(F, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( teamalsoknownas(A, G), athleteplaysforteam(H, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7719420385477881;  // std dev = 2.138, 58.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=53 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.14185106490048838;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | else if ( teamalsoknownas(J, A), teamalsoknownas(A, J) )
%   | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11962884267826547;  // std dev = 0.989, 45.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteplayssport(E, F) )
%   | then if ( athleteplaysinleague(E, D), athleteplaysforteam(C, G) )
%   | | then return 0.7200239220739005;  // std dev = 0.017, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else if ( athleteledsportsteam(E, A) )
%   | | | then return 0.7365392179622792;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0641839493785042;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.7296182480259252;  // std dev = 0.110, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.12544463852839166;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else if ( teamalsoknownas(A, I), teamplaysagainstteam(J, A) )
%   | | then return 0.037979670813963695;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10583290193763906;  // std dev = 0.990, 43.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.5643215200530448;  // std dev = 0.205, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then return 0.5634604936999482;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.32406104755919896;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(A, G) )
%   | then return -0.11231637819360661;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else if ( teamalsoknownas(H, A), teamplaysagainstteam(A, I) )
%   | | then return 0.1961156511051876;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(A, J) )
%   | | | then return -0.13160092074001384;  // std dev = 0.024, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.090614303836136;  // std dev = 0.986, 41.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then if ( athleteplaysforteam(C, F), teamplaysinleague(F, E) )
%   | | then return 0.42081457319780136;  // std dev = 0.189, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | | else if ( athleteplaysinleague(G, E), athleteledsportsteam(G, H) )
%   | | | then return 0.12721353619209289;  // std dev = 1.064, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.36994117493217205;  // std dev = 0.970, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.4356775716922435;  // std dev = 0.115, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.10159632948783653;  // std dev = 0.000, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else if ( teamplaysagainstteam(A, J), teamalsoknownas(K, A) )
%   | | then return 0.15695632243203947;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.10643584930040231;  // std dev = 0.023, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.0884752642703279;  // std dev = 0.991, 50.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D), athleteledsportsteam(E, A) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.3174956044756809;  // std dev = 0.004, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.12005017675506982;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then return 0.3344234761986905;  // std dev = 0.242, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | else if ( athleteledsportsteam(C, G) )
%   | | | then return 0.2917198508047011;  // std dev = 0.979, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.3866777325640703;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.09269127618926057;  // std dev = 9.19e-08, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | else if ( teamplaysagainstteam(A, I), teamplaysinleague(I, J) )
%   | | then if ( teamalsoknownas(I, K), teamplaysagainstteam(I, A) )
%   | | | then return 0.1683962177813667;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09594761965680676;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08278565980609887;  // std dev = 0.137, 53.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamplaysinleague(A, E) )
%   | then if ( athleteplaysforteam(C, D), teamalsoknownas(D, A) )
%   | | then return -0.08104246831759261;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteplaysinleague(F, E) )
%   | | | then return 0.2822858275304672;  // std dev = 0.089, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.16461891850376692;  // std dev = 0.933, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( teamplaysinleague(A, G), teamplaysagainstteam(A, H) )
%   | | then if ( athleteplaysforteam(C, H) )
%   | | | then return 0.26146524553664846;  // std dev = 0.192, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | | else return 0.015366123481997535;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2669262051408168;  // std dev = 0.084, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.08518475138839678;  // std dev = 7.74e-08, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else if ( teamplaysagainstteam(A, J), teamplaysinleague(J, K) )
%   | | then return 0.012589915692791538;  // std dev = 0.313, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.07646013540157896;  // std dev = 0.136, 54.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, D) )
%   | | then return 0.2129037290163005;  // std dev = 0.158, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else if ( athleteledsportsteam(F, A) )
%   | | | then return 0.0464716697084848;  // std dev = 0.927, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.10680602158877643;  // std dev = 0.846, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2213815834731594;  // std dev = 0.134, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else if ( teamplaysinleague(A, G) )
%   | then return -0.07877675473109146;  // std dev = 6.66e-08, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | else if ( teamalsoknownas(A, H), teamplaysagainstteam(A, I) )
%   | | then return 0.055542992193724196;  // std dev = 0.799, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamalsoknownas(J, A) )
%   | | | then return -0.09206280140786632;  // std dev = 0.047, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06806807687990296;  // std dev = 0.992, 52.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.18639583960913436;  // std dev = 0.253, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else if ( teamplaysinleague(A, D) )
%   | then return -0.07324622576333664;  // std dev = 1.23e-07, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else if ( teamalsoknownas(E, A), teamalsoknownas(A, E) )
%   | | then return 0.049400864724212235;  // std dev = 0.804, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysagainstteam(F, A) )
%   | | | then return -0.08581997750344815;  // std dev = 0.054, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.04373783133249379;  // std dev = 0.981, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamalsoknownas(A, E) )
%   | then return -0.07116008446099273;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( athleteplaysforteam(F, A), athleteplaysinleague(F, G) )
%   | | then if ( teamplaysinleague(A, G) )
%   | | | then return 0.15742246096687523;  // std dev = 0.131, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.11739129424101752;  // std dev = 1.079, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.15852855095751056;  // std dev = 0.142, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.06870806302918211;  // std dev = 0.038, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(J, A) )
%   | | then return 0.1889879358767125;  // std dev = 0.688, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return -0.09237692134470238;  // std dev = 0.049, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.05579255287157267;  // std dev = 0.990, 45.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.14183401427808298;  // std dev = 0.260, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else if ( teamplaysinleague(A, E) )
%   | then return -0.06480593385802905;  // std dev = 0.077, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else if ( teamalsoknownas(F, A), teamalsoknownas(A, F) )
%   | | then if ( teamplaysinleague(F, G) )
%   | | | then return 0.0350202964071898;  // std dev = 0.778, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.08352581620740764;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return -0.07612024532034212;  // std dev = 0.080, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.05073210174680487;  // std dev = 0.988, 44.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.985', 'seconds']
Refined model CLL: -0.085395


******************************************
Best model found
******************************************
Results 

CLL : -0.084494 

AUC ROC : 0.994744 

AUC PR : 0.419161 

Precision : 0.20092 

Recall : 0.984962 

F1 : 0.333758 

Total Learning Time : 108.64099999999999 

Total Inference Time : 11.095967769622803 

Total revision time: 123.97675846862792
Best scored revision CLL: -0.085395


Results 

CLL : -0.084494 

AUC ROC : 0.994744 

AUC PR : 0.419161 

Precision : 0.20092 

Recall : 0.984962 

F1 : 0.333758 

Total Learning Time : 124.05012606430053 

Total Inference Time : 11.095967769622803 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.495
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 392.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 406.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 396.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 406.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 402.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 392.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 384.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 416.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 401.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 409.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.886', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 189.059
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A), teamalsoknownas(F, E) )
%   | then if ( teamplaysinleague(F, D), athleteledsportsteam(C, G) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysagainstteam(H, A), teamplaysinleague(H, D) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( athleteplaysforteam(I, A), athleteplaysinleague(I, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8373156017661786;  // std dev = 0.990, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   else if ( athleteplayssport(K, B), athleteplaysforteam(K, L) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( athleteledsportsteam(M, A), teamalsoknownas(N, A) )
%   | | then if ( teamplaysagainstteam(A, N) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.14185106490048835;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.7255867262626775;  // std dev = 0.147, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | | | then return 0.6420172948448565;  // std dev = 0.899, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.722382002329106;  // std dev = 0.015, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else return 0.5344158369565684;  // std dev = 0.842, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( athleteledsportsteam(H, A), teamalsoknownas(I, A) )
%   | then if ( teamalsoknownas(A, J) )
%   | | then return -0.13447101561914726;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.11703338056264537;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.12567436002972518;  // std dev = 0.041, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.12544463852839136;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.1046044183162187;  // std dev = 0.948, 46.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A), athleteplaysforteam(C, D) )
%   | then return 0.5616290864381702;  // std dev = 0.181, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( athleteplaysforteam(E, A), athleteplaysforteam(C, F) )
%   | | then if ( athleteledsportsteam(C, F), teamplaysagainstteam(A, G) )
%   | | | then return 0.4808651921709433;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.0035923866537842706;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.5627576766896473;  // std dev = 0.077, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return 0.48719152817754524;  // std dev = 1.340, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else if ( teamalsoknownas(I, A), athleteledsportsteam(J, A) )
%   | then if ( teamplaysagainstteam(A, I) )
%   | | then return -0.13199748946059098;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.17275388162734692;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11262906867074206;  // std dev = 0.013, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamalsoknownas(F, A), teamplaysagainstteam(E, F) )
%   | | then if ( teamalsoknownas(F, E) )
%   | | | then return 0.45711026395648957;  // std dev = 0.130, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.08788629925439051;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteplaysforteam(G, A), athleteplayssport(G, B) )
%   | | | then return 0.38173852411128284;  // std dev = 0.901, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.42896304771126914;  // std dev = 0.206, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | else return 0.2681249331916472;  // std dev = 0.902, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamalsoknownas(H, A), teamplaysagainstteam(I, A) )
%   | then if ( athleteledsportsteam(J, A), teamalsoknownas(K, H) )
%   | | then return 0.038843839341605714;  // std dev = 0.837, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.10649584083653123;  // std dev = 0.039, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( teamplaysinleague(A, L) )
%   | | then return -0.10326527790699543;  // std dev = 0.176, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | else return -0.09088805322617426;  // std dev = 0.101, 74.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.3382924041750919;  // std dev = 0.032, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then if ( teamplaysagainstteam(E, F), teamalsoknownas(F, E) )
%   | | | then return -0.3450997447907278;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3325677661369182;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.3066471027991422;  // std dev = 0.533, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | | else return 0.36028608391403755;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( teamplaysagainstteam(A, H), teamalsoknownas(I, H) )
%   | then return -0.09714339636619769;  // std dev = 0.150, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( teamplaysagainstteam(A, J), athleteledsportsteam(K, J) )
%   | | then if ( athleteplaysinleague(K, L) )
%   | | | then return -0.09263844176060543;  // std dev = 0.000995, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.2037571965296838;  // std dev = 0.726, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09331476315126128;  // std dev = 0.014, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( teamalsoknownas(E, A), teamalsoknownas(A, F) )
%   | then if ( athleteledsportsteam(C, D), teamalsoknownas(D, G) )
%   | | then return 0.25932059266370316;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.15494703875783067;  // std dev = 0.481, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.2625387561793324;  // std dev = 0.243, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( athleteledsportsteam(C, D), teamalsoknownas(D, I) )
%   | | | then return 0.26535410846414426;  // std dev = 0.051, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.31876019414634793;  // std dev = 0.432, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( teamplaysagainstteam(J, A), athleteplayssport(K, B) )
%   | then return 0.06743663435220243;  // std dev = 0.954, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( athleteledsportsteam(L, A), teamalsoknownas(M, A) )
%   | | then if ( teamplaysagainstteam(M, A) )
%   | | | then return -0.1081217532521713;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.1911279998679347;  // std dev = 0.698, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.08816844896454706;  // std dev = 0.038, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then if ( athleteledsportsteam(F, A), athleteplaysinleague(F, D) )
%   | | then if ( athleteledsportsteam(C, A) )
%   | | | then return 0.2118876384884038;  // std dev = 0.086, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.07616972304741813;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21964919367497834;  // std dev = 0.028, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( teamalsoknownas(G, A) )
%   | | then return -0.020496735040233555;  // std dev = 0.801, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.23837966909890787;  // std dev = 0.105, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14370998454846623;  // std dev = 0.963, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( athleteledsportsteam(I, A), teamalsoknownas(J, A) )
%   | then if ( athleteledsportsteam(K, J) )
%   | | then return -0.11986491327576555;  // std dev = 0.056, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.18484967136703176;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07776645947635562;  // std dev = 0.050, 245.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then if ( athleteledsportsteam(C, E) )
%   | | then return 0.1841444003848312;  // std dev = 0.220, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | | else return 0.26554003970912954;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( athleteledsportsteam(C, F) )
%   | | then if ( teamalsoknownas(A, G), teamalsoknownas(G, A) )
%   | | | then return 0.05793934870898628;  // std dev = 0.830, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1819241939422142;  // std dev = 0.059, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else return -0.11845789001789807;  // std dev = 1.002, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( athleteledsportsteam(H, A), athleteplaysinleague(H, I) )
%   | then if ( athleteplayssport(H, J) )
%   | | then return -0.07543252551422759;  // std dev = 0.044, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0.10006646346600884;  // std dev = 0.738, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07527165872263088;  // std dev = 0.166, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(E, A), teamplaysinleague(E, D) )
%   | | then if ( teamalsoknownas(E, A), athleteplaysforteam(C, E) )
%   | | | then return 0.1771500902982492;  // std dev = 0.062, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1513189152905458;  // std dev = 0.112, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else return 0.16229687756307326;  // std dev = 0.018, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | else return 0.2170620945357606;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamalsoknownas(F, A), athleteplaysforteam(G, F) )
%   | then if ( athleteledsportsteam(G, F) )
%   | | then return -0.07694046261845602;  // std dev = 0.030, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.15804779841964436;  // std dev = 0.622, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamalsoknownas(A, H), athleteledsportsteam(I, A) )
%   | | then return -0.12898159145461294;  // std dev = 0.308, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( teamplaysagainstteam(J, A), athleteplayssport(K, B) )
%   | | | then return -0.29076681966205475;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06763035398339423;  // std dev = 0.832, 228.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E) )
%   | then return 0.13999536059641893;  // std dev = 0.020, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then return 0.14454893566933355;  // std dev = 0.020, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | | then return -0.033658284496958395;  // std dev = 1.286, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.023612329968721726;  // std dev = 1.629, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else if ( teamalsoknownas(A, I), athleteledsportsteam(J, A) )
%   | then return -0.10181486407034612;  // std dev = 0.058, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then if ( athleteplaysinleague(L, K) )
%   | | | then return -0.064561571191654;  // std dev = 0.820, 131.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=1 */
%   | | | else return -0.0712426178196356;  // std dev = 0.294, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( teamplaysagainstteam(M, A) )
%   | | | then return -0.06441882386805771;  // std dev = 0.001, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.050021517387329545;  // std dev = 0.803, 35.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29.352', 'seconds']
Refined model CLL: -0.084005


******************************************
Best model found
******************************************
Results 

CLL : -0.084708 

AUC ROC : 0.994099 

AUC PR : 0.289194 

Precision : 0.196078 

Recall : 0.984848 

F1 : 0.327044 

Total Learning Time : 189.059 

Total Inference Time : 15.159486532211304 

Total revision time: 208.51370845222473
Best scored revision CLL: -0.084005


Results 

CLL : -0.084708 

AUC ROC : 0.994099 

AUC PR : 0.289194 

Precision : 0.196078 

Recall : 0.984848 

F1 : 0.327044 

Total Learning Time : 208.55596051597595 

Total Inference Time : 15.159486532211304 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.644
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 375.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 413.000 (wgt'ed) examples reached here.  /* #neg=280 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 405.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 393.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 404.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 406.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 396.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 402.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 378.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.861', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 196.21699999999998
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( athleteledsportsteam(C, E), teamplaysinleague(A, D) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else if ( teamplaysagainstteam(A, F), teamplaysinleague(A, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return 0.8417554924765613;  // std dev = 0.992, 61.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=60 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.14185106490048813;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(C, E), teamplaysagainstteam(E, A) )
%   | then return 0.7227551925129155;  // std dev = 0.074, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, A) )
%   | | then return 0.09135266795518789;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, H), athleteledsportsteam(I, H) )
%   | | | then return 0.5151153280467108;  // std dev = 1.215, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.6996292606202511;  // std dev = 1.404, 74.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=72 */
%   else if ( teamalsoknownas(J, A), teamalsoknownas(A, J) )
%   | then if ( teamplaysagainstteam(A, K) )
%   | | then return -0.12544463852839136;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.03202606109698873;  // std dev = 0.280, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( athleteplayssport(L, B) )
%   | | then return 0.008741135785635002;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.12544463852839177;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then return 0.5694831715109114;  // std dev = 0.263, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, F) )
%   | | | then return 0.4832647132059702;  // std dev = 0.961, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.5662465806995417;  // std dev = 0.044, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then return 0.03751728943378052;  // std dev = 0.647, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, I) )
%   | | | then return 0.5861591269232791;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7284424165492144;  // std dev = 0.201, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11314950321952363;  // std dev = 0.043, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then return 0.430643856036715;  // std dev = 0.331, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   | else return 0.1714621377758062;  // std dev = 1.005, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.10221943115788426;  // std dev = 0.038, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then if ( teamplaysinleague(A, D) )
%   | | | then return 0.3146536406904932;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.34157103127284494;  // std dev = 0.157, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( teamalsoknownas(F, A) )
%   | | | then return 0.3291693350998053;  // std dev = 0.049, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.28772804592025053;  // std dev = 1.971, 97.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=93 */
%   | else return 0.11765571905477575;  // std dev = 0.944, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.09340066449067919;  // std dev = 0.039, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E) )
%   | then return 0.27093391441739895;  // std dev = 0.029, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( teamalsoknownas(F, A), teamplaysinleague(A, G) )
%   | | then if ( athleteplaysforteam(C, H), teamplaysinleague(H, G) )
%   | | | then return 0.2535106940203071;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0035106940203071535;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysinleague(A, I), athleteledsportsteam(C, J) )
%   | | | then return 0.2247817285163955;  // std dev = 0.979, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.26829469546151613;  // std dev = 0.115, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( teamplaysagainstteam(K, A) )
%   | then return -0.08766589210026356;  // std dev = 0.026, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else if ( teamalsoknownas(A, L) )
%   | | then if ( teamplaysinleague(A, M), teamalsoknownas(L, A) )
%   | | | then return -0.033844514269102066;  // std dev = 0.675, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.08854145463783082;  // std dev = 0.015, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08413864839549492;  // std dev = 0.097, 71.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D), teamplaysagainstteam(E, A) )
%   | then return 0.20884637041754597;  // std dev = 0.056, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | else if ( teamplaysinleague(A, F), teamplaysagainstteam(A, G) )
%   | | then return 0.2526629221232841;  // std dev = 0.033, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.22107675099229024;  // std dev = 0.016, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( teamplaysagainstteam(H, A) )
%   | then if ( athleteplayssport(I, B) )
%   | | then return -0.2882618885516246;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07857190400394257;  // std dev = 0.012, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else if ( teamplaysinleague(A, J), teamalsoknownas(K, A) )
%   | | then if ( athleteplaysforteam(L, K) )
%   | | | then return 0.14687058716869622;  // std dev = 0.580, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08853625389027968;  // std dev = 0.015, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.0850148390210271;  // std dev = 0.296, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.06111932438547416;  // std dev = 0.693, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(D, A), athleteplayssport(D, E) )
%   | then if ( athleteledsportsteam(C, F), teamplaysagainstteam(A, F) )
%   | | then return 0.17471665243426493;  // std dev = 0.027, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.2650858734268187;  // std dev = 0.698, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamalsoknownas(G, A), athleteplaysforteam(H, G) )
%   | | then return 0.27264780210061723;  // std dev = 0.351, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( athleteplaysforteam(C, I) )
%   | | | then return 0.17167290949020325;  // std dev = 1.135, 97.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=95 */
%   | | | else return 0.26082651316907246;  // std dev = 0.421, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07401260826128188;  // std dev = 0.052, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A), athleteplaysinleague(C, E) )
%   | then if ( athleteplaysforteam(C, D), teamplaysinleague(D, E) )
%   | | then return 0.1521115037565718;  // std dev = 0.037, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else if ( athleteledsportsteam(F, D), teamplaysagainstteam(A, D) )
%   | | | then return 0.1983827614523284;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.16425170275580803;  // std dev = 0.078, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( teamalsoknownas(A, G), teamplaysinleague(A, H) )
%   | | then if ( athleteledsportsteam(C, I), teamplaysinleague(G, H) )
%   | | | then return 0.16290886848608652;  // std dev = 0.039, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.28025189423399866;  // std dev = 0.291, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteplaysinleague(C, J), teamplaysinleague(A, J) )
%   | | | then return 0.04490131134488051;  // std dev = 0.946, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.12556345678979752;  // std dev = 1.254, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   else return -0.06880342532776355;  // std dev = 0.041, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then if ( athleteplaysforteam(E, D) )
%   | | then if ( athleteplaysforteam(C, D), teamplaysinleague(A, F) )
%   | | | then return 0.1331064299108736;  // std dev = 0.030, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return 0.14708539428317322;  // std dev = 0.114, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.016115559423117695;  // std dev = 0.483, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( athleteledsportsteam(C, G) )
%   | | then if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | | then return 0.15530294398398437;  // std dev = 0.085, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.14334766261915313;  // std dev = 0.051, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return 0.36622047423689047;  // std dev = 0.324, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06456785123703283;  // std dev = 0.047, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.338', 'seconds']
Refined model CLL: -0.08382


******************************************
Best model found
******************************************
Results 

CLL : -0.084545 

AUC ROC : 0.993427 

AUC PR : 0.275851 

Precision : 0.164358 

Recall : 0.988636 

F1 : 0.281857 

Total Learning Time : 196.21699999999998 

Total Inference Time : 13.167564868927002 

Total revision time: 213.73030203437804
Best scored revision CLL: -0.08382


Results 

CLL : -0.084545 

AUC ROC : 0.993427 

AUC PR : 0.275851 

Precision : 0.164358 

Recall : 0.988636 

F1 : 0.281857 

Total Learning Time : 213.77255409812926 

Total Inference Time : 13.167564868927002 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.618
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 402.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 381.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 415.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 411.000 (wgt'ed) examples reached here.  /* #neg=280 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.461, 429.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 396.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 408.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 398.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 372.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 392.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.958', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 133.087
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(F, A) )
%   | | then return 0.8581489350995128;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | | else if ( athleteplaysforteam(C, E), teamalsoknownas(E, G) )
%   | | | then return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.8581489350995115;  // std dev = 2.38e-07, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.14185106490048838;  // std dev = 0.000, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else if ( teamplaysagainstteam(J, A), teamalsoknownas(K, A) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11621003925946208;  // std dev = 0.987, 39.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7220268409521193;  // std dev = 0.091, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else if ( teamalsoknownas(D, A), teamalsoknownas(A, D) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then return -0.12544463852839136;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.06339793746567227;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then return -0.12544463852839155;  // std dev = 0.000, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return -0.12719525548824726;  // std dev = 0.032, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.10125776553922194;  // std dev = 0.986, 37.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), athleteplaysforteam(E, A) )
%   | | then if ( athleteledsportsteam(D, F), teamplaysagainstteam(A, F) )
%   | | | then return 0.554735818138915;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.22140248480558147;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5563985346707376;  // std dev = 0.041, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else return -0.11231637819360675;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   else if ( athleteplayssport(G, B) )
%   | then return 0.5643851480108828;  // std dev = 0.099, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( teamplaysagainstteam(A, H), teamalsoknownas(H, I) )
%   | | then return 0.12656842952877176;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamalsoknownas(J, A) )
%   | | | then return -0.12489465009801426;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08927295868012643;  // std dev = 0.985, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.41952460730577273;  // std dev = 0.126, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( teamplaysagainstteam(A, F), teamplaysagainstteam(F, A) )
%   | | then return 0.10322036103460071;  // std dev = 0.842, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4405360618014494;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysinleague(A, G) )
%   | then return -0.10285756847643837;  // std dev = 0.238, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else if ( teamalsoknownas(H, A), teamplaysinleague(H, I) )
%   | | then return -0.0011552974431511369;  // std dev = 0.312, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.11615345718666885;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08024681133216922;  // std dev = 0.986, 35.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A), athleteledsportsteam(C, F) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return 0.3200056213059087;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamalsoknownas(G, E), teamalsoknownas(E, G) )
%   | | | then return -0.17794790905757696;  // std dev = 0.993, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3192916925902994;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( athleteledsportsteam(H, A), athleteplaysinleague(H, I) )
%   | | then if ( athleteledsportsteam(J, A), athleteplaysinleague(J, D) )
%   | | | then return 0.32281008982307874;  // std dev = 0.075, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.011987920567325042;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.32594226888149364;  // std dev = 0.180, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( teamalsoknownas(A, K), teamplaysagainstteam(A, L) )
%   | then if ( teamplaysinleague(A, M) )
%   | | then return -0.09258526096591099;  // std dev = 1.83e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0.1264317006697211;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.09522189839817774;  // std dev = 0.071, 242.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, A), athleteplaysforteam(C, A) )
%   | then if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then if ( teamalsoknownas(F, G), teamplaysinleague(A, D) )
%   | | | then return 0.08744945181618789;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2541943101862863;  // std dev = 0.000817, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2540274840934965;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2611700382945606;  // std dev = 0.238, 112.000 (wgt'ed) examples reached here.  /* #pos=112 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.08564182437367751;  // std dev = 0.147, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else if ( teamplaysagainstteam(A, I), teamalsoknownas(J, A) )
%   | | then return 0.1628702629684121;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return -0.1001405437307519;  // std dev = 0.052, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06831302443343486;  // std dev = 0.989, 40.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, A) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( athleteplaysforteam(E, C) )
%   | | then return 0.21496124051102833;  // std dev = 0.110, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( athleteplaysforteam(F, C) )
%   | | | then return -0.0859150076818705;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23322642819539932;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.0791385513728438;  // std dev = 0.038, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( athleteplayssport(G, B), athleteplaysinleague(G, H) )
%   | then return 0.2127712219851528;  // std dev = 0.151, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else if ( teamalsoknownas(A, I), teamplaysagainstteam(J, A) )
%   | | then if ( teamplaysagainstteam(A, J) )
%   | | | then return 0.2018342187052814;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08462082001178578;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return -0.08080604970127606;  // std dev = 0.200, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.06712542283717736;  // std dev = 0.991, 47.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), teamplaysagainstteam(A, E) )
%   | then return 0.18215933190031108;  // std dev = 0.156, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( teamplaysagainstteam(A, F), athleteplaysforteam(C, F) )
%   | | then return -0.16025548313929258;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamalsoknownas(A, G), teamplaysagainstteam(H, A) )
%   | | | then return -0.018840444865889382;  // std dev = 0.903, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.18102921884949674;  // std dev = 0.148, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   else if ( teamplaysagainstteam(A, I), teamalsoknownas(J, A) )
%   | then if ( athleteledsportsteam(K, I) )
%   | | then return -0.07433184539456432;  // std dev = 0.021, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.19900266821290033;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamalsoknownas(A, L) )
%   | | then return -0.07929723196895805;  // std dev = 0.074, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.07288498140901256;  // std dev = 0.000651, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | | else return -0.06042736636515007;  // std dev = 0.990, 44.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(C, E), teamplaysagainstteam(E, A) )
%   | then return 0.1558803748200736;  // std dev = 0.110, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( teamalsoknownas(A, F), teamplaysinleague(A, G) )
%   | | then if ( teamalsoknownas(F, A) )
%   | | | then return 0.1588993399425855;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.18127335940637807;  // std dev = 1.402, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( teamplaysagainstteam(H, A), teamplaysagainstteam(A, H) )
%   | | | then return -0.055955708750606376;  // std dev = 0.922, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13786716049063347;  // std dev = 0.998, 50.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=49 */
%   else if ( teamplaysagainstteam(A, I), athleteplaysforteam(J, A) )
%   | then return -0.07391090218766969;  // std dev = 0.379, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.07070894091624463;  // std dev = 0.233, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( teamplaysagainstteam(L, A), teamalsoknownas(M, A) )
%   | | | then return 0.006239690028751954;  // std dev = 0.785, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.06307292666695784;  // std dev = 0.998, 60.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.14177856134390615;  // std dev = 0.238, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else if ( teamalsoknownas(A, E), teamplaysagainstteam(A, F) )
%   | then if ( teamalsoknownas(G, F) )
%   | | then return -0.0668545656426655;  // std dev = 0.030, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( teamplaysagainstteam(F, A) )
%   | | | then return 0.19153387493478724;  // std dev = 0.625, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06714678833021903;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamalsoknownas(H, A) )
%   | | then return -0.07052434011361518;  // std dev = 0.093, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return -0.0654397179669984;  // std dev = 0.221, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | | else return -0.05288887868160174;  // std dev = 0.990, 50.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.303', 'seconds']
Refined model CLL: -0.086862


******************************************
Best model found
******************************************
Results 

CLL : -0.085917 

AUC ROC : 0.992959 

AUC PR : 0.263883 

Precision : 0.200766 

Recall : 0.984962 

F1 : 0.333546 

Total Learning Time : 133.087 

Total Inference Time : 20.4608154296875 

Total revision time: 157.9708243179321
Best scored revision CLL: -0.086862


Results 

CLL : -0.085917 

AUC ROC : 0.992959 

AUC PR : 0.263883 

Precision : 0.200766 

Recall : 0.984962 

F1 : 0.333546 

Total Learning Time : 158.01307638168333 

Total Inference Time : 20.4608154296875 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.647
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 403.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 386.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 377.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 400.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 376.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 401.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 392.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 412.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.463, 427.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.836', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 163.639
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else if ( athleteledsportsteam(F, A), teamplaysagainstteam(A, D) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8411997825571396;  // std dev = 0.991, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamalsoknownas(H, A), athleteledsportsteam(I, A) )
%   | then if ( teamplaysagainstteam(H, J), teamalsoknownas(J, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.14185106490048838;  // std dev = 0.000, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.72200186638195;  // std dev = 0.081, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | else if ( athleteplaysforteam(G, A), teamplaysagainstteam(A, H) )
%   | | | then return 0.3895481910408773;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7281350466055125;  // std dev = 0.108, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.42405077188448576;  // std dev = 1.023, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamalsoknownas(I, A), athleteledsportsteam(J, A) )
%   | then if ( teamplaysagainstteam(A, I) )
%   | | then return -0.13296661943735463;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.10951139965368212;  // std dev = 0.849, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then return 0.5598166408262621;  // std dev = 0.156, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | else if ( teamalsoknownas(F, A) )
%   | | then return 0.3277066123671935;  // std dev = 0.796, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.5960083788769599;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4907452944104678;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( teamalsoknownas(H, A), teamplaysagainstteam(I, A) )
%   | then if ( teamalsoknownas(J, I) )
%   | | then return -0.11834124983080864;  // std dev = 0.047, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( teamalsoknownas(I, H) )
%   | | | then return -0.11231637819360629;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.18250087423041114;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.11405044920848902;  // std dev = 0.332, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | | else return -0.09559764564796669;  // std dev = 0.116, 49.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.42488431818331635;  // std dev = 0.107, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else return -0.10175193245049234;  // std dev = 0.006, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( athleteplaysforteam(F, G), athleteledsportsteam(H, G) )
%   | | then if ( teamplaysinleague(A, I) )
%   | | | then return 0.4059624232013026;  // std dev = 0.996, 81.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=80 */
%   | | | else return 0.4640339991885319;  // std dev = 0.284, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.31047840697833184;  // std dev = 0.610, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( athleteplaysforteam(J, A), athleteledsportsteam(J, K) )
%   | | then if ( teamalsoknownas(L, A) )
%   | | | then return 0.11903101858743886;  // std dev = 0.789, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.10146345123095919;  // std dev = 0.002, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.10196618437012078;  // std dev = 0.011, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E) )
%   | then return 0.3291106097350106;  // std dev = 0.198, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | else if ( teamplaysinleague(A, F), teamalsoknownas(G, A) )
%   | | then if ( athleteplaysforteam(C, H), teamplaysinleague(H, F) )
%   | | | then return 0.32127848369792245;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07127848369792245;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0.3234477690265686;  // std dev = 0.010, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.2818943538495578;  // std dev = 0.983, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( teamplaysagainstteam(J, A), teamalsoknownas(K, J) )
%   | then return -0.10078377286458567;  // std dev = 0.044, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( athleteledsportsteam(L, A), athleteplaysforteam(L, A) )
%   | | then return 0.09462488414647566;  // std dev = 0.801, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.09311671084516467;  // std dev = 0.039, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | | else return -0.08630136498114943;  // std dev = 0.771, 53.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysagainstteam(A, F) )
%   | then if ( teamplaysinleague(F, D) )
%   | | then return 0.25782093067757555;  // std dev = 0.109, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( teamplaysagainstteam(E, F), athleteplaysforteam(G, F) )
%   | | | then return -0.23615426280593615;  // std dev = 0.985, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.25515443859947523;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.27024102560306945;  // std dev = 0.163, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( athleteplaysforteam(H, A), athleteplayssport(H, I) )
%   | then if ( teamplaysinleague(A, J), athleteplaysinleague(H, J) )
%   | | then return -0.09121988018672822;  // std dev = 0.037, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return -0.11195698813282536;  // std dev = 0.099, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( athleteledsportsteam(K, A), teamalsoknownas(L, A) )
%   | | then return 0.17928543462457672;  // std dev = 0.719, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.09157394441193673;  // std dev = 0.502, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | | else return -0.07633460897226096;  // std dev = 0.727, 70.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A), athleteplaysinleague(C, E) )
%   | then return 0.216291984169887;  // std dev = 0.197, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return 0.2085751595148496;  // std dev = 0.005, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.11774287822348725;  // std dev = 1.324, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.1601824181512546;  // std dev = 1.281, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( teamalsoknownas(I, A), athleteplaysforteam(J, I) )
%   | then if ( athleteledsportsteam(J, I) )
%   | | then return -0.09383668233127786;  // std dev = 0.066, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.046519363452594074;  // std dev = 0.784, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.07937028346486097;  // std dev = 0.109, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then return 0.18303326272179346;  // std dev = 0.185, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.19627210086070637;  // std dev = 0.060, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return 0.207311677838661;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08456875771075943;  // std dev = 1.190, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( athleteplaysforteam(H, A), teamalsoknownas(I, A) )
%   | then if ( teamplaysagainstteam(I, A) )
%   | | then return -0.09487172825760253;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( teamalsoknownas(I, J), teamplaysagainstteam(A, J) )
%   | | | then return -0.07181638729251162;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1269370842046365;  // std dev = 0.689, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysagainstteam(K, A) )
%   | | then return -0.07762774510856278;  // std dev = 0.045, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else return -0.06989283993527763;  // std dev = 0.076, 100.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( teamplaysinleague(A, E), teamplaysinleague(D, E) )
%   | then if ( teamalsoknownas(D, F) )
%   | | then return 0.1501062344496621;  // std dev = 0.006, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else if ( athleteplaysinleague(G, E) )
%   | | | then return -0.14828664841492928;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.16173092497545818;  // std dev = 0.016, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.1702663604297381;  // std dev = 0.116, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.19715966148077402;  // std dev = 0.096, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( teamplaysagainstteam(I, A), teamalsoknownas(I, J) )
%   | then if ( teamplaysinleague(J, K) )
%   | | then return -0.06471317309009259;  // std dev = 0.053, 117.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=3 */
%   | | else if ( athleteledsportsteam(L, A) )
%   | | | then return 0.1094439755594796;  // std dev = 0.739, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0014503141388184856;  // std dev = 0.230, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.07336568630243377;  // std dev = 0.058, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then if ( teamplaysinleague(D, E) )
%   | | | then return 0.1363817532857052;  // std dev = 0.105, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   | | | else return 0.09555348113097391;  // std dev = 0.980, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.15006243161633567;  // std dev = 0.062, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.284825555075102;  // std dev = 0.348, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamalsoknownas(F, A), athleteplaysforteam(G, F) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return -0.07305939201202043;  // std dev = 0.056, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.17534572554724112;  // std dev = 0.610, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.0650194315727694;  // std dev = 0.122, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.373', 'seconds']
Refined model CLL: -0.086522


******************************************
Best model found
******************************************
Results 

CLL : -0.086993 

AUC ROC : 0.99555 

AUC PR : 0.375266 

Precision : 0.160395 

Recall : 0.984848 

F1 : 0.275862 

Total Learning Time : 163.639 

Total Inference Time : 11.90156865119934 

Total revision time: 180.02127550697327
Best scored revision CLL: -0.086522


Results 

CLL : -0.086993 

AUC ROC : 0.99555 

AUC PR : 0.375266 

Precision : 0.160395 

Recall : 0.984848 

F1 : 0.275862 

Total Learning Time : 180.04777978515625 

Total Inference Time : 11.90156865119934 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.583
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 389.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 412.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 393.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 406.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.480, 371.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 396.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 404.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 399.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 403.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.931', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 116.464
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( athleteledsportsteam(C, E) )
%   | | then if ( teamplaysinleague(A, D), teamplaysagainstteam(A, F) )
%   | | | then return 0.8364098046647294;  // std dev = 0.989, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | | else return 0.8581489350995127;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.14185106490048802;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( teamalsoknownas(E, A), teamplaysinleague(E, D) )
%   | | then if ( athleteplaysforteam(C, E) )
%   | | | then return 0.7231122736389519;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2216567290677529;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( athleteledsportsteam(C, F) )
%   | | | then return 0.712442045387483;  // std dev = 0.997, 118.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=117 */
%   | | | else return 0.6032543525099577;  // std dev = 0.890, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.1254446385283919;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( athleteledsportsteam(C, E) )
%   | | then if ( teamplaysinleague(A, F) )
%   | | | then return 0.5619509911693596;  // std dev = 0.164, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | | | else return 0.5258520413781561;  // std dev = 0.984, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | else return 0.6098781362264883;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2564123687585864;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.11231637819360697;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.42788184893350734;  // std dev = 0.211, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return 0.4180005751027363;  // std dev = 0.005, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.31762225114612314;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.3433507991536074;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( teamplaysagainstteam(I, A) )
%   | then return -0.10468081499319944;  // std dev = 0.330, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | else if ( teamalsoknownas(A, J), teamalsoknownas(J, A) )
%   | | then if ( teamplaysinleague(A, K) )
%   | | | then return -0.02082295580459856;  // std dev = 0.766, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.10159632948783616;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.10159632948783624;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.07915928124249243;  // std dev = 0.796, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A), athleteplayssport(D, E) )
%   | then if ( athleteplaysforteam(C, A) )
%   | | then return 0.3225882746876701;  // std dev = 0.009, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( athleteledsportsteam(D, A) )
%   | | | then return -0.05511191959809756;  // std dev = 1.143, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3433376047684968;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return 0.32126763093651195;  // std dev = 0.016, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else if ( teamalsoknownas(A, H), teamplaysinleague(A, I) )
%   | | | then return 0.38751908187013273;  // std dev = 0.345, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.33754490969564255;  // std dev = 0.735, 51.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=50 */
%   else return -0.09308387913912876;  // std dev = 0.025, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.2639829635746726;  // std dev = 0.248, 125.000 (wgt'ed) examples reached here.  /* #pos=125 */
%   else if ( athleteledsportsteam(E, A), athleteplaysforteam(E, A) )
%   | then if ( teamalsoknownas(A, F) )
%   | | then if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | | then return -0.08491417829655003;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.292762636732749;  // std dev = 0.711, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09199072161849824;  // std dev = 0.245, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then if ( athleteplayssport(I, B) )
%   | | | then return 0.33644533152265793;  // std dev = 0.323, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.08686154845907841;  // std dev = 0.022, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.0641199714360787;  // std dev = 1.077, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.08548105050387314;  // std dev = 0.011, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), athleteplaysforteam(E, A) )
%   | then if ( athleteledsportsteam(E, A) )
%   | | then return 0.2097759761453814;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( athleteplaysforteam(C, F), teamalsoknownas(D, G) )
%   | | | then return 0.20697903855222116;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2109956622739326;  // std dev = 0.511, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( athleteledsportsteam(C, H) )
%   | | then return 0.2169314447399369;  // std dev = 0.222, 112.000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | | else if ( teamalsoknownas(A, I), athleteplaysinleague(C, J) )
%   | | | then return 0.20427927128864215;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.45310765042675205;  // std dev = 0.280, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0783501040396017;  // std dev = 0.055, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(C, E) )
%   | then if ( athleteledsportsteam(C, F), teamplaysagainstteam(G, A) )
%   | | then return 0.18214596030798658;  // std dev = 0.204, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( athleteledsportsteam(C, H) )
%   | | | then return 0.09457962005623026;  // std dev = 1.659, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | | else return -0.14387550790391956;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteledsportsteam(C, I) )
%   | | then return 0.1846689231780009;  // std dev = 0.033, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.2943533591492075;  // std dev = 0.329, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.0731504963189421;  // std dev = 0.038, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, F) )
%   | then if ( athleteplaysforteam(C, A) )
%   | | then return 0.1514304607996637;  // std dev = 0.002, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( teamalsoknownas(G, A) )
%   | | | then return 0.2233427224294324;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11354149176786614;  // std dev = 1.463, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( teamplaysinleague(A, H), teamplaysinleague(D, H) )
%   | | then return 0.1580601599888772;  // std dev = 0.064, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | | then return 0.06390831915667385;  // std dev = 0.953, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.16074176343211294;  // std dev = 0.071, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   else if ( teamalsoknownas(A, K), teamplaysinleague(A, L) )
%   | then return -0.04952345486902652;  // std dev = 0.077, 51.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | else if ( teamalsoknownas(A, M), athleteplayssport(N, B) )
%   | | then return -0.29854653101891043;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.06603560053817388;  // std dev = 0.053, 220.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysforteam(C, E) )
%   | | then if ( teamplaysagainstteam(F, A), athleteledsportsteam(G, F) )
%   | | | then return 0.12228292958050785;  // std dev = 1.006, 51.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=50 */
%   | | | else return 0.15140650938402705;  // std dev = 0.237, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07757140385882388;  // std dev = 0.674, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteledsportsteam(C, H) )
%   | | then return 0.13819429054016247;  // std dev = 0.026, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.240888154246146;  // std dev = 0.255, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06452975628335271;  // std dev = 0.033, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.918', 'seconds']
Refined model CLL: -0.08497


******************************************
Best model found
******************************************
Results 

CLL : -0.086078 

AUC ROC : 0.989817 

AUC PR : 0.256078 

Precision : 0.131951 

Recall : 0.988636 

F1 : 0.232828 

Total Learning Time : 116.464 

Total Inference Time : 10.915143728256226 

Total revision time: 131.77510220718383
Best scored revision CLL: -0.08497


Results 

CLL : -0.086078 

AUC ROC : 0.989817 

AUC PR : 0.256078 

Precision : 0.131951 

Recall : 0.988636 

F1 : 0.232828 

Total Learning Time : 131.80160648536682 

Total Inference Time : 10.915143728256226 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.567
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.463, 421.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.464, 418.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 378.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 397.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 388.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 384.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 390.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 395.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 402.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 373.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.904', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 236.641
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, D) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( athleteledsportsteam(F, A), teamplaysagainstteam(A, E) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8422759192264967;  // std dev = 0.992, 63.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=62 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.14185106490048838;  // std dev = 0.000, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else if ( teamplaysagainstteam(A, J), teamalsoknownas(J, K) )
%   | | then if ( teamalsoknownas(K, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.12185106490048771;  // std dev = 0.140, 50.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteplayssport(E, F) )
%   | then if ( athleteplaysforteam(C, A) )
%   | | then return 0.720912667626868;  // std dev = 0.038, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( athleteledsportsteam(E, G), athleteplaysinleague(E, D) )
%   | | | then return -0.029728466626397956;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.7392784541915031;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.7246371313786967;  // std dev = 0.122, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | else if ( teamalsoknownas(I, A), teamplaysinleague(I, J) )
%   | | | then return 0.5559992301948785;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.7222827987034747;  // std dev = 0.005, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( teamplaysinleague(A, K) )
%   | then return -0.12544463852839166;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | else if ( teamalsoknownas(A, L), teamplaysagainstteam(M, A) )
%   | | then return 0.019441766934053455;  // std dev = 0.892, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.1127175025001069;  // std dev = 0.126, 62.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysforteam(F, A) )
%   | then if ( athleteplaysinleague(G, E), athleteplayssport(G, B) )
%   | | then return 0.5586993529860478;  // std dev = 0.169, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( athleteledsportsteam(F, A) )
%   | | | then return 0.5912039704951771;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.28499214177565435;  // std dev = 1.145, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.5633972617198958;  // std dev = 0.178, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.11231637819360654;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else if ( teamalsoknownas(A, I), teamalsoknownas(I, J) )
%   | | then if ( teamalsoknownas(I, A) )
%   | | | then return 0.18178372118730832;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12370142176157577;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.12994185095163044;  // std dev = 0.095, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08930516305540667;  // std dev = 0.987, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteledsportsteam(C, E) )
%   | then if ( athleteplaysforteam(F, A) )
%   | | then return 0.42295331351039456;  // std dev = 0.119, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else if ( athleteledsportsteam(G, A), teamalsoknownas(E, H) )
%   | | | then return 0.09737854263076577;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4143082590019609;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4291123089421544;  // std dev = 0.274, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.10159632948783653;  // std dev = 0.000, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else if ( teamalsoknownas(J, A), teamplaysagainstteam(A, K) )
%   | | then return 0.06857019277786713;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamalsoknownas(A, L) )
%   | | | then return -0.12507848883701506;  // std dev = 0.057, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08652442140093858;  // std dev = 0.991, 49.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E) )
%   | then return 0.3295336893513872;  // std dev = 0.251, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else if ( teamplaysagainstteam(F, A), teamalsoknownas(A, G) )
%   | | then return 0.08470956638868393;  // std dev = 0.811, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.32545691936967414;  // std dev = 0.135, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.28521722061560106;  // std dev = 0.989, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.09269127618926058;  // std dev = 9.06e-08, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | else if ( teamalsoknownas(J, A), teamalsoknownas(A, J) )
%   | | then return -0.007318479894944167;  // std dev = 0.302, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.10313824544473527;  // std dev = 0.053, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07024918149039855;  // std dev = 0.986, 35.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then if ( teamplaysagainstteam(F, A) )
%   | | then return 0.26534204650959586;  // std dev = 0.250, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | else if ( teamplaysinleague(G, C), teamplaysinleague(G, E) )
%   | | | then return 0.08379904017642788;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.254706670370432;  // std dev = 0.055, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839678;  // std dev = 7.74e-08, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   else if ( athleteplayssport(H, B), athleteplaysinleague(H, I) )
%   | then return 0.2656167194987223;  // std dev = 0.084, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( teamplaysagainstteam(A, J), teamalsoknownas(J, K) )
%   | | then return 0.20771821758729472;  // std dev = 0.717, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(A, L) )
%   | | | then return -0.11708759437357151;  // std dev = 0.041, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06673744612681459;  // std dev = 0.986, 41.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.2127493850683824;  // std dev = 0.180, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(C, G) )
%   | | | then return -0.13044333969840174;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21836065000301302;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21985432477440014;  // std dev = 0.147, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.07877675473109147;  // std dev = 7.45e-08, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else if ( teamalsoknownas(A, I), teamplaysinleague(I, J) )
%   | | then if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.14312146207804624;  // std dev = 0.760, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09340770884390995;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.09410358289202886;  // std dev = 0.076, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.05233110346659837;  // std dev = 0.983, 28.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.18188979240562694;  // std dev = 0.204, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( athleteplaysforteam(E, A) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | then if ( teamalsoknownas(F, A), teamalsoknownas(G, F) )
%   | | | then return -0.16199631278354956;  // std dev = 0.486, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08776907201151038;  // std dev = 0.649, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.06503170747533069;  // std dev = 0.239, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
%   | else if ( teamalsoknownas(A, H), teamplaysagainstteam(I, A) )
%   | | then if ( teamalsoknownas(H, A), teamplaysagainstteam(A, I) )
%   | | | then return 0.2967964407716615;  // std dev = 0.573, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.06574381556011757;  // std dev = 0.246, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( teamplaysinleague(A, J), teamplaysagainstteam(K, A) )
%   | | | then return -0.043986180491926104;  // std dev = 0.413, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return -0.0655956933692205;  // std dev = 1.053, 113.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysinleague(A, F) )
%   | then return 0.15605837125884178;  // std dev = 0.174, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( athleteplaysforteam(G, A) )
%   | | then return -0.07996379711390023;  // std dev = 0.596, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.18353634463270163;  // std dev = 0.103, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.11491048241775964;  // std dev = 0.984, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.06852483561243675;  // std dev = 0.033, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else if ( teamalsoknownas(J, A), teamplaysagainstteam(K, A) )
%   | | then return 0.02489547741311755;  // std dev = 0.754, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamalsoknownas(A, L), teamalsoknownas(L, M) )
%   | | | then return -0.09618990325198128;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.05551842457306739;  // std dev = 0.989, 45.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.13462179209487612;  // std dev = 0.130, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then if ( athleteplayssport(F, B), teamplaysinleague(E, D) )
%   | | | then return 0.15491290049661;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.22390787499966738;  // std dev = 1.348, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.16118063487864906;  // std dev = 0.095, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.06084770952499483;  // std dev = 1.888, 51.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   else if ( teamplaysagainstteam(A, H), teamalsoknownas(I, A) )
%   | then if ( teamalsoknownas(J, H) )
%   | | then return -0.06246272862360003;  // std dev = 0.031, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.08708590393780792;  // std dev = 0.731, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(K, A) )
%   | | then return -0.06741877606767946;  // std dev = 0.130, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else return -0.05966894863709173;  // std dev = 0.092, 117.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.364', 'seconds']
Refined model CLL: -0.084629


******************************************
Best model found
******************************************
Results 

CLL : -0.083842 

AUC ROC : 0.994025 

AUC PR : 0.355575 

Precision : 0.201229 

Recall : 0.984962 

F1 : 0.334184 

Total Learning Time : 236.641 

Total Inference Time : 27.818254947662354 

Total revision time: 268.82916336822507
Best scored revision CLL: -0.084629


Results 

CLL : -0.083842 

AUC ROC : 0.994025 

AUC PR : 0.355575 

Precision : 0.201229 

Recall : 0.984962 

F1 : 0.334184 

Total Learning Time : 268.85566764640805 

Total Inference Time : 27.818254947662354 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.606
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 383.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 373.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 410.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.480, 370.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 375.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 391.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.480, 371.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 380.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 372.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 388.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.824', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 208.532
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(A, F), teamplaysagainstteam(E, F) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | | then return 0.7528857772047755;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamalsoknownas(I, A), teamplaysinleague(A, J) )
%   | then if ( athleteledsportsteam(K, A), teamalsoknownas(L, I) )
%   | | then if ( teamplaysagainstteam(I, L) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1418510649004877;  // std dev = 3.65e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( teamplaysinleague(A, M) )
%   | | then return -0.14185106490048827;  // std dev = 0.000, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | | else return -0.1259780490274718;  // std dev = 0.125, 63.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then if ( teamplaysagainstteam(A, F), teamplaysinleague(F, D) )
%   | | then if ( athleteplaysforteam(C, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0.5766162693538114;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.7301174117291936;  // std dev = 0.082, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0.7258977326127711;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6528067455442876;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( teamplaysagainstteam(I, A), teamalsoknownas(J, I) )
%   | then return -0.12618859218766598;  // std dev = 0.058, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( athleteledsportsteam(K, A), athleteplaysforteam(K, A) )
%   | | then return -0.011220050939206666;  // std dev = 0.319, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return -0.12018029583287677;  // std dev = 0.078, 165.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D), teamplaysinleague(A, E) )
%   | then if ( teamalsoknownas(A, F), athleteledsportsteam(G, F) )
%   | | then return 0.3623545568326699;  // std dev = 0.863, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5619027338069235;  // std dev = 0.136, 104.000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else if ( athleteplaysforteam(C, H) )
%   | | then if ( athleteledsportsteam(C, H), teamalsoknownas(H, I) )
%   | | | then return 0.3963686450017636;  // std dev = 1.588, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.6087389072978714;  // std dev = 0.296, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.1258099914581776;  // std dev = 0.584, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( athleteplaysforteam(J, A), athleteplaysinleague(J, K) )
%   | then if ( athleteplayssport(J, L) )
%   | | then return -0.11234908974518121;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( athleteledsportsteam(M, A), teamplaysinleague(A, K) )
%   | | | then return -0.112242226355454;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.18575856697328066;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11365552373876107;  // std dev = 0.043, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(A, E) )
%   | then if ( athleteplaysinleague(C, E) )
%   | | then return 0.42234926674859097;  // std dev = 0.113, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else if ( teamplaysinleague(D, E), teamplaysagainstteam(A, F) )
%   | | | then return 0.0800080867362198;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.40843012343988727;  // std dev = 0.612, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else if ( athleteledsportsteam(C, G) )
%   | | then return 0.4501369353496005;  // std dev = 0.109, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.5535340616309663;  // std dev = 0.300, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( athleteplaysforteam(H, A), teamalsoknownas(I, A) )
%   | then if ( athleteledsportsteam(H, A), athleteplaysinleague(H, J) )
%   | | then return 0.12573604538395394;  // std dev = 0.787, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.10153450842578483;  // std dev = 0.000476, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.1025707670539798;  // std dev = 0.048, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.33076830116225386;  // std dev = 0.228, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | then return -0.09692412080521849;  // std dev = 0.183, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( teamalsoknownas(G, A), athleteplaysforteam(H, A) )
%   | | then if ( teamalsoknownas(I, G), teamplaysagainstteam(A, I) )
%   | | | then return 0.16047030818614402;  // std dev = 0.772, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0929007026980327;  // std dev = 0.000438, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamplaysagainstteam(A, J), athleteplaysforteam(K, A) )
%   | | | then return -0.1056386726276712;  // std dev = 0.217, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.0882850976265588;  // std dev = 0.816, 123.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(A, E) )
%   | then if ( athleteplaysinleague(F, E), athleteplaysforteam(F, D) )
%   | | then return 0.2566157831562435;  // std dev = 0.097, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | | else if ( teamalsoknownas(A, G), teamplaysinleague(G, E) )
%   | | | then return 0.2572960358220079;  // std dev = 0.064, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.13972351645165743;  // std dev = 1.638, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else if ( athleteledsportsteam(C, H) )
%   | | then return 0.2729961520173613;  // std dev = 0.087, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.3735774961044798;  // std dev = 0.402, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamalsoknownas(I, A), athleteplaysforteam(J, I) )
%   | then if ( teamplaysagainstteam(A, I) )
%   | | then return -0.0896459743768271;  // std dev = 0.029, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.195537246140705;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.08604563009347621;  // std dev = 0.065, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then if ( athleteplaysinleague(C, E), athleteledsportsteam(F, A) )
%   | | then if ( athleteplaysforteam(F, D) )
%   | | | then return 0.2084595194068897;  // std dev = 0.047, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.0059916355074680185;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.221431040474804;  // std dev = 0.158, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | else if ( athleteledsportsteam(C, D), teamalsoknownas(D, G) )
%   | | then return 0.2325943898201895;  // std dev = 0.024, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.04521621736492554;  // std dev = 0.442, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( athleteplayssport(H, B), athleteplaysforteam(I, A) )
%   | then return 0.22280527880414833;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteledsportsteam(J, A), athleteplaysinleague(J, K) )
%   | | then if ( athleteplayssport(J, L) )
%   | | | then return -0.0797955115105615;  // std dev = 0.037, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0.1883652899660185;  // std dev = 0.653, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.08684151457406003;  // std dev = 0.078, 182.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then if ( teamalsoknownas(D, E) )
%   | | then return 0.180254839012733;  // std dev = 0.105, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else if ( teamalsoknownas(E, F) )
%   | | | then return 0.19111755215438908;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.5600741755380771;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.18897609356946465;  // std dev = 0.098, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( teamplaysinleague(A, G), teamalsoknownas(A, H) )
%   | then if ( teamplaysagainstteam(I, A), teamalsoknownas(J, I) )
%   | | then return -0.07595205130779277;  // std dev = 0.067, 28.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   | | else if ( athleteplayssport(K, B) )
%   | | | then return -0.4732048003130624;  // std dev = 0.387, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07726569614658307;  // std dev = 0.040, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( athleteplaysforteam(L, A), athleteplayssport(M, B) )
%   | | then return 0.02799496156969311;  // std dev = 0.420, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.07160513052341352;  // std dev = 0.096, 194.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E) )
%   | then return 0.16190171575837886;  // std dev = 0.080, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( athleteplaysforteam(C, F), athleteplaysforteam(G, A) )
%   | | then if ( teamplaysinleague(A, D) )
%   | | | then return 0.1301756998564137;  // std dev = 0.993, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | | else return -0.03511191164858743;  // std dev = 1.051, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.16723713267704723;  // std dev = 0.117, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   else if ( athleteplaysforteam(H, A), teamalsoknownas(I, A) )
%   | then if ( athleteledsportsteam(H, A), teamalsoknownas(J, I) )
%   | | then return 0.11959235677906033;  // std dev = 0.667, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.07825429948510312;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamalsoknownas(K, A), teamplaysinleague(K, L) )
%   | | then return -0.07833271204684299;  // std dev = 0.042, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.06849854231392342;  // std dev = 0.036, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | | else return -0.06532245562867361;  // std dev = 0.821, 41.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.14279417247759024;  // std dev = 0.204, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(G, F) )
%   | | then if ( teamalsoknownas(F, H), teamalsoknownas(G, H) )
%   | | | then return -0.08209140370511996;  // std dev = 0.331, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.064919959377791;  // std dev = 0.034, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( athleteplaysforteam(I, A), athleteledsportsteam(I, A) )
%   | | | then return -0.04226310148933513;  // std dev = 0.827, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.06606239561802854;  // std dev = 0.100, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( teamplaysagainstteam(J, A) )
%   | | then return -0.06645073168741554;  // std dev = 0.019, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( teamalsoknownas(K, A) )
%   | | | then return -0.06466848320335421;  // std dev = 0.000732, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.03721572418909116;  // std dev = 0.717, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.312', 'seconds']
Refined model CLL: -0.084197


******************************************
Best model found
******************************************
Results 

CLL : -0.084577 

AUC ROC : 0.995226 

AUC PR : 0.323143 

Precision : 0.195783 

Recall : 0.984848 

F1 : 0.326633 

Total Learning Time : 208.532 

Total Inference Time : 13.169623136520386 

Total revision time: 226.08130167770386
Best scored revision CLL: -0.084197


Results 

CLL : -0.084577 

AUC ROC : 0.995226 

AUC PR : 0.323143 

Precision : 0.195783 

Recall : 0.984848 

F1 : 0.326633 

Total Learning Time : 226.15622876930237 

Total Inference Time : 13.169623136520386 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.544
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 411.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.463, 428.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 404.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.482, 362.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 406.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 394.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 410.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.480, 371.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 417.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 418.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.948', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 122.659
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( athleteledsportsteam(C, E) )
%   | | then return 0.8581489350995105;  // std dev = 7.15e-07, 125.000 (wgt'ed) examples reached here.  /* #pos=125 */
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.14185106490048818;  // std dev = 0.000, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then return 0.7194734122109541;  // std dev = 1.88e-07, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, F) )
%   | | | then return 0.6361400788776216;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.7194734122109545;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.7573292249457098;  // std dev = 0.110, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.1254446385283919;  // std dev = 0.000, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.5571679358734231;  // std dev = 0.065, 125.000 (wgt'ed) examples reached here.  /* #pos=125 */
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return 0.5863230564532181;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.21266668209774822;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( athleteplayssport(G, B) )
%   | then return 0.16474717683462703;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.11231637819360689;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then return 0.41707553200511005;  // std dev = 1.98e-07, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, F) )
%   | | | then return 0.3541315933116145;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.41707553200511055;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0.45210059805553043;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5823848003014109;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.1015963294878366;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3267408351150567;  // std dev = 0.267, 133.000 (wgt'ed) examples reached here.  /* #pos=133 */
%   else return -0.09269127618926044;  // std dev = 1.30e-07, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.2572258419279308;  // std dev = 0.127, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | then if ( athleteplayssport(F, G) )
%   | | then if ( athleteplaysforteam(H, A), athleteplaysinleague(H, E) )
%   | | | then return -0.08518475138839678;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.09255739935762693;  // std dev = 0.476, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return -0.08518475138839678;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.12448795892248579;  // std dev = 0.491, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( teamplaysinleague(A, J), teamalsoknownas(A, K) )
%   | | then if ( teamalsoknownas(L, A), teamalsoknownas(K, L) )
%   | | | then return 0.0370798241258139;  // std dev = 0.424, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.08518475138839678;  // std dev = 5.27e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07645156742309601;  // std dev = 0.485, 56.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then if ( athleteplayssport(D, B) )
%   | | then return 0.20924383305875607;  // std dev = 0.035, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else if ( teamalsoknownas(C, G), teamplaysagainstteam(A, C) )
%   | | | then return -0.1305772932950416;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21537974043250768;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( teamalsoknownas(C, H) )
%   | | then return -0.07865973089384437;  // std dev = 0.003, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else return -0.09186422659308595;  // std dev = 0.077, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( athleteplayssport(I, B) )
%   | then if ( teamplaysagainstteam(J, A), teamalsoknownas(K, A) )
%   | | then return 0.031025483183195958;  // std dev = 0.867, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( athleteledsportsteam(I, L) )
%   | | | then return 0.1958976687024555;  // std dev = 0.972, 67.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=66 */
%   | | | else return 0.29118565901387666;  // std dev = 0.210, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07879526490862271;  // std dev = 0.009, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.17940930879424632;  // std dev = 0.161, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else if ( teamplaysagainstteam(E, A), teamalsoknownas(E, F) )
%   | | then if ( teamplaysagainstteam(A, E), teamplaysagainstteam(E, F) )
%   | | | then return 0.21754520350799522;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20015397135321072;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteledsportsteam(C, G) )
%   | | | then return 0.11094450706983648;  // std dev = 1.340, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0.22956299347078057;  // std dev = 0.154, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07312899578592764;  // std dev = 0.017, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return 0.1547850812209599;  // std dev = 0.071, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else if ( athleteplaysforteam(C, E), teamalsoknownas(E, G) )
%   | | | then return 0.06729195943278292;  // std dev = 1.348, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.1567711970497642;  // std dev = 0.028, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( teamalsoknownas(A, H), athleteplaysforteam(I, H) )
%   | | then return -0.15069704846987933;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1753187067767097;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysagainstteam(J, A), teamalsoknownas(K, J) )
%   | then if ( athleteplayssport(L, B) )
%   | | then return -0.5654636197852684;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06817899383771082;  // std dev = 0.005, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( teamplaysinleague(A, M), teamalsoknownas(A, N) )
%   | | then return -0.053443544540157366;  // std dev = 0.072, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else return -0.0655959492885126;  // std dev = 0.033, 129.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then return 0.13498196796571532;  // std dev = 0.046, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, F) )
%   | | then return 0.16444333839751168;  // std dev = 0.013, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.14279667089606277;  // std dev = 0.031, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( teamalsoknownas(G, A), teamplaysagainstteam(G, H) )
%   | then if ( athleteplaysforteam(I, A), athleteledsportsteam(J, H) )
%   | | then return -0.06421306000156304;  // std dev = 0.000325, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.08226700472935992;  // std dev = 0.371, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( teamplaysinleague(A, K), athleteplaysforteam(L, A) )
%   | | then if ( athleteplaysinleague(M, K) )
%   | | | then return -0.06789029183130782;  // std dev = 0.362, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | | else return -0.1207567613707563;  // std dev = 0.697, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( teamplaysagainstteam(N, A), teamalsoknownas(A, P) )
%   | | | then return -0.02218295343569452;  // std dev = 0.268, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.06316185684085347;  // std dev = 0.781, 141.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.741', 'seconds']
Refined model CLL: -0.086506


******************************************
Best model found
******************************************
Results 

CLL : -0.087701 

AUC ROC : 0.992909 

AUC PR : 0.278119 

Precision : 0.143328 

Recall : 0.988636 

F1 : 0.25036 

Total Learning Time : 122.659 

Total Inference Time : 19.246631622314453 

Total revision time: 146.173276594162
Best scored revision CLL: -0.086506


Results 

CLL : -0.087701 

AUC ROC : 0.992909 

AUC PR : 0.278119 

Precision : 0.143328 

Recall : 0.988636 

F1 : 0.25036 

Total Learning Time : 146.2482036857605 

Total Inference Time : 19.246631622314453 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.494
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 414.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 406.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 398.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 393.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 372.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 371.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 372.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 406.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 366.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.481, 362.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.927', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 220.151
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | then if ( teamplaysagainstteam(F, A), teamalsoknownas(F, E) )
%   | | then if ( athleteledsportsteam(C, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.858148935099512;  // std dev = 1.69e-07, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return 0.8581489350995125;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( teamplaysinleague(A, G) )
%   | then return -0.14185106490048846;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | else if ( teamalsoknownas(A, H), teamplaysagainstteam(A, I) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.11685106490048772;  // std dev = 0.987, 40.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | then if ( athleteplaysforteam(C, E), teamplaysinleague(A, D) )
%   | | then return 0.7226326366281935;  // std dev = 0.112, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(G, E) )
%   | | | then return 0.41178110451864663;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109543;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.1254446385283916;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(J, A) )
%   | | then return 0.18783007904770663;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.10934520062713461;  // std dev = 0.991, 53.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( athleteplaysforteam(F, A), athleteplayssport(F, B) )
%   | | then if ( teamplaysinleague(A, D) )
%   | | | then return 0.5547595697910508;  // std dev = 0.002, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.2961660956345978;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5616734064522697;  // std dev = 0.229, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0.5677219354498921;  // std dev = 0.068, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.11130022992038235;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.11231637819360664;  // std dev = 0.000, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | else if ( teamplaysagainstteam(A, I), teamalsoknownas(J, A) )
%   | | then return 0.17436397437082904;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.11502594537913978;  // std dev = 0.034, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.09322398832781559;  // std dev = 0.988, 43.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E), teamplaysinleague(A, F) )
%   | then if ( teamalsoknownas(E, G) )
%   | | then return 0.43579339600148453;  // std dev = 0.193, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.20013969793823472;  // std dev = 0.756, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(H, A), teamalsoknownas(H, I) )
%   | | then return 0.4341298639407275;  // std dev = 0.277, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else if ( teamplaysagainstteam(J, A), teamalsoknownas(K, J) )
%   | | | then return 0.3330034375630582;  // std dev = 0.958, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.4158763986551644;  // std dev = 0.003, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   else if ( teamplaysagainstteam(A, L), teamalsoknownas(A, M) )
%   | then if ( teamplaysinleague(A, N) )
%   | | then return -0.10159632948783623;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.17926541071738847;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamalsoknownas(P, A) )
%   | | then return -0.11132274194060363;  // std dev = 0.117, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.09819043853881171;  // std dev = 0.067, 222.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.3276326208027752;  // std dev = 0.319, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( teamplaysagainstteam(A, F), athleteplaysforteam(G, F) )
%   | | then return 0.005419046383273396;  // std dev = 0.848, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3488140836107413;  // std dev = 0.141, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.09276698864439445;  // std dev = 0.005, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else if ( teamplaysagainstteam(I, A), teamplaysagainstteam(A, I) )
%   | | then if ( teamalsoknownas(I, J), teamplaysinleague(J, K) )
%   | | | then return 0.19136091015104048;  // std dev = 0.696, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10847414913163173;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamalsoknownas(A, L) )
%   | | | then return -0.10791357414210018;  // std dev = 0.081, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07345720402694197;  // std dev = 0.988, 40.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.2601204413409406;  // std dev = 0.288, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then return 0.3629555098657673;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.050341015967051386;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamplaysinleague(A, G) )
%   | then return -0.08525489750001207;  // std dev = 0.005, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else if ( teamalsoknownas(H, A), teamplaysagainstteam(A, I) )
%   | | then return 0.00671637995617512;  // std dev = 0.834, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamalsoknownas(A, J) )
%   | | | then return -0.09698123332584702;  // std dev = 0.073, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06851209284829304;  // std dev = 0.988, 46.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamplaysinleague(E, F) )
%   | then return 0.22083908974207572;  // std dev = 0.265, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then if ( athleteplaysforteam(C, I), teamplaysinleague(I, G) )
%   | | | then return 0.2070294196705121;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12847102232914162;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2086744973993631;  // std dev = 0.100, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.07883696803762974;  // std dev = 0.005, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else if ( teamalsoknownas(A, K), teamplaysagainstteam(A, L) )
%   | | then return -0.016515215642287463;  // std dev = 0.840, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysagainstteam(M, A), teamalsoknownas(N, A) )
%   | | | then return -0.12885213872653004;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0686848238555134;  // std dev = 0.991, 62.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A), teamplaysagainstteam(F, A) )
%   | then if ( teamalsoknownas(G, F) )
%   | | then return 0.1934099028262526;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.3167059076968544;  // std dev = 0.978, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.18322497927203424;  // std dev = 0.230, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.1849942800096157;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1294007946826282;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.07331497575283251;  // std dev = 0.004, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | else if ( teamalsoknownas(K, A), teamplaysinleague(K, L) )
%   | | then if ( teamalsoknownas(A, K) )
%   | | | then return 0.03673529493966323;  // std dev = 0.743, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.08006994192598678;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06850511449917283;  // std dev = 0.123, 66.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D), teamplaysagainstteam(D, A) )
%   | then return 0.15780753712922585;  // std dev = 0.177, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( teamplaysagainstteam(A, E), teamplaysagainstteam(E, A) )
%   | | then if ( athleteledsportsteam(F, E), athleteplayssport(F, G) )
%   | | | then return -0.5969163109266391;  // std dev = 0.953, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07715855201205644;  // std dev = 0.935, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( teamalsoknownas(A, H) )
%   | | | then return 0.1606694297260708;  // std dev = 0.097, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.11137257573805089;  // std dev = 1.388, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.06851820256157118;  // std dev = 0.003, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else if ( teamalsoknownas(A, J), teamplaysagainstteam(K, A) )
%   | | then return 0.04131797564616298;  // std dev = 0.777, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamalsoknownas(A, L) )
%   | | | then return -0.07736388906999367;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.056483370841399656;  // std dev = 0.990, 55.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.14120122014861275;  // std dev = 0.304, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( teamplaysinleague(A, F), teamplaysagainstteam(G, A) )
%   | | then return -0.07737765135819749;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.16939805563610064;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.06426234228386067;  // std dev = 0.003, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( teamplaysagainstteam(A, I), teamalsoknownas(J, A) )
%   | | then return 0.0031881045338929825;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, K), teamalsoknownas(K, L) )
%   | | | then return -0.10935800186513502;  // std dev = 0.078, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.052907284590388265;  // std dev = 0.990, 54.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.249', 'seconds']
Refined model CLL: -0.082547


******************************************
Best model found
******************************************
Results 

CLL : -0.081736 

AUC ROC : 0.993538 

AUC PR : 0.366687 

Precision : 0.205008 

Recall : 0.984962 

F1 : 0.339378 

Total Learning Time : 220.151 

Total Inference Time : 12.440324544906616 

Total revision time: 236.87261297225953
Best scored revision CLL: -0.082547


Results 

CLL : -0.081736 

AUC ROC : 0.993538 

AUC PR : 0.366687 

Precision : 0.205008 

Recall : 0.984962 

F1 : 0.339378 

Total Learning Time : 236.94754006385804 

Total Inference Time : 12.440324544906616 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.543
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 389.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 391.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.480, 371.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 396.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 397.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 400.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.483, 358.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 396.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 399.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 394.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.894', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 147.02100000000002
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.8581489350995103;  // std dev = 7.73e-07, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamalsoknownas(F, A), teamplaysinleague(A, G) )
%   | | then if ( teamplaysinleague(F, G) )
%   | | | then return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.04185106490048778;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return -0.14185106490048843;  // std dev = 0.000, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysinleague(A, F) )
%   | then if ( teamalsoknownas(A, G), teamalsoknownas(G, A) )
%   | | then if ( teamplaysagainstteam(A, H), teamalsoknownas(G, H) )
%   | | | then return 0.46947341221095484;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7194734122109548;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7194734122109541;  // std dev = 2.38e-07, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( athleteledsportsteam(C, I), teamplaysagainstteam(J, A) )
%   | | then if ( teamplaysinleague(J, D) )
%   | | | then return 0.7194734122109548;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11947341221095482;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( athleteledsportsteam(C, K) )
%   | | | then return 0.7194734122109546;  // std dev = 5.96e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.38614007887762153;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamalsoknownas(L, A), teamplaysagainstteam(A, M) )
%   | then return -0.08772221431072812;  // std dev = 0.194, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | else return -0.12237923723107715;  // std dev = 0.060, 266.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D), athleteledsportsteam(E, A) )
%   | then if ( athleteplaysforteam(F, A), teamplaysinleague(A, G) )
%   | | then if ( athleteplaysforteam(C, A), athleteplaysforteam(F, D) )
%   | | | then return 0.5077473891272373;  // std dev = 0.976, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.5600264308645958;  // std dev = 0.058, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.34021003170022335;  // std dev = 0.745, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.5660413018824095;  // std dev = 0.392, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( teamalsoknownas(H, A), athleteplaysforteam(I, H) )
%   | then if ( athleteledsportsteam(I, H) )
%   | | then return -0.11639303060275374;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.13120100817660604;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.11274397426589537;  // std dev = 0.020, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.4247139007434598;  // std dev = 0.290, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( teamplaysagainstteam(E, A), teamalsoknownas(A, F) )
%   | then return -0.11579558833108441;  // std dev = 0.203, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( teamalsoknownas(G, A), teamalsoknownas(H, G) )
%   | | then if ( athleteledsportsteam(I, A), athleteledsportsteam(J, H) )
%   | | | then return 0.02330029190413677;  // std dev = 0.902, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.10255010708422181;  // std dev = 0.010, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return -0.10478259199789237;  // std dev = 0.214, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | | | else return -0.08732901758844994;  // std dev = 0.881, 52.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamplaysinleague(A, E) )
%   | then if ( teamplaysinleague(D, E) )
%   | | then return 0.33069150405323033;  // std dev = 0.110, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.31683017924998064;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0831698207500193;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( athleteplaysforteam(C, G) )
%   | | then if ( teamplaysagainstteam(H, A), teamalsoknownas(A, I) )
%   | | | then return 0.3638883804544795;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3217539160260609;  // std dev = 0.728, 101.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   | | else return 0.3929224646974309;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamalsoknownas(J, A), teamalsoknownas(K, J) )
%   | then if ( athleteledsportsteam(L, A), athleteledsportsteam(M, K) )
%   | | then return 0.08612976240889632;  // std dev = 0.860, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.09597254527610304;  // std dev = 0.027, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.09316866365885253;  // std dev = 0.039, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.25869061467160454;  // std dev = 0.177, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.2977862040562419;  // std dev = 0.141, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19603796774783627;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.12851115287089543;  // std dev = 0.800, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamalsoknownas(H, A), athleteplaysforteam(I, H) )
%   | then if ( athleteledsportsteam(J, A), athleteplaysforteam(J, A) )
%   | | then return 0.2098555518967468;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.0936779172078877;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( athleteplayssport(K, B), athleteplaysforteam(K, L) )
%   | | then return 0.06935331430477065;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.0863274787295978;  // std dev = 0.190, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(A, E), teamalsoknownas(A, F) )
%   | | then if ( teamalsoknownas(G, E) )
%   | | | then return 0.2181772877099391;  // std dev = 0.062, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1066420540677205;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteplaysforteam(H, A), teamplaysinleague(A, I) )
%   | | | then return 0.19025882847450637;  // std dev = 0.995, 51.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=50 */
%   | | | else return 0.21683641780808915;  // std dev = 0.191, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return 0.3685951578796715;  // std dev = 0.393, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysagainstteam(A, J), teamalsoknownas(K, J) )
%   | then return -0.08346383247302051;  // std dev = 0.134, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( teamplaysinleague(A, L), teamalsoknownas(M, A) )
%   | | then if ( teamalsoknownas(A, N) )
%   | | | then return -0.08290682566581511;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.18343034416941043;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.07900739942674238;  // std dev = 0.008, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(D, E) )
%   | then return 0.18235338529290504;  // std dev = 0.100, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | | then if ( teamalsoknownas(F, H), athleteledsportsteam(I, H) )
%   | | | then return -0.5306084282409617;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1381622517427708;  // std dev = 0.940, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( athleteledsportsteam(C, J), teamalsoknownas(J, D) )
%   | | | then return -0.15744999470286627;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1891894270826361;  // std dev = 0.476, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   else if ( teamalsoknownas(A, K), athleteplaysforteam(L, A) )
%   | then if ( athleteplayssport(M, B) )
%   | | then return -0.31850077242080027;  // std dev = 0.714, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.08064154747671118;  // std dev = 0.087, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( athleteplayssport(N, B), teamplaysagainstteam(A, P) )
%   | | then return 0.20997551797251435;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07499655802167651;  // std dev = 0.071, 264.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D), athleteledsportsteam(E, A) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.16016721992952515;  // std dev = 0.034, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( athleteplaysforteam(E, A), teamplaysagainstteam(A, D) )
%   | | | then return 0.04120173947712759;  // std dev = 0.834, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.18722582054777454;  // std dev = 0.994, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( athleteledsportsteam(C, F) )
%   | | then return 0.15932255372202153;  // std dev = 0.213, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | else return 0.28145264261790603;  // std dev = 0.362, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamalsoknownas(G, A), athleteledsportsteam(H, G) )
%   | then return -0.0889163134956646;  // std dev = 0.075, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( teamplaysinleague(A, I), teamalsoknownas(J, A) )
%   | | then if ( athleteledsportsteam(K, A), athleteplaysforteam(K, A) )
%   | | | then return 0.19462668465036503;  // std dev = 0.739, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07511354764448692;  // std dev = 0.044, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.06815581497960803;  // std dev = 0.011, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A), athleteplaysinleague(E, D) )
%   | then if ( athleteledsportsteam(C, A) )
%   | | then return 0.13981185685440345;  // std dev = 0.031, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.173893015699948;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.14227308532540112;  // std dev = 0.240, 104.000 (wgt'ed) examples reached here.  /* #pos=104 */
%   else if ( athleteplaysforteam(F, A), athleteplayssport(F, G) )
%   | then if ( teamalsoknownas(A, H), teamalsoknownas(H, I) )
%   | | then if ( athleteledsportsteam(J, H) )
%   | | | then return -0.17312606573317424;  // std dev = 0.169, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0706326590878186;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06994015321311915;  // std dev = 0.230, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( teamalsoknownas(K, A), athleteplaysforteam(L, A) )
%   | | then return 0.20509240405699178;  // std dev = 0.685, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.06437829095364793;  // std dev = 0.032, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | | else return -0.05225377604612041;  // std dev = 0.585, 48.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.271', 'seconds']
Refined model CLL: -0.086387


******************************************
Best model found
******************************************
Results 

CLL : -0.087039 

AUC ROC : 0.99579 

AUC PR : 0.291109 

Precision : 0.193309 

Recall : 0.984848 

F1 : 0.323182 

Total Learning Time : 147.02100000000002 

Total Inference Time : 14.466169834136963 

Total revision time: 165.80894838714602
Best scored revision CLL: -0.086387


Results 

CLL : -0.087039 

AUC ROC : 0.99579 

AUC PR : 0.291109 

Precision : 0.193309 

Recall : 0.984848 

F1 : 0.323182 

Total Learning Time : 165.85195456886294 

Total Inference Time : 14.466169834136963 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.582
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.464, 424.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.482, 362.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 391.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 391.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 373.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 383.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 380.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 387.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 416.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.887', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 516.831
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A), athleteplayssport(D, E) )
%   | then if ( athleteplaysforteam(C, A) )
%   | | then return 0.8581489350995117;  // std dev = 1.98e-07, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( athleteplaysforteam(C, F), teamplaysagainstteam(A, F) )
%   | | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( athleteplaysinleague(C, G) )
%   | | then if ( teamalsoknownas(A, H), teamplaysinleague(A, I) )
%   | | | then return 0.7993254056877476;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.8581489350995128;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048835;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.7230832286882468;  // std dev = 0.133, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return -0.1265848400240517;  // std dev = 0.131, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.12544463852839108;  // std dev = 7.74e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(F, E) )
%   | | then if ( teamplaysagainstteam(A, E) )
%   | | | then return 0.5615434740857375;  // std dev = 0.066, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.3121325243354986;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5585043845669951;  // std dev = 0.161, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( teamalsoknownas(A, G) )
%   | | then return 0.5617152437864974;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2211415377552687;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(H, A), athleteplaysforteam(I, H) )
%   | then if ( athleteplaysinleague(I, J) )
%   | | then return -0.11220274873829288;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.15705918424135235;  // std dev = 0.660, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.1130453797518121;  // std dev = 0.100, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | | else return -0.10644526641033698;  // std dev = 0.112, 58.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), athleteledsportsteam(E, D) )
%   | then if ( athleteplaysforteam(C, D), teamplaysinleague(A, F) )
%   | | then return 0.42390908599403876;  // std dev = 0.120, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else if ( teamalsoknownas(D, G), athleteplaysinleague(C, H) )
%   | | | then return 0.4185873879701815;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.09154995016944835;  // std dev = 1.226, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( athleteledsportsteam(C, I) )
%   | | then return 0.4210302268727234;  // std dev = 0.168, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | else if ( teamalsoknownas(A, J), athleteplaysinleague(C, K) )
%   | | | then return 0.4198768110069559;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5945073395272474;  // std dev = 0.194, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10181170572477827;  // std dev = 0.039, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A), athleteledsportsteam(E, D) )
%   | then if ( athleteplaysforteam(C, D), athleteledsportsteam(C, F) )
%   | | then if ( teamplaysinleague(A, G) )
%   | | | then return 0.32474755604798483;  // std dev = 0.107, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return 0.3786400788236966;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamalsoknownas(D, H), athleteledsportsteam(I, H) )
%   | | | then return -0.2798026646741665;  // std dev = 0.790, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.15773857975683972;  // std dev = 0.875, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( athleteledsportsteam(C, J) )
%   | | then return 0.3251330248300144;  // std dev = 0.197, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.3397686013936991;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.47358685738227785;  // std dev = 0.196, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09274492366933298;  // std dev = 0.025, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D), teamplaysinleague(A, E) )
%   | then if ( teamplaysinleague(D, E) )
%   | | then return 0.2577571719473205;  // std dev = 0.110, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else if ( athleteplaysinleague(F, E), athleteplayssport(F, G) )
%   | | | then return -0.31235314417968785;  // std dev = 0.736, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22135302039721214;  // std dev = 1.009, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( athleteledsportsteam(C, H) )
%   | | then if ( teamplaysagainstteam(I, A), athleteledsportsteam(J, I) )
%   | | | then return 0.30834686187421445;  // std dev = 0.133, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.25239115880694574;  // std dev = 3.94e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( teamalsoknownas(A, K), athleteplaysinleague(C, L) )
%   | | | then return 0.25799610783369553;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3578113529378901;  // std dev = 0.159, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08553554652118589;  // std dev = 0.047, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(C, A) )
%   | | then return 0.20608584059583387;  // std dev = 0.000454, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.11392149668578562;  // std dev = 0.831, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteplaysinleague(C, E), teamplaysinleague(A, F) )
%   | | then if ( teamplaysagainstteam(A, G), teamalsoknownas(G, H) )
%   | | | then return 0.2250095475870749;  // std dev = 0.207, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return 0.2123771087634458;  // std dev = 0.070, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else if ( teamalsoknownas(I, A), athleteledsportsteam(C, J) )
%   | | | then return 0.007791250242044812;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.21110984818278608;  // std dev = 0.476, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   else return -0.0789013774392552;  // std dev = 0.031, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A), athleteplaysinleague(C, E) )
%   | then if ( athleteledsportsteam(F, A), athleteplayssport(F, G) )
%   | | then if ( athleteledsportsteam(C, D), athleteplaysforteam(F, H) )
%   | | | then return 0.177294655726422;  // std dev = 0.046, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.11784475037825319;  // std dev = 0.712, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteplaysforteam(C, D), teamplaysinleague(A, I) )
%   | | | then return 0.17828165413535163;  // std dev = 0.055, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.20181084550124873;  // std dev = 0.199, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( athleteplaysforteam(C, J) )
%   | | then if ( athleteplaysforteam(C, K), teamplaysagainstteam(J, K) )
%   | | | then return 0.18091885530088583;  // std dev = 0.101, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return 0.017441948083378945;  // std dev = 1.515, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else return -0.11756972657456066;  // std dev = 0.891, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07360838781439517;  // std dev = 0.045, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamplaysinleague(E, D) )
%   | then if ( teamplaysagainstteam(A, F), athleteplaysforteam(C, F) )
%   | | then return 0.1560936897019445;  // std dev = 0.014, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( teamalsoknownas(G, E), teamplaysinleague(A, H) )
%   | | | then return -0.30799680122389755;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16839373951896666;  // std dev = 0.087, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.16334689722733353;  // std dev = 0.021, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( teamplaysinleague(A, I), teamalsoknownas(A, J) )
%   | then return -0.0616032474149688;  // std dev = 0.047, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then if ( athleteplaysinleague(L, K) )
%   | | | then return -0.06825560513897062;  // std dev = 0.000340, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | | else return -0.09571004489641961;  // std dev = 0.589, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( teamplaysagainstteam(M, A) )
%   | | | then return -0.0686583699617349;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.060373298805266165;  // std dev = 0.422, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then return 0.14653924474094177;  // std dev = 0.030, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | else if ( athleteplaysforteam(G, A), athleteplaysforteam(C, H) )
%   | | then if ( teamplaysagainstteam(A, I) )
%   | | | then return 0.14547758198751534;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1129248696367397;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.13803742133531896;  // std dev = 0.090, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   else if ( teamplaysagainstteam(J, A) )
%   | then return -0.06773962102840544;  // std dev = 0.024, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | else if ( teamalsoknownas(K, A), teamplaysinleague(A, L) )
%   | | then if ( athleteplaysforteam(M, K) )
%   | | | then return 0.0395575977804347;  // std dev = 0.300, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06412350786739791;  // std dev = 0.003, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( teamplaysinleague(A, N) )
%   | | | then return -0.06345445364018555;  // std dev = 0.006, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.05041690735778166;  // std dev = 0.429, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.432', 'seconds']
Refined model CLL: -0.082064


******************************************
Best model found
******************************************
Results 

CLL : -0.083188 

AUC ROC : 0.993799 

AUC PR : 0.386164 

Precision : 0.166454 

Recall : 0.988636 

F1 : 0.284934 

Total Learning Time : 516.831 

Total Inference Time : 19.28878164291382 

Total revision time: 540.40865076828
Best scored revision CLL: -0.082064


Results 

CLL : -0.083188 

AUC ROC : 0.993799 

AUC PR : 0.386164 

Precision : 0.166454 

Recall : 0.988636 

F1 : 0.284934 

Total Learning Time : 540.451656949997 

Total Inference Time : 19.28878164291382 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.525
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 395.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.464, 416.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.463, 421.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 403.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 398.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 391.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 403.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 375.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 399.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 398.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.875', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 558.726
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamalsoknownas(A, F) )
%   | then if ( teamalsoknownas(E, G) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995125;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.14185106490048835;  // std dev = 0.000, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else if ( teamalsoknownas(A, I), teamplaysagainstteam(A, J) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.12224322176323278;  // std dev = 0.990, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.7210671436818343;  // std dev = 0.087, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then if ( athleteplayssport(G, H) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.386140078877621;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysinleague(A, I), athleteledsportsteam(C, J) )
%   | | | then return 0.6759951513413889;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.7194734122109542;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( teamplaysinleague(A, K) )
%   | then return -0.1254446385283917;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else if ( teamalsoknownas(A, L), teamalsoknownas(L, M) )
%   | | then if ( teamalsoknownas(L, A) )
%   | | | then return 0.19141081277128427;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12598638557460745;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11151091858141993;  // std dev = 0.130, 58.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.5594386520525239;  // std dev = 0.161, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else if ( teamplaysinleague(A, E) )
%   | then return -0.11231637819360653;  // std dev = 0.000, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | then return 0.029170522579851626;  // std dev = 0.873, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamalsoknownas(H, A), teamalsoknownas(A, H) )
%   | | | then return -0.1499832447772293;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.09503364409329321;  // std dev = 0.989, 50.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.41825253593755335;  // std dev = 0.115, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return 0.4401077181892433;  // std dev = 0.099, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( teamplaysinleague(A, H), teamalsoknownas(A, I) )
%   | | | then return 0.3148377128408837;  // std dev = 0.942, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.3683565858910811;  // std dev = 1.376, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   else if ( teamplaysagainstteam(A, J), teamalsoknownas(A, K) )
%   | then if ( teamalsoknownas(L, J) )
%   | | then return -0.10357481279166539;  // std dev = 0.035, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.20584423988480247;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, M) )
%   | | then return -0.1015963294878365;  // std dev = 0.000, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else if ( teamalsoknownas(A, N) )
%   | | | then return -0.12063095983787595;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08628123252876606;  // std dev = 0.991, 47.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | then if ( athleteledsportsteam(F, G), athleteplaysforteam(C, G) )
%   | | then if ( athleteplaysforteam(F, A), athleteledsportsteam(C, A) )
%   | | | then return 0.26049457894297656;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.31881950658785924;  // std dev = 0.009, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else if ( teamplaysagainstteam(A, H), teamalsoknownas(A, I) )
%   | | | then return 0.3193181083547414;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.010935024909906237;  // std dev = 1.591, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( teamalsoknownas(A, J) )
%   | | then return 0.34212800260755977;  // std dev = 0.076, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return 0.2843589466858844;  // std dev = 0.970, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.3271748509443408;  // std dev = 0.025, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( teamplaysinleague(A, L) )
%   | then return -0.09345383480897433;  // std dev = 0.071, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | else return -0.06852285116987726;  // std dev = 0.178, 55.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamalsoknownas(E, A) )
%   | then return 0.06143892709190215;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( athleteledsportsteam(C, F) )
%   | | then return 0.2661529009445238;  // std dev = 0.263, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.29193439438234525;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.020643718215127338;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.08579273502858997;  // std dev = 0.060, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else if ( teamalsoknownas(A, I), teamplaysagainstteam(J, A) )
%   | | then if ( teamalsoknownas(K, J) )
%   | | | then return -0.08690495668656474;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.17511971304671184;  // std dev = 0.765, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, L) )
%   | | | then return -0.09772741428447787;  // std dev = 0.017, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07487429956943789;  // std dev = 0.994, 47.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteplaysinleague(E, D) )
%   | then if ( teamplaysinleague(A, D) )
%   | | then if ( athleteledsportsteam(E, F), teamplaysagainstteam(F, A) )
%   | | | then return 0.06991232696012825;  // std dev = 0.921, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.21663629565940462;  // std dev = 0.066, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.016020576112429713;  // std dev = 0.829, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2218279057018298;  // std dev = 0.259, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else if ( teamalsoknownas(G, A), teamplaysagainstteam(A, H) )
%   | then if ( athleteplaysforteam(I, A) )
%   | | then return -0.07977711146064105;  // std dev = 0.020, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.20434117068883714;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(J, A) )
%   | | then return -0.07986370998793854;  // std dev = 0.042, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return -0.07906769704901544;  // std dev = 0.025, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.06249333840982467;  // std dev = 0.989, 40.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), teamplaysinleague(D, E) )
%   | then return 0.18500302383029693;  // std dev = 0.164, 83.000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | else if ( teamplaysagainstteam(A, F), teamplaysagainstteam(D, F) )
%   | | then return -0.07178987776911233;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, G) )
%   | | | then return 0.11582429861020167;  // std dev = 0.957, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.19141285423890383;  // std dev = 0.156, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( athleteplayssport(H, B), teamalsoknownas(A, I) )
%   | then return 0.20599658775488194;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplayssport(J, B), teamplaysagainstteam(K, A) )
%   | | then return 0.0015731952939149845;  // std dev = 0.893, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( teamalsoknownas(L, A), teamalsoknownas(A, L) )
%   | | | then return -0.05915456489144558;  // std dev = 0.830, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | | else return -0.07455468024839654;  // std dev = 1.223, 232.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.15999993767892837;  // std dev = 0.130, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else return -0.06920610701016446;  // std dev = 0.040, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then return 0.16493570941614008;  // std dev = 0.207, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else if ( teamplaysagainstteam(A, H), teamalsoknownas(I, A) )
%   | | then return 0.12880203030265283;  // std dev = 0.710, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysinleague(A, J) )
%   | | | then return -0.06959517234875032;  // std dev = 0.048, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return -0.05877145796718454;  // std dev = 0.993, 53.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.14022166870798533;  // std dev = 0.188, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( athleteplayssport(E, B), teamalsoknownas(A, F) )
%   | then return 0.0820123143238494;  // std dev = 0.253, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( teamplaysagainstteam(A, G), teamalsoknownas(H, G) )
%   | | then if ( teamalsoknownas(G, H), athleteledsportsteam(I, A) )
%   | | | then return -0.09922492409966613;  // std dev = 0.723, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06610879213413041;  // std dev = 0.076, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( teamplaysagainstteam(J, A), athleteplayssport(K, B) )
%   | | | then return 0.18857357976893513;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06139483651253979;  // std dev = 1.464, 147.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '43.751', 'seconds']
Refined model CLL: -0.085647


******************************************
Best model found
******************************************
Results 

CLL : -0.084599 

AUC ROC : 0.995158 

AUC PR : 0.305829 

Precision : 0.20092 

Recall : 0.984962 

F1 : 0.333758 

Total Learning Time : 558.726 

Total Inference Time : 23.65157675743103 

Total revision time: 586.6246691474914
Best scored revision CLL: -0.085647


Results 

CLL : -0.084599 

AUC ROC : 0.995158 

AUC PR : 0.305829 

Precision : 0.20092 

Recall : 0.984962 

F1 : 0.333758 

Total Learning Time : 586.6676753292084 

Total Inference Time : 23.65157675743103 

Starting experiment 32_twitter_nell_sports 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.586
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 388.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 409.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 401.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 400.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 414.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 389.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 394.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 418.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 380.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 391.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.858', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 211.326
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.8581489350995104;  // std dev = 7.35e-07, 127.000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamalsoknownas(F, A), teamalsoknownas(G, F) )
%   | then if ( athleteledsportsteam(H, A), teamalsoknownas(F, G) )
%   | | then if ( teamplaysagainstteam(A, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14185106490048774;  // std dev = 2.11e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( teamplaysinleague(A, I) )
%   | | then return -0.14185106490048824;  // std dev = 0.000, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.11327963632905916;  // std dev = 0.986, 35.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.7213089323257587;  // std dev = 0.075, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( athleteplaysforteam(C, G), teamplaysinleague(G, F) )
%   | | | then return 0.7194734122109545;  // std dev = 7.30e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.6361400788776216;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.7194734122109546;  // std dev = 5.96e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( teamalsoknownas(H, A), athleteledsportsteam(I, A) )
%   | then if ( athleteledsportsteam(J, H) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.11421789391159357;  // std dev = 0.830, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.12544463852839172;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | | else if ( athleteplayssport(L, B) )
%   | | | then return 0.20472048313056232;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12726246489893697;  // std dev = 0.012, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A), teamplaysinleague(E, D) )
%   | then if ( athleteplaysforteam(C, A) )
%   | | then return 0.5549131374588003;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.221579804125467;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( athleteplaysforteam(G, A), athleteplaysinleague(G, D) )
%   | | | then return 0.520430378838111;  // std dev = 0.983, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return 0.5603340651712416;  // std dev = 0.099, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.5630297762402685;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.49981088119072914;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( teamalsoknownas(I, A), athleteplaysforteam(J, I) )
%   | then if ( athleteledsportsteam(J, I) )
%   | | then return -0.11231637819360632;  // std dev = 1.49e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.039866296738066145;  // std dev = 0.871, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.10937112222539298;  // std dev = 0.059, 262.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(D, A), athleteplaysforteam(C, D) )
%   | | then return 0.4232595534477358;  // std dev = 0.116, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( teamplaysinleague(A, E), teamplaysagainstteam(F, A) )
%   | | | then return 0.23536794490094126;  // std dev = 1.807, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | else return 0.4061326894396924;  // std dev = 1.001, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | else return 0.5440164561282319;  // std dev = 0.354, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( athleteledsportsteam(G, A), teamalsoknownas(H, A) )
%   | then if ( teamalsoknownas(I, H), athleteledsportsteam(J, I) )
%   | | then return 0.12647270854066364;  // std dev = 0.790, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.10159632948783628;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.10220284336973635;  // std dev = 0.019, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(D, A), teamplaysinleague(A, E) )
%   | then if ( teamalsoknownas(F, D), athleteplaysinleague(C, G) )
%   | | then return 0.3426751633285055;  // std dev = 0.080, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( athleteledsportsteam(C, D) )
%   | | | then return 0.331882252223247;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.3222960522043809;  // std dev = 0.389, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(H, A), athleteplayssport(H, I) )
%   | | then if ( athleteledsportsteam(C, J), teamplaysagainstteam(A, J) )
%   | | | then return 0.3257752073278226;  // std dev = 0.049, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.3115720680178408;  // std dev = 0.834, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.33895984535549945;  // std dev = 0.053, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( teamalsoknownas(K, A), teamalsoknownas(L, K) )
%   | then if ( athleteledsportsteam(M, A), athleteledsportsteam(N, L) )
%   | | then return 0.043518541406796764;  // std dev = 0.837, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.09327900421302847;  // std dev = 0.013, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.09319763690702287;  // std dev = 0.012, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | then if ( teamplaysagainstteam(D, F) )
%   | | then return 0.26203359556273753;  // std dev = 0.206, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0.03596797235269858;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2705225006011826;  // std dev = 0.056, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then if ( athleteledsportsteam(H, G), athleteplayssport(H, I) )
%   | | then return -0.09297285357141936;  // std dev = 0.519, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.2641769830396765;  // std dev = 0.000639, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0708553278005815;  // std dev = 0.883, 42.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
%   | else if ( teamplaysagainstteam(K, A), teamalsoknownas(K, L) )
%   | | then return -0.21543961008571574;  // std dev = 0.582, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( athleteledsportsteam(M, A) )
%   | | | then return -0.13892682227559605;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09136494329650587;  // std dev = 0.635, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(D, E) )
%   | then return 0.218858859269887;  // std dev = 0.221, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | | then if ( athleteledsportsteam(C, G) )
%   | | | then return 0.21018094225974118;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.3480072711596106;  // std dev = 1.046, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | | then return 0.16919256728188112;  // std dev = 0.989, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.22509145285023846;  // std dev = 0.442, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   else if ( athleteplaysforteam(J, A), teamalsoknownas(A, K) )
%   | then return -0.09199101532139639;  // std dev = 0.119, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( teamplaysinleague(A, L), teamalsoknownas(M, A) )
%   | | then if ( athleteplaysinleague(N, L), teamalsoknownas(P, M) )
%   | | | then return 0.08955802899827792;  // std dev = 0.789, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.0798738428996553;  // std dev = 0.032, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.0783645392977119;  // std dev = 0.033, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(D, A), athleteplaysinleague(D, E) )
%   | then if ( athleteplaysforteam(F, A), athleteledsportsteam(F, G) )
%   | | then return 0.17787723508554731;  // std dev = 0.049, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return -0.13410962718028835;  // std dev = 0.837, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( athleteledsportsteam(C, H), teamplaysagainstteam(I, A) )
%   | | then if ( athleteledsportsteam(C, I) )
%   | | | then return 0.17687332944486;  // std dev = 0.065, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.220236403517135;  // std dev = 0.174, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( athleteplaysforteam(C, J), athleteledsportsteam(K, J) )
%   | | | then return 0.18797550903367613;  // std dev = 0.426, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return 0.06667918868012367;  // std dev = 0.513, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamalsoknownas(L, A), athleteplaysforteam(M, A) )
%   | then if ( teamplaysagainstteam(A, L) )
%   | | then return -0.08792290556672598;  // std dev = 0.086, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.20768952229962548;  // std dev = 0.701, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07318322528554522;  // std dev = 0.030, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.16241850814088515;  // std dev = 0.024, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( athleteplaysforteam(C, G), teamplaysinleague(G, F) )
%   | | | then return 0.14931140892760683;  // std dev = 0.016, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.07508434728694983;  // std dev = 0.959, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.1536682680092678;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( teamalsoknownas(A, H), athleteplaysforteam(I, A) )
%   | then return -0.0836168716809951;  // std dev = 0.046, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( athleteplaysforteam(J, A), athleteledsportsteam(J, A) )
%   | | then if ( teamplaysagainstteam(A, K), teamalsoknownas(L, K) )
%   | | | then return -0.06992505186804951;  // std dev = 0.034, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0.20300636429174143;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(M, A) )
%   | | | then return -0.07871701845472087;  // std dev = 0.245, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06491038455047858;  // std dev = 0.630, 183.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamalsoknownas(A, E), teamplaysagainstteam(A, F) )
%   | then if ( teamplaysagainstteam(D, F) )
%   | | then return 0.13387286704516635;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.08322040969730465;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.13994204277356262;  // std dev = 0.019, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return -0.19858640649281037;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13782123423372816;  // std dev = 0.063, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( teamplaysinleague(A, I), athleteplayssport(J, B) )
%   | then if ( athleteplaysinleague(K, I), teamplaysagainstteam(A, L) )
%   | | then return -0.2747619486873416;  // std dev = 0.594, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.03224486121098228;  // std dev = 0.288, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamalsoknownas(M, A), teamalsoknownas(A, M) )
%   | | then return -0.07925964638188514;  // std dev = 0.027, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.05965398584427817;  // std dev = 0.070, 239.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.455', 'seconds']
Refined model CLL: -0.082746


******************************************
Best model found
******************************************
Results 

CLL : -0.084131 

AUC ROC : 0.993694 

AUC PR : 0.400838 

Precision : 0.193885 

Recall : 0.984848 

F1 : 0.323988 

Total Learning Time : 211.326 

Total Inference Time : 14.544593811035156 

Total revision time: 230.15377622795106
Best scored revision CLL: -0.082746


Results 

CLL : -0.084131 

AUC ROC : 0.993694 

AUC PR : 0.400838 

Precision : 0.193885 

Recall : 0.984848 

F1 : 0.323988 

Total Learning Time : 230.18893676948548 

Total Inference Time : 14.544593811035156 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.607
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 409.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 418.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 390.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 400.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 384.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 403.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 420.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 398.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 385.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 420.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.782', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 241.425
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamplaysinleague(A, E), teamplaysinleague(D, E) )
%   | | then return 0.8581489350995128;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | | else if ( teamplaysinleague(A, F), athleteledsportsteam(C, D) )
%   | | | then return 0.8105298874804645;  // std dev = 0.976, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.8581489350995116;  // std dev = 2.15e-07, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048782;  // std dev = 1.15e-07, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.7229035935066246;  // std dev = 0.126, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( teamplaysinleague(A, D) )
%   | | then return 0.5944734122109542;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( teamalsoknownas(F, A), athleteledsportsteam(C, G) )
%   | | | then return 0.6311579125932956;  // std dev = 0.956, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.6951596932078498;  // std dev = 0.989, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( teamplaysagainstteam(H, A) )
%   | then return -0.1273244197315509;  // std dev = 0.218, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( teamalsoknownas(I, A), teamplaysinleague(A, J) )
%   | | then return -0.07850474682064995;  // std dev = 0.194, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return -0.1289692282843152;  // std dev = 0.153, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.10729105691053108;  // std dev = 0.852, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysinleague(A, F) )
%   | then return 0.5623380880522255;  // std dev = 0.106, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | else if ( athleteledsportsteam(C, G), teamalsoknownas(A, H) )
%   | | then return 0.3680403641867917;  // std dev = 0.885, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0.3410692468798561;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5594401142724131;  // std dev = 0.025, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( teamalsoknownas(J, A), athleteplaysforteam(K, J) )
%   | then if ( teamplaysagainstteam(A, J) )
%   | | then return -0.11212909789592887;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.16695916436263167;  // std dev = 0.696, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, L) )
%   | | then return -0.11352513282480513;  // std dev = 0.155, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | else if ( athleteplayssport(M, B) )
%   | | | then return 0.07522011406033391;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11349589511210403;  // std dev = 0.007, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(D, A), teamplaysagainstteam(A, E) )
%   | then if ( athleteledsportsteam(C, E), athleteplaysinleague(D, F) )
%   | | then if ( athleteplayssport(D, B), teamalsoknownas(E, G) )
%   | | | then return 0.41498609157120475;  // std dev = 2.98e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2907114284866641;  // std dev = 1.324, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.01802880299460786;  // std dev = 1.028, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( athleteledsportsteam(C, H) )
%   | | then if ( teamalsoknownas(I, A), teamalsoknownas(A, I) )
%   | | | then return 0.2941938849821219;  // std dev = 1.274, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.4007343521222894;  // std dev = 1.401, 84.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=82 */
%   | | else if ( teamplaysagainstteam(A, J) )
%   | | | then return 0.4601076735712235;  // std dev = 0.154, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6107462316078159;  // std dev = 0.239, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10225517103774853;  // std dev = 0.059, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( athleteledsportsteam(E, A), athleteplaysinleague(E, F) )
%   | | then if ( athleteplayssport(E, G), teamplaysinleague(H, F) )
%   | | | then return 0.3318146468842151;  // std dev = 0.075, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.09929630176661758;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.34048876770607933;  // std dev = 0.313, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( teamplaysinleague(A, I) )
%   | | then return 0.0365584667045058;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.36074932934369325;  // std dev = 0.257, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0932392257831122;  // std dev = 0.056, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamplaysinleague(E, F) )
%   | then return 0.26861120265142063;  // std dev = 0.274, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | else if ( teamplaysagainstteam(G, A), teamplaysinleague(A, H) )
%   | | then if ( athleteledsportsteam(C, I), teamplaysinleague(I, H) )
%   | | | then return 0.25263390323058044;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.27156194450206284;  // std dev = 1.146, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.26796268418584873;  // std dev = 0.154, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( teamplaysinleague(A, J), teamalsoknownas(K, A) )
%   | then if ( athleteplaysforteam(L, K), teamalsoknownas(A, M) )
%   | | then if ( teamalsoknownas(A, K) )
%   | | | then return -0.08913128559699221;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.09214544518920643;  // std dev = 0.470, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.08711342693460103;  // std dev = 0.025, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( teamalsoknownas(A, N), teamplaysinleague(N, P) )
%   | | then return -0.09554251469936934;  // std dev = 0.065, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.08432976221721372;  // std dev = 0.053, 180.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D), teamplaysinleague(A, E) )
%   | then if ( teamalsoknownas(A, F) )
%   | | then if ( teamplaysagainstteam(A, G), athleteplaysinleague(H, E) )
%   | | | then return 0.21278339660347692;  // std dev = 0.031, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2794956084135169;  // std dev = 0.294, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.21866784350027046;  // std dev = 0.159, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( athleteledsportsteam(C, I) )
%   | | then if ( athleteplaysforteam(C, I), teamalsoknownas(I, J) )
%   | | | then return 0.12924631297048197;  // std dev = 0.961, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.21839881479274773;  // std dev = 0.093, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return 0.273539996383217;  // std dev = 0.220, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09802285783679342;  // std dev = 1.096, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.0795803392831052;  // std dev = 0.074, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A), teamalsoknownas(E, A) )
%   | then if ( teamalsoknownas(D, E), teamalsoknownas(E, D) )
%   | | then return -0.1345373143696932;  // std dev = 1.093, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( athleteledsportsteam(C, D) )
%   | | | then return 0.18016583036087191;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.24289065224411102;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( athleteplaysforteam(C, F) )
%   | | then if ( athleteplaysforteam(G, A), teamplaysagainstteam(H, A) )
%   | | | then return 0.1389395951067885;  // std dev = 1.350, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return 0.17947928789085907;  // std dev = 0.676, 74.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=73 */
%   | | else return 0.2957899661392993;  // std dev = 0.365, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07409019890866227;  // std dev = 0.081, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.16233176596198906;  // std dev = 0.191, 125.000 (wgt'ed) examples reached here.  /* #pos=125 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then return 0.21848016894906172;  // std dev = 0.217, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.17203246489339838;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(G, A), athleteplaysforteam(H, G) )
%   | then if ( athleteplaysinleague(H, I) )
%   | | then return -0.07228991370374276;  // std dev = 0.031, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.056197304103962786;  // std dev = 0.354, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( athleteplaysforteam(J, A), athleteledsportsteam(J, K) )
%   | | then if ( athleteledsportsteam(L, A) )
%   | | | then return -0.06806385695825827;  // std dev = 0.003, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.08495697767629752;  // std dev = 0.178, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.06824835804005293;  // std dev = 0.010, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | | else return -0.06639717629044423;  // std dev = 0.688, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(C, E), teamplaysagainstteam(A, E) )
%   | then return 0.1435687641541585;  // std dev = 0.017, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | | then if ( athleteplaysforteam(H, A), athleteledsportsteam(I, G) )
%   | | | then return -0.513114064505142;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1493784526010607;  // std dev = 0.125, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( teamplaysinleague(A, J), teamalsoknownas(A, K) )
%   | | | then return 0.06415316746762366;  // std dev = 0.993, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.1402802214703865;  // std dev = 0.131, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   else if ( teamalsoknownas(A, L), teamalsoknownas(L, A) )
%   | then if ( teamplaysagainstteam(M, A) )
%   | | then return -0.06356626242609384;  // std dev = 0.000600, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( teamplaysinleague(A, N) )
%   | | | then return -0.04371677189000274;  // std dev = 0.393, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return -0.06454063739962568;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06537414040883127;  // std dev = 0.052, 226.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.393', 'seconds']
Refined model CLL: -0.083992


******************************************
Best model found
******************************************
Results 

CLL : -0.082597 

AUC ROC : 0.993162 

AUC PR : 0.338948 

Precision : 0.196659 

Recall : 0.981061 

F1 : 0.327641 

Total Learning Time : 241.425 

Total Inference Time : 16.529054641723633 

Total revision time: 262.30389040184025
Best scored revision CLL: -0.083992


Results 

CLL : -0.082597 

AUC ROC : 0.993162 

AUC PR : 0.338948 

Precision : 0.196659 

Recall : 0.981061 

F1 : 0.327641 

Total Learning Time : 262.3390509433747 

Total Inference Time : 16.529054641723633 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.605
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 414.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 403.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 372.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 400.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 392.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 388.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 390.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 372.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.460, 430.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 373.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.876', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 407.593
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamalsoknownas(A, F) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( athleteplaysforteam(C, E), teamalsoknownas(E, G) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( athleteledsportsteam(H, A), athleteplaysforteam(H, A) )
%   | | then if ( athleteplaysinleague(H, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.8581489350995128;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.1418510649004884;  // std dev = 0.000, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | else if ( teamplaysagainstteam(J, A), teamalsoknownas(A, K) )
%   | | then return -0.016851064900487787;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return -0.12262029566971851;  // std dev = 0.137, 52.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A), athleteplaysinleague(D, E) )
%   | then if ( athleteplayssport(D, F), teamplaysinleague(A, E) )
%   | | then return 0.7230747697933575;  // std dev = 0.052, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else if ( athleteledsportsteam(D, G) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3194734122109543;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.7255648151987875;  // std dev = 0.158, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.12544463852839158;  // std dev = 0.000, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else if ( teamalsoknownas(I, A), teamplaysagainstteam(J, A) )
%   | | then return 0.06508484871743152;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.13124240271057735;  // std dev = 0.025, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.10317941023614725;  // std dev = 0.988, 41.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | then if ( athleteplaysforteam(C, E) )
%   | | then return 0.5621457095869531;  // std dev = 0.172, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else if ( athleteplayssport(F, G) )
%   | | | then return -0.1961382439710927;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3126045814586996;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.5634864744257536;  // std dev = 0.200, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.11338600850282256;  // std dev = 0.163, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(J, A) )
%   | | then return 0.1855087683282531;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.11431552543193373;  // std dev = 0.011, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.0908795936936364;  // std dev = 0.987, 39.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A), athleteplaysforteam(E, A) )
%   | then if ( teamalsoknownas(F, A), athleteledsportsteam(C, F) )
%   | | then return 0.0819494325652493;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteplaysinleague(E, D) )
%   | | | then return 0.41508841455902235;  // std dev = 0.001, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.22647609114463402;  // std dev = 1.157, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.4265339036245007;  // std dev = 0.326, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( teamplaysagainstteam(A, G), teamalsoknownas(A, H) )
%   | then if ( teamplaysinleague(A, I) )
%   | | then return -0.1014987410958629;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.20054679845611278;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(J, A) )
%   | | then return -0.10525596527569053;  // std dev = 0.205, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return -0.10149874109586297;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.08367669622945734;  // std dev = 0.988, 42.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(A, F), athleteplaysforteam(C, F) )
%   | | then return 0.3307742325701422;  // std dev = 0.228, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else if ( teamplaysinleague(A, G), teamplaysinleague(E, G) )
%   | | | then return 0.23452877960255789;  // std dev = 0.692, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.31529072704940275;  // std dev = 1.047, 60.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.32980030204518196;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.08523660446895975;  // std dev = 0.891, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( athleteplayssport(I, B) )
%   | then return -0.19239790949696856;  // std dev = 0.000691, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(A, J) )
%   | | then return -0.09244679628398914;  // std dev = 0.002, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | | else if ( teamplaysagainstteam(K, A), teamalsoknownas(L, A) )
%   | | | then return 0.16460825252886596;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08501233731723343;  // std dev = 0.994, 70.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, A) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.2709760829285687;  // std dev = 0.260, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else return -0.08673486373392167;  // std dev = 0.114, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then if ( teamplaysinleague(A, H) )
%   | | then return 0.25985588165024703;  // std dev = 0.133, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else if ( teamplaysagainstteam(I, A), teamplaysagainstteam(A, I) )
%   | | | then return 0.02855642974527835;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2255148034444393;  // std dev = 0.998, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( teamplaysinleague(A, J) )
%   | | then return -0.08572459152876834;  // std dev = 0.079, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else if ( teamalsoknownas(A, K), teamplaysagainstteam(A, L) )
%   | | | then return 0.05382852013064585;  // std dev = 0.799, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.07131956891889378;  // std dev = 0.989, 50.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A) )
%   | then return 0.22084447330260895;  // std dev = 0.230, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else if ( teamplaysagainstteam(A, F), teamplaysinleague(F, D) )
%   | | then if ( athleteplaysforteam(C, F), teamplaysagainstteam(F, A) )
%   | | | then return 0.20773400742008857;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.4130062155884799;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, G), teamplaysagainstteam(G, H) )
%   | | | then return 0.2787668935172589;  // std dev = 0.153, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19839367102398964;  // std dev = 1.008, 60.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   else if ( teamalsoknownas(A, I), teamalsoknownas(I, A) )
%   | then if ( teamplaysinleague(A, J) )
%   | | then return -0.07862647673354775;  // std dev = 0.000423, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.05438906421520608;  // std dev = 0.772, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( teamplaysagainstteam(K, A) )
%   | | then return -0.08089786047351577;  // std dev = 0.164, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | else return -0.07220625431578563;  // std dev = 0.108, 85.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.18853153168551226;  // std dev = 0.287, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else if ( teamalsoknownas(F, A) )
%   | | then return 0.18914644852221899;  // std dev = 0.062, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | | then return 0.18496973077761464;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.0660725174211815;  // std dev = 1.888, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   else if ( teamplaysagainstteam(A, I), teamalsoknownas(A, J) )
%   | then if ( teamalsoknownas(K, I) )
%   | | then return -0.0752213153208734;  // std dev = 0.048, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.20093535754675199;  // std dev = 0.671, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, L) )
%   | | then return -0.07364619533605886;  // std dev = 0.118, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | | else if ( teamalsoknownas(A, M) )
%   | | | then return -0.09070613590723299;  // std dev = 0.067, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.060402684182168306;  // std dev = 0.989, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, A) )
%   then if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then if ( athleteledsportsteam(E, A), athleteplaysforteam(E, C) )
%   | | then if ( athleteledsportsteam(D, G), teamplaysagainstteam(A, G) )
%   | | | then return 0.15711717120687682;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1882119518688707;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1597357562363784;  // std dev = 0.176, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0705510992290113;  // std dev = 0.149, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( athleteplayssport(H, B), athleteplaysinleague(H, I) )
%   | then return 0.16680012877054023;  // std dev = 0.205, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else if ( teamplaysagainstteam(J, A), teamalsoknownas(J, K) )
%   | | then if ( teamalsoknownas(L, A) )
%   | | | then return 0.12615048065170903;  // std dev = 0.673, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07019471709462612;  // std dev = 0.014, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( teamalsoknownas(A, M) )
%   | | | then return -0.07790483570408273;  // std dev = 0.098, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.06360968531024046;  // std dev = 0.998, 97.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteplaysinleague(E, D) )
%   | then if ( teamplaysinleague(A, D) )
%   | | then return 0.13229598511000057;  // std dev = 0.080, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.08768875714025151;  // std dev = 0.908, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1458026415133015;  // std dev = 0.222, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else if ( teamplaysagainstteam(A, F), teamalsoknownas(G, A) )
%   | then if ( teamplaysinleague(A, H) )
%   | | then return -0.06363496307920719;  // std dev = 0.000442, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.07879453079779535;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamalsoknownas(A, I) )
%   | | then return -0.07509349491099049;  // std dev = 0.164, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( teamplaysinleague(A, J) )
%   | | | then return -0.06498354277420693;  // std dev = 0.124, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | | else return -0.05066811950819039;  // std dev = 0.989, 50.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '47.203', 'seconds']
Refined model CLL: -0.084276


******************************************
Best model found
******************************************
Results 

CLL : -0.084954 

AUC ROC : 0.993994 

AUC PR : 0.260047 

Precision : 0.196992 

Recall : 0.984962 

F1 : 0.328321 

Total Learning Time : 407.593 

Total Inference Time : 50.4897735118866 

Total revision time: 462.6056397418976
Best scored revision CLL: -0.084276


Results 

CLL : -0.084954 

AUC ROC : 0.993994 

AUC PR : 0.260047 

Precision : 0.196992 

Recall : 0.984962 

F1 : 0.328321 

Total Learning Time : 462.64080028343204 

Total Inference Time : 50.4897735118866 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.56
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 390.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 401.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 404.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 401.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 413.000 (wgt'ed) examples reached here.  /* #neg=280 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 404.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 401.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 377.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 400.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 406.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.860', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 230.285
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E), teamplaysinleague(A, F) )
%   | then if ( athleteledsportsteam(G, E), teamplaysinleague(E, D) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995121;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return 0.8581489350995114;  // std dev = 3.95e-07, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( teamalsoknownas(J, A), teamplaysinleague(A, K) )
%   | | then if ( teamplaysinleague(J, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.14185106490048763;  // std dev = 8.56e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | | else return -0.1218510649004877;  // std dev = 0.990, 50.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A), athleteledsportsteam(C, F) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then return 0.7232404138693997;  // std dev = 0.085, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7194734122109538;  // std dev = 2.53e-07, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else if ( athleteplayssport(H, B), athleteplaysforteam(H, I) )
%   | then return 0.07367110060425523;  // std dev = 0.893, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( athleteledsportsteam(J, A), athleteplaysinleague(J, K) )
%   | | then if ( athleteplayssport(J, L) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return 0.19410540472492188;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1271487233402476;  // std dev = 0.091, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return 0.5604855844032175;  // std dev = 0.148, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else if ( teamplaysagainstteam(F, A), teamplaysinleague(A, D) )
%   | | | then return 0.41250929388914187;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5389577417325705;  // std dev = 0.992, 61.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=60 */
%   | else return 0.22203310341295138;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( athleteplayssport(G, B) )
%   | then return 0.11566397483432893;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysinleague(A, H), teamalsoknownas(I, A) )
%   | | then if ( teamplaysagainstteam(I, J), teamalsoknownas(J, A) )
%   | | | then return 0.19327606478813297;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11596362954527852;  // std dev = 0.062, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.11327760265747318;  // std dev = 0.063, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A), athleteplaysforteam(C, E) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then if ( athleteplayssport(D, B) )
%   | | | then return 0.42042297069246204;  // std dev = 0.113, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return 0.37057467074282796;  // std dev = 0.979, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else if ( athleteplaysinleague(D, F), teamplaysinleague(A, F) )
%   | | | then return -0.1036232738264038;  // std dev = 0.706, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.341826074523943;  // std dev = 0.966, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( teamalsoknownas(A, G), teamalsoknownas(G, A) )
%   | | then if ( athleteledsportsteam(C, H), teamplaysinleague(A, I) )
%   | | | then return 0.4215094317090865;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14056056878189127;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteledsportsteam(C, J) )
%   | | | then return 0.4245289344560364;  // std dev = 0.101, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0.5874980929992191;  // std dev = 0.303, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09988766235067177;  // std dev = 0.055, 260.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.3309262629488097;  // std dev = 0.259, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( teamalsoknownas(E, A), athleteledsportsteam(F, A) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return -0.09476010073012427;  // std dev = 0.028, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.20152708123476945;  // std dev = 0.720, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return -0.09639281537917471;  // std dev = 0.232, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | | else if ( teamalsoknownas(A, H) )
%   | | | then return -0.09379695604574546;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07707774176543715;  // std dev = 0.844, 50.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.26129593154109354;  // std dev = 0.183, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | else if ( athleteledsportsteam(C, D), teamalsoknownas(D, G) )
%   | | | then return 0.2599603588762939;  // std dev = 0.056, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.3192812467718089;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.04969588043193531;  // std dev = 0.969, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamplaysagainstteam(A, H), teamalsoknownas(I, A) )
%   | then if ( teamalsoknownas(J, H) )
%   | | then return -0.08899393883223398;  // std dev = 0.036, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.04419765619022133;  // std dev = 0.804, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.08605533836998033;  // std dev = 0.062, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A), athleteplaysinleague(C, E) )
%   | then if ( athleteplaysforteam(C, A), athleteledsportsteam(C, A) )
%   | | then if ( athleteledsportsteam(D, F), teamplaysagainstteam(F, A) )
%   | | | then return 0.20513237342668905;  // std dev = 1.29e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1217990400933557;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.22541934505241742;  // std dev = 0.031, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | else if ( teamplaysagainstteam(A, G), teamalsoknownas(H, G) )
%   | | then if ( athleteledsportsteam(C, G), athleteplaysforteam(C, G) )
%   | | | then return 0.2275424629833391;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.3836462547210283;  // std dev = 1.177, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( teamalsoknownas(A, I) )
%   | | | then return 0.2112406646874859;  // std dev = 0.051, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.14826567358841514;  // std dev = 1.761, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   else if ( athleteledsportsteam(J, A), teamalsoknownas(K, A) )
%   | then return -0.049298938845174875;  // std dev = 0.170, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | else return -0.07994872303566562;  // std dev = 0.089, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( athleteplaysforteam(C, E), teamalsoknownas(E, F) )
%   | | then return 0.1837630995979863;  // std dev = 0.127, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | | else if ( athleteledsportsteam(G, A), athleteplaysforteam(G, A) )
%   | | | then return 0.10568508598868696;  // std dev = 0.882, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.18448840603617442;  // std dev = 0.105, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else return 0.2862490677450409;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( athleteledsportsteam(H, A), athleteplaysinleague(H, I) )
%   | then if ( teamplaysinleague(A, I) )
%   | | then return -0.07582696266404597;  // std dev = 0.055, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0.20240085984592113;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, J) )
%   | | then return -0.07634650481971356;  // std dev = 0.217, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.07547904320891682;  // std dev = 0.014, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06346461422065533;  // std dev = 0.766, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then if ( athleteplaysforteam(G, A) )
%   | | | then return 0.15722060032391594;  // std dev = 0.093, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return 0.01689928807640511;  // std dev = 0.927, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.1598316632833941;  // std dev = 0.120, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | else return 0.24818411285022424;  // std dev = 0.595, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( teamalsoknownas(H, A), athleteplaysforteam(I, A) )
%   | then if ( athleteledsportsteam(J, A), teamalsoknownas(K, H) )
%   | | then return 0.18442590014005075;  // std dev = 0.651, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.07439489692678422;  // std dev = 0.030, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.06890625978582388;  // std dev = 0.047, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(D, E) )
%   | then if ( athleteplaysforteam(F, A), athleteplaysinleague(C, G) )
%   | | then return 0.13945423697799061;  // std dev = 0.117, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else if ( teamalsoknownas(H, D), athleteplaysinleague(C, I) )
%   | | | then return 0.17784402287028722;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17967599163675746;  // std dev = 0.812, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( teamplaysinleague(A, J) )
%   | | then return 0.14096446286821374;  // std dev = 0.099, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.1289310449411105;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16518105247274562;  // std dev = 0.489, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( athleteplaysforteam(L, A), athleteledsportsteam(L, A) )
%   | then if ( teamplaysagainstteam(A, M), teamalsoknownas(N, M) )
%   | | then return -0.06934248061221551;  // std dev = 0.085, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0.08390009305055589;  // std dev = 0.663, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.0651714569049758;  // std dev = 0.066, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.651', 'seconds']
Refined model CLL: -0.085065


******************************************
Best model found
******************************************
Results 

CLL : -0.086707 

AUC ROC : 0.995143 

AUC PR : 0.324097 

Precision : 0.19245 

Recall : 0.984848 

F1 : 0.321981 

Total Learning Time : 230.285 

Total Inference Time : 13.78100061416626 

Total revision time: 248.40219232559204
Best scored revision CLL: -0.085065


Results 

CLL : -0.086707 

AUC ROC : 0.995143 

AUC PR : 0.324097 

Precision : 0.19245 

Recall : 0.984848 

F1 : 0.321981 

Total Learning Time : 248.46864649772644 

Total Inference Time : 13.78100061416626 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.624
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 416.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 408.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 408.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.462, 430.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 386.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 394.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 402.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 398.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 412.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.819', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 169.436
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteledsportsteam(C, F) )
%   | then if ( teamplaysagainstteam(E, F) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( teamalsoknownas(E, G), teamplaysinleague(A, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.42957750652808363;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.8581489350995125;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   else if ( teamplaysagainstteam(I, A) )
%   | then return -0.14185106490048813;  // std dev = 0.000, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else if ( teamalsoknownas(J, A), teamplaysinleague(A, K) )
%   | | then if ( teamalsoknownas(A, J) )
%   | | | then return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.12224322176323278;  // std dev = 0.990, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysagainstteam(F, A) )
%   | then return 0.7227223702508782;  // std dev = 0.132, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( teamplaysagainstteam(A, G), athleteledsportsteam(H, G) )
%   | | then return 0.46947341221095434;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | | then return 0.7254714885923526;  // std dev = 0.075, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.6542560209066065;  // std dev = 1.675, 46.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   else if ( teamplaysagainstteam(K, A) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | else if ( teamalsoknownas(L, A), teamplaysinleague(A, M) )
%   | | then if ( teamalsoknownas(A, L) )
%   | | | then return -0.07148348054979568;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( athleteplayssport(N, B) )
%   | | | then return 0.2057217066200777;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12655168684022416;  // std dev = 0.010, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | | then return 0.5577045965124073;  // std dev = 0.117, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else if ( teamplaysagainstteam(A, G), teamalsoknownas(G, H) )
%   | | | then return 0.38789734642639023;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5409875557893461;  // std dev = 1.402, 70.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=68 */
%   | else if ( teamplaysagainstteam(A, I), athleteledsportsteam(J, I) )
%   | | then return -0.021011282802434087;  // std dev = 0.750, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( athleteplaysinleague(C, K), teamalsoknownas(L, A) )
%   | | | then return 0.2380739248710312;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6829045087191371;  // std dev = 0.322, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1132935857116063;  // std dev = 0.055, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(D, A), athleteplaysinleague(D, E) )
%   | then if ( athleteplaysforteam(D, F), athleteledsportsteam(C, G) )
%   | | then return 0.4162767957829394;  // std dev = 0.003, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return -0.03265729994820868;  // std dev = 0.909, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( athleteledsportsteam(C, H) )
%   | | then return 0.4338242513298948;  // std dev = 0.229, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.4647201801515738;  // std dev = 0.202, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6739793159813163;  // std dev = 0.199, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10255316959202923;  // std dev = 0.057, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then return 0.3311378730801341;  // std dev = 0.300, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( athleteledsportsteam(C, F) )
%   | | then if ( athleteplaysforteam(C, F), teamalsoknownas(F, G) )
%   | | | then return 0.2542715267431162;  // std dev = 0.965, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.3314576461056922;  // std dev = 0.029, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.16965346559094968;  // std dev = 0.745, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | then return -0.09626842520917363;  // std dev = 0.372, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | else if ( teamalsoknownas(A, J), teamalsoknownas(J, A) )
%   | | then return -0.06612582681218082;  // std dev = 0.165, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return -0.09246769398802437;  // std dev = 0.000261, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.08119794723480514;  // std dev = 0.676, 56.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then if ( teamalsoknownas(D, E) )
%   | | then return 0.25615303059136446;  // std dev = 0.131, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else if ( teamplaysagainstteam(E, F), teamplaysinleague(A, G) )
%   | | | then return -0.2190620874000655;  // std dev = 1.009, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2625464018659789;  // std dev = 0.098, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2733443269618545;  // std dev = 0.048, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( athleteplayssport(H, B), teamplaysagainstteam(A, I) )
%   | then return 0.3272654700650876;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamalsoknownas(A, J), teamplaysinleague(A, K) )
%   | | then if ( athleteplayssport(L, B) )
%   | | | then return -0.3035323633334732;  // std dev = 0.710, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08853125522343934;  // std dev = 0.052, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.08666263225892554;  // std dev = 0.298, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | | | else return -0.08060836733188066;  // std dev = 1.055, 63.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( teamplaysinleague(A, E), teamplaysagainstteam(A, F) )
%   | then if ( athleteplayssport(G, B) )
%   | | then return 0.21491301035119129;  // std dev = 0.198, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return -0.07831463480379111;  // std dev = 0.004, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.22076912254766765;  // std dev = 0.089, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.0791404675352199;  // std dev = 0.003, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(I, B) )
%   | then if ( athleteplaysforteam(I, J) )
%   | | then if ( athleteledsportsteam(I, J), teamalsoknownas(J, K) )
%   | | | then return 0.1386707356057451;  // std dev = 1.353, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.2127180045951138;  // std dev = 0.782, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   | | else return 0.32157648970674974;  // std dev = 0.352, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.08067632844178085;  // std dev = 0.045, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A), athleteplaysforteam(F, E) )
%   | then if ( teamplaysinleague(A, D) )
%   | | then return 0.17365134751739464;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1978421162682412;  // std dev = 1.134, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( teamplaysagainstteam(G, A), teamalsoknownas(H, G) )
%   | | then if ( athleteledsportsteam(C, H) )
%   | | | then return 0.17796909983707526;  // std dev = 0.103, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return 0.009132786985974573;  // std dev = 1.421, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else if ( athleteledsportsteam(C, I), teamalsoknownas(A, J) )
%   | | | then return 0.11468080930252647;  // std dev = 0.948, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.18862528910460263;  // std dev = 0.156, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( athleteplayssport(K, B), teamplaysinleague(A, L) )
%   | then return -0.1500150573279732;  // std dev = 0.831, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( teamplaysinleague(A, M) )
%   | | then return -0.07332852933231448;  // std dev = 0.037, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | | else return -0.06405832732034299;  // std dev = 0.082, 57.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, D) )
%   | | then if ( teamplaysagainstteam(F, A) )
%   | | | then return 0.15420324717621983;  // std dev = 0.102, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return 0.030865496845957338;  // std dev = 0.936, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.1689912503681102;  // std dev = 0.023, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else if ( teamalsoknownas(A, G) )
%   | | then return 0.22854141229141034;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.17107017364891897;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | then if ( athleteledsportsteam(I, J) )
%   | | then return -0.06857950456041809;  // std dev = 0.067, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else return -0.08438174800936744;  // std dev = 0.079, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( athleteplayssport(K, B) )
%   | | then return 0.298833253756049;  // std dev = 0.657, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.07076930781646654;  // std dev = 0.039, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(D, A), athleteplaysforteam(D, A) )
%   | then if ( athleteledsportsteam(C, E), teamplaysagainstteam(E, A) )
%   | | then return 0.13132061397835967;  // std dev = 0.002, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.17555261650868362;  // std dev = 0.888, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( athleteplaysforteam(C, F), athleteledsportsteam(G, F) )
%   | | then if ( teamplaysinleague(A, H), athleteplayssport(G, B) )
%   | | | then return 0.14657988205904177;  // std dev = 0.178, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0.11456449161433133;  // std dev = 0.722, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.19093410795528865;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.39169219939258065;  // std dev = 0.247, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06494718936116677;  // std dev = 0.046, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '53.908', 'seconds']
Refined model CLL: -0.084715


******************************************
Best model found
******************************************
Results 

CLL : -0.083127 

AUC ROC : 0.992463 

AUC PR : 0.303779 

Precision : 0.168062 

Recall : 0.988636 

F1 : 0.287287 

Total Learning Time : 169.436 

Total Inference Time : 28.74243950843811 

Total revision time: 202.55332451820374
Best scored revision CLL: -0.084715


Results 

CLL : -0.083127 

AUC ROC : 0.992463 

AUC PR : 0.303779 

Precision : 0.168062 

Recall : 0.988636 

F1 : 0.287287 

Total Learning Time : 202.61977869033814 

Total Inference Time : 28.74243950843811 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.638
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 384.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 387.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 374.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 373.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 410.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.462, 424.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 388.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 393.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 384.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 408.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.880', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 134.41
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, A) )
%   | then if ( athleteledsportsteam(C, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( athleteledsportsteam(F, A), athleteplaysinleague(F, D) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.8581489350995124;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( teamplaysinleague(A, G) )
%   | then return -0.14185106490048843;  // std dev = 0.000, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | else if ( teamplaysagainstteam(A, H), teamalsoknownas(I, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.12101773156715435;  // std dev = 0.990, 48.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return 0.7246128142012964;  // std dev = 0.136, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else if ( teamplaysagainstteam(H, A), athleteledsportsteam(I, H) )
%   | | | then return 0.5766162693538115;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6990652489456488;  // std dev = 0.990, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | else if ( teamplaysagainstteam(A, J), athleteplaysforteam(K, J) )
%   | | then return 0.386140078877621;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.725949263273204;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamalsoknownas(A, L), teamplaysagainstteam(A, M) )
%   | then if ( teamalsoknownas(N, M) )
%   | | then return -0.12544463852839133;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.03620737419896654;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( teamplaysinleague(A, P) )
%   | | then return -0.1254446385283915;  // std dev = 0.000, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | | else return -0.11242425953935804;  // std dev = 0.122, 66.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamalsoknownas(E, F) )
%   | then if ( athleteplaysforteam(C, E) )
%   | | then return 0.5652842487706377;  // std dev = 0.172, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else if ( athleteledsportsteam(G, E), athleteledsportsteam(C, H) )
%   | | | then return -0.10049966603423004;  // std dev = 0.846, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5716793785564991;  // std dev = 0.077, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5607597850116417;  // std dev = 0.103, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.11254309194872124;  // std dev = 0.030, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | else if ( teamplaysagainstteam(A, J), teamalsoknownas(A, K) )
%   | | then return 0.07464643326854095;  // std dev = 0.855, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamalsoknownas(A, L) )
%   | | | then return -0.11492269713254054;  // std dev = 0.004, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08891946323364774;  // std dev = 0.986, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamalsoknownas(F, A), teamplaysinleague(F, G) )
%   | | then if ( athleteledsportsteam(H, F), teamplaysinleague(A, G) )
%   | | | then return 0.113566087581922;  // std dev = 0.736, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4210678884455588;  // std dev = 0.032, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.42445788283513586;  // std dev = 0.269, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else if ( teamplaysagainstteam(A, I), teamplaysagainstteam(I, A) )
%   | | then return 0.1501051538221141;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.43092191601786933;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.1018886923667737;  // std dev = 0.031, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | else if ( teamplaysagainstteam(K, A), teamalsoknownas(A, L) )
%   | | then return 0.03548657381785515;  // std dev = 0.872, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamalsoknownas(M, A) )
%   | | | then return -0.10733076128492987;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0856574623004458;  // std dev = 0.989, 48.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A), athleteplaysinleague(E, F) )
%   | then if ( teamplaysinleague(A, D), athleteledsportsteam(C, A) )
%   | | then return 0.3192440868895085;  // std dev = 0.069, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( athleteplaysforteam(E, A) )
%   | | | then return 0.2503856880080046;  // std dev = 0.842, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.03572600778306793;  // std dev = 0.689, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.32738173527092085;  // std dev = 0.276, 98.000 (wgt'ed) examples reached here.  /* #pos=98 */
%   else if ( teamplaysinleague(A, G) )
%   | then return -0.09295642314554038;  // std dev = 0.029, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else if ( teamplaysagainstteam(A, H), teamalsoknownas(A, I) )
%   | | then return 0.1002449759637069;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.10038797166068081;  // std dev = 0.024, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0758613028351103;  // std dev = 0.988, 45.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, F) )
%   | then if ( athleteplaysforteam(C, F), athleteledsportsteam(C, F) )
%   | | then return 0.261107068416612;  // std dev = 0.116, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( athleteplaysinleague(E, D), teamplaysinleague(F, D) )
%   | | | then return -0.22293876419358707;  // std dev = 0.963, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.17366982280901122;  // std dev = 0.950, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( teamplaysagainstteam(A, G), teamalsoknownas(H, G) )
%   | | then return 0.2748373811604488;  // std dev = 0.045, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( teamplaysinleague(A, I), teamplaysagainstteam(J, A) )
%   | | | then return 0.19921531489757593;  // std dev = 0.975, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.2551397570625675;  // std dev = 0.029, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( teamplaysinleague(A, K) )
%   | then return -0.08577159313055786;  // std dev = 0.039, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | else if ( teamalsoknownas(L, A), teamalsoknownas(A, L) )
%   | | then return 0.025117537772799504;  // std dev = 0.322, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.07656431167911927;  // std dev = 0.126, 62.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A), athleteplaysforteam(E, F) )
%   | then return 0.23457181927581508;  // std dev = 0.045, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else if ( athleteledsportsteam(C, G) )
%   | | then if ( teamplaysinleague(A, H) )
%   | | | then return 0.17972359059400664;  // std dev = 1.401, 65.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=63 */
%   | | | else return 0.21714097412263886;  // std dev = 0.151, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( teamplaysagainstteam(I, A), athleteledsportsteam(J, I) )
%   | | | then return 0.26342790247104036;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0431713049967819;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(A, K) )
%   | then return -0.07867731262533628;  // std dev = 7.15e-08, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | else if ( teamplaysagainstteam(L, A), teamalsoknownas(L, M) )
%   | | then if ( teamalsoknownas(M, N), teamplaysagainstteam(A, L) )
%   | | | then return 0.08333844744281335;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.08777054464781395;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06890369509190547;  // std dev = 0.129, 59.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.1872932793982308;  // std dev = 0.298, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else if ( teamplaysinleague(A, E) )
%   | then return -0.07338368929950094;  // std dev = 0.023, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else if ( teamalsoknownas(F, A), teamalsoknownas(A, F) )
%   | | then if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.16417911424915363;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08507235081860287;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return -0.08083544874494902;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.054419267900991254;  // std dev = 0.987, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamalsoknownas(A, E) )
%   | then return -0.053884657018360455;  // std dev = 0.688, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( teamplaysagainstteam(F, A), teamalsoknownas(F, G) )
%   | | then return 0.16603467397715677;  // std dev = 0.033, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else if ( athleteplaysforteam(H, A), athleteledsportsteam(H, A) )
%   | | | then return -0.045500058427279486;  // std dev = 0.854, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.14066083376108862;  // std dev = 0.999, 69.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=68 */
%   else if ( athleteplayssport(I, B), athleteplaysinleague(I, J) )
%   | then if ( athleteledsportsteam(K, A) )
%   | | then return -0.2940293763578738;  // std dev = 0.633, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1855254732471646;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysinleague(A, L) )
%   | | then return -0.06857082208713586;  // std dev = 0.022, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | else if ( teamalsoknownas(M, A), teamplaysinleague(M, N) )
%   | | | then return 0.020271467845254302;  // std dev = 0.816, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.05939446961129571;  // std dev = 0.997, 49.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.1410653562623869;  // std dev = 0.218, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( teamplaysagainstteam(A, F), athleteplaysforteam(G, F) )
%   | | then return -0.04180627366891432;  // std dev = 0.538, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.17553807390350779;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysagainstteam(A, H), teamalsoknownas(A, I) )
%   | then if ( teamplaysinleague(A, J) )
%   | | then return -0.06595723406324225;  // std dev = 0.021, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0.1382866124752975;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamalsoknownas(A, K) )
%   | | then return -0.07127097373454669;  // std dev = 0.065, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.06473778321695278;  // std dev = 0.018, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | | else return -0.05683387365896599;  // std dev = 0.991, 81.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.065', 'seconds']
Refined model CLL: -0.082745


******************************************
Best model found
******************************************
Results 

CLL : -0.083324 

AUC ROC : 0.989852 

AUC PR : 0.33143 

Precision : 0.204209 

Recall : 0.984962 

F1 : 0.338283 

Total Learning Time : 134.41 

Total Inference Time : 12.787027835845947 

Total revision time: 151.6509920578003
Best scored revision CLL: -0.082745


Results 

CLL : -0.083324 

AUC ROC : 0.989852 

AUC PR : 0.33143 

Precision : 0.204209 

Recall : 0.984962 

F1 : 0.338283 

Total Learning Time : 151.7174462299347 

Total Inference Time : 12.787027835845947 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.535
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 421.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 405.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 375.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 420.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 377.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 417.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 390.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 409.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 404.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 406.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.874', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 341.198
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D), athleteledsportsteam(C, E) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | else if ( athleteplaysforteam(F, A), athleteplaysinleague(F, D) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.7361977155873163;  // std dev = 2.095, 41.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=36 */
%   else if ( teamplaysagainstteam(A, H), teamalsoknownas(I, H) )
%   | then return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( teamalsoknownas(J, A), teamplaysagainstteam(K, A) )
%   | | then if ( teamplaysagainstteam(A, K) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | | else return -0.1218510649004877;  // std dev = 0.990, 50.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A), athleteplaysinleague(E, F) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.7211246593707259;  // std dev = 0.033, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.3941211068165163;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7298136838496105;  // std dev = 0.158, 100.000 (wgt'ed) examples reached here.  /* #pos=100 */
%   else if ( teamalsoknownas(G, A), athleteledsportsteam(H, A) )
%   | then if ( teamalsoknownas(I, G), teamplaysagainstteam(G, I) )
%   | | then return -0.1254446385283914;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.11421789391159354;  // std dev = 0.830, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysinleague(A, J) )
%   | | then return -0.12544463852839177;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.1264762762069703;  // std dev = 0.004, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.10201426505574922;  // std dev = 0.987, 39.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.5649308090861089;  // std dev = 0.232, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( teamalsoknownas(E, A), athleteledsportsteam(F, A) )
%   | then if ( teamplaysagainstteam(E, G), athleteplaysforteam(F, A) )
%   | | then return 0.19736334045196566;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.13852047134539208;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.2195491149868877;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11321947511664861;  // std dev = 0.044, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then return 0.4212661128653624;  // std dev = 0.167, 60.000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return 0.17760032117856936;  // std dev = 0.849, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.42817740221515393;  // std dev = 0.162, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( teamalsoknownas(H, A), teamplaysagainstteam(H, A) )
%   | then return -0.13888554301459602;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(J, I) )
%   | | then return -0.10244471344601008;  // std dev = 0.059, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( athleteledsportsteam(K, A), athleteplaysinleague(K, L) )
%   | | | then return -0.018951599976615496;  // std dev = 0.870, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.09736508132057242;  // std dev = 0.961, 157.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), teamplaysagainstteam(E, A) )
%   | then if ( teamplaysagainstteam(A, F), athleteplaysinleague(C, G) )
%   | | then if ( teamplaysinleague(F, G) )
%   | | | then return 0.32130803321026435;  // std dev = 0.143, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | | else return 0.19064083758343003;  // std dev = 1.297, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0.0016197384028813488;  // std dev = 0.892, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.32572339081711343;  // std dev = 0.073, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( teamalsoknownas(A, I) )
%   | | | then return 0.33286000776177366;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.37718183849322534;  // std dev = 0.514, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( teamalsoknownas(J, A), teamplaysagainstteam(J, A) )
%   | then return -0.12329863749358816;  // std dev = 0.095, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( teamalsoknownas(K, A), teamalsoknownas(L, K) )
%   | | then return -0.05466475660787754;  // std dev = 0.189, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else return -0.09355347003977281;  // std dev = 0.024, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( teamplaysinleague(A, F), teamplaysinleague(D, F) )
%   | | then if ( athleteplaysinleague(G, F) )
%   | | | then return 0.25430031894390515;  // std dev = 0.116, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | | else return 0.1903271127546965;  // std dev = 0.957, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( athleteledsportsteam(C, D), teamalsoknownas(D, H) )
%   | | | then return 0.26764285520335535;  // std dev = 0.125, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.3115317159960399;  // std dev = 0.534, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.1568169601634333;  // std dev = 0.489, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamalsoknownas(I, A), teamalsoknownas(J, I) )
%   | then if ( athleteledsportsteam(K, A), teamplaysagainstteam(A, J) )
%   | | then return 0.16297489766072204;  // std dev = 0.780, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09068037790551106;  // std dev = 0.022, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.08768479396590619;  // std dev = 0.137, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.21662472371256186;  // std dev = 0.223, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( teamplaysagainstteam(E, A), teamalsoknownas(E, A) )
%   | then return -0.12126915891562494;  // std dev = 0.063, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( teamalsoknownas(F, A), athleteplaysforteam(G, F) )
%   | | then if ( athleteledsportsteam(G, H) )
%   | | | then return 0.059143097867866465;  // std dev = 0.805, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.08141870328218372;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return -0.08137849425623256;  // std dev = 0.207, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | | else return -0.06571178529593215;  // std dev = 0.844, 54.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(D, A), athleteplaysforteam(C, E) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return 0.17755996993262105;  // std dev = 0.073, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.24666140033754216;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( athleteledsportsteam(C, F) )
%   | | then return 0.1818187144083359;  // std dev = 0.155, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | else return 0.2500416897273879;  // std dev = 0.690, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( teamplaysagainstteam(A, G), teamalsoknownas(G, A) )
%   | then return -0.10002016572233678;  // std dev = 0.064, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( athleteledsportsteam(H, A), athleteplaysinleague(H, I) )
%   | | then if ( athleteplayssport(H, J) )
%   | | | then return -0.0734691277929529;  // std dev = 0.013, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0.20459216541076286;  // std dev = 0.679, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.07534843136039181;  // std dev = 0.080, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(E, A), teamalsoknownas(E, F) )
%   | | then return 0.15662021535592116;  // std dev = 0.147, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.1155410675306394;  // std dev = 1.366, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return 0.15384897720135657;  // std dev = 0.047, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.29552753069779225;  // std dev = 0.494, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, A) )
%   | then if ( teamalsoknownas(J, H) )
%   | | then return -0.07392854140659406;  // std dev = 0.063, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.11479118375966864;  // std dev = 0.699, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.06994294132615615;  // std dev = 0.058, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( teamalsoknownas(A, E), teamplaysinleague(A, F) )
%   | then if ( athleteplaysinleague(G, F), teamalsoknownas(H, A) )
%   | | then return -0.3651915668842506;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( teamplaysagainstteam(D, E), teamalsoknownas(E, I) )
%   | | | then return -0.06985940100885035;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.14322358551044434;  // std dev = 0.087, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysinleague(A, J), athleteplaysinleague(C, J) )
%   | | then return 0.13358508014938728;  // std dev = 0.074, 60.000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return 0.1464489705681559;  // std dev = 0.105, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   else if ( athleteledsportsteam(K, A), athleteplayssport(K, L) )
%   | then if ( athleteplaysforteam(K, A), athleteplaysinleague(K, M) )
%   | | then if ( teamplaysagainstteam(A, N), teamalsoknownas(N, P) )
%   | | | then return -0.09603203384530618;  // std dev = 0.756, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.06362624177325188;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06641519672151786;  // std dev = 0.022, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.05876078726692095;  // std dev = 0.064, 195.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.747', 'seconds']
Refined model CLL: -0.08534


******************************************
Best model found
******************************************
Results 

CLL : -0.086977 

AUC ROC : 0.995828 

AUC PR : 0.308502 

Precision : 0.19245 

Recall : 0.984848 

F1 : 0.321981 

Total Learning Time : 341.198 

Total Inference Time : 17.12137770652771 

Total revision time: 362.5362720088959
Best scored revision CLL: -0.08534


Results 

CLL : -0.086977 

AUC ROC : 0.995828 

AUC PR : 0.308502 

Precision : 0.19245 

Recall : 0.984848 

F1 : 0.321981 

Total Learning Time : 362.5817169742584 

Total Inference Time : 17.12137770652771 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.589
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.464, 425.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.480, 369.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 399.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 389.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 400.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 384.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 414.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 372.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 400.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 408.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.009', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 139.556
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.8581489350995103;  // std dev = 7.73e-07, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.1418510649004881;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then if ( athleteplaysforteam(C, E) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return 0.49725118998873263;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else return 0.3332054912315484;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.1254446385283919;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamplaysinleague(E, D) )
%   | then if ( athleteledsportsteam(C, E), teamplaysagainstteam(E, A) )
%   | | then return 0.555366436746284;  // std dev = 2.15e-07, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else if ( teamalsoknownas(F, E), teamplaysinleague(A, G) )
%   | | | then return 0.08236048906666871;  // std dev = 1.204, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.5673637933331221;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5582458023271264;  // std dev = 0.105, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( teamalsoknownas(H, A), athleteplaysforteam(I, H) )
%   | then if ( athleteledsportsteam(I, H) )
%   | | then return -0.11231637819360629;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.18567266771651258;  // std dev = 0.730, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( athleteplayssport(J, B) )
%   | | then return 0.03165075953675033;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.1123163781936068;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then return 0.42142036792352094;  // std dev = 0.207, 125.000 (wgt'ed) examples reached here.  /* #pos=125 */
%   | else if ( teamplaysagainstteam(A, E), teamplaysinleague(E, F) )
%   | | then return -0.1870139671961386;  // std dev = 0.938, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.41681350075132273;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6471093501135301;  // std dev = 0.283, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.101839236075406;  // std dev = 0.043, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B), athleteplaysforteam(D, E) )
%   | then if ( teamplaysinleague(E, C), teamalsoknownas(F, E) )
%   | | then if ( athleteplaysforteam(G, A), athleteplaysinleague(D, C) )
%   | | | then return 0.3248656027371799;  // std dev = 0.153, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.25272886645717996;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.3304461313762684;  // std dev = 0.047, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then if ( athleteplaysinleague(I, C), athleteplaysforteam(J, H) )
%   | | | then return -0.09432972391058465;  // std dev = 0.143, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | | else return -0.025639008145033865;  // std dev = 0.789, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return -0.09401748755265783;  // std dev = 0.028, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.1113685545600062;  // std dev = 0.675, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( athleteplayssport(L, B) )
%   | then return 0.33109740573810176;  // std dev = 0.055, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.09267084986259659;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( athleteledsportsteam(C, E) )
%   | | then if ( teamplaysagainstteam(A, F) )
%   | | | then return 0.26132695975494374;  // std dev = 0.167, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | | else return 0.23637231649075405;  // std dev = 0.994, 58.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=57 */
%   | | else return 0.3226526145788058;  // std dev = 0.357, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.10256205265760607;  // std dev = 0.899, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.08540748939563514;  // std dev = 0.055, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | then if ( athleteledsportsteam(C, E), teamplaysagainstteam(E, A) )
%   | | then return 0.20836932548454634;  // std dev = 0.020, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( teamplaysinleague(F, D), teamalsoknownas(G, F) )
%   | | | then return 0.3495382743614141;  // std dev = 0.261, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22957576681946523;  // std dev = 0.119, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( teamplaysagainstteam(A, H), teamalsoknownas(H, I) )
%   | | then if ( athleteplaysforteam(J, A), teamplaysagainstteam(H, I) )
%   | | | then return -0.11567043846939855;  // std dev = 0.765, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20856481222358852;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return 0.21313802352954064;  // std dev = 0.058, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.17331827744710557;  // std dev = 0.981, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( athleteplayssport(L, B) )
%   | then return 0.03111057808776753;  // std dev = 0.981, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.07895414000266687;  // std dev = 0.046, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( teamalsoknownas(A, F) )
%   | | then return 0.17626946163191287;  // std dev = 0.017, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( teamplaysinleague(A, G), athleteplaysinleague(C, G) )
%   | | | then return 0.18154979361667511;  // std dev = 0.106, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return 0.10512312564215964;  // std dev = 1.948, 58.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=53 */
%   | else if ( athleteplaysforteam(H, A) )
%   | | then return 0.07741762500877519;  // std dev = 0.339, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3378872901040679;  // std dev = 0.406, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07385536649874817;  // std dev = 0.058, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.16136377843212052;  // std dev = 0.280, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | then return -0.06917793971200357;  // std dev = 0.033, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( teamalsoknownas(E, H), teamalsoknownas(H, I) )
%   | | | then return -0.12813638944071223;  // std dev = 0.252, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07341588673760326;  // std dev = 0.220, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( teamplaysinleague(A, J), athleteplaysinleague(K, J) )
%   | | then return -0.06727699011986506;  // std dev = 0.001, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( teamplaysinleague(A, L), teamalsoknownas(M, A) )
%   | | | then return -0.014758362929436449;  // std dev = 0.452, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.060939161669234986;  // std dev = 0.513, 73.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteledsportsteam(E, A), athleteplaysinleague(E, D) )
%   | | then if ( athleteplayssport(E, F), athleteledsportsteam(C, G) )
%   | | | then return 0.13205026479001952;  // std dev = 0.014, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.23869899347937926;  // std dev = 1.044, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( teamalsoknownas(H, A), athleteplaysforteam(I, H) )
%   | | | then return 0.22011004057683156;  // std dev = 0.289, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.11771868453989458;  // std dev = 1.064, 64.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=62 */
%   | else if ( athleteledsportsteam(C, J) )
%   | | then return 0.1451462147648029;  // std dev = 0.027, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.20319321048927833;  // std dev = 0.302, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06460297897934725;  // std dev = 0.054, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.595', 'seconds']
Refined model CLL: -0.085321


******************************************
Best model found
******************************************
Results 

CLL : -0.083864 

AUC ROC : 0.994461 

AUC PR : 0.251643 

Precision : 0.170477 

Recall : 0.988636 

F1 : 0.290808 

Total Learning Time : 139.556 

Total Inference Time : 15.777338027954102 

Total revision time: 159.85641481399537
Best scored revision CLL: -0.085321


Results 

CLL : -0.083864 

AUC ROC : 0.994461 

AUC PR : 0.251643 

Precision : 0.170477 

Recall : 0.988636 

F1 : 0.290808 

Total Learning Time : 159.90185977935792 

Total Inference Time : 15.777338027954102 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.54
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 400.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 396.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 377.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 377.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 401.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 399.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 384.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 389.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 384.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 381.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.847', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 147.047
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.8581489350995115;  // std dev = 2.92e-07, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( athleteplaysforteam(C, G), teamalsoknownas(E, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( teamplaysagainstteam(A, H), teamplaysagainstteam(H, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.1418510649004884;  // std dev = 0.000, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | else if ( teamalsoknownas(J, A), teamplaysagainstteam(A, K) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.11407328712270995;  // std dev = 0.986, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | then if ( teamplaysinleague(A, G), teamplaysagainstteam(E, A) )
%   | | then return 0.7205638600594517;  // std dev = 0.062, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else return 0.2194734122109545;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.722137220526569;  // std dev = 0.105, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.12544463852839163;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | else if ( teamalsoknownas(I, A), teamplaysagainstteam(J, A) )
%   | | then return 0.06510202988838686;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.10526811676076743;  // std dev = 0.988, 43.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | then if ( athleteledsportsteam(C, E) )
%   | | then return 0.5550971512579251;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( athleteledsportsteam(G, F), teamplaysagainstteam(E, A) )
%   | | | then return -0.17487540523481637;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5900551330724065;  // std dev = 0.153, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.5637850100316805;  // std dev = 0.131, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0.5547085537788925;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.5128964499770272;  // std dev = 0.899, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.11231637819360661;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else if ( teamalsoknownas(A, K), teamalsoknownas(K, A) )
%   | | then return 0.07162990245999765;  // std dev = 0.862, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.09692233411098529;  // std dev = 0.140, 50.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(E, F) )
%   | | then return 0.41957639591495866;  // std dev = 0.180, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else if ( teamplaysagainstteam(G, A), teamplaysagainstteam(E, G) )
%   | | | then return 0.24943948767473323;  // std dev = 0.729, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.4162341853825106;  // std dev = 0.012, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return 0.4388372176403664;  // std dev = 0.195, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( teamalsoknownas(H, A), teamplaysagainstteam(A, I) )
%   | then if ( athleteplaysforteam(J, A) )
%   | | then return -0.1015963294878362;  // std dev = 9.13e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.2098466599988642;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.10159632948783646;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | else if ( teamalsoknownas(L, A) )
%   | | | then return -0.12201281066916382;  // std dev = 0.040, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.0832592619068952;  // std dev = 0.987, 44.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(D, E) )
%   | then return 0.3300714455089207;  // std dev = 0.233, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else if ( teamplaysagainstteam(A, F), athleteplaysforteam(G, F) )
%   | | then if ( athleteledsportsteam(G, F) )
%   | | | then return 0.3181961041975603;  // std dev = 2.11e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.08471623477968232;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3238951534106891;  // std dev = 0.103, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.09269127618926057;  // std dev = 9.19e-08, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(I, J) )
%   | | then if ( teamalsoknownas(A, J), teamplaysagainstteam(A, I) )
%   | | | then return 0.1690993229737796;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10304050841755696;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return -0.10383892512753708;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07501561845551356;  // std dev = 0.987, 42.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamplaysinleague(E, D) )
%   | then return 0.2591228690158836;  // std dev = 0.201, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( athleteplaysforteam(G, A) )
%   | | | then return -0.025138632052377097;  // std dev = 1.181, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.2074632704859484;  // std dev = 1.388, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else return 0.26659529664030585;  // std dev = 0.143, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.08589674776965364;  // std dev = 0.066, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | else if ( teamalsoknownas(I, A), teamplaysagainstteam(J, A) )
%   | | then return 0.054257891369149824;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.08998068297006728;  // std dev = 0.038, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06880138876262018;  // std dev = 0.988, 40.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then return 0.21702556176222831;  // std dev = 0.202, 99.000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.2459565631958257;  // std dev = 0.129, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.16770430375301115;  // std dev = 0.196, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( teamplaysinleague(A, G) )
%   | then return -0.07923442512226772;  // std dev = 0.057, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else if ( teamalsoknownas(H, A), teamplaysagainstteam(I, A) )
%   | | then return 0.13982435679039532;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(A, J) )
%   | | | then return -0.08890772710903959;  // std dev = 0.036, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.06615368738252196;  // std dev = 0.989, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.18418590040824254;  // std dev = 0.221, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else if ( teamplaysinleague(A, D) )
%   | then return -0.07351832474039852;  // std dev = 0.041, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else if ( teamplaysagainstteam(E, A), teamalsoknownas(F, A) )
%   | | then return 0.018612206417139114;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamalsoknownas(G, A) )
%   | | | then return -0.08283921330373865;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.05841544059603869;  // std dev = 0.987, 47.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.15805292953892439;  // std dev = 0.190, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( athleteplaysforteam(E, A), athleteplayssport(F, B) )
%   | then return -0.2109612731132989;  // std dev = 0.613, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( athleteplayssport(G, B), teamplaysagainstteam(H, A) )
%   | | then if ( athleteplaysinleague(G, I), teamplaysinleague(A, J) )
%   | | | then return 0.16688916437645898;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0066468637353863935;  // std dev = 0.266, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( teamplaysagainstteam(A, K), athleteplaysforteam(L, K) )
%   | | | then return -0.061641136735936325;  // std dev = 0.799, 111.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=1 */
%   | | | else return -0.07099542108369059;  // std dev = 1.285, 120.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), athleteplaysforteam(C, A) )
%   | then return -0.04236010063781419;  // std dev = 0.770, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( teamalsoknownas(E, A), teamplaysinleague(A, F) )
%   | | then if ( athleteledsportsteam(C, G), teamplaysinleague(G, F) )
%   | | | then return 0.13421434351898143;  // std dev = 0.011, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.04717729920030116;  // std dev = 0.913, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.13937367144612664;  // std dev = 0.188, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.0643194733215539;  // std dev = 0.004, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | else if ( teamalsoknownas(I, A), teamalsoknownas(A, I) )
%   | | then if ( teamplaysagainstteam(J, A) )
%   | | | then return 0.16091069723457294;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07690885296721188;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.07566317262201304;  // std dev = 0.066, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.04528179705246932;  // std dev = 0.986, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.767', 'seconds']
Refined model CLL: -0.083555


******************************************
Best model found
******************************************
Results 

CLL : -0.084055 

AUC ROC : 0.995919 

AUC PR : 0.337796 

Precision : 0.196992 

Recall : 0.984962 

F1 : 0.328321 

Total Learning Time : 147.047 

Total Inference Time : 10.55301833152771 

Total revision time: 161.97641717147826
Best scored revision CLL: -0.083555


Results 

CLL : -0.084055 

AUC ROC : 0.995919 

AUC PR : 0.337796 

Precision : 0.196992 

Recall : 0.984962 

F1 : 0.328321 

Total Learning Time : 162.0218621368408 

Total Inference Time : 10.55301833152771 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.621
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 391.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 418.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 389.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 412.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 417.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 388.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 413.000 (wgt'ed) examples reached here.  /* #neg=280 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 402.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 400.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 398.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.874', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 178.892
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.8581489350995103;  // std dev = 7.73e-07, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( teamalsoknownas(E, A), athleteplaysforteam(F, E) )
%   | then if ( athleteledsportsteam(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return -0.1418510649004883;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.1180415410909639;  // std dev = 0.988, 42.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamalsoknownas(A, F), athleteledsportsteam(G, F) )
%   | | then return 0.5528067455442882;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | | | else return 0.674018866756409;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0.5194734122109549;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamplaysagainstteam(I, A), teamalsoknownas(J, I) )
%   | then return -0.12544463852839105;  // std dev = 7.88e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( athleteplaysforteam(K, A), athleteledsportsteam(K, A) )
%   | | then if ( athleteplaysinleague(K, L) )
%   | | | then return 0.1941054047249219;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12544463852839133;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.12623982834069994;  // std dev = 0.058, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | | else return -0.10800719118536391;  // std dev = 0.990, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.5569163864886785;  // std dev = 0.080, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return 0.5714759658833923;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5077371061514798;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.40405206104801933;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamplaysagainstteam(A, H), teamalsoknownas(I, H) )
%   | then return -0.114585378631601;  // std dev = 0.096, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( athleteplaysforteam(J, A), teamalsoknownas(K, A) )
%   | | then return 0.19271904172272136;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.11261279109571061;  // std dev = 0.038, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | | else return -0.09553364910980483;  // std dev = 0.989, 49.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then if ( teamalsoknownas(A, F), teamplaysagainstteam(A, G) )
%   | | then if ( teamplaysagainstteam(D, G) )
%   | | | then return 0.43535605703393987;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.16713669085558158;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.41713669085558164;  // std dev = 1.03e-07, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | else return 0.4572083843914951;  // std dev = 0.093, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( teamplaysagainstteam(A, H), teamalsoknownas(H, I) )
%   | then if ( teamplaysagainstteam(H, J), teamplaysinleague(J, K) )
%   | | then if ( teamplaysinleague(A, K), athleteplayssport(L, B) )
%   | | | then return 0.5045812697014735;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10644745891939295;  // std dev = 0.398, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( teamplaysagainstteam(H, I) )
%   | | | then return 0.040848097160682974;  // std dev = 0.536, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1897893080891002;  // std dev = 0.714, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.10638248049400345;  // std dev = 0.392, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamalsoknownas(A, E), teamplaysagainstteam(D, A) )
%   | | then if ( athleteledsportsteam(F, A), teamalsoknownas(D, E) )
%   | | | then return -0.004463590435182223;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3309055820156567;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.3173881503631028;  // std dev = 0.476, 98.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=97 */
%   | | | else return 0.35527509468246954;  // std dev = 0.498, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.40917442544162874;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.21775320260033482;  // std dev = 0.308, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(I, A), teamplaysagainstteam(A, J) )
%   | then if ( teamalsoknownas(J, I), athleteledsportsteam(K, A) )
%   | | then return 0.03327431744339685;  // std dev = 0.800, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.10256700196530295;  // std dev = 0.094, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.0943430576764215;  // std dev = 0.087, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( teamalsoknownas(A, F), athleteledsportsteam(G, A) )
%   | | then return 0.3084461572587457;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.2566396417381821;  // std dev = 0.076, 100.000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | | | else return 0.2800147056840517;  // std dev = 0.519, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.2102110149557789;  // std dev = 0.481, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamalsoknownas(I, A), teamplaysinleague(A, J) )
%   | then if ( teamplaysagainstteam(I, K), teamalsoknownas(K, A) )
%   | | then if ( teamplaysagainstteam(A, I) )
%   | | | then return -0.09215319072347755;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.18719647790959426;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09369587818474064;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.08622356048933442;  // std dev = 0.051, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(D, E) )
%   | then if ( athleteledsportsteam(C, F), teamplaysagainstteam(F, A) )
%   | | then return 0.21298417258991068;  // std dev = 0.092, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else if ( athleteledsportsteam(G, D), athleteledsportsteam(H, E) )
%   | | | then return -0.35767854448871644;  // std dev = 1.090, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.241150707538495;  // std dev = 0.128, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( teamplaysinleague(A, I) )
%   | | then return 0.2101590785005335;  // std dev = 0.014, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( teamalsoknownas(A, J) )
%   | | | then return 0.19999087669594603;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.24176065371059555;  // std dev = 0.511, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( teamalsoknownas(K, A), athleteplaysforteam(L, K) )
%   | then if ( teamplaysagainstteam(A, K) )
%   | | then return -0.09267310630438524;  // std dev = 0.080, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.04449821100659175;  // std dev = 0.767, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.07961366714027572;  // std dev = 0.064, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, E) )
%   | | then return 0.1822955677282249;  // std dev = 0.165, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, G) )
%   | | | then return 0.13866615255215423;  // std dev = 0.979, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.17569019852294349;  // std dev = 0.013, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0.3197973596780677;  // std dev = 0.418, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( athleteledsportsteam(H, A), athleteplaysinleague(H, I) )
%   | then if ( athleteplayssport(H, J) )
%   | | then return -0.07316982917162217;  // std dev = 0.027, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0.17926655581203396;  // std dev = 0.617, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07468361325886352;  // std dev = 0.088, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then return 0.15383968340636053;  // std dev = 0.074, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | else if ( teamplaysagainstteam(A, F), teamplaysagainstteam(D, F) )
%   | | then if ( teamalsoknownas(G, F), teamalsoknownas(H, G) )
%   | | | then return 0.1735072047134938;  // std dev = 0.109, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.24857087957592125;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( teamalsoknownas(A, I), teamplaysinleague(A, J) )
%   | | | then return 0.10119991903593838;  // std dev = 0.973, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.15235297814449722;  // std dev = 0.017, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( athleteledsportsteam(K, A), athleteplaysforteam(K, A) )
%   | then if ( athleteplaysforteam(L, A), athleteplayssport(L, M) )
%   | | then return -0.07045946109105362;  // std dev = 0.061, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( teamplaysagainstteam(A, N), teamalsoknownas(N, P) )
%   | | | then return 0.22323207079611074;  // std dev = 0.519, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.07693595608086855;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06952116398335474;  // std dev = 0.070, 214.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.13487278603078462;  // std dev = 0.067, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | else if ( teamplaysagainstteam(A, E), athleteplaysforteam(C, E) )
%   | | then if ( athleteledsportsteam(F, E), teamplaysinleague(A, G) )
%   | | | then return -0.2524729511365672;  // std dev = 1.060, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17146639115789075;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.1438692787299366;  // std dev = 0.102, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return 0.09468940607204367;  // std dev = 0.990, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( teamalsoknownas(I, A), athleteledsportsteam(J, A) )
%   | then if ( athleteledsportsteam(K, I) )
%   | | then return -0.06537549298845063;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.13843961834662818;  // std dev = 0.553, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, L) )
%   | | then return -0.06769442917785043;  // std dev = 0.264, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else return -0.054516240290335076;  // std dev = 0.091, 58.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '38.214', 'seconds']
Refined model CLL: -0.083908


******************************************
Best model found
******************************************
Results 

CLL : -0.085175 

AUC ROC : 0.995428 

AUC PR : 0.327412 

Precision : 0.192166 

Recall : 0.984848 

F1 : 0.321583 

Total Learning Time : 178.892 

Total Inference Time : 19.655246257781982 

Total revision time: 202.94641565132142
Best scored revision CLL: -0.083908


Results 

CLL : -0.085175 

AUC ROC : 0.995428 

AUC PR : 0.327412 

Precision : 0.192166 

Recall : 0.984848 

F1 : 0.321583 

Total Learning Time : 202.97561191368104 

Total Inference Time : 19.655246257781982 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.681
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 382.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 398.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 390.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.463, 428.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.485, 353.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 405.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 412.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.135', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 99.85300000000001
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( teamplaysagainstteam(E, A), teamplaysinleague(E, D) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.843656181476324;  // std dev = 0.993, 69.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=68 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.1418510649004884;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( teamplaysagainstteam(E, A), athleteledsportsteam(C, E) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else if ( teamplaysagainstteam(A, F), teamplaysinleague(A, D) )
%   | | | then return 0.3981220249710863;  // std dev = 1.403, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.6763733463236808;  // std dev = 1.960, 83.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=79 */
%   | else return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.12544463852839194;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( teamplaysinleague(A, D) )
%   | | then return 0.5669529758004906;  // std dev = 0.209, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else if ( athleteledsportsteam(E, A), athleteplaysforteam(E, A) )
%   | | | then return 0.27945439551235546;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.531908034631332;  // std dev = 1.704, 77.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=74 */
%   | else return 0.2564123687585864;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.11231637819360694;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(E, A), teamalsoknownas(E, A) )
%   | | then if ( teamalsoknownas(F, E) )
%   | | | then return 0.4175421279897966;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.08136517292846006;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamalsoknownas(A, G), teamalsoknownas(G, H) )
%   | | | then return 0.3347474705494379;  // std dev = 1.343, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.40824195513077766;  // std dev = 1.632, 103.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=100 */
%   | else if ( athleteplaysforteam(I, A), teamplaysinleague(A, J) )
%   | | then return -0.41493681302311525;  // std dev = 0.246, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.43663405649476805;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.616540490415435;  // std dev = 0.219, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10159632948783656;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then return 0.34228368007052035;  // std dev = 0.301, 125.000 (wgt'ed) examples reached here.  /* #pos=125 */
%   | else if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then return -0.16916565276999665;  // std dev = 0.613, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.33435089902131476;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.47497363052076974;  // std dev = 0.220, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926047;  // std dev = 9.42e-08, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamplaysagainstteam(D, E) )
%   | then return 0.2628856307789111;  // std dev = 0.184, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, F) )
%   | | then if ( teamalsoknownas(F, D) )
%   | | | then return 0.27478744577415753;  // std dev = 0.026, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.018853653043346682;  // std dev = 1.443, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0.2752956383721543;  // std dev = 0.143, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( teamplaysinleague(A, G) )
%   | then if ( teamalsoknownas(H, A), athleteplaysforteam(I, H) )
%   | | then if ( athleteplaysinleague(I, J) )
%   | | | then return -0.09061423783090305;  // std dev = 0.100, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.24364157111601173;  // std dev = 0.406, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.09153758535207647;  // std dev = 0.077, 175.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=1 */
%   | else if ( athleteplayssport(K, B) )
%   | | then return 0.2893639992725875;  // std dev = 0.183, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.22191753385855234;  // std dev = 0.242, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then return -0.011872767354404753;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysinleague(A, G), athleteledsportsteam(C, H) )
%   | | | then return 0.16613634709506706;  // std dev = 1.325, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | | else return 0.23236179718289537;  // std dev = 0.233, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.07879132149412738;  // std dev = 0.048, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.19036369844113385;  // std dev = 0.324, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else return -0.07234359182221096;  // std dev = 0.769, 270.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamplaysagainstteam(D, E) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return 0.15438617934590795;  // std dev = 0.126, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else return -0.18601057824082542;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.17293741779760188;  // std dev = 0.287, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( teamalsoknownas(A, G) )
%   | then if ( teamplaysagainstteam(A, G), athleteplaysforteam(H, G) )
%   | | then if ( athleteplaysforteam(I, A) )
%   | | | then return -0.06810289020097623;  // std dev = 9.08e-05, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.09729961683309458;  // std dev = 0.240, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.06032215053675742;  // std dev = 0.325, 55.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=2 */
%   | else if ( athleteplaysforteam(J, A) )
%   | | then return -0.06397710446118872;  // std dev = 0.307, 106.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=2 */
%   | | else if ( teamalsoknownas(K, A), teamalsoknownas(L, K) )
%   | | | then return -0.2161103239909111;  // std dev = 0.513, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07832471983582139;  // std dev = 1.045, 94.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( teamplaysinleague(A, F), athleteplayssport(E, B) )
%   | | then if ( athleteledsportsteam(G, A), athleteplaysinleague(G, F) )
%   | | | then return 0.09571840892398376;  // std dev = 0.986, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.1504383953213594;  // std dev = 0.214, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( athleteledsportsteam(C, D), teamalsoknownas(D, H) )
%   | | | then return 0.14154787921412196;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.07288223360166061;  // std dev = 1.024, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else if ( teamplaysagainstteam(A, I) )
%   | | then return 0.16872897314620308;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.25153365809301675;  // std dev = 0.183, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06423428706458144;  // std dev = 0.070, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.144', 'seconds']
Refined model CLL: -0.085253


******************************************
Best model found
******************************************
Results 

CLL : -0.083958 

AUC ROC : 0.993623 

AUC PR : 0.328647 

Precision : 0.161875 

Recall : 0.981061 

F1 : 0.277897 

Total Learning Time : 99.85300000000001 

Total Inference Time : 9.697397470474243 

Total revision time: 114.07795389556885
Best scored revision CLL: -0.085253


Results 

CLL : -0.083958 

AUC ROC : 0.993623 

AUC PR : 0.328647 

Precision : 0.161875 

Recall : 0.981061 

F1 : 0.277897 

Total Learning Time : 114.10715015792847 

Total Inference Time : 9.697397470474243 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.562
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 411.000 (wgt'ed) examples reached here.  /* #neg=280 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 366.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 376.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 393.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.461, 429.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 368.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 376.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 409.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 397.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 385.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.890', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 209.764
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( athleteplaysforteam(F, A), teamalsoknownas(A, G) )
%   | | then if ( athleteplaysinleague(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteplaysforteam(H, A), athleteplaysinleague(H, D) )
%   | | | then return 0.8258908705833826;  // std dev = 0.984, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return 0.8581489350995127;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysinleague(A, K) )
%   | then return -0.14185106490048843;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | else if ( teamplaysagainstteam(L, A), teamalsoknownas(M, A) )
%   | | then return -0.016851064900487787;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return -0.12776655785823418;  // std dev = 0.118, 71.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(C, E), teamplaysagainstteam(E, A) )
%   | then return 0.7236038388477762;  // std dev = 0.064, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then if ( athleteplayssport(G, H), teamplaysagainstteam(I, A) )
%   | | | then return 0.386140078877621;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6626842105996431;  // std dev = 0.983, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.7194734122109543;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.12544463852839163;  // std dev = 0.000, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else if ( teamalsoknownas(K, A) )
%   | | then return 0.06787634353299372;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.12699799452597274;  // std dev = 9.13e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.09758622982009044;  // std dev = 0.985, 34.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysinleague(A, D) )
%   | then return 0.5608431360115812;  // std dev = 0.083, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | | then if ( teamalsoknownas(F, H), teamalsoknownas(I, F) )
%   | | | then return 0.5758497420867048;  // std dev = 0.092, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 9.377659435813368E-4;  // std dev = 1.029, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( teamplaysinleague(A, J), teamalsoknownas(K, A) )
%   | | | then return 0.46436460248033706;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.5624216032700412;  // std dev = 0.155, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else if ( teamplaysinleague(A, L) )
%   | then return -0.11231637819360667;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | else if ( teamalsoknownas(A, M), teamalsoknownas(M, A) )
%   | | then return 0.027463913313523564;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamplaysagainstteam(N, A) )
%   | | | then return -0.11357183434450689;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08681358046358789;  // std dev = 0.985, 33.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, D) )
%   | | then return 0.4216591075999815;  // std dev = 0.085, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | | then return 0.2640308202034673;  // std dev = 1.502, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.42193180912377354;  // std dev = 0.147, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | else if ( athleteledsportsteam(H, A) )
%   | | then return -0.11269058295784129;  // std dev = 0.654, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4571833188597738;  // std dev = 0.084, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( teamalsoknownas(I, A), teamplaysagainstteam(A, J) )
%   | then if ( teamplaysinleague(A, K) )
%   | | then return -0.1015963294878362;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.18741338835685314;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamalsoknownas(L, A), teamplaysinleague(L, M) )
%   | | then return -0.1158159218467601;  // std dev = 0.108, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.09790512185666336;  // std dev = 0.069, 207.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.33040385892732166;  // std dev = 0.320, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( teamplaysagainstteam(A, E), teamalsoknownas(A, F) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then if ( teamalsoknownas(H, A), athleteplaysinleague(I, G) )
%   | | | then return -0.03402580079334916;  // std dev = 0.439, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.09295035632720312;  // std dev = 0.000568, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0.23632715080505864;  // std dev = 0.753, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysagainstteam(J, A), athleteplaysforteam(K, J) )
%   | | then if ( athleteplaysinleague(K, L) )
%   | | | then return -0.10304381797982777;  // std dev = 0.746, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | | else return -0.07895521520188545;  // std dev = 0.474, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else if ( athleteplayssport(M, B), teamplaysagainstteam(N, A) )
%   | | | then return 0.37793818291534736;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0893929858876354;  // std dev = 1.238, 102.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(C, E), athleteledsportsteam(C, A) )
%   | then if ( athleteplaysforteam(F, A) )
%   | | then return 0.25548385645593874;  // std dev = 0.011, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.017870384454655025;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( athleteledsportsteam(C, G) )
%   | | then return 0.26366951033127195;  // std dev = 0.286, 99.000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.3577282298761364;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2838173885737066;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.08517850093036183;  // std dev = 0.013, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( teamplaysagainstteam(A, J), teamalsoknownas(A, K) )
%   | | then return 0.10929158821996525;  // std dev = 0.781, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.09118351801950722;  // std dev = 0.045, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.0717339526951176;  // std dev = 0.994, 42.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysagainstteam(D, A) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(F, A), teamalsoknownas(G, F) )
%   | | then return -0.005177025784190853;  // std dev = 0.734, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( athleteplaysforteam(E, D) )
%   | | | then return 0.21211689603482614;  // std dev = 0.090, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return 0.2930992854210608;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07867315467794017;  // std dev = 0.012, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( athleteplayssport(H, B), athleteplaysinleague(H, I) )
%   | then return 0.2170592380564057;  // std dev = 0.224, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( teamalsoknownas(A, J), teamplaysagainstteam(K, A) )
%   | | then if ( teamalsoknownas(J, L), teamplaysagainstteam(A, K) )
%   | | | then return 0.1513036970968834;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09734380473439555;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( teamalsoknownas(M, A) )
%   | | | then return -0.08894289277993313;  // std dev = 0.069, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.07170587491548774;  // std dev = 0.992, 105.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E), teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(E, F), athleteledsportsteam(C, G) )
%   | | then return 0.18513956282638855;  // std dev = 0.040, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.23344314482844858;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( athleteledsportsteam(C, H), teamplaysagainstteam(A, H) )
%   | | then return 0.17957086931151248;  // std dev = 0.071, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else if ( teamplaysagainstteam(A, I), teamplaysinleague(A, J) )
%   | | | then return -0.028954955409288805;  // std dev = 1.286, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.15988464244326098;  // std dev = 1.009, 55.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=54 */
%   else if ( teamplaysinleague(A, K) )
%   | then return -0.07391534907189642;  // std dev = 0.054, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else if ( teamalsoknownas(L, A), teamalsoknownas(A, L) )
%   | | then return 0.06920118996360031;  // std dev = 0.784, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(M, A) )
%   | | | then return -0.07934646769175467;  // std dev = 0.058, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.04996283280846749;  // std dev = 0.985, 33.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then return 0.1626533998535427;  // std dev = 0.023, 99.000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | else if ( teamplaysagainstteam(F, A), teamalsoknownas(F, G) )
%   | | then return -0.1836968509428967;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteledsportsteam(C, H) )
%   | | | then return 0.15359244988960197;  // std dev = 0.084, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.07431104469240882;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.06883833016975532;  // std dev = 0.040, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else if ( teamplaysagainstteam(A, J), teamalsoknownas(J, K) )
%   | | then if ( teamalsoknownas(A, K) )
%   | | | then return 0.05804878104605197;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06876852150875724;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( teamalsoknownas(A, L) )
%   | | | then return -0.08608776915057839;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.050422799111351876;  // std dev = 0.987, 39.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E) )
%   | then return 0.14566164067153783;  // std dev = 0.026, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else if ( athleteledsportsteam(C, F) )
%   | | then if ( teamalsoknownas(A, G) )
%   | | | then return 0.13965368050760918;  // std dev = 0.044, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.10903355204713168;  // std dev = 0.936, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | else return -0.031336872876755816;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamalsoknownas(H, A), teamplaysagainstteam(A, I) )
%   | then if ( teamalsoknownas(J, I) )
%   | | then return -0.06414508859680494;  // std dev = 0.006, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.12813245472707221;  // std dev = 0.675, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamalsoknownas(A, K) )
%   | | then return -0.07020053104052892;  // std dev = 0.086, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.0642882110284386;  // std dev = 0.008, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | | | else return -0.05288365727649118;  // std dev = 0.990, 52.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '55.346', 'seconds']
Refined model CLL: -0.082923


******************************************
Best model found
******************************************
Results 

CLL : -0.083607 

AUC ROC : 0.992215 

AUC PR : 0.32617 

Precision : 0.201384 

Recall : 0.984962 

F1 : 0.334397 

Total Learning Time : 209.764 

Total Inference Time : 26.022207498550415 

Total revision time: 240.17317297554018
Best scored revision CLL: -0.082923


Results 

CLL : -0.083607 

AUC ROC : 0.992215 

AUC PR : 0.32617 

Precision : 0.201384 

Recall : 0.984962 

F1 : 0.334397 

Total Learning Time : 240.2023692378998 

Total Inference Time : 26.022207498550415 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.579
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 379.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.463, 429.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 386.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 403.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 384.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 396.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 404.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 390.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 398.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 406.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.817', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 302.747
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamplaysagainstteam(A, D), athleteledsportsteam(C, E) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( teamplaysagainstteam(A, F), teamalsoknownas(G, F) )
%   | | | then return 0.5854216623722396;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.8422759192264964;  // std dev = 0.992, 63.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=62 */
%   | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( athleteledsportsteam(H, A), teamalsoknownas(I, A) )
%   | then if ( athleteledsportsteam(J, I) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.1418510649004883;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, A) )
%   | | then if ( athleteplayssport(E, F) )
%   | | | then return 0.7194734122109543;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.5614125152543438;  // std dev = 0.923, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7251813344166583;  // std dev = 0.127, 98.000 (wgt'ed) examples reached here.  /* #pos=98 */
%   | else return 0.5816289395752954;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamalsoknownas(G, A), athleteledsportsteam(H, A) )
%   | then if ( teamplaysagainstteam(A, G) )
%   | | then return -0.13784959960040943;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.12544463852839172;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(F, A) )
%   | | then return 0.5642057449281235;  // std dev = 0.199, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | | else if ( teamplaysinleague(A, G), teamalsoknownas(A, H) )
%   | | | then return 0.4745417828225298;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.5577662660335978;  // std dev = 0.004, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return 0.3334240556251034;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamalsoknownas(I, A), athleteledsportsteam(J, A) )
%   | then if ( teamalsoknownas(K, I), athleteplaysinleague(J, L) )
%   | | then return 0.04188487161642362;  // std dev = 0.859, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.12565889753167994;  // std dev = 0.103, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.11181899486520162;  // std dev = 0.778, 243.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | then if ( teamplaysagainstteam(G, A), athleteledsportsteam(C, H) )
%   | | then return 0.42207177318577377;  // std dev = 0.157, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | else if ( athleteplaysforteam(C, I), athleteplaysforteam(F, I) )
%   | | | then return 0.4187599118693555;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15945421521913705;  // std dev = 1.415, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return 0.4385954974790147;  // std dev = 0.302, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   else if ( teamalsoknownas(J, A), athleteplaysforteam(K, A) )
%   | then if ( teamplaysagainstteam(J, A) )
%   | | then return -0.11040955778095864;  // std dev = 0.059, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( teamalsoknownas(A, J) )
%   | | | then return -0.11936965322032077;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1355321434634574;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.09956530366583932;  // std dev = 0.717, 231.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamalsoknownas(A, F), teamplaysinleague(A, G) )
%   | | then return 0.34334984365161253;  // std dev = 0.145, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0.3230073711798713;  // std dev = 0.116, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return 0.28682657641753884;  // std dev = 1.360, 52.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else return 0.4977959273794721;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( athleteledsportsteam(I, A), athleteplayssport(I, J) )
%   | then return -0.10114563578533624;  // std dev = 0.303, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( athleteplaysforteam(K, A), athleteplaysinleague(K, L) )
%   | | then if ( athleteplayssport(K, M) )
%   | | | then return -0.09347863930408983;  // std dev = 0.022, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.09345313944304182;  // std dev = 0.799, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysinleague(A, N) )
%   | | | then return -0.09574656638117743;  // std dev = 0.213, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | | else return -0.08341631590368252;  // std dev = 0.697, 74.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(D, A), athleteplayssport(D, E) )
%   | then if ( athleteledsportsteam(C, A) )
%   | | then return 0.25330278006739027;  // std dev = 0.028, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( athleteplaysinleague(C, F), athleteplaysinleague(D, F) )
%   | | | then return -0.3461260263930785;  // std dev = 0.780, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.05143768718863893;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( teamalsoknownas(G, A), athleteplaysforteam(H, G) )
%   | | then return 0.005158780150031267;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysinleague(A, I), athleteplaysinleague(C, J) )
%   | | | then return 0.27325587068943447;  // std dev = 0.278, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | | | else return 0.21329924269446995;  // std dev = 1.220, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   else if ( athleteledsportsteam(K, A), athleteplaysinleague(K, L) )
%   | then if ( athleteplayssport(K, M) )
%   | | then return -0.08481900584479689;  // std dev = 0.017, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0.19762704729138791;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.08599559593711349;  // std dev = 0.085, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.22248175676601842;  // std dev = 0.032, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return 0.237498139738189;  // std dev = 0.085, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.11217992255275053;  // std dev = 1.345, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.22029555815511054;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( teamalsoknownas(I, A), athleteledsportsteam(J, A) )
%   | then if ( teamplaysagainstteam(A, I) )
%   | | then return -0.08156616140778233;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.10597979811118792;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( athleteledsportsteam(K, A), athleteplaysinleague(K, L) )
%   | | then return -0.08656535897415576;  // std dev = 0.032, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.07916361755260937;  // std dev = 0.037, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | | else return -0.07435391402382358;  // std dev = 0.697, 81.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | | then if ( teamalsoknownas(F, A), teamalsoknownas(E, F) )
%   | | | then return 0.22531772339427256;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.18028687537890709;  // std dev = 0.109, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, G) )
%   | | | then return 0.11904654402993925;  // std dev = 1.618, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | | else return 0.18811971432078683;  // std dev = 0.066, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.3368160068079458;  // std dev = 0.293, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamalsoknownas(H, A), teamplaysinleague(H, I) )
%   | then if ( athleteledsportsteam(J, A) )
%   | | then if ( athleteledsportsteam(K, H) )
%   | | | then return -0.07610002404705424;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.16086387367541738;  // std dev = 0.665, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.07326405797071038;  // std dev = 0.004, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.07396561253536779;  // std dev = 0.068, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteplaysinleague(E, F) )
%   | then if ( teamplaysagainstteam(A, D), teamalsoknownas(G, D) )
%   | | then return 0.15697400785486681;  // std dev = 0.021, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else if ( athleteledsportsteam(C, D), teamalsoknownas(D, H) )
%   | | | then return 0.16290617957023168;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.34989978137432953;  // std dev = 1.021, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.1687383803177494;  // std dev = 0.041, 83.000 (wgt'ed) examples reached here.  /* #pos=83 */
%   else if ( teamalsoknownas(A, I), teamalsoknownas(I, A) )
%   | then if ( teamplaysagainstteam(A, J) )
%   | | then if ( teamalsoknownas(J, I), teamplaysagainstteam(A, I) )
%   | | | then return -0.1276878243484211;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.049509962498045824;  // std dev = 0.260, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return -0.12808836015277447;  // std dev = 0.687, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06941503568091746;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06254704245715369;  // std dev = 0.063, 212.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamalsoknownas(E, D) )
%   | then if ( athleteplaysforteam(F, A) )
%   | | then return 0.1360619004514846;  // std dev = 0.019, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.2026026360902459;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.14489571213781063;  // std dev = 0.017, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | then if ( athleteplaysforteam(I, A), athleteplaysinleague(I, J) )
%   | | then if ( athleteplaysforteam(H, K) )
%   | | | then return -0.06554082004736912;  // std dev = 0.036, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.015807383299648148;  // std dev = 0.821, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( athleteplayssport(H, L), athleteplayssport(M, B) )
%   | | | then return -0.5409320673143756;  // std dev = 0.251, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06683178530679887;  // std dev = 0.561, 70.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=1 */
%   | else if ( teamplaysagainstteam(A, N), teamalsoknownas(P, N) )
%   | | then return 2.780999200883705E-4;  // std dev = 0.121, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return -0.05932884515418122;  // std dev = 0.057, 91.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '42.219', 'seconds']
Refined model CLL: -0.084499


******************************************
Best model found
******************************************
Results 

CLL : -0.085783 

AUC ROC : 0.996103 

AUC PR : 0.35549 

Precision : 0.166988 

Recall : 0.984848 

F1 : 0.285557 

Total Learning Time : 302.747 

Total Inference Time : 23.184316396713257 

Total revision time: 330.2954347381592
Best scored revision CLL: -0.084499


Results 

CLL : -0.085783 

AUC ROC : 0.996103 

AUC PR : 0.35549 

Precision : 0.166988 

Recall : 0.984848 

F1 : 0.285557 

Total Learning Time : 330.3604204902649 

Total Inference Time : 23.184316396713257 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.599
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 397.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 419.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 402.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 378.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 411.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 386.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 401.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 421.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.459, 440.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 393.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.856', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1029.258
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( teamplaysinleague(A, E), teamalsoknownas(F, A) )
%   | | then if ( athleteplaysforteam(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( athleteplaysforteam(H, A), athleteledsportsteam(H, A) )
%   | | | then return 0.8126943896449667;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.8581489350995125;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.14185106490048813;  // std dev = 0.000, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( athleteledsportsteam(E, A), athleteplayssport(E, F) )
%   | | then if ( teamplaysagainstteam(A, D) )
%   | | | then return 0.7247130214552311;  // std dev = 0.023, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.02825609044985905;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, G), teamalsoknownas(A, H) )
%   | | | then return 0.5766162693538115;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7237675151381349;  // std dev = 0.133, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | then return 0.08256265340251455;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7414511414876402;  // std dev = 0.083, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.12544463852839188;  // std dev = 0.000, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then return 0.5661616066774287;  // std dev = 0.261, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( teamalsoknownas(A, F), teamalsoknownas(F, A) )
%   | | then return 0.35343125564954914;  // std dev = 0.893, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5538826456674406;  // std dev = 0.007, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( teamalsoknownas(G, A), athleteplaysforteam(H, G) )
%   | then if ( athleteledsportsteam(H, I) )
%   | | then return -0.11231637819360629;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.1491840352519762;  // std dev = 0.641, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, J) )
%   | | then return -0.11375255992082818;  // std dev = 0.227, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.11231637819360629;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.0928015578794579;  // std dev = 0.771, 40.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamalsoknownas(D, E) )
%   | then if ( athleteledsportsteam(C, F) )
%   | | then return 0.44328049086473054;  // std dev = 0.101, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.5343159835924419;  // std dev = 0.150, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( athleteledsportsteam(C, G) )
%   | | then return 0.4198721690386354;  // std dev = 0.202, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | else return 0.30199571770108063;  // std dev = 0.838, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1019623341544847;  // std dev = 0.029, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), teamplaysinleague(D, E) )
%   | then return 0.3245632663200153;  // std dev = 0.196, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else if ( athleteplaysforteam(C, F), teamalsoknownas(D, F) )
%   | | then return -0.07204331791064407;  // std dev = 1.111, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, G) )
%   | | | then return 0.2081378844546424;  // std dev = 1.342, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.3239502454790222;  // std dev = 0.069, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   else if ( athleteplayssport(H, B), teamalsoknownas(A, I) )
%   | then return 0.2164163412592166;  // std dev = 0.976, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( teamplaysagainstteam(J, A) )
%   | | then if ( teamplaysinleague(J, K) )
%   | | | then return -0.0935409503044221;  // std dev = 0.059, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | | else return 0.01597380584986338;  // std dev = 0.532, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.09290471933341392;  // std dev = 0.024, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return -0.11422110595087932;  // std dev = 1.134, 49.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(E, D) )
%   | then if ( athleteplaysinleague(C, D) )
%   | | then return 0.25747562355015363;  // std dev = 0.164, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else if ( athleteledsportsteam(E, F) )
%   | | | then return -0.4007082944013781;  // std dev = 0.830, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.11945844543392918;  // std dev = 1.513, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else if ( athleteplaysforteam(G, A), athleteplaysforteam(C, H) )
%   | | then if ( athleteledsportsteam(C, H), teamalsoknownas(H, I) )
%   | | | then return -0.06635662249998626;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2507168324588823;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteledsportsteam(C, J) )
%   | | | then return 0.271238122801616;  // std dev = 0.193, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return 0.3787534209197573;  // std dev = 0.323, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.08534100403734891;  // std dev = 0.042, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | | then if ( teamplaysagainstteam(E, G) )
%   | | | then return 0.21628906521026348;  // std dev = 0.157, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return 0.021475614025594295;  // std dev = 1.053, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.22194975973572723;  // std dev = 0.027, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.25451457474217626;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06555769295050425;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( athleteplayssport(I, B), athleteplaysforteam(I, J) )
%   | then return -0.21541836632594208;  // std dev = 0.675, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.07897346164883316;  // std dev = 0.038, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.07867724984432681;  // std dev = 6.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06536324067317756;  // std dev = 0.628, 48.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, A) )
%   | then if ( teamplaysinleague(A, D), athleteledsportsteam(C, E) )
%   | | then return 0.17669779310975953;  // std dev = 0.019, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.2826098354403963;  // std dev = 0.971, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( teamalsoknownas(A, G) )
%   | | then return 0.20988822584622452;  // std dev = 0.033, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( teamplaysinleague(A, D) )
%   | | | then return 0.13639407042578502;  // std dev = 0.994, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.1885444240830886;  // std dev = 0.184, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.07647498214795892;  // std dev = 0.050, 206.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=1 */
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return -0.07488921361456582;  // std dev = 0.014, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( teamalsoknownas(A, J) )
%   | | | then return -0.0739879540621406;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.05313367570798151;  // std dev = 0.636, 31.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then if ( athleteledsportsteam(G, A), athleteplaysforteam(D, A) )
%   | | then if ( athleteplayssport(D, B) )
%   | | | then return 0.15352031423622084;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.444645630568769;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.15294816491113256;  // std dev = 0.022, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return 0.19289436523945647;  // std dev = 0.191, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.07094990333852891;  // std dev = 0.025, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   else if ( athleteplayssport(H, B) )
%   | then if ( athleteplaysforteam(H, I) )
%   | | then if ( athleteledsportsteam(H, I) )
%   | | | then return 0.14930290528357956;  // std dev = 0.927, 70.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=69 */
%   | | | else return -0.1052651995598397;  // std dev = 0.660, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.26996928172933266;  // std dev = 0.361, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.069558800090472;  // std dev = 0.035, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A), athleteledsportsteam(D, E) )
%   | then if ( athleteledsportsteam(F, A), athleteplaysforteam(F, A) )
%   | | then if ( teamalsoknownas(G, A), teamalsoknownas(E, H) )
%   | | | then return 0.07499177493344662;  // std dev = 0.239, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1425413819813141;  // std dev = 0.107, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.01466911945695328;  // std dev = 0.601, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( athleteledsportsteam(C, I) )
%   | | then if ( teamplaysinleague(A, J) )
%   | | | then return 0.14657919867922434;  // std dev = 0.237, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | | else return 0.10740761869959763;  // std dev = 0.984, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | else if ( teamalsoknownas(A, K), athleteplaysinleague(C, L) )
%   | | | then return 0.1442968185350728;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3400344080957722;  // std dev = 0.301, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06449367346735554;  // std dev = 0.038, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '11.000', 'seconds']
Refined model CLL: -0.082137


******************************************
Best model found
******************************************
Results 

CLL : -0.080861 

AUC ROC : 0.99484 

AUC PR : 0.419104 

Precision : 0.183486 

Recall : 0.984848 

F1 : 0.30934 

Total Learning Time : 1029.258 

Total Inference Time : 36.23514437675476 

Total revision time: 1069.9148603744507
Best scored revision CLL: -0.082137


Results 

CLL : -0.080861 

AUC ROC : 0.99484 

AUC PR : 0.419104 

Precision : 0.183486 

Recall : 0.984848 

F1 : 0.30934 

Total Learning Time : 1069.9798461265564 

Total Inference Time : 36.23514437675476 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.583
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 379.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 410.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 394.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 391.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 367.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 387.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 394.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 396.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 405.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 372.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.957', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 194.35
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamalsoknownas(F, A), athleteplaysforteam(G, A) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.8581489350995118;  // std dev = 1.69e-07, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | | else return 0.822434649385226;  // std dev = 0.982, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( teamplaysagainstteam(A, I), teamplaysagainstteam(I, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.14185106490048832;  // std dev = 0.000, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( teamalsoknownas(K, A), teamplaysinleague(K, L) )
%   | | then return -0.04185106490048778;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, M) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.1148240378734607;  // std dev = 0.986, 37.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E), athleteledsportsteam(C, F) )
%   | then if ( teamplaysagainstteam(G, A) )
%   | | then return 0.72192638609817;  // std dev = 0.070, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else if ( teamplaysinleague(F, E) )
%   | | | then return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( teamalsoknownas(H, A) )
%   | | then return 0.7326064402215522;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6170212016274768;  // std dev = 1.637, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.1254446385283917;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | else if ( teamplaysagainstteam(A, K), teamplaysinleague(K, L) )
%   | | then return -0.027722214310728098;  // std dev = 0.297, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return -0.10916779994647363;  // std dev = 0.143, 48.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E), athleteledsportsteam(C, F) )
%   | then if ( teamplaysinleague(F, E) )
%   | | then return 0.5613290225554101;  // std dev = 0.124, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else if ( teamplaysagainstteam(A, G), athleteledsportsteam(H, G) )
%   | | | then return 0.22142729741889103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.524934902141484;  // std dev = 0.985, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | else return 0.5886331976947385;  // std dev = 0.132, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.11231637819360671;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
%   | else if ( teamalsoknownas(A, J), teamplaysagainstteam(A, K) )
%   | | then return 0.19974222792838522;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(L, A) )
%   | | | then return -0.12083081212956318;  // std dev = 0.017, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08879613066653737;  // std dev = 0.986, 35.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A), athleteledsportsteam(C, F) )
%   | then if ( athleteplaysinleague(E, G) )
%   | | then return 0.42075328996411426;  // std dev = 0.076, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.11018703884616816;  // std dev = 0.853, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4317077530889391;  // std dev = 0.201, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.1015963294878365;  // std dev = 0.000, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(J, A) )
%   | | then return 0.20594233714477847;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return -0.11590651663746054;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08898548425879038;  // std dev = 0.991, 50.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then return 0.3280613737782197;  // std dev = 0.231, 99.000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | else if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | | then return 0.007451925350144421;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteledsportsteam(C, H) )
%   | | | then return 0.33467264006993425;  // std dev = 0.054, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.1022142947233963;  // std dev = 0.891, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.09269127618926058;  // std dev = 9.06e-08, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | else if ( teamalsoknownas(A, J), teamplaysagainstteam(K, A) )
%   | | then if ( teamalsoknownas(J, L), teamplaysagainstteam(L, K) )
%   | | | then return 0.17568343343385787;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10246212327735009;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( teamalsoknownas(M, A) )
%   | | | then return -0.1093065007410807;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07138466105949058;  // std dev = 0.986, 35.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then if ( athleteledsportsteam(C, F), teamplaysinleague(A, G) )
%   | | then if ( teamplaysinleague(E, D) )
%   | | | then return 0.2557487132373523;  // std dev = 0.113, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.14746292854952425;  // std dev = 0.968, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.30625914710822943;  // std dev = 0.126, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( athleteledsportsteam(C, H) )
%   | | then if ( teamalsoknownas(I, A), teamplaysinleague(I, J) )
%   | | | then return 0.03872037322866133;  // std dev = 1.540, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.24015087928614492;  // std dev = 0.998, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | else return -0.37811426659158953;  // std dev = 0.760, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysinleague(A, K) )
%   | then return -0.08518475138839678;  // std dev = 7.74e-08, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else if ( teamplaysagainstteam(L, A), teamalsoknownas(L, M) )
%   | | then return 0.028341470459699505;  // std dev = 0.309, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.07441577310214997;  // std dev = 0.137, 52.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(F, A) )
%   | | then return 0.2155727548260559;  // std dev = 0.200, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | | else if ( athleteplaysforteam(C, E), teamalsoknownas(E, G) )
%   | | | then return 0.11086202356951146;  // std dev = 1.316, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.22655201331820832;  // std dev = 0.083, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return 0.26858599851048653;  // std dev = 0.082, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.07877675473109148;  // std dev = 8.02e-08, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(J, A) )
%   | | then return 0.08245642523683444;  // std dev = 0.809, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.09635301248259442;  // std dev = 0.051, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06351551153225941;  // std dev = 0.988, 43.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A), teamplaysinleague(E, F) )
%   | then return 0.20250888841555537;  // std dev = 0.089, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.18188476826934108;  // std dev = 0.179, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.20907177008825517;  // std dev = 0.081, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.13992930125829872;  // std dev = 0.961, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( teamplaysagainstteam(A, I), teamalsoknownas(J, A) )
%   | then if ( athleteledsportsteam(K, I) )
%   | | then return -0.07324622576333699;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.09561754937913106;  // std dev = 0.784, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysagainstteam(L, A) )
%   | | then return -0.07491647740411615;  // std dev = 0.054, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.07324622576333703;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.05502042432376965;  // std dev = 0.986, 37.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E), teamplaysagainstteam(A, F) )
%   | then if ( teamalsoknownas(E, A), athleteledsportsteam(C, G) )
%   | | then return -0.15846531043709025;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.16523671288710165;  // std dev = 0.041, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( athleteledsportsteam(C, H) )
%   | | then return 0.160906838052575;  // std dev = 0.193, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | else return 0.04562408850731551;  // std dev = 0.814, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( teamalsoknownas(I, A), teamplaysagainstteam(A, J) )
%   | then if ( athleteplaysforteam(K, A) )
%   | | then return -0.07803128705187555;  // std dev = 0.085, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.2033261959892536;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(L, A) )
%   | | then return -0.0699289384394005;  // std dev = 0.072, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.06842697784420262;  // std dev = 1.67e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.054502130644532826;  // std dev = 0.988, 43.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysforteam(E, A) )
%   | then if ( athleteplaysinleague(C, D), athleteledsportsteam(C, F) )
%   | | then return 0.13388547102319395;  // std dev = 0.095, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( athleteledsportsteam(E, A), athleteplayssport(E, G) )
%   | | | then return 0.1554318400606499;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1079184489013373;  // std dev = 1.075, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.14708450959335556;  // std dev = 0.157, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.0643371086392432;  // std dev = 0.030, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | else if ( teamalsoknownas(A, I), teamalsoknownas(I, A) )
%   | | then return 0.0070041178859714115;  // std dev = 0.296, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.07435015691941939;  // std dev = 0.048, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.04491228749439732;  // std dev = 0.985, 34.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.121', 'seconds']
Refined model CLL: -0.083936


******************************************
Best model found
******************************************
Results 

CLL : -0.084504 

AUC ROC : 0.993126 

AUC PR : 0.328396 

Precision : 0.196992 

Recall : 0.984962 

F1 : 0.328321 

Total Learning Time : 194.35 

Total Inference Time : 11.507545471191406 

Total revision time: 210.266199262619
Best scored revision CLL: -0.083936


Results 

CLL : -0.084504 

AUC ROC : 0.993126 

AUC PR : 0.328396 

Precision : 0.196992 

Recall : 0.984962 

F1 : 0.328321 

Total Learning Time : 210.33118501472472 

Total Inference Time : 11.507545471191406 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.541
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.462, 432.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 417.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 404.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 405.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.463, 426.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 381.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.481, 365.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 381.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 396.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 403.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.806', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 223.631
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( teamplaysagainstteam(A, F), athleteplaysforteam(G, F) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else if ( athleteledsportsteam(C, D), teamalsoknownas(D, H) )
%   | | | then return 0.822434649385226;  // std dev = 0.982, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( athleteledsportsteam(I, A), athleteplaysforteam(I, A) )
%   | then if ( teamplaysagainstteam(A, J), teamalsoknownas(K, J) )
%   | | then return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.1418510649004883;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( athleteledsportsteam(E, A), athleteplayssport(E, F) )
%   | | then if ( athleteplaysforteam(G, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.386140078877621;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7214640218526241;  // std dev = 0.032, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else return 0.448295606241962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamalsoknownas(H, A), athleteplaysforteam(I, A) )
%   | then if ( athleteledsportsteam(I, A), teamalsoknownas(J, H) )
%   | | then if ( teamplaysagainstteam(H, J) )
%   | | | then return -0.1254446385283914;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.19410540472492188;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.12787698383663024;  // std dev = 0.040, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.1256012668247556;  // std dev = 0.041, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.5581276092090633;  // std dev = 0.117, 127.000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | else return 0.49569667965595626;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamalsoknownas(F, A), athleteledsportsteam(G, A) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return -0.1153164944993104;  // std dev = 0.036, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.15353004655924427;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11226749051333217;  // std dev = 0.789, 273.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamalsoknownas(A, E), teamplaysinleague(A, D) )
%   | | then return 0.08350889808432575;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamalsoknownas(A, F), teamalsoknownas(F, A) )
%   | | | then return 0.32940560302865757;  // std dev = 0.949, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.41100777682146583;  // std dev = 1.006, 116.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=115 */
%   | else return 0.5820494078342022;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamalsoknownas(G, A), athleteplaysforteam(H, G) )
%   | then if ( teamplaysagainstteam(G, A) )
%   | | then return -0.10338780371422152;  // std dev = 0.033, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.08896883919290242;  // std dev = 0.803, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.09986721768016886;  // std dev = 0.724, 260.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(A, E) )
%   | then if ( teamplaysinleague(D, E), athleteledsportsteam(C, D) )
%   | | then if ( teamalsoknownas(A, D) )
%   | | | then return 0.06336077998070704;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3119134281454057;  // std dev = 1.003, 80.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=79 */
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.3266369387142103;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.12313614905714748;  // std dev = 1.655, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | else if ( athleteledsportsteam(C, G) )
%   | | then return 0.32655354618539706;  // std dev = 0.028, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.47138513624546113;  // std dev = 0.151, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamalsoknownas(H, A), athleteplaysforteam(I, H) )
%   | then if ( teamplaysagainstteam(A, H) )
%   | | then return -0.09385092890696276;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.10842905047416605;  // std dev = 0.756, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.09324634927768055;  // std dev = 0.055, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | then if ( teamplaysagainstteam(E, F) )
%   | | | then return 0.2623315786874239;  // std dev = 0.155, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | | else return -0.06311740359705048;  // std dev = 1.133, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.27000652306866146;  // std dev = 0.190, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | else return 0.12689937543641866;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( athleteplayssport(H, B) )
%   | then return -0.20203027228759113;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamalsoknownas(I, A), teamalsoknownas(J, I) )
%   | | then if ( teamalsoknownas(A, K) )
%   | | | then return -0.08742651072326993;  // std dev = 0.051, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0.053017992620336796;  // std dev = 0.756, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.08612140707356129;  // std dev = 0.077, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamplaysinleague(E, D) )
%   | then return 0.2155965474626373;  // std dev = 0.177, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( athleteplaysforteam(F, A), athleteplaysforteam(C, G) )
%   | | then if ( athleteledsportsteam(C, G), teamalsoknownas(G, H) )
%   | | | then return -0.05458412369454037;  // std dev = 1.175, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.2604340332014975;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0.2061669604167938;  // std dev = 0.985, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return 0.12043755594428654;  // std dev = 1.353, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( teamalsoknownas(J, A), teamalsoknownas(A, J) )
%   | then return -0.09515074514859098;  // std dev = 0.055, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( athleteledsportsteam(K, A), athleteplaysinleague(K, L) )
%   | | then if ( athleteplaysforteam(K, M), teamplaysinleague(A, L) )
%   | | | then return -0.08173354173116522;  // std dev = 0.059, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0.1884667781567709;  // std dev = 0.667, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.07751935223475849;  // std dev = 0.688, 190.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(E, A), teamalsoknownas(E, F) )
%   | | then if ( teamplaysagainstteam(D, E) )
%   | | | then return 0.1836760612498784;  // std dev = 0.147, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | | else return -0.19590261595187566;  // std dev = 1.329, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.19066998972012536;  // std dev = 0.149, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | else return 0.3218936067557518;  // std dev = 0.266, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamalsoknownas(A, G), athleteplaysforteam(H, A) )
%   | then return -0.08826874477971211;  // std dev = 0.123, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( athleteledsportsteam(I, A), athleteplaysinleague(I, J) )
%   | | then if ( athleteplayssport(I, K) )
%   | | | then return -0.07556456499887787;  // std dev = 0.049, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0.0027318424356970045;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.07454963181010983;  // std dev = 0.074, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamplaysagainstteam(D, E) )
%   | then if ( teamplaysinleague(A, F), teamplaysinleague(D, F) )
%   | | then return 0.1587585628467815;  // std dev = 0.217, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( teamalsoknownas(G, E) )
%   | | | then return 0.18255761092345377;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.33867815185488104;  // std dev = 0.975, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.16938926337795188;  // std dev = 0.190, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( athleteledsportsteam(H, A), teamplaysagainstteam(A, I) )
%   | then if ( teamalsoknownas(J, I), athleteledsportsteam(K, I) )
%   | | then return -0.06659239666967683;  // std dev = 0.276, 75.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=1 */
%   | | else if ( athleteplaysinleague(H, L), teamplaysinleague(A, L) )
%   | | | then return -0.07421164806950509;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1896687387167797;  // std dev = 0.623, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysinleague(A, M), teamalsoknownas(A, N) )
%   | | then return -0.09272328386244015;  // std dev = 0.119, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.07268800877843246;  // std dev = 0.084, 159.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.14495431800766295;  // std dev = 0.269, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then if ( teamplaysinleague(A, G), teamplaysinleague(F, G) )
%   | | | then return 0.1516602304445505;  // std dev = 0.047, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.14060640699558402;  // std dev = 1.178, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.140160463150099;  // std dev = 0.051, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else if ( athleteplaysforteam(H, A), athleteplayssport(H, I) )
%   | then return -0.07513314720719223;  // std dev = 0.077, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( athleteledsportsteam(J, A), athleteplaysforteam(J, A) )
%   | | then if ( teamalsoknownas(K, A), teamplaysagainstteam(K, L) )
%   | | | then return 0.24870874309725136;  // std dev = 0.525, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.06574324668639778;  // std dev = 0.311, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, M), teamalsoknownas(M, N) )
%   | | | then return -0.04957614405359066;  // std dev = 0.393, 39.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=2 */
%   | | | else return -0.07049137610855857;  // std dev = 0.993, 140.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.232', 'seconds']
Refined model CLL: -0.084349


******************************************
Best model found
******************************************
Results 

CLL : -0.085832 

AUC ROC : 0.99432 

AUC PR : 0.300888 

Precision : 0.191176 

Recall : 0.984848 

F1 : 0.320197 

Total Learning Time : 223.631 

Total Inference Time : 12.181934595108032 

Total revision time: 240.02317292404175
Best scored revision CLL: -0.084349


Results 

CLL : -0.085832 

AUC ROC : 0.99432 

AUC PR : 0.300888 

Precision : 0.191176 

Recall : 0.984848 

F1 : 0.320197 

Total Learning Time : 240.06766159248352 

Total Inference Time : 12.181934595108032 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.487
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 406.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 394.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 399.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 404.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 420.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.463, 428.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 381.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 374.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 396.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 391.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.958', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 117.378
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then return 0.8581489350995115;  // std dev = 3.37e-07, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( teamplaysagainstteam(F, A), athleteplaysforteam(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.762910839861417;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( teamalsoknownas(A, I), teamalsoknownas(I, A) )
%   | then if ( teamplaysagainstteam(J, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07042249347191636;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.14185106490048846;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.11407328712270995;  // std dev = 0.986, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(D, A), athleteledsportsteam(E, A) )
%   | then if ( athleteplaysforteam(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | then if ( teamalsoknownas(H, F) )
%   | | | then return 0.7194734122109546;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.6581493218981669;  // std dev = 0.970, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0.7272502218535627;  // std dev = 0.215, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return -0.12651544961409952;  // std dev = 0.038, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( athleteledsportsteam(C, E), teamalsoknownas(F, A) )
%   | | then if ( teamalsoknownas(G, F), teamplaysagainstteam(E, G) )
%   | | | then return 0.5626850299747916;  // std dev = 0.109, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.058657912650554755;  // std dev = 0.993, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( athleteplaysforteam(H, A), athleteledsportsteam(H, A) )
%   | | | then return 0.5135899186681064;  // std dev = 0.966, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.5606730837566654;  // std dev = 0.097, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return 0.2641946918376888;  // std dev = 0.996, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.11324084363155275;  // std dev = 0.036, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( athleteplaysforteam(C, D), teamalsoknownas(D, E) )
%   | | then return 0.4263125348067255;  // std dev = 0.193, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | | then return 0.3502436642611274;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return 0.42551357218480107;  // std dev = 0.099, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | then return -0.23403865540863672;  // std dev = 0.781, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamalsoknownas(J, A) )
%   | | | then return 0.4920913914433126;  // std dev = 0.248, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25555552159041095;  // std dev = 0.972, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.1021691414450941;  // std dev = 0.029, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.32933646274335493;  // std dev = 0.216, 125.000 (wgt'ed) examples reached here.  /* #pos=125 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return -0.16631275545089247;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3337050855598518;  // std dev = 0.078, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( athleteplayssport(H, B) )
%   | then return 0.07152173407043741;  // std dev = 1.021, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.0933515978181523;  // std dev = 0.028, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.2659576096103836;  // std dev = 0.035, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then if ( athleteplayssport(G, B) )
%   | | | then return 0.25770913998615536;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.03703702817868017;  // std dev = 1.263, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.2590511403590983;  // std dev = 0.085, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( teamalsoknownas(H, A), athleteplaysforteam(I, H) )
%   | then if ( athleteledsportsteam(I, H) )
%   | | then return -0.08531473846375034;  // std dev = 0.006, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.07798914052382089;  // std dev = 0.578, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamalsoknownas(J, A), teamalsoknownas(A, J) )
%   | | then if ( teamplaysagainstteam(A, K), teamalsoknownas(K, J) )
%   | | | then return -0.18838534257248363;  // std dev = 0.359, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08964287619696923;  // std dev = 0.009, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.08411299445314285;  // std dev = 0.053, 215.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamplaysinleague(A, E) )
%   | then if ( athleteledsportsteam(C, F) )
%   | | then return 0.21809870936383005;  // std dev = 0.115, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.39981160466701526;  // std dev = 0.265, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysinleague(C, G) )
%   | | then if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | | | then return 0.17041851569734254;  // std dev = 1.392, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return 0.21490024890421083;  // std dev = 0.127, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.03383216271005155;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.079046201931433;  // std dev = 0.030, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamalsoknownas(E, A), teamalsoknownas(A, E) )
%   | then if ( teamplaysinleague(A, F), teamplaysinleague(D, F) )
%   | | then return 0.17832256697222193;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return -0.13485253847238163;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07906401772179109;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( teamplaysinleague(A, H), teamplaysinleague(D, H) )
%   | | then return 0.18452175434742032;  // std dev = 0.144, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, I) )
%   | | | then return 0.05975327179635676;  // std dev = 1.331, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.18919494214711094;  // std dev = 0.084, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   else if ( teamplaysinleague(A, J), athleteplaysinleague(K, J) )
%   | then return -0.0832656483658925;  // std dev = 0.084, 153.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=1 */
%   | else if ( teamalsoknownas(A, L) )
%   | | then return -0.02904875839328537;  // std dev = 0.123, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else return -0.06231007207510044;  // std dev = 0.092, 87.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then return 0.163864623230003;  // std dev = 0.284, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   | else return 0.0680476734927492;  // std dev = 0.932, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.06884249701045685;  // std dev = 0.037, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.14271698550825157;  // std dev = 0.258, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( athleteplaysforteam(E, A), athleteledsportsteam(E, A) )
%   | then if ( teamalsoknownas(A, F), athleteplaysinleague(E, G) )
%   | | then if ( athleteledsportsteam(H, F) )
%   | | | then return -0.06547691389789462;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.22495260719939894;  // std dev = 0.198, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06777750444891222;  // std dev = 0.168, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return -0.06355332350228461;  // std dev = 0.019, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( teamplaysinleague(A, J), athleteplaysinleague(K, J) )
%   | | | then return -0.06342357789164212;  // std dev = 8.33e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.05622712141400197;  // std dev = 0.925, 88.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.678', 'seconds']
Refined model CLL: -0.084239


******************************************
Best model found
******************************************
Results 

CLL : -0.082649 

AUC ROC : 0.992712 

AUC PR : 0.342435 

Precision : 0.201394 

Recall : 0.984848 

F1 : 0.334405 

Total Learning Time : 117.378 

Total Inference Time : 12.569967269897461 

Total revision time: 134.17205046653748
Best scored revision CLL: -0.084239


Results 

CLL : -0.082649 

AUC ROC : 0.992712 

AUC PR : 0.342435 

Precision : 0.201394 

Recall : 0.984848 

F1 : 0.334405 

Total Learning Time : 134.21653913497926 

Total Inference Time : 12.569967269897461 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.546
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 400.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 410.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 378.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 379.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 400.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 409.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 377.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 392.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.464, 419.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 393.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.835', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 118.563
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A), athleteplaysforteam(E, A) )
%   | then if ( athleteledsportsteam(C, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( athleteplaysinleague(E, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.8581489350995123;  // std dev = 8.43e-08, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else if ( teamplaysinleague(A, G), athleteledsportsteam(C, H) )
%   | | | then return 0.8248156017661784;  // std dev = 0.983, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.14185106490048843;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | else if ( teamplaysagainstteam(A, J), teamalsoknownas(J, K) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.12430720525136492;  // std dev = 0.131, 57.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( athleteplaysforteam(F, A), athleteledsportsteam(F, A) )
%   | | then if ( teamplaysagainstteam(A, E) )
%   | | | then return 0.7221758264441864;  // std dev = 0.061, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.42757709712051506;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7214699991790424;  // std dev = 0.030, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else if ( teamplaysagainstteam(A, G), athleteledsportsteam(H, G) )
%   | | then return 0.07352525466573472;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamalsoknownas(J, A), teamplaysagainstteam(A, K) )
%   | then if ( teamalsoknownas(L, K) )
%   | | then return -0.12544463852839133;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.10951139965368217;  // std dev = 0.849, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.1225604572967554;  // std dev = 0.062, 262.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A), teamplaysinleague(E, F) )
%   | then if ( athleteplaysforteam(C, G), teamplaysinleague(G, F) )
%   | | then return 0.5574407256837337;  // std dev = 0.017, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.11771471400696143;  // std dev = 1.210, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.5610206143776518;  // std dev = 0.203, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.11327818995007234;  // std dev = 0.056, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( teamalsoknownas(A, I), teamalsoknownas(I, A) )
%   | | then return 0.04294821159091403;  // std dev = 0.862, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.1263577640979134;  // std dev = 0.075, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.08734224235540289;  // std dev = 0.986, 37.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.42519375471651877;  // std dev = 0.366, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else if ( teamplaysinleague(A, E) )
%   | then return -0.10206893961081846;  // std dev = 0.040, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | else if ( teamalsoknownas(F, A), teamplaysagainstteam(A, G) )
%   | | then return 0.1644732482181861;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return -0.1103849543706205;  // std dev = 0.053, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.08633356289991247;  // std dev = 0.992, 46.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A), teamplaysinleague(A, D) )
%   | then if ( athleteplaysforteam(C, F), athleteplaysforteam(E, F) )
%   | | then return 0.3205292869873399;  // std dev = 0.074, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.16218161713111082;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( teamalsoknownas(G, A), teamplaysinleague(A, H) )
%   | | then return 0.35518678925810915;  // std dev = 0.072, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( athleteledsportsteam(C, I) )
%   | | | then return 0.320186412819362;  // std dev = 0.071, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | | else return 0.20681432219859985;  // std dev = 0.796, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.09314605430039531;  // std dev = 0.037, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else if ( teamplaysagainstteam(A, K), teamalsoknownas(A, L) )
%   | | then return 0.19010066477092416;  // std dev = 0.745, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(M, A) )
%   | | | then return -0.10520863334713279;  // std dev = 0.037, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07560100830275693;  // std dev = 0.990, 41.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamalsoknownas(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.2779988887083527;  // std dev = 0.063, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, C) )
%   | | then if ( athleteledsportsteam(F, A) )
%   | | | then return -0.08503764455360062;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.05341189252824208;  // std dev = 0.781, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.09172818888626472;  // std dev = 0.042, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( teamplaysagainstteam(G, A), teamalsoknownas(A, H) )
%   | then if ( athleteplayssport(I, B) )
%   | | then return 0.26167921639630054;  // std dev = 0.070, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.08870020014958122;  // std dev = 0.062, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( athleteplayssport(J, B) )
%   | | then return 0.25911017160529703;  // std dev = 0.222, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return -0.08524955491886659;  // std dev = 0.000690, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | | | else return -0.07359149236886967;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, F), teamplaysinleague(E, F) )
%   | | then return 0.21151449166094957;  // std dev = 0.171, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else if ( teamplaysinleague(A, G), teamplaysagainstteam(H, A) )
%   | | | then return 0.02797522766406406;  // std dev = 1.285, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.2096251440408323;  // std dev = 0.079, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else if ( teamalsoknownas(A, I) )
%   | | then return 0.32474241012059696;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2495811948020289;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.08019383051559174;  // std dev = 0.082, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | else if ( teamalsoknownas(K, A), teamalsoknownas(A, K) )
%   | | then return 0.04710183337777224;  // std dev = 0.777, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, L) )
%   | | | then return -0.09565268361513524;  // std dev = 0.068, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.052176450542474315;  // std dev = 0.983, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.1825274469325411;  // std dev = 0.268, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else if ( teamplaysinleague(A, E) )
%   | then return -0.07373476626677404;  // std dev = 0.050, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | else if ( teamplaysagainstteam(A, F), teamalsoknownas(G, A) )
%   | | then return 0.11834081752036896;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(A, H) )
%   | | | then return -0.09437943678861539;  // std dev = 0.046, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.05336967913296768;  // std dev = 0.986, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | then if ( teamplaysinleague(E, D), athleteledsportsteam(C, G) )
%   | | then return 0.154266669404758;  // std dev = 0.138, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else if ( athleteledsportsteam(H, F) )
%   | | | then return -0.4613621055115314;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19156321192045977;  // std dev = 0.137, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.15492264778972406;  // std dev = 0.104, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.06902944359662178;  // std dev = 0.052, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | else if ( teamalsoknownas(A, J), teamplaysagainstteam(K, A) )
%   | | then if ( teamplaysagainstteam(A, L) )
%   | | | then return 0.17790351045066946;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07073597830370153;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( teamalsoknownas(M, A) )
%   | | | then return -0.08635060345675344;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.057715648462268114;  // std dev = 0.991, 53.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A), teamplaysinleague(E, D) )
%   | then if ( athleteplaysforteam(C, A) )
%   | | then return 0.12875818561085264;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.11204686202293532;  // std dev = 0.879, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( athleteledsportsteam(C, F) )
%   | | then if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.13855643682346167;  // std dev = 0.163, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0.11387938289054987;  // std dev = 0.990, 51.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=50 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.1990870339550125;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10196707358463955;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.06433988083317556;  // std dev = 0.046, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else if ( teamplaysagainstteam(J, A), teamalsoknownas(A, K) )
%   | | then return 0.074862065135646;  // std dev = 0.687, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.05674762385289857;  // std dev = 0.128, 60.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.216', 'seconds']
Refined model CLL: -0.083891


******************************************
Best model found
******************************************
Results 

CLL : -0.084384 

AUC ROC : 0.996896 

AUC PR : 0.339091 

Precision : 0.198786 

Recall : 0.984962 

F1 : 0.330808 

Total Learning Time : 118.563 

Total Inference Time : 11.742907047271729 

Total revision time: 134.57501176261903
Best scored revision CLL: -0.083891


Results 

CLL : -0.084384 

AUC ROC : 0.996896 

AUC PR : 0.339091 

Precision : 0.198786 

Recall : 0.984962 

F1 : 0.330808 

Total Learning Time : 134.6195004310608 

Total Inference Time : 11.742907047271729 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.581
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 382.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.485, 352.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 379.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 395.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 396.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 394.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 399.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 403.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 411.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 405.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.800', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 189.901
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteplaysinleague(E, D) )
%   | then if ( athleteplaysforteam(C, A) )
%   | | then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 1.19e-07, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   else if ( teamplaysagainstteam(A, F), teamalsoknownas(G, F) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( teamalsoknownas(H, A), teamplaysinleague(A, I) )
%   | | then if ( teamplaysagainstteam(H, J), teamalsoknownas(J, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return -0.14185106490048763;  // std dev = 8.43e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return -0.12224322176323278;  // std dev = 0.990, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return 0.7224688593128498;  // std dev = 0.121, 83.000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | else if ( teamalsoknownas(A, H) )
%   | | | then return 0.7194734122109543;  // std dev = 5.96e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.6480448407823831;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | else return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( athleteplayssport(I, B) )
%   | then return 0.1136761468653775;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( athleteledsportsteam(J, A), athleteplaysforteam(J, A) )
%   | | then if ( teamplaysagainstteam(A, K), teamalsoknownas(L, K) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0.05801541337558454;  // std dev = 0.867, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.12604722347819347;  // std dev = 0.013, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then return 0.5595070476369833;  // std dev = 0.163, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | else if ( athleteledsportsteam(C, D), teamalsoknownas(D, F) )
%   | | | then return 0.50493980743915;  // std dev = 0.963, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.6065151573890739;  // std dev = 0.271, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4040520610480189;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamplaysinleague(A, G), teamalsoknownas(H, A) )
%   | then if ( teamplaysagainstteam(H, I), teamalsoknownas(I, A) )
%   | | then return 0.18755509643408916;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11291874044299606;  // std dev = 0.019, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.11304060710589109;  // std dev = 0.030, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.4256404314811612;  // std dev = 0.246, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then return -0.10385677064186467;  // std dev = 0.155, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( teamplaysagainstteam(G, A), athleteledsportsteam(H, A) )
%   | | then if ( athleteledsportsteam(I, G), athleteplaysforteam(H, A) )
%   | | | then return 0.19772593037614639;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11154280845472003;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamplaysinleague(A, J) )
%   | | | then return -0.10184933148311862;  // std dev = 0.025, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | | else return -0.08506943818527296;  // std dev = 0.863, 48.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamalsoknownas(A, E), teamplaysinleague(A, F) )
%   | | then if ( teamplaysagainstteam(G, A), teamalsoknownas(E, G) )
%   | | | then return 0.07715810988980672;  // std dev = 1.180, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.3177034537071715;  // std dev = 0.001, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( teamplaysagainstteam(H, A), teamalsoknownas(D, H) )
%   | | | then return 0.3215149399565014;  // std dev = 0.106, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return 0.2891578758469092;  // std dev = 1.719, 62.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=59 */
%   | else return 0.13653282764233007;  // std dev = 0.959, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | then if ( athleteplayssport(J, K) )
%   | | then return -0.09393573406842802;  // std dev = 0.066, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( athleteledsportsteam(L, A) )
%   | | | then return 0.1345064889093207;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09251632988267375;  // std dev = 0.000351, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.09395120304211646;  // std dev = 0.015, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A), teamalsoknownas(E, D) )
%   | then return 0.2695683196420511;  // std dev = 0.264, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then if ( athleteplaysinleague(C, F) )
%   | | | then return 0.25828084221092584;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.08039782447937162;  // std dev = 1.329, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.26310460982789197;  // std dev = 0.041, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.24870276447097484;  // std dev = 1.103, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( teamalsoknownas(I, A), teamplaysagainstteam(J, A) )
%   | then if ( teamalsoknownas(K, J) )
%   | | then return -0.08704816660600882;  // std dev = 0.036, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0.1090220932643345;  // std dev = 0.726, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.0865842423405612;  // std dev = 0.085, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | then return 0.21584097599955074;  // std dev = 0.162, 83.000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | else if ( teamalsoknownas(A, G) )
%   | | then return 0.21759264004323875;  // std dev = 0.064, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, H) )
%   | | | then return 0.09054492515496468;  // std dev = 1.315, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.2209271006790508;  // std dev = 0.011, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( teamplaysagainstteam(A, I), athleteplaysforteam(J, I) )
%   | then if ( athleteledsportsteam(J, K), athleteplayssport(J, L) )
%   | | then return -0.08151824674869121;  // std dev = 0.236, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else return 0.012070274086482792;  // std dev = 0.202, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | else if ( teamplaysinleague(A, M), athleteplaysinleague(N, M) )
%   | | then if ( athleteplayssport(P, B) )
%   | | | then return -0.43005554340619145;  // std dev = 0.443, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07897554830537613;  // std dev = 0.014, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.07449839049114987;  // std dev = 0.087, 83.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamalsoknownas(A, E), teamplaysagainstteam(A, F) )
%   | | then if ( teamplaysagainstteam(D, F) )
%   | | | then return 0.1925002883220661;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.05008448432317164;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.17204932299428535;  // std dev = 0.611, 95.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=93 */
%   | | | else return 0.22301675307583171;  // std dev = 0.491, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.3046003215203763;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamalsoknownas(H, A), athleteledsportsteam(I, A) )
%   | then if ( teamplaysagainstteam(H, A) )
%   | | then return -0.08371783476609851;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.11774311772432261;  // std dev = 0.745, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07472024757191092;  // std dev = 0.076, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( athleteledsportsteam(F, A), athleteplaysforteam(F, E) )
%   | | then if ( athleteplayssport(F, G) )
%   | | | then return 0.15200631117746763;  // std dev = 0.041, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.17522701851555758;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.16133730955511094;  // std dev = 0.154, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0.12417523558604485;  // std dev = 0.964, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0.24414512272286526;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamalsoknownas(I, A), athleteplaysforteam(J, I) )
%   | then if ( teamplaysagainstteam(A, I) )
%   | | then return -0.07735438785035945;  // std dev = 0.080, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.10290899455905524;  // std dev = 0.737, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.07337893086208419;  // std dev = 0.419, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | | else return -0.06354869245041991;  // std dev = 0.101, 58.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.14160957749991648;  // std dev = 0.174, 127.000 (wgt'ed) examples reached here.  /* #pos=127 */
%   else if ( athleteplaysforteam(E, A), athleteplayssport(F, B) )
%   | then return 0.201937011068405;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteledsportsteam(G, A), athleteplaysinleague(G, H) )
%   | | then if ( teamplaysinleague(I, H), teamplaysagainstteam(I, A) )
%   | | | then return -0.06668099497988689;  // std dev = 0.066, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return 0.0827475292964055;  // std dev = 0.652, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( athleteplayssport(J, B), athleteplaysforteam(J, K) )
%   | | | then return 0.0032346468290589403;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06859508919341613;  // std dev = 0.767, 206.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29.300', 'seconds']
Refined model CLL: -0.084355


******************************************
Best model found
******************************************
Results 

CLL : -0.085893 

AUC ROC : 0.995849 

AUC PR : 0.321433 

Precision : 0.192308 

Recall : 0.984848 

F1 : 0.321782 

Total Learning Time : 189.901 

Total Inference Time : 14.793176889419556 

Total revision time: 209.03494036865234
Best scored revision CLL: -0.084355


Results 

CLL : -0.085893 

AUC ROC : 0.995849 

AUC PR : 0.321433 

Precision : 0.192308 

Recall : 0.984848 

F1 : 0.321782 

Total Learning Time : 209.06143749427795 

Total Inference Time : 14.793176889419556 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.576
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 395.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 414.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 374.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 392.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 401.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 394.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.482, 361.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 393.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 404.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.870', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 224.08100000000002
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.8581489350995105;  // std dev = 7.15e-07, 125.000 (wgt'ed) examples reached here.  /* #pos=125 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( athleteplayssport(H, B) )
%   | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.1418510649004882;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.7209504521982344;  // std dev = 0.113, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( athleteledsportsteam(C, E) )
%   | | then if ( athleteplaysforteam(C, E), teamalsoknownas(E, F) )
%   | | | then return 0.5944734122109546;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.7194734122109551;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return 0.7889802403930554;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839188;  // std dev = 0.000, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(A, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.5550297333807879;  // std dev = 0.000350, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.11231637819360629;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then if ( athleteplaysforteam(H, A), athleteplaysinleague(H, G) )
%   | | then if ( teamplaysinleague(A, G), athleteledsportsteam(F, I) )
%   | | | then return 0.5550016747669967;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.15500167476699628;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( teamplaysinleague(A, J) )
%   | | | then return 0.5631540748973985;  // std dev = 0.169, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | | else return 0.5320810374082899;  // std dev = 0.962, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else if ( teamalsoknownas(A, K), teamplaysinleague(A, L) )
%   | | then if ( teamalsoknownas(M, A), teamalsoknownas(K, M) )
%   | | | then return 0.1517237196805181;  // std dev = 0.647, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11231637819360629;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.11062380482920758;  // std dev = 0.055, 231.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamalsoknownas(F, A), athleteledsportsteam(G, F) )
%   | | then return 0.45976546964440385;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.4083023573299942;  // std dev = 0.971, 88.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=87 */
%   | | | else return 0.4280334044290387;  // std dev = 0.063, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( teamalsoknownas(I, A), teamalsoknownas(A, I) )
%   | | then return 0.07347459713668598;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.46221982901813186;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( athleteplayssport(J, B), athleteplaysforteam(K, A) )
%   | then return -0.2826155456066083;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysagainstteam(L, A) )
%   | | then return -0.10172782240386109;  // std dev = 0.000727, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | | else if ( teamplaysinleague(A, M), teamalsoknownas(N, A) )
%   | | | then return -0.058260267327961864;  // std dev = 0.728, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return -0.09023565471438483;  // std dev = 0.799, 70.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamplaysinleague(D, E) )
%   | then if ( athleteledsportsteam(C, F) )
%   | | then return 0.32591326013554694;  // std dev = 0.053, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.47774801733998873;  // std dev = 0.218, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( athleteledsportsteam(C, G) )
%   | | then if ( teamplaysagainstteam(A, H), teamalsoknownas(I, H) )
%   | | | then return 0.32705779293202686;  // std dev = 0.137, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return 0.2488452893048415;  // std dev = 2.110, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else if ( teamplaysinleague(A, J) )
%   | | | then return -0.3464932712804707;  // std dev = 0.230, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.28802549293531765;  // std dev = 0.677, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09333213601508215;  // std dev = 0.031, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A), teamplaysagainstteam(A, D) )
%   | then if ( athleteledsportsteam(E, D), teamplaysinleague(A, F) )
%   | | then return 0.2603078562547385;  // std dev = 0.128, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else if ( athleteplaysforteam(C, D), teamplaysinleague(A, G) )
%   | | | then return -0.40094081506688833;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18367478617357638;  // std dev = 1.096, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else if ( athleteledsportsteam(C, H) )
%   | | then return 0.27200550476037105;  // std dev = 0.097, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | else return 0.4598652865626994;  // std dev = 0.301, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0859581860611315;  // std dev = 0.040, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), teamalsoknownas(A, E) )
%   | then if ( teamplaysinleague(A, F), athleteledsportsteam(C, D) )
%   | | then return 0.21241400958246956;  // std dev = 0.043, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( teamalsoknownas(E, A) )
%   | | | then return 0.26383162160938345;  // std dev = 0.193, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.35266021754042787;  // std dev = 0.714, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( athleteledsportsteam(C, G) )
%   | | then if ( teamplaysinleague(A, H), teamplaysagainstteam(I, A) )
%   | | | then return 0.21916475075110617;  // std dev = 0.177, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return 0.18848310643175575;  // std dev = 1.381, 53.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=51 */
%   | | else if ( teamplaysagainstteam(A, J) )
%   | | | then return 0.2276117119149411;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.33500428219085165;  // std dev = 0.268, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07952856985873466;  // std dev = 0.051, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A), teamplaysinleague(A, E) )
%   | then if ( teamplaysagainstteam(F, A), athleteplaysforteam(C, G) )
%   | | then if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.17892952282206392;  // std dev = 0.096, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return 0.0949150839260076;  // std dev = 0.954, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.16141699148523694;  // std dev = 0.940, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( teamplaysagainstteam(A, H), athleteledsportsteam(C, H) )
%   | | then if ( teamalsoknownas(I, H), teamalsoknownas(H, J) )
%   | | | then return -0.15926818010821928;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18795592864316038;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( athleteledsportsteam(C, K) )
%   | | | then return 0.19448087487528004;  // std dev = 0.160, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | | else return 0.24290013003893618;  // std dev = 0.297, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07382457212359127;  // std dev = 0.035, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( athleteledsportsteam(E, A), teamplaysagainstteam(A, D) )
%   | then return 0.15189747835476441;  // std dev = 0.051, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else return 0.16941386534673372;  // std dev = 0.024, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysinleague(F, G) )
%   | | then if ( athleteplaysforteam(H, F) )
%   | | | then return -0.06680049581555018;  // std dev = 0.232, 152.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=1 */
%   | | | else return -0.011098646443040896;  // std dev = 0.198, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.09723999025659129;  // std dev = 0.191, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( teamalsoknownas(A, I) )
%   | | then if ( teamplaysinleague(A, J) )
%   | | | then return -0.07350522273090371;  // std dev = 0.033, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.0516625739267103;  // std dev = 0.183, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( teamplaysinleague(A, K), athleteplaysinleague(L, K) )
%   | | | then return -0.06908703974863067;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.07921112147083768;  // std dev = 1.020, 71.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.14155674796400486;  // std dev = 0.019, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | | then return -0.14071214624238035;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, H) )
%   | | | then return 0.08038153320183697;  // std dev = 0.959, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.13880429878955955;  // std dev = 0.046, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( athleteplaysforteam(I, A), athleteplayssport(I, J) )
%   | then if ( teamalsoknownas(A, K), athleteledsportsteam(L, A) )
%   | | then return -0.16085074940682093;  // std dev = 0.198, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06821206628418293;  // std dev = 0.031, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( teamalsoknownas(A, M) )
%   | | then return -0.03920497522917692;  // std dev = 0.079, 44.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
%   | | else if ( teamplaysagainstteam(A, N), teamalsoknownas(N, P) )
%   | | | then return -0.05406434357676124;  // std dev = 0.284, 36.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | | else return -0.07174270889396504;  // std dev = 1.113, 125.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.658', 'seconds']
Refined model CLL: -0.085387


******************************************
Best model found
******************************************
Results 

CLL : -0.083884 

AUC ROC : 0.991839 

AUC PR : 0.284302 

Precision : 0.177189 

Recall : 0.988636 

F1 : 0.300518 

Total Learning Time : 224.08100000000002 

Total Inference Time : 14.731640338897705 

Total revision time: 243.19331043434144
Best scored revision CLL: -0.085387


Results 

CLL : -0.083884 

AUC ROC : 0.991839 

AUC PR : 0.284302 

Precision : 0.177189 

Recall : 0.988636 

F1 : 0.300518 

Total Learning Time : 243.21980755996705 

Total Inference Time : 14.731640338897705 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.622
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 391.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.480, 365.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 409.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.461, 428.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 382.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 392.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 398.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 392.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 389.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 415.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.996', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 258.787
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(F, A) )
%   | | then return 0.8581489350995128;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | | else if ( athleteplaysforteam(C, E), teamalsoknownas(E, G) )
%   | | | then return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.8581489350995115;  // std dev = 2.38e-07, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.1418510649004884;  // std dev = 0.000, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | else if ( teamalsoknownas(J, A), teamplaysagainstteam(K, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamalsoknownas(A, L) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.1155352754268035;  // std dev = 0.987, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.7228472011023523;  // std dev = 0.128, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else if ( teamplaysinleague(A, E) )
%   | then return -0.12544463852839166;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else if ( teamalsoknownas(F, A), teamalsoknownas(G, F) )
%   | | then return 0.007982917483090993;  // std dev = 0.342, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return -0.1308709785775238;  // std dev = 0.037, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.09970553655737978;  // std dev = 0.986, 35.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.5588068471885337;  // std dev = 0.164, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else if ( teamplaysinleague(A, E) )
%   | then return -0.11231637819360668;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | else if ( teamalsoknownas(A, F), teamplaysagainstteam(G, A) )
%   | | then return 0.079262010485476;  // std dev = 0.854, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return -0.11441601328102198;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.09517184897929158;  // std dev = 0.989, 43.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysinleague(A, D) )
%   | then return 0.41667471628268077;  // std dev = 0.026, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( teamplaysinleague(A, F), athleteplaysforteam(G, A) )
%   | | then if ( athleteplaysinleague(H, F), athleteplaysforteam(H, I) )
%   | | | then return -0.14378191336904125;  // std dev = 1.284, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.4180370175067563;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( athleteledsportsteam(C, J), teamplaysinleague(A, K) )
%   | | | then return 0.3542943240081667;  // std dev = 1.350, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return 0.42870749573305167;  // std dev = 0.153, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( teamalsoknownas(L, A), teamalsoknownas(A, L) )
%   | then if ( teamplaysagainstteam(M, A) )
%   | | then return 0.0431561710523847;  // std dev = 0.867, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.10706800588359834;  // std dev = 0.035, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( teamplaysagainstteam(N, A) )
%   | | then return -0.10305541795029163;  // std dev = 0.067, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else return -0.0931802331288059;  // std dev = 0.108, 85.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), athleteledsportsteam(E, D) )
%   | then return 0.1452373813316155;  // std dev = 0.776, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( athleteledsportsteam(C, G), teamplaysinleague(G, F) )
%   | | | then return 0.328630161829034;  // std dev = 0.224, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | | | else return 0.2844364297675267;  // std dev = 0.865, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( athleteledsportsteam(C, H) )
%   | | | then return 0.284995570272413;  // std dev = 0.973, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.12386841961986347;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.09349143790709499;  // std dev = 0.045, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | else if ( teamplaysagainstteam(J, A), teamalsoknownas(J, K) )
%   | | then if ( teamalsoknownas(K, L) )
%   | | | then return 0.2127476997433718;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.096705250407447;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08410924865456204;  // std dev = 0.131, 58.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysforteam(F, A) )
%   | then if ( athleteledsportsteam(F, A), athleteplayssport(F, G) )
%   | | then if ( athleteplaysforteam(C, H), teamplaysinleague(H, E) )
%   | | | then return 0.25633314763165754;  // std dev = 0.048, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.34400169716968865;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteplaysinleague(I, E), athleteplayssport(I, B) )
%   | | | then return 0.21238051706565111;  // std dev = 0.981, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.07299665747468644;  // std dev = 1.217, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0.26792397501580184;  // std dev = 0.180, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.08606468250064933;  // std dev = 0.051, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else if ( teamplaysagainstteam(A, K), teamalsoknownas(A, L) )
%   | | then return 0.19773184360435472;  // std dev = 0.730, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(A, M) )
%   | | | then return -0.09862055282104339;  // std dev = 0.037, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07010877658503917;  // std dev = 0.990, 44.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A), athleteplaysforteam(E, A) )
%   | then if ( athleteledsportsteam(C, F), teamplaysinleague(A, D) )
%   | | then return 0.21117956153539819;  // std dev = 0.043, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( athleteplaysforteam(G, A), athleteplaysinleague(G, D) )
%   | | | then return -0.369501423704212;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1144045883733808;  // std dev = 0.901, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.22196007197543827;  // std dev = 0.023, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else if ( teamplaysinleague(A, I), athleteledsportsteam(C, J) )
%   | | | then return 0.18780624508827168;  // std dev = 0.973, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.21504478703357058;  // std dev = 0.030, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( teamplaysinleague(A, K) )
%   | then return -0.07956157483694437;  // std dev = 0.055, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | else if ( teamalsoknownas(A, L), teamplaysagainstteam(M, A) )
%   | | then return 0.10142296739695092;  // std dev = 0.760, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.06958489813783811;  // std dev = 0.139, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then if ( teamalsoknownas(F, A), athleteledsportsteam(G, F) )
%   | | then return 0.03900729164571968;  // std dev = 0.721, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1891546990171454;  // std dev = 0.027, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.1862692288743305;  // std dev = 0.029, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | | then return -0.09483215778574586;  // std dev = 1.174, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.12607709814223497;  // std dev = 1.362, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( teamalsoknownas(A, K), teamplaysagainstteam(A, L) )
%   | then if ( teamalsoknownas(M, L) )
%   | | then return -0.0756129427026555;  // std dev = 0.022, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0.19824245927748532;  // std dev = 0.664, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(N, A) )
%   | | then return -0.0757173825741771;  // std dev = 0.157, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else return -0.06741485081873246;  // std dev = 0.095, 108.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.16393393531813819;  // std dev = 0.021, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( teamplaysagainstteam(A, F), athleteplaysforteam(G, F) )
%   | | then return -0.1392873379155564;  // std dev = 0.736, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20705325472199654;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysagainstteam(H, A) )
%   | then if ( teamplaysagainstteam(A, H) )
%   | | then if ( teamalsoknownas(A, I), teamalsoknownas(I, A) )
%   | | | then return -0.03144566092234528;  // std dev = 0.793, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.07104673316702025;  // std dev = 0.153, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else return -0.09860631153985389;  // std dev = 0.039, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( teamplaysinleague(A, J) )
%   | | then return -0.07015687556099948;  // std dev = 0.039, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return -0.07609630067945777;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.04704445561100071;  // std dev = 0.985, 34.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, E) )
%   | then if ( athleteplaysinleague(F, G), athleteplayssport(F, H) )
%   | | then if ( teamplaysinleague(A, D) )
%   | | | then return 0.13261262929130962;  // std dev = 0.046, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | | else return 0.18254510839464605;  // std dev = 0.103, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( teamalsoknownas(A, I) )
%   | | | then return 0.15876620605386604;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.35069074603144257;  // std dev = 0.968, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.14887875801176706;  // std dev = 0.136, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.065049651906755;  // std dev = 0.062, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else if ( teamalsoknownas(K, A), teamplaysagainstteam(L, A) )
%   | | then return 0.035645233365773285;  // std dev = 0.789, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamalsoknownas(A, M) )
%   | | | then return -0.09489684371767931;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.04972495821061871;  // std dev = 0.989, 43.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.555', 'seconds']
Refined model CLL: -0.08387


******************************************
Best model found
******************************************
Results 

CLL : -0.084471 

AUC ROC : 0.993693 

AUC PR : 0.291545 

Precision : 0.197289 

Recall : 0.984962 

F1 : 0.328733 

Total Learning Time : 258.787 

Total Inference Time : 17.73278284072876 

Total revision time: 280.90461285972594
Best scored revision CLL: -0.08387


Results 

CLL : -0.084471 

AUC ROC : 0.993693 

AUC PR : 0.291545 

Precision : 0.197289 

Recall : 0.984962 

F1 : 0.328733 

Total Learning Time : 280.93110998535155 

Total Inference Time : 17.73278284072876 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.474
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.467, 414.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 390.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 398.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 391.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 372.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 380.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 394.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.462, 431.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 384.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 389.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.919', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 257.048
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, A) )
%   | | then if ( athleteplayssport(E, F) )
%   | | | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #pos=98 */
%   | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamalsoknownas(G, A), teamplaysinleague(A, H) )
%   | then if ( teamplaysagainstteam(G, I), teamalsoknownas(I, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.1418510649004884;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( athleteledsportsteam(F, A) )
%   | | then if ( athleteplaysforteam(G, A) )
%   | | | then return 0.7243793599853863;  // std dev = 0.067, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7194734122109537;  // std dev = 2.80e-07, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | else return 0.5816289395752954;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamalsoknownas(H, A), athleteledsportsteam(I, A) )
%   | then if ( teamalsoknownas(J, H), teamplaysagainstteam(H, J) )
%   | | then return -0.15645704120843654;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.03433038309826525;  // std dev = 0.875, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( athleteplayssport(K, B) )
%   | | then return 0.07352525466573467;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1259593672035793;  // std dev = 0.071, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.5614038100018457;  // std dev = 0.252, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | then return -0.11582252802152347;  // std dev = 0.198, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( teamalsoknownas(G, A), teamplaysagainstteam(A, H) )
%   | | then return 0.195618337539157;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.05920474450986394;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11237471169586126;  // std dev = 0.017, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then return 0.41938455918367645;  // std dev = 0.135, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | else if ( athleteledsportsteam(C, D), teamalsoknownas(D, F) )
%   | | | then return 0.353546054474436;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.4505305698047698;  // std dev = 0.258, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.24228533173749703;  // std dev = 1.023, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( athleteledsportsteam(G, A), teamalsoknownas(H, A) )
%   | then if ( athleteplayssport(G, I) )
%   | | then return -0.12419034886620055;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.16024947316335722;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.10178474507382991;  // std dev = 0.055, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamalsoknownas(F, A), teamplaysagainstteam(A, E) )
%   | | then if ( athleteplaysforteam(C, E), teamalsoknownas(E, G) )
%   | | | then return 0.32430139588815904;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.015051783895580928;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.32286307625844907;  // std dev = 0.129, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | else return 0.47249437590191934;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( athleteplayssport(H, B), teamplaysagainstteam(A, I) )
%   | then return -0.37873089081515215;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamalsoknownas(J, A), athleteplaysforteam(K, J) )
%   | | then if ( athleteplaysforteam(L, A), athleteplayssport(L, M) )
%   | | | then return -0.10802870995532507;  // std dev = 0.061, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.006903462836198764;  // std dev = 0.835, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( teamplaysinleague(A, N) )
%   | | | then return -0.09361352858555703;  // std dev = 0.088, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | | | else return -0.07935462416043026;  // std dev = 0.676, 47.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, D) )
%   | | then return 0.2591802728990591;  // std dev = 0.136, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else if ( teamplaysinleague(A, F), athleteplaysforteam(G, A) )
%   | | | then return 0.17234937100823552;  // std dev = 0.960, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.25624247833935176;  // std dev = 0.047, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.3583281017810521;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamalsoknownas(A, H), teamplaysagainstteam(I, A) )
%   | then if ( athleteplayssport(J, B) )
%   | | then return -0.3261556948112154;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09158543761915143;  // std dev = 0.075, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( athleteplaysforteam(K, A), athleteledsportsteam(K, A) )
%   | | then if ( teamplaysagainstteam(A, L), teamalsoknownas(M, L) )
%   | | | then return -0.08633947922451657;  // std dev = 0.040, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0.12856807667747874;  // std dev = 0.741, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.08245669733286472;  // std dev = 0.050, 195.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A) )
%   | then return 0.21681032871611386;  // std dev = 0.157, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( teamplaysinleague(A, D) )
%   | | then return 0.21625487493947831;  // std dev = 0.068, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | | | then return -0.2628422201399524;  // std dev = 1.016, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1905988013699552;  // std dev = 0.921, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   else if ( athleteledsportsteam(H, A), athleteplaysinleague(H, I) )
%   | then if ( athleteplayssport(H, J) )
%   | | then return -0.08254234038767;  // std dev = 0.074, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0.08428521421205158;  // std dev = 0.778, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamalsoknownas(K, A) )
%   | | then return -0.09296278549163718;  // std dev = 0.049, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.08135841265406514;  // std dev = 0.299, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | | else return -0.06257146359452839;  // std dev = 0.698, 41.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E), teamplaysagainstteam(F, A) )
%   | then if ( athleteledsportsteam(G, F) )
%   | | then return 0.18825115292348962;  // std dev = 0.066, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.06434305707564594;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.18265862704244962;  // std dev = 0.220, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   else if ( teamalsoknownas(A, H), teamalsoknownas(H, I) )
%   | then if ( teamplaysinleague(A, J), teamalsoknownas(K, A) )
%   | | then if ( teamplaysinleague(K, J) )
%   | | | then return -0.09073891335967524;  // std dev = 0.260, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.12248192313610023;  // std dev = 0.232, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07336425609203352;  // std dev = 0.004, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( teamplaysagainstteam(L, A), teamalsoknownas(M, L) )
%   | | then return -0.07592288550555326;  // std dev = 0.134, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( teamalsoknownas(N, A), teamalsoknownas(P, N) )
%   | | | then return 0.19535254465849194;  // std dev = 0.656, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0700732962397514;  // std dev = 0.741, 86.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(A, E) )
%   | then if ( teamplaysinleague(D, E) )
%   | | then return 0.15367870647790757;  // std dev = 0.099, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( athleteplaysforteam(F, A), athleteledsportsteam(F, G) )
%   | | | then return -0.0635828089375247;  // std dev = 0.887, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1603234938716543;  // std dev = 0.072, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( athleteledsportsteam(C, H) )
%   | | then return 0.16054632371248487;  // std dev = 0.062, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.31525542953818175;  // std dev = 0.391, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysinleague(A, I), teamplaysagainstteam(A, J) )
%   | then if ( teamalsoknownas(K, A), athleteledsportsteam(L, A) )
%   | | then if ( athleteledsportsteam(M, K) )
%   | | | then return -0.08549156139533746;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.08828036208034776;  // std dev = 0.673, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.06901567038559438;  // std dev = 0.043, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else return -0.07112978315088445;  // std dev = 0.089, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(D, E) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then if ( athleteplaysforteam(G, E), athleteledsportsteam(G, D) )
%   | | | then return 0.055926347614050735;  // std dev = 1.361, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return 0.14079429545371105;  // std dev = 0.124, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.14265421100121195;  // std dev = 0.893, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | then if ( teamplaysagainstteam(J, A) )
%   | | | then return 0.14068761254773193;  // std dev = 0.073, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.05550763245991759;  // std dev = 0.960, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return 0.1338606735821907;  // std dev = 0.002, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.1597048758364706;  // std dev = 0.437, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( teamplaysagainstteam(A, L), teamalsoknownas(M, A) )
%   | then return -0.045330916592146414;  // std dev = 0.144, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | else return -0.06550262803606244;  // std dev = 0.086, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.598', 'seconds']
Refined model CLL: -0.085615


******************************************
Best model found
******************************************
Results 

CLL : -0.087228 

AUC ROC : 0.995831 

AUC PR : 0.377017 

Precision : 0.191599 

Recall : 0.984848 

F1 : 0.32079 

Total Learning Time : 257.048 

Total Inference Time : 18.047502040863037 

Total revision time: 279.22402922821044
Best scored revision CLL: -0.085615


Results 

CLL : -0.087228 

AUC ROC : 0.995831 

AUC PR : 0.377017 

Precision : 0.191599 

Recall : 0.984848 

F1 : 0.32079 

Total Learning Time : 279.28955809783935 

Total Inference Time : 18.047502040863037 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.635
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 406.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 396.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.464, 425.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 380.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 388.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 403.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.461, 434.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 398.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 392.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 378.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.908', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 274.275
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.8581489350995105;  // std dev = 7.15e-07, 125.000 (wgt'ed) examples reached here.  /* #pos=125 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamalsoknownas(G, A), athleteplaysforteam(H, G) )
%   | then if ( teamplaysagainstteam(A, G) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( athleteplayssport(I, B) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.1418510649004884;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | | then if ( athleteledsportsteam(C, F) )
%   | | | then return 0.7194734122109551;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | | else return 0.4108581326712261;  // std dev = 1.832, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | | then return 0.6824363751739176;  // std dev = 0.981, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return 0.7219108838723014;  // std dev = 0.086, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else return 0.3460810865052052;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.12570919071822087;  // std dev = 0.041, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( athleteplaysforteam(E, A), athleteplaysinleague(E, D) )
%   | | then if ( teamplaysinleague(A, D) )
%   | | | then return 0.5559032583573168;  // std dev = 0.013, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return 0.3053664367462847;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5677750909085277;  // std dev = 0.247, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | else return 0.29545585571162936;  // std dev = 1.004, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.11283616367116549;  // std dev = 0.056, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( athleteplaysforteam(C, D), teamalsoknownas(D, E) )
%   | | then if ( teamplaysagainstteam(A, F), teamplaysagainstteam(D, F) )
%   | | | then return 0.4241430720935913;  // std dev = 0.124, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return 0.34711421231276196;  // std dev = 1.269, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else return 0.42337961195492013;  // std dev = 0.176, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then return -0.0832219189041112;  // std dev = 0.633, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(I, A), teamplaysagainstteam(I, J) )
%   | | | then return 0.5791663748081327;  // std dev = 0.210, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3765516287984495;  // std dev = 0.752, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.10202390537888245;  // std dev = 0.052, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( teamalsoknownas(E, A), teamalsoknownas(A, E) )
%   | | then if ( teamplaysagainstteam(F, A) )
%   | | | then return 0.3419624716016154;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.21181211478155848;  // std dev = 0.932, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.33065046063148534;  // std dev = 0.267, 117.000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | else return 0.2006857464939038;  // std dev = 0.889, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.09288340255265583;  // std dev = 0.036, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(E, D) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return 0.26038142379184825;  // std dev = 0.151, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else if ( athleteplayssport(E, B), athleteledsportsteam(C, G) )
%   | | | then return 0.26598357773663694;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.06185172129108238;  // std dev = 1.211, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( athleteledsportsteam(C, H) )
%   | | then return 0.2610444131812698;  // std dev = 0.140, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else if ( teamplaysagainstteam(A, I) )
%   | | | then return 0.3026317237807252;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4924057998432345;  // std dev = 0.259, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08541369758348594;  // std dev = 0.037, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D) )
%   | then if ( athleteledsportsteam(C, E) )
%   | | then return 0.22395166108379672;  // std dev = 0.106, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.29630200677639235;  // std dev = 0.215, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( athleteledsportsteam(C, F) )
%   | | then if ( teamplaysagainstteam(G, A), teamalsoknownas(H, G) )
%   | | | then return 0.16608170170658046;  // std dev = 1.361, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | | else return 0.2133871041077868;  // std dev = 0.117, 60.000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return -0.06866177241621085;  // std dev = 1.130, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07889818697348377;  // std dev = 0.031, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then if ( athleteledsportsteam(F, A), athleteplayssport(F, G) )
%   | | then if ( athleteplaysforteam(F, H) )
%   | | | then return 0.17928035707036552;  // std dev = 0.046, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.1397898667384019;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.19385693145273786;  // std dev = 0.027, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else if ( teamplaysinleague(A, I), teamalsoknownas(A, J) )
%   | | then return 0.19191532146287094;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( teamplaysinleague(A, D), athleteledsportsteam(C, K) )
%   | | | then return 0.17962244432255942;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.06571545963497322;  // std dev = 2.093, 44.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=39 */
%   else if ( teamplaysagainstteam(L, A) )
%   | then return -0.07783224648392419;  // std dev = 0.032, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else if ( teamalsoknownas(M, A), teamplaysinleague(A, N) )
%   | | then return -0.0390202042592083;  // std dev = 0.122, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return -0.06715316261397174;  // std dev = 0.059, 98.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.16302839967095442;  // std dev = 0.177, 125.000 (wgt'ed) examples reached here.  /* #pos=125 */
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return 0.19276450515578933;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06989691660032767;  // std dev = 0.655, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(A, G), teamalsoknownas(G, A) )
%   | then if ( teamplaysinleague(A, H), teamplaysinleague(G, H) )
%   | | then if ( athleteplaysforteam(I, A) )
%   | | | then return -0.068738824334007;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.03178965625634841;  // std dev = 0.445, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return -0.06842400044677863;  // std dev = 0.001, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( teamplaysinleague(A, J) )
%   | | then return -0.07163673388576516;  // std dev = 0.034, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.06934085897136585;  // std dev = 0.019, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.049420428145813475;  // std dev = 0.588, 31.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, F) )
%   | | then if ( athleteledsportsteam(G, A) )
%   | | | then return 0.13592426965145277;  // std dev = 0.049, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.060012748091034386;  // std dev = 0.905, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.14376117430671237;  // std dev = 0.143, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | else if ( teamalsoknownas(H, A), athleteplaysinleague(C, I) )
%   | | then return -0.09883854323914065;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.18400436846102583;  // std dev = 0.772, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06433813385972753;  // std dev = 0.030, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.787', 'seconds']
Refined model CLL: -0.085364


******************************************
Best model found
******************************************
Results 

CLL : -0.083797 

AUC ROC : 0.995332 

AUC PR : 0.354425 

Precision : 0.172962 

Recall : 0.988636 

F1 : 0.294416 

Total Learning Time : 274.275 

Total Inference Time : 12.36712098121643 

Total revision time: 291.1129490470886
Best scored revision CLL: -0.085364


Results 

CLL : -0.083797 

AUC ROC : 0.995332 

AUC PR : 0.354425 

Precision : 0.172962 

Recall : 0.988636 

F1 : 0.294416 

Total Learning Time : 291.1784779167175 

Total Inference Time : 12.36712098121643 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.588
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 399.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 372.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 404.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 398.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 393.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.463, 420.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 405.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 400.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 379.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.471, 394.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.893', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 484.639
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else if ( teamplaysinleague(A, F), teamalsoknownas(G, A) )
%   | | then return 0.7470378239884012;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.8146706742299468;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.14185106490048816;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else if ( teamalsoknownas(J, A), teamplaysagainstteam(K, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(L, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.1155352754268035;  // std dev = 0.987, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamalsoknownas(F, A), teamalsoknownas(A, F) )
%   | | then if ( athleteplaysforteam(C, E), teamalsoknownas(E, G) )
%   | | | then return 0.32822137231215687;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.7294142759623209;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( athleteplaysforteam(H, A), athleteledsportsteam(H, I) )
%   | | | then return 0.6528067455442879;  // std dev = 1.366, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return 0.7221368049221302;  // std dev = 0.040, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | else if ( teamplaysinleague(A, J), athleteplaysinleague(K, J) )
%   | | then return 0.4716461567182391;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7249408872742059;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysinleague(A, L) )
%   | then return -0.12544463852839174;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
%   | else if ( teamalsoknownas(M, A), teamplaysagainstteam(A, N) )
%   | | then return 0.08320549123154841;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.1132173113654874;  // std dev = 0.121, 67.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, A) )
%   | then if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then if ( athleteplayssport(H, B) )
%   | | | then return 0.5692173995842174;  // std dev = 0.126, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0.44036709016692543;  // std dev = 0.929, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.22664464980272903;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.5637577281141191;  // std dev = 0.161, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.11231637819360644;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else return -0.08908620666778554;  // std dev = 0.162, 70.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, A) )
%   | then if ( athleteledsportsteam(C, A) )
%   | | then return 0.43962653358356907;  // std dev = 0.111, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( athleteledsportsteam(C, F), teamplaysagainstteam(A, F) )
%   | | | then return 0.1628856224062092;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.4634063587653306;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.42559322364925994;  // std dev = 0.222, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( teamplaysagainstteam(A, G), teamalsoknownas(A, H) )
%   | then if ( teamplaysinleague(A, I) )
%   | | then return -0.10159632948783631;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.20642369457301543;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(J, A) )
%   | | then return -0.10341067454638377;  // std dev = 0.079, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return -0.10159632948783616;  // std dev = 4.59e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.0825585926328251;  // std dev = 0.987, 41.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E) )
%   | then return 0.3358683568531051;  // std dev = 0.260, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else if ( teamplaysagainstteam(F, A), athleteledsportsteam(C, G) )
%   | | then if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.31603358003865833;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06616461062046466;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysinleague(A, H), teamalsoknownas(I, A) )
%   | | | then return 0.2393333076558894;  // std dev = 0.957, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.3233395952868054;  // std dev = 0.079, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.09259598057619302;  // std dev = 0.001, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | else if ( teamplaysagainstteam(K, A), teamalsoknownas(L, A) )
%   | | then return 0.10448195544659447;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamalsoknownas(A, M) )
%   | | | then return -0.11108922889164985;  // std dev = 0.058, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07588657565157167;  // std dev = 0.988, 43.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then return 0.2732169909713247;  // std dev = 0.221, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else if ( teamalsoknownas(G, A), teamplaysinleague(A, H) )
%   | | then if ( teamalsoknownas(A, G) )
%   | | | then return 0.30078703711586374;  // std dev = 0.082, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.054293476205930204;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2550945160348032;  // std dev = 0.083, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.08512191713377033;  // std dev = 0.000956, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else if ( teamplaysagainstteam(A, J), teamalsoknownas(J, K) )
%   | | then return 0.054936679233270745;  // std dev = 0.801, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.09040024136274104;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06761481756623625;  // std dev = 0.987, 40.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(G, F) )
%   | | then if ( teamplaysinleague(G, D) )
%   | | | then return 0.2176769700181401;  // std dev = 0.168, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.053812226514669055;  // std dev = 1.181, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.21586033640159935;  // std dev = 0.171, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.2431769635011477;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.032082889674291654;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.07871201563229617;  // std dev = 0.000923, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else if ( teamalsoknownas(A, J), teamplaysagainstteam(A, K) )
%   | | then return 0.08090009326953532;  // std dev = 0.809, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.10226123213993202;  // std dev = 0.111, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.056542109782795086;  // std dev = 0.984, 33.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then if ( teamplaysagainstteam(C, F) )
%   | | then return 0.18680423873241112;  // std dev = 0.190, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else if ( teamalsoknownas(A, D) )
%   | | | then return 0.20532830274594355;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.10736971254183554;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteplayssport(G, B), teamplaysinleague(A, H) )
%   | | then return 0.06510380881859992;  // std dev = 0.277, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.07441045901624889;  // std dev = 0.100, 123.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=1 */
%   else if ( athleteplayssport(I, B), athleteplaysinleague(I, J) )
%   | then if ( teamalsoknownas(K, A), teamplaysinleague(A, L) )
%   | | then return 0.20617564293122598;  // std dev = 0.091, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( teamplaysagainstteam(M, A) )
%   | | | then return 0.18639347405189688;  // std dev = 0.115, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.15351901624943465;  // std dev = 0.986, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | else return -0.06934182665539226;  // std dev = 0.084, 140.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.16010377785670754;  // std dev = 0.244, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   else if ( teamplaysinleague(A, E), teamplaysagainstteam(A, F) )
%   | then if ( athleteplaysforteam(G, F) )
%   | | then if ( athleteledsportsteam(G, A), athleteledsportsteam(H, F) )
%   | | | then return -0.12123069205695698;  // std dev = 0.713, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06622598069635717;  // std dev = 0.259, 123.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=1 */
%   | | else return -0.26639149167340126;  // std dev = 0.685, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(I, B) )
%   | | then return 0.1871861219843857;  // std dev = 0.051, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( teamalsoknownas(J, A), teamalsoknownas(A, J) )
%   | | | then return -0.023404115934741457;  // std dev = 0.823, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.06507469517353255;  // std dev = 0.996, 113.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then if ( athleteledsportsteam(F, A) )
%   | | then return 0.1464733522785769;  // std dev = 0.163, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( athleteplaysinleague(G, C), athleteplaysforteam(H, A) )
%   | | | then return -0.025255292414403878;  // std dev = 1.788, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return 0.1205993931440239;  // std dev = 1.001, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else return -0.06412744669751826;  // std dev = 0.030, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   else if ( athleteplayssport(I, B), athleteledsportsteam(I, J) )
%   | then return 0.13797166379464848;  // std dev = 0.081, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( teamalsoknownas(K, A), teamplaysagainstteam(A, L) )
%   | | then return 0.16543253163048097;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(M, A), teamplaysinleague(M, N) )
%   | | | then return -0.042776468723647314;  // std dev = 0.402, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return -0.06800039055371583;  // std dev = 1.260, 39.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '17.382', 'seconds']
Refined model CLL: -0.083885


******************************************
Best model found
******************************************
Results 

CLL : -0.084348 

AUC ROC : 0.993549 

AUC PR : 0.324621 

Precision : 0.196992 

Recall : 0.984962 

F1 : 0.328321 

Total Learning Time : 484.639 

Total Inference Time : 43.27155113220215 

Total revision time: 532.2854635734559
Best scored revision CLL: -0.083885


Results 

CLL : -0.084348 

AUC ROC : 0.993549 

AUC PR : 0.324621 

Precision : 0.196992 

Recall : 0.984962 

F1 : 0.328321 

Total Learning Time : 532.3509924430848 

Total Inference Time : 43.27155113220215 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.568
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 395.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 419.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.464, 423.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 372.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 397.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.470, 403.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 395.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 385.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 378.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 381.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.997', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 190.75
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamalsoknownas(A, F), teamalsoknownas(F, A) )
%   | | then if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( athleteledsportsteam(H, A), athleteplaysinleague(H, I) )
%   | | | then return 0.8268989350995116;  // std dev = 0.984, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamplaysagainstteam(J, A), teamalsoknownas(K, J) )
%   | then return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( athleteplaysforteam(L, A), athleteledsportsteam(L, M) )
%   | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamplaysinleague(A, N) )
%   | | | then return -0.14185106490048763;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | | else return -0.12460968559014285;  // std dev = 0.991, 58.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return 0.724057100477728;  // std dev = 0.075, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | | else if ( athleteplaysforteam(G, A), teamplaysinleague(A, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109547;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | else return 0.42468600128852124;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamplaysinleague(A, I) )
%   | then if ( teamalsoknownas(J, A), athleteplaysinleague(K, I) )
%   | | then return -0.08534970704071652;  // std dev = 0.201, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else return -0.126226714666919;  // std dev = 0.054, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | else if ( teamplaysagainstteam(L, A) )
%   | | then return -0.1280177017841848;  // std dev = 0.018, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( teamalsoknownas(M, A) )
%   | | | then return -0.1273484077156667;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1003213806886396;  // std dev = 0.986, 37.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then return 0.5593659637690713;  // std dev = 0.146, 127.000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | else if ( teamalsoknownas(A, E) )
%   | | then return 0.07586280433522455;  // std dev = 0.745, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7248343121597172;  // std dev = 0.183, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamalsoknownas(F, A), teamalsoknownas(G, F) )
%   | then if ( athleteledsportsteam(H, A), athleteledsportsteam(I, G) )
%   | | then if ( teamplaysagainstteam(A, G) )
%   | | | then return -0.1163764660769718;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.20615998423363946;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1133965003052115;  // std dev = 0.009, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.11339513343578451;  // std dev = 0.044, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then return 0.4250431364413591;  // std dev = 0.294, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.4295746970958938;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return 0.4165412372995152;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2915412372995153;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( teamplaysagainstteam(A, H), teamalsoknownas(I, H) )
%   | then return -0.10435450043350504;  // std dev = 0.158, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( teamplaysagainstteam(J, A), teamalsoknownas(J, K) )
%   | | then if ( athleteplaysforteam(L, A), athleteplaysinleague(L, M) )
%   | | | then return 0.19251202997583408;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10222275600693403;  // std dev = 0.005, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( teamplaysinleague(A, N) )
%   | | | then return -0.10160494270633205;  // std dev = 0.016, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | | else return -0.08980506273959227;  // std dev = 0.884, 57.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A), athleteplaysinleague(C, E) )
%   | then if ( athleteplaysforteam(C, F) )
%   | | then return 0.3253521056928611;  // std dev = 0.130, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0.4465772519468468;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(A, G), teamalsoknownas(H, G) )
%   | | then if ( athleteplaysforteam(C, H), teamalsoknownas(G, I) )
%   | | | then return 0.3206151330268736;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.05015066667382492;  // std dev = 1.201, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( teamplaysinleague(A, J) )
%   | | | then return 0.24112944035384054;  // std dev = 1.664, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | | else return 0.3632002675153185;  // std dev = 0.452, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( athleteledsportsteam(K, A), athleteplaysinleague(K, L) )
%   | then if ( athleteplayssport(K, M) )
%   | | then return -0.09322345343103304;  // std dev = 0.018, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0.06934479458338086;  // std dev = 0.834, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.09510629930898665;  // std dev = 0.084, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0.25782367698025527;  // std dev = 0.100, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0.19629554867310203;  // std dev = 1.381, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0.2667445215367673;  // std dev = 0.071, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return 0.15481853790264954;  // std dev = 0.921, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( athleteplaysforteam(H, A), athleteplayssport(H, I) )
%   | then if ( teamalsoknownas(J, A), athleteledsportsteam(H, A) )
%   | | then return -0.11167636772612966;  // std dev = 0.094, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.0898464181351172;  // std dev = 0.117, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( teamplaysagainstteam(K, A), teamalsoknownas(L, A) )
%   | | then return 0.060871597270812455;  // std dev = 0.811, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.086457109173379;  // std dev = 0.090, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | | else return -0.07194367920667814;  // std dev = 0.816, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( athleteplaysforteam(E, A), teamplaysagainstteam(A, D) )
%   | | then return 0.20880774510917693;  // std dev = 0.019, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | | then return 0.23144844517953506;  // std dev = 0.128, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0.2186013297017795;  // std dev = 0.058, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | else return 0.30526165689689144;  // std dev = 0.698, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( teamalsoknownas(H, A), athleteledsportsteam(I, A) )
%   | then if ( athleteledsportsteam(J, H) )
%   | | then return -0.07923023275075272;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.1676645719152103;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.08073827782868485;  // std dev = 0.076, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteledsportsteam(C, E) )
%   | | then if ( teamplaysagainstteam(A, F), teamplaysagainstteam(E, A) )
%   | | | then return 0.1776458796718848;  // std dev = 0.058, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0.19208536805214083;  // std dev = 0.103, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.2808456123488253;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0.17550484398742258;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( athleteledsportsteam(C, H), teamalsoknownas(A, I) )
%   | | | then return 0.16769171165047114;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06126266773722722;  // std dev = 1.531, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else if ( athleteledsportsteam(J, A), athleteplaysinleague(J, K) )
%   | then if ( athleteplayssport(J, L), teamplaysinleague(M, K) )
%   | | then return -0.07626982465295333;  // std dev = 0.009, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0.20165015174147727;  // std dev = 0.686, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07559509034720598;  // std dev = 0.009, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.15933841135459556;  // std dev = 0.013, 127.000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | else return 0.2161804290120984;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysinleague(A, F) )
%   | then if ( athleteplaysforteam(G, A), athleteplaysinleague(G, H) )
%   | | then if ( athleteplaysinleague(I, F), athleteplaysforteam(I, J) )
%   | | | then return -0.07176696898186513;  // std dev = 0.081, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.005246035701679562;  // std dev = 0.831, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( athleteplaysforteam(K, A), athleteledsportsteam(L, A) )
%   | | | then return -0.1407064891209923;  // std dev = 0.218, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.071476051285042;  // std dev = 0.267, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( teamplaysagainstteam(M, A) )
%   | | then return -0.07242934731456467;  // std dev = 0.020, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( teamalsoknownas(N, A) )
%   | | | then return -0.07053218807540092;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.04967039492521628;  // std dev = 0.736, 33.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysinleague(A, E), teamplaysinleague(D, E) )
%   | | then if ( athleteplaysinleague(C, F) )
%   | | | then return 0.13563784564631298;  // std dev = 0.078, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | | | else return 0.07722731328312388;  // std dev = 0.964, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return 0.1387017683082807;  // std dev = 0.056, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.1491436597350817;  // std dev = 0.056, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0.18346152600976484;  // std dev = 0.712, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( athleteledsportsteam(H, A), athleteplaysforteam(H, A) )
%   | then if ( teamplaysagainstteam(A, I), teamalsoknownas(J, I) )
%   | | then if ( teamalsoknownas(K, J), teamalsoknownas(A, I) )
%   | | | then return -0.0833253133217245;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06353136427724436;  // std dev = 0.021, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0.06921077979687575;  // std dev = 0.773, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.0662912473316659;  // std dev = 0.070, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.160', 'seconds']
Refined model CLL: -0.086234


******************************************
Best model found
******************************************
Results 

CLL : -0.087777 

AUC ROC : 0.993987 

AUC PR : 0.215712 

Precision : 0.192166 

Recall : 0.984848 

F1 : 0.321583 

Total Learning Time : 190.75 

Total Inference Time : 15.911524057388306 

Total revision time: 210.93650214004518
Best scored revision CLL: -0.086234


Results 

CLL : -0.087777 

AUC ROC : 0.993987 

AUC PR : 0.215712 

Precision : 0.192166 

Recall : 0.984848 

F1 : 0.321583 

Total Learning Time : 210.98268000411989 

Total Inference Time : 15.911524057388306 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 53331

Target test facts examples: 9691
Target test pos examples: 264
Target test neg examples: 106660

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.615
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 374.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=133 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 389.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=133 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.473, 392.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=133 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.483, 360.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=133 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 397.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=133 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.466, 417.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=133 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.478, 376.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=133 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.475, 386.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=133 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 385.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=133 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.970', 'seconds']
Parameter learned model CLL:-0.157455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 171.863
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysinleague(A, E), teamplaysinleague(D, E) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else if ( teamplaysinleague(A, F), athleteplaysforteam(G, A) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.858148935099512;  // std dev = 1.88e-07, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else if ( athleteplaysforteam(H, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.1418510649004881;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D), athleteplaysforteam(E, A) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( teamplaysagainstteam(A, F), teamplaysagainstteam(F, A) )
%   | | | then return 0.5222644643373165;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.7194734122109543;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7227517738099476;  // std dev = 0.107, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( teamplaysagainstteam(G, A) )
%   | then return -0.1273244197315509;  // std dev = 0.218, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( teamalsoknownas(H, A), teamplaysinleague(A, I) )
%   | | then return -0.05503480096677923;  // std dev = 0.234, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.052806745544287735;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12544463852839108;  // std dev = 7.45e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D) )
%   | then if ( athleteplaysforteam(C, A), teamalsoknownas(E, A) )
%   | | then return 0.3885648222440435;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( athleteledsportsteam(C, F) )
%   | | | then return 0.5597622029815142;  // std dev = 0.152, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | | | else return 0.452491598873847;  // std dev = 0.840, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.26107554328618804;  // std dev = 0.917, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.11242232118040286;  // std dev = 0.019, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(D, A), teamplaysagainstteam(A, E) )
%   | then if ( athleteledsportsteam(C, E), teamalsoknownas(F, E) )
%   | | then return 0.42984274678910667;  // std dev = 0.118, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.26475526669265104;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( athleteledsportsteam(C, G) )
%   | | then if ( teamalsoknownas(A, H), teamplaysinleague(A, I) )
%   | | | then return 0.3580707884166771;  // std dev = 0.975, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.419353889887736;  // std dev = 0.102, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | else if ( teamalsoknownas(A, J), athleteplaysinleague(C, K) )
%   | | | then return 0.44191534943330446;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5945091794164025;  // std dev = 0.140, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10177241293833926;  // std dev = 0.022, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysinleague(C, D), athleteplaysforteam(E, A) )
%   | then if ( athleteledsportsteam(C, A), athleteplaysforteam(C, F) )
%   | | then if ( athleteledsportsteam(E, A) )
%   | | | then return 0.323815668700568;  // std dev = 0.060, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.01625413077418743;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3445155680537916;  // std dev = 0.217, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( teamplaysinleague(A, G), teamplaysagainstteam(H, A) )
%   | | then if ( athleteplaysinleague(I, G), athleteplaysinleague(C, J) )
%   | | | then return 0.23872777220938315;  // std dev = 0.961, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.0811253579913133;  // std dev = 0.840, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( athleteledsportsteam(C, K) )
%   | | | then return 0.28761972318330115;  // std dev = 1.384, 61.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=59 */
%   | | | else return 0.42956238069461616;  // std dev = 0.185, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09308207744115533;  // std dev = 0.028, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.26667552332887695;  // std dev = 0.259, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.012150613322151116;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.08531221484975976;  // std dev = 0.020, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | then if ( teamplaysinleague(A, D), athleteplaysforteam(C, E) )
%   | | then return 0.2176970094081378;  // std dev = 0.114, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else if ( teamplaysinleague(A, G), athleteplaysinleague(F, G) )
%   | | | then return -0.5590286691078588;  // std dev = 0.856, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2364263266264398;  // std dev = 0.160, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.21567148339620085;  // std dev = 0.100, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( teamalsoknownas(H, A), teamalsoknownas(A, H) )
%   | then if ( teamplaysagainstteam(I, A) )
%   | | then return -0.07858247869642998;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( athleteledsportsteam(J, H) )
%   | | | then return -0.08397881770819525;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.04021081874472288;  // std dev = 0.486, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( teamalsoknownas(K, A), teamalsoknownas(L, K) )
%   | | then return -0.14586692129510456;  // std dev = 0.172, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.0792787809270315;  // std dev = 0.047, 233.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( athleteplaysforteam(F, A), athleteledsportsteam(F, A) )
%   | | then if ( teamplaysagainstteam(E, A), teamalsoknownas(G, E) )
%   | | | then return 0.18001845924241855;  // std dev = 0.061, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.0019505509484004369;  // std dev = 0.779, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1830267284062415;  // std dev = 0.166, 98.000 (wgt'ed) examples reached here.  /* #pos=98 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.2102964051036952;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.154019203014873;  // std dev = 0.828, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamplaysinleague(A, I) )
%   | then if ( teamalsoknownas(J, A), athleteplaysforteam(K, J) )
%   | | then return -0.041071483328326164;  // std dev = 0.119, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else return -0.07718622214395514;  // std dev = 0.037, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else if ( teamplaysagainstteam(L, A) )
%   | | then return -0.07278970992396444;  // std dev = 0.004, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.060188276054316224;  // std dev = 0.080, 37.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamalsoknownas(E, D), teamplaysagainstteam(A, D) )
%   | | then return 0.16151146723619605;  // std dev = 0.137, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( athleteplaysforteam(F, A), teamplaysagainstteam(D, A) )
%   | | | then return -0.11069189310375913;  // std dev = 1.075, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.12681641285514278;  // std dev = 1.549, 85.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=81 */
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0.1776320648239736;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2832769606816599;  // std dev = 0.185, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06868706877533466;  // std dev = 0.030, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A) )
%   | then return 0.14550655285616193;  // std dev = 0.211, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( athleteplaysinleague(G, F) )
%   | | | then return 0.07148977551008719;  // std dev = 0.967, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.1404624082807978;  // std dev = 0.025, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.1377651563988266;  // std dev = 0.015, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( teamplaysagainstteam(A, H), teamalsoknownas(I, A) )
%   | then if ( teamalsoknownas(A, H), athleteplaysforteam(J, I) )
%   | | then return -0.16050887015967147;  // std dev = 0.327, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamalsoknownas(K, I) )
%   | | | then return -0.06326680533055101;  // std dev = 0.003, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.09753095310212033;  // std dev = 0.270, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamplaysinleague(A, L), teamalsoknownas(M, A) )
%   | | then return -0.028728515543448425;  // std dev = 0.134, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return -0.06500776778664552;  // std dev = 0.047, 221.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.801', 'seconds']
Refined model CLL: -0.084414


******************************************
Best model found
******************************************
Results 

CLL : -0.083115 

AUC ROC : 0.991401 

AUC PR : 0.275682 

Precision : 0.159049 

Recall : 0.988636 

F1 : 0.274016 

Total Learning Time : 171.863 

Total Inference Time : 19.360110759735107 

Total revision time: 195.67501504707337
Best scored revision CLL: -0.084414


Results 

CLL : -0.083115 

AUC ROC : 0.991401 

AUC PR : 0.275682 

Precision : 0.159049 

Recall : 0.988636 

F1 : 0.274016 

Total Learning Time : 195.72119291114808 

Total Inference Time : 19.360110759735107 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 53329

Target test facts examples: 9691
Target test pos examples: 266
Target test neg examples: 106662

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.589
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 376.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=131 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.465, 413.000 (wgt'ed) examples reached here.  /* #neg=282 #pos=131 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.469, 402.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=131 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.472, 391.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=131 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 367.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=131 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.479, 369.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=131 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.476, 376.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=131 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.468, 403.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=131 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.474, 384.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=131 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.477, 373.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=131 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.929', 'seconds']
Parameter learned model CLL:-0.157388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
['teamplayssport(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 320.788
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(C, E), teamplaysagainstteam(E, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else if ( teamplaysagainstteam(F, A), teamplaysinleague(F, D) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysinleague(A, G), teamalsoknownas(A, H) )
%   | | | then return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.858148935099512;  // std dev = 1.88e-07, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.1418510649004884;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | else if ( teamalsoknownas(A, J), teamalsoknownas(J, A) )
%   | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11407328712270995;  // std dev = 0.986, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), athleteplaysforteam(E, A) )
%   | then if ( athleteplaysforteam(C, A) )
%   | | then return 0.7194734122109543;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.39443326365686016;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7218999807889438;  // std dev = 0.096, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   else if ( teamplaysinleague(A, F) )
%   | then return -0.1254446385283917;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | else if ( teamplaysagainstteam(A, G), teamalsoknownas(A, H) )
%   | | then return 0.1949192655076956;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.10510428432758927;  // std dev = 0.989, 42.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.5598453700092813;  // std dev = 0.163, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else if ( teamalsoknownas(A, E), teamalsoknownas(E, A) )
%   | | then if ( teamplaysinleague(A, F), athleteledsportsteam(C, G) )
%   | | | then return 0.42728989428957037;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5578431297395782;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5559206442072137;  // std dev = 0.026, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.11231637819360654;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else if ( teamalsoknownas(I, A), teamplaysagainstteam(A, J) )
%   | | then return 0.18205591657523493;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.11388673591736136;  // std dev = 0.035, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.09110979850905772;  // std dev = 0.988, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, F), teamplaysinleague(E, F) )
%   | | then return 0.4172892168095009;  // std dev = 0.082, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return 0.4426533228615426;  // std dev = 0.127, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.3275168951435434;  // std dev = 1.914, 44.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | else if ( athleteplaysforteam(H, A) )
%   | | then return -0.19581510266738333;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4210028634459981;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.10495796298711145;  // std dev = 0.410, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else if ( teamplaysagainstteam(J, A), teamalsoknownas(J, K) )
%   | | then return 0.04910568949053166;  // std dev = 0.825, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamalsoknownas(L, A) )
%   | | | then return -0.11234229642597608;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08038338474049977;  // std dev = 0.986, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysinleague(A, E), teamplaysinleague(D, E) )
%   | | then return 0.3269067723837394;  // std dev = 0.137, 83.000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | else if ( teamplaysagainstteam(F, A), teamalsoknownas(D, F) )
%   | | | then return -0.0026917988065462786;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2876744720865273;  // std dev = 1.382, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.004833827316624757;  // std dev = 1.112, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.36698180664890145;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.09240895097677904;  // std dev = 6.83e-08, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else if ( teamalsoknownas(I, A), teamplaysagainstteam(A, J) )
%   | | then return 0.15015230211632094;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return -0.1180079495378262;  // std dev = 0.047, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07787537425228078;  // std dev = 0.989, 45.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteplaysinleague(E, D) )
%   | then if ( teamalsoknownas(F, A), athleteledsportsteam(G, F) )
%   | | then return -0.05161807748736399;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2527900700316732;  // std dev = 0.000858, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.2727255818136462;  // std dev = 0.197, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( teamplaysagainstteam(A, I) )
%   | | | then return 0.29879457822145056;  // std dev = 0.108, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.23175702849037286;  // std dev = 0.974, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( teamplaysagainstteam(A, J), teamalsoknownas(K, A) )
%   | then if ( teamalsoknownas(L, J) )
%   | | then return -0.08494509241545047;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.1994826582682323;  // std dev = 0.697, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(M, A), teamalsoknownas(A, N) )
%   | | then return -0.09729874301814728;  // std dev = 0.244, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.08639783644542494;  // std dev = 0.072, 230.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | then if ( teamplaysinleague(A, G), athleteledsportsteam(C, H) )
%   | | then return 0.2100645687071507;  // std dev = 0.094, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1183624203750159;  // std dev = 0.983, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.229510650921419;  // std dev = 0.175, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else if ( teamalsoknownas(I, A), teamplaysinleague(A, J) )
%   | then if ( athleteplayssport(K, B) )
%   | | then return -0.31581531875116897;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0813782353865158;  // std dev = 0.044, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( teamalsoknownas(A, L), teamplaysagainstteam(A, M) )
%   | | then if ( teamalsoknownas(L, N), teamplaysagainstteam(M, N) )
%   | | | then return 0.025197230188537794;  // std dev = 0.792, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.08745260715576586;  // std dev = 0.059, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( teamplaysagainstteam(P, A), teamalsoknownas(P, Q) )
%   | | | then return -0.08397344746173499;  // std dev = 0.339, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | | else return -0.07825083177420675;  // std dev = 1.073, 142.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.18495350503071975;  // std dev = 0.180, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return 0.24568436863816176;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.008437872320197682;  // std dev = 0.885, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamplaysinleague(A, H) )
%   | then return -0.07437904471226163;  // std dev = 0.215, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else if ( teamalsoknownas(A, I), teamalsoknownas(I, A) )
%   | | then return 0.015696442965329148;  // std dev = 0.268, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( teamplaysagainstteam(J, A), teamalsoknownas(J, K) )
%   | | | then return -0.10678073102228665;  // std dev = 0.107, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.056473174835243965;  // std dev = 0.987, 43.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, A) )
%   | then if ( athleteplaysforteam(C, G), teamplaysagainstteam(G, A) )
%   | | then if ( teamalsoknownas(G, H) )
%   | | | then return 0.1533873302076173;  // std dev = 0.071, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return 0.0633814918212209;  // std dev = 0.959, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( athleteplaysinleague(F, I) )
%   | | | then return -0.6271988839861363;  // std dev = 0.192, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.031640979386478287;  // std dev = 0.905, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( teamplaysinleague(A, J) )
%   | | then return 0.1611087332094321;  // std dev = 0.144, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.17538796076850754;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1193229355436156;  // std dev = 0.974, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( teamplaysagainstteam(A, L), teamalsoknownas(A, M) )
%   | then return -0.04261879075626565;  // std dev = 0.150, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | else return -0.06963445743883528;  // std dev = 0.073, 234.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(E, D) )
%   | then if ( teamplaysagainstteam(F, A), athleteledsportsteam(C, G) )
%   | | then return 0.13700367395391555;  // std dev = 0.110, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else if ( athleteledsportsteam(C, H), teamplaysinleague(H, D) )
%   | | | then return 0.12897776917603757;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.07592554667367181;  // std dev = 1.030, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.14950613066269644;  // std dev = 0.156, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.06421406954002838;  // std dev = 0.034, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else if ( teamalsoknownas(J, A), teamalsoknownas(A, J) )
%   | | then return 0.12159697210206598;  // std dev = 0.704, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.07565271869889928;  // std dev = 0.079, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.03704927238852538;  // std dev = 0.982, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '7.753', 'seconds']
Refined model CLL: -0.084602


******************************************
Best model found
******************************************
Results 

CLL : -0.085071 

AUC ROC : 0.996445 

AUC PR : 0.301395 

Precision : 0.209768 

Recall : 0.984962 

F1 : 0.345875 

Total Learning Time : 320.788 

Total Inference Time : 33.93595910072327 

Total revision time: 359.1359297294617
Best scored revision CLL: -0.084602


Results 

CLL : -0.085071 

AUC ROC : 0.996445 

AUC PR : 0.301395 

Precision : 0.209768 

Recall : 0.984962 

F1 : 0.345875 

Total Learning Time : 359.1821075935364 

Total Inference Time : 33.93595910072327 

