Starting experiment 33_nell_sports_twitter 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.043
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 385.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 384.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.465, 400.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 367.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 387.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 371.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.464, 401.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 393.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 378.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 382.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.629', 'seconds']
Parameter learned model CLL:-0.166931 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 77.639
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( tweets(A, E), follows(A, D) )
%   | then if ( follows(D, A), tweets(C, E) )
%   | | then return 0.2143133186611572;  // std dev = 0.479, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
%   | | else if ( follows(A, C) )
%   | | | then return 0.3381489350995123;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.17481560176617889;  // std dev = 0.465, 120.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( follows(A, G), follows(G, H) )
%   | | then return 0.16584124279182003;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( tweets(A, J) )
%   | | then return 0.3581489350995123;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.40360348055405776;  // std dev = 0.498, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( tweets(C, D) )
%   | then if ( follows(C, E), follows(E, A) )
%   | | then if ( tweets(A, D), follows(E, C) )
%   | | | then return 0.18358896286265383;  // std dev = 5.682, 141.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=50 */
%   | | | else return 0.2641599391892215;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else return 0.1527609582053023;  // std dev = 0.467, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | else return 0.0577311034418161;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( follows(F, A), follows(A, G) )
%   | then return 0.09614136911699912;  // std dev = 0.446, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.40816712206090056;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.13787043793933543;  // std dev = 2.186, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.20874113578563508;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.1629172625249217;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(C, A) )
%   | then if ( tweets(A, E), follows(D, A) )
%   | | then if ( tweets(C, E) )
%   | | | then return 0.14127391489931618;  // std dev = 5.852, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
%   | | | else return 0.06286462445469215;  // std dev = 1.474, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( follows(A, D) )
%   | | | then return 0.11569225775133508;  // std dev = 4.455, 92.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
%   | | | else return 0.06342545754902762;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( tweets(A, F), tweets(C, F) )
%   | | then if ( follows(A, D), follows(D, G) )
%   | | | then return 0.24397996726360377;  // std dev = 1.818, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.057474176315332956;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else return 0.43279537878788593;  // std dev = 0.478, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( follows(A, H), tweets(A, I) )
%   | then return 0.047521122890152485;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else return 0.10075760624941082;  // std dev = 0.460, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, D), follows(D, C) )
%   | then if ( follows(C, D), follows(A, C) )
%   | | then if ( follows(C, E), follows(E, A) )
%   | | | then return 0.12947164643164943;  // std dev = 6.182, 168.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=59 */
%   | | | else return 0.0837121872205354;  // std dev = 3.232, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else if ( tweets(D, F), follows(D, A) )
%   | | | then return 0.15744464829593463;  // std dev = 1.560, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.5200574016550843;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(A, G), tweets(A, H) )
%   | | then if ( tweets(C, H), follows(G, I) )
%   | | | then return 0.2668679750480094;  // std dev = 2.057, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.8095598360046924;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( follows(A, J), follows(C, J) )
%   | | | then return 0.21067213633868162;  // std dev = 1.318, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.14266770122215663;  // std dev = 2.558, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   else return 0.08112339151809886;  // std dev = 0.470, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( tweets(C, D), follows(E, C) )
%   | then if ( follows(A, C), follows(A, E) )
%   | | then if ( follows(C, E) )
%   | | | then return 0.11052670674321978;  // std dev = 6.914, 209.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=74 */
%   | | | else return -4.4184033980805836E-4;  // std dev = 1.452, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.06291526242936447;  // std dev = 0.466, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | else return -0.10978632213440809;  // std dev = 0.407, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( tweets(A, H), follows(A, G) )
%   | | then return 0.011132009480733885;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.08790826501399487;  // std dev = 1.829, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.13629280944539088;  // std dev = 1.305, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( tweets(A, J) )
%   | | then return 0.2510958544600693;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.20262015222196247;  // std dev = 0.499, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), follows(D, A) )
%   | then if ( follows(C, A), tweets(D, E) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.07812123810429579;  // std dev = 6.268, 174.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=60 */
%   | | | else return -0.013067875105527848;  // std dev = 1.501, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( follows(A, F), follows(F, A) )
%   | | | then return 0.14832405924368025;  // std dev = 3.164, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return -0.07954226368860425;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( tweets(C, G), tweets(A, G) )
%   | | then if ( follows(H, A), follows(I, H) )
%   | | | then return 0.10218878657853363;  // std dev = 2.354, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.05103318621711132;  // std dev = 2.847, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else if ( tweets(A, J) )
%   | | | then return -0.14593323226304875;  // std dev = 1.267, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.023902092662254133;  // std dev = 3.113, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   else return 0.16059176288402247;  // std dev = 0.490, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( follows(A, D), follows(D, C) )
%   | then if ( follows(D, A), follows(C, D) )
%   | | then if ( tweets(A, E) )
%   | | | then return 0.037007650521895835;  // std dev = 5.722, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
%   | | | else return 0.07650944248401953;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( tweets(C, F), tweets(D, F) )
%   | | | then return 0.1375936407354449;  // std dev = 3.122, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return -0.04380299630085604;  // std dev = 1.493, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else return 0.013056249040716686;  // std dev = 0.449, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   else if ( follows(G, A), tweets(A, H) )
%   | then return -0.008184621575658814;  // std dev = 0.453, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(A, J), follows(J, K) )
%   | | | then return 0.05696934193620718;  // std dev = 2.307, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.05411039586984844;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.006965652145227858;  // std dev = 0.470, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( tweets(A, E), tweets(C, E) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(D, A), follows(C, A) )
%   | | | then return 0.046545642052275245;  // std dev = 5.702, 146.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=49 */
%   | | | else return 9.857523668545622E-4;  // std dev = 3.808, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | | else if ( follows(F, A), follows(F, C) )
%   | | | then return -0.020668115226225175;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.11368103196565772;  // std dev = 2.334, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else return -0.024754916317280783;  // std dev = 0.443, 97.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=26 */
%   else if ( follows(G, A), follows(A, H) )
%   | then return -0.1240121583486079;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( follows(A, I) )
%   | | then if ( tweets(A, J) )
%   | | | then return 0.12323647033274507;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.1553735368145007;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return 0.07957606348754638;  // std dev = 0.476, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), follows(A, D) )
%   | then return -0.012870567884846102;  // std dev = 0.454, 247.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=72 */
%   | else if ( follows(A, E), follows(E, F) )
%   | | then if ( tweets(E, C), follows(F, E) )
%   | | | then return 0.08163764020094565;  // std dev = 2.492, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -0.05633944870669703;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return -0.005604321929942849;  // std dev = 0.460, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   else if ( follows(G, A) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then if ( tweets(G, I), tweets(H, I) )
%   | | | then return 0.12693277271460693;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.03921347446899296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tweets(G, J), follows(A, G) )
%   | | | then return 0.29199014882599067;  // std dev = 1.995, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.134850689419206;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.043296880246008036;  // std dev = 0.453, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), follows(D, A) )
%   | then if ( tweets(D, E) )
%   | | then if ( follows(D, F), follows(F, A) )
%   | | | then return 0.04721272350881652;  // std dev = 5.958, 157.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=54 */
%   | | | else return -0.01626923935099121;  // std dev = 3.443, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else return -0.22627726081540459;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( follows(A, G), tweets(G, C) )
%   | | then if ( follows(G, H), follows(H, G) )
%   | | | then return 0.08774244066004865;  // std dev = 2.424, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.2619885912434244;  // std dev = 1.545, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return 0.006685838145462248;  // std dev = 0.454, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   else if ( follows(I, A), follows(A, I) )
%   | then if ( follows(A, J), follows(J, I) )
%   | | then return 0.004964818333015057;  // std dev = 0.471, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else return 0.11879327557622718;  // std dev = 0.484, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return -0.04217366079938069;  // std dev = 0.453, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29.821', 'seconds']
Refined model CLL: -0.388091


******************************************
Best model found
******************************************
Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 77.639 

Total Inference Time : 21.49428653717041 

Total revision time: 101.61049087715149
Best scored revision CLL: -0.166931


Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 101.6439128704071 

Total Inference Time : 21.49428653717041 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.259
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 481.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 465.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.476, 448.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.465, 495.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 478.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 454.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 464.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 476.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.478, 443.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.466, 489.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.320', 'seconds']
Parameter learned model CLL:-0.164298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 120.654
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then return 0.15417781596593846;  // std dev = 0.457, 277.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=82 */
%   else if ( tweets(A, D), follows(A, E) )
%   | then if ( follows(E, F), tweets(F, D) )
%   | | then if ( follows(G, A), follows(F, G) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.22178529873587596;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( follows(E, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( follows(I, A) )
%   | | then if ( follows(I, J), follows(J, A) )
%   | | | then return 0.1914822684328457;  // std dev = 3.055, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.17633075328133055;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.1470378239884012;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A), follows(C, E) )
%   | then if ( tweets(D, F), tweets(E, F) )
%   | | then if ( follows(D, C), follows(C, D) )
%   | | | then return 0.18864626967480896;  // std dev = 6.596, 191.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=67 */
%   | | | else return 0.14685745543462742;  // std dev = 3.709, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else return 0.00296399436857884;  // std dev = 0.399, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( tweets(A, G), follows(C, H) )
%   | | then if ( tweets(H, G), tweets(C, G) )
%   | | | then return 0.19851674491032345;  // std dev = 3.274, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | else return 0.2934595865612264;  // std dev = 1.024, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.32373365448410585;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.24627318771958878;  // std dev = 3.071, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   else if ( tweets(A, J) )
%   | then return 0.13372311073965387;  // std dev = 0.458, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | else return 0.09110977897239843;  // std dev = 0.436, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(A, D), follows(C, A) )
%   | then if ( follows(A, E), follows(C, E) )
%   | | then return 0.15065632231866183;  // std dev = 0.473, 180.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=61 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.1507533517024576;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.21742001836912425;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return 0.11328283520244808;  // std dev = 0.464, 191.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=60 */
%   else if ( follows(G, A) )
%   | then if ( tweets(A, H) )
%   | | then if ( follows(G, I), follows(I, A) )
%   | | | then return 0.18521362259031754;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.046357712383710475;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.23660270694416669;  // std dev = 0.496, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( tweets(A, J) )
%   | | then return 0.15375973508826693;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.15995233255981708;  // std dev = 0.471, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), follows(D, E) )
%   | then if ( follows(D, A), follows(E, A) )
%   | | then if ( tweets(D, C), follows(A, E) )
%   | | | then return 0.19146006708665222;  // std dev = 4.883, 99.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=40 */
%   | | | else return 0.036930174907554236;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( follows(F, A), follows(G, F) )
%   | | | then return 0.06608553428374886;  // std dev = 4.484, 99.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=28 */
%   | | | else return 0.1587581258617947;  // std dev = 3.602, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | else return 0.08707195575669338;  // std dev = 0.460, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   else if ( follows(H, A), follows(A, H) )
%   | then return 0.09850786083163232;  // std dev = 0.460, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else if ( follows(I, A) )
%   | | then return 0.21988629570510668;  // std dev = 0.499, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.1525226372586934;  // std dev = 3.169, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return 0.17090627961750293;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, D), follows(C, D) )
%   | then if ( follows(D, A), follows(C, A) )
%   | | then return 0.05585884710060445;  // std dev = 0.457, 168.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=50 */
%   | | else if ( follows(C, A) )
%   | | | then return 0.1644080424386513;  // std dev = 3.837, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | | else return 0.07852719030153825;  // std dev = 3.853, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | else return 0.05188658319729099;  // std dev = 0.458, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), follows(F, A) )
%   | | then if ( tweets(A, G), tweets(E, G) )
%   | | | then return 0.0932951517802746;  // std dev = 2.847, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.15852894393852152;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.042191118488564605;  // std dev = 0.457, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( tweets(A, H) )
%   | | then return 0.22662299881178635;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.07834028861804179;  // std dev = 0.460, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, E), follows(C, E) )
%   | | then if ( follows(E, C), tweets(A, F) )
%   | | | then return 0.09983826916239232;  // std dev = 5.958, 155.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=55 */
%   | | | else return 0.04130144159070317;  // std dev = 3.684, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | else if ( follows(A, G), follows(G, C) )
%   | | | then return 0.10249767835643027;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11389547648906992;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( tweets(A, H), follows(I, C) )
%   | | then if ( follows(A, J), follows(J, I) )
%   | | | then return 0.33502793864451313;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.08088111664010819;  // std dev = 3.370, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else return 0.34640282436464703;  // std dev = 0.491, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( follows(K, A) )
%   | then return -0.052986655866796316;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.06234496701341522;  // std dev = 0.465, 150.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=48 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), follows(A, D) )
%   | then if ( follows(E, A), follows(E, D) )
%   | | then return 0.047996275451103805;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | | else if ( follows(A, F), follows(F, D) )
%   | | | then return 0.15132431549036524;  // std dev = 2.844, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.06397029027905952;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else return 0.0225081263459036;  // std dev = 0.457, 157.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=47 */
%   else if ( follows(A, G) )
%   | then if ( follows(G, A) )
%   | | then if ( follows(A, H), follows(G, H) )
%   | | | then return 0.08476513472601062;  // std dev = 2.943, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.004246821831460523;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( follows(G, I), follows(A, I) )
%   | | | then return 0.10772137145301042;  // std dev = 2.234, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.14093158008654602;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return 0.05554700080092108;  // std dev = 0.469, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(D, A), follows(A, D) )
%   | then if ( follows(C, A) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.05576912410370649;  // std dev = 5.215, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return 0.15722529239497166;  // std dev = 2.261, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( follows(D, C), tweets(A, E) )
%   | | | then return 0.031982650158792855;  // std dev = 3.162, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return -0.04290757095100321;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( follows(F, A), follows(A, D) )
%   | | then if ( tweets(A, G) )
%   | | | then return 0.07228360854738691;  // std dev = 2.073, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.3953268332694993;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( follows(D, C) )
%   | | | then return 0.048302212778181516;  // std dev = 5.172, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
%   | | | else return 0.358887285253575;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0010250688289175135;  // std dev = 0.451, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(E, C), tweets(C, D) )
%   | then if ( follows(A, E), follows(A, C) )
%   | | then if ( follows(A, F), follows(C, F) )
%   | | | then return 0.04117974333361176;  // std dev = 6.015, 160.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=55 */
%   | | | else return -0.03795380121250532;  // std dev = 1.231, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( follows(A, G), follows(C, G) )
%   | | | then return 0.28672796547556445;  // std dev = 1.786, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.06117499950728932;  // std dev = 3.739, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | else if ( follows(A, C) )
%   | | then return 0.06637831662950826;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2786959419535956;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( follows(H, A) )
%   | then return 0.009740500110066547;  // std dev = 0.462, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then return 0.04498036666857779;  // std dev = 0.474, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | else return 0.0258152240833991;  // std dev = 0.459, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), tweets(A, D) )
%   then if ( follows(C, E), tweets(E, D) )
%   | then return 0.015712524648689975;  // std dev = 0.470, 277.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=91 */
%   | else return -0.058207009007711974;  // std dev = 0.446, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.03601709107593238;  // std dev = 2.981, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.11964109570681263;  // std dev = 2.186, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( follows(A, F) )
%   | | | then return 0.012260550523639004;  // std dev = 2.191, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.14329272296236184;  // std dev = 1.458, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then return 0.00844484919715799;  // std dev = 0.469, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.10285496946317271;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.051785395795462846;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.981', 'seconds']
Refined model CLL: -0.383169


******************************************
Best model found
******************************************
Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 120.654 

Total Inference Time : 40.52950143814087 

Total revision time: 164.1640018348694
Best scored revision CLL: -0.164298


Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 164.197423828125 

Total Inference Time : 40.52950143814087 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.143
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 382.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.465, 397.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 393.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.465, 400.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.465, 399.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 382.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 392.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.481, 346.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 374.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.465, 399.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.588', 'seconds']
Parameter learned model CLL:-0.166931 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 191.63
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(D, E), tweets(D, C) )
%   | then if ( follows(D, A) )
%   | | then if ( follows(E, A), follows(A, E) )
%   | | | then return 0.24397570675305646;  // std dev = 5.486, 127.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=49 */
%   | | | else return 0.19743464938522662;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | else return 0.10814893509951237;  // std dev = 0.433, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | else if ( follows(D, A) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.40360348055405776;  // std dev = 0.498, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else if ( follows(F, A) )
%   | then if ( follows(G, F), tweets(G, H) )
%   | | then return 0.17579599392304057;  // std dev = 0.466, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then return 0.28672036367094084;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.21109011157010057;  // std dev = 0.478, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(C, A), follows(A, D) )
%   | then if ( follows(D, C), follows(D, A) )
%   | | then if ( tweets(C, E), tweets(D, E) )
%   | | | then return 0.1627895712980652;  // std dev = 5.764, 149.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=50 */
%   | | | else return 0.21786833787725077;  // std dev = 2.067, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( tweets(A, F) )
%   | | | then return 0.20833843326882742;  // std dev = 3.352, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.3353740978856559;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( tweets(A, G) )
%   | | then return 0.1658303165100633;  // std dev = 0.469, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | else return 0.0699593678210376;  // std dev = 0.427, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   else if ( follows(A, H) )
%   | then if ( tweets(A, I) )
%   | | then return 0.2182781145638156;  // std dev = 0.493, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.23046267672618695;  // std dev = 0.490, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return 0.19901046152201954;  // std dev = 0.481, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( tweets(C, D), follows(E, C) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( tweets(E, F), tweets(C, F) )
%   | | | then return 0.14108224446714893;  // std dev = 5.568, 138.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=47 */
%   | | | else return 0.2949104245232687;  // std dev = 1.584, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.08275097185767923;  // std dev = 2.688, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.12468257861445882;  // std dev = 3.500, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | else if ( follows(C, G), follows(G, A) )
%   | | then return 0.14267345625950364;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tweets(C, H) )
%   | | | then return 0.31513212697780246;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.14843589013717115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( follows(I, A), follows(A, I) )
%   | then return 0.07340104227161078;  // std dev = 0.444, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | else return 0.11115911205652342;  // std dev = 0.462, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( tweets(D, C), follows(D, A) )
%   | then if ( follows(D, E), follows(E, A) )
%   | | then return 0.12496213683669855;  // std dev = 0.476, 173.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=60 */
%   | | else return 0.09324878372460041;  // std dev = 0.464, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | else if ( follows(F, A) )
%   | | then if ( follows(F, G), follows(G, A) )
%   | | | then return 0.11968196916766548;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5163265537840378;  // std dev = 0.879, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1272047701532896;  // std dev = 0.472, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   else if ( follows(A, H), follows(H, I) )
%   | then if ( tweets(I, J), follows(I, H) )
%   | | then if ( follows(K, A) )
%   | | | then return 0.1482257286163989;  // std dev = 3.401, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.06392516343816919;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.2979768715254766;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.27683006523864534;  // std dev = 0.500, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( tweets(D, E), follows(D, C) )
%   | then if ( follows(A, D), tweets(C, E) )
%   | | then if ( follows(F, A), follows(F, C) )
%   | | | then return 0.09191776734538824;  // std dev = 7.022, 221.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=74 */
%   | | | else return 0.010558631241104989;  // std dev = 1.498, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( tweets(A, E), tweets(C, E) )
%   | | | then return 0.10196917009498811;  // std dev = 3.343, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return 0.17284492539483337;  // std dev = 2.524, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | else return -0.011902550149664785;  // std dev = 0.439, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( follows(A, G) )
%   | then if ( tweets(A, H) )
%   | | then if ( follows(I, A) )
%   | | | then return -0.026840747405259255;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.082686433109661;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.041000258032972574;  // std dev = 0.465, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else return 0.06791614532153864;  // std dev = 0.457, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(E, A), tweets(E, F) )
%   | then if ( follows(D, A), follows(E, D) )
%   | | then if ( follows(A, D), follows(A, E) )
%   | | | then return 0.10149117204984616;  // std dev = 6.134, 162.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=59 */
%   | | | else return 0.31259509549097714;  // std dev = 1.292, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( tweets(A, F), follows(E, C) )
%   | | | then return 0.12025103615876771;  // std dev = 2.972, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return -0.014360550013904641;  // std dev = 3.651, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | else if ( tweets(A, G), tweets(C, G) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.2924174418204841;  // std dev = 1.814, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.08030821617883149;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.31292473210438015;  // std dev = 0.488, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( follows(H, A) )
%   | then return 0.09047348174949832;  // std dev = 0.471, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else return 0.004062896939913378;  // std dev = 0.456, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(D, A), follows(C, D) )
%   | then if ( tweets(C, E), tweets(D, E) )
%   | | then if ( tweets(A, F), tweets(C, F) )
%   | | | then return 0.1164198083204603;  // std dev = 5.650, 134.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=53 */
%   | | | else return 0.21002019483075426;  // std dev = 2.055, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.06838062278329947;  // std dev = 1.755, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.026755951409183215;  // std dev = 1.222, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.021927967653998418;  // std dev = 0.459, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   else if ( tweets(A, H) )
%   | then if ( follows(A, I), follows(I, J) )
%   | | then if ( tweets(I, H), follows(J, I) )
%   | | | then return 0.08099538055351829;  // std dev = 2.111, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.036226593265065964;  // std dev = 1.211, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.20119716999040665;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.018228721127745182;  // std dev = 0.462, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(E, A), follows(F, E) )
%   | then return 0.0379322528671987;  // std dev = 0.476, 222.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=76 */
%   | else if ( follows(D, G), follows(A, G) )
%   | | then if ( follows(G, D) )
%   | | | then return 0.21170626684763993;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2538035208946874;  // std dev = 0.961, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.03511753628167948;  // std dev = 0.477, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else if ( follows(A, H), follows(H, I) )
%   | then if ( follows(J, A), follows(J, H) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.12844550848744757;  // std dev = 2.957, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.0029573243758700338;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.4081277954679772;  // std dev = 0.471, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( tweets(A, K) )
%   | | then return 0.1406915027668247;  // std dev = 0.494, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0.02820939492313631;  // std dev = 0.465, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(E, C), follows(A, E) )
%   | then if ( follows(A, C) )
%   | | then if ( follows(C, E) )
%   | | | then return 0.0331034569278674;  // std dev = 6.951, 214.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=74 */
%   | | | else return 0.11083633617617719;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.08744118284981377;  // std dev = 0.417, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( tweets(A, D) )
%   | | then if ( follows(F, C) )
%   | | | then return 0.051731047249781816;  // std dev = 3.343, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return -0.11340384694574901;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( follows(A, C) )
%   | | | then return 0.45565867735508203;  // std dev = 0.873, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.15117578715158508;  // std dev = 1.072, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( follows(G, A) )
%   | then return -0.15986986940809866;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.005173616905271826;  // std dev = 0.471, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(A, E), follows(C, E) )
%   | then if ( follows(A, C), tweets(E, F) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.034724894174314326;  // std dev = 6.906, 208.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=74 */
%   | | | else return -0.058088448973075656;  // std dev = 1.873, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( follows(E, C) )
%   | | | then return 0.374696996835621;  // std dev = 0.846, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08468692605818812;  // std dev = 1.716, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return -0.01477721518122753;  // std dev = 0.463, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   else if ( follows(A, H), follows(H, I) )
%   | then if ( tweets(A, J), tweets(H, J) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.1652559243780226;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1815934644023843;  // std dev = 1.735, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.3940788061672657;  // std dev = 0.903, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.018870686645890995;  // std dev = 0.454, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.055', 'seconds']
Refined model CLL: -0.418621


******************************************
Best model found
******************************************
Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 191.63 

Total Inference Time : 29.64591693878174 

Total revision time: 223.87267613220214
Best scored revision CLL: -0.166931


Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 223.96381330299377 

Total Inference Time : 29.64591693878174 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.178
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.477, 444.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.466, 490.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 467.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 478.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 473.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 462.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 479.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 470.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 457.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 479.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.304', 'seconds']
Parameter learned model CLL:-0.164298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 85.23
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( tweets(A, D), follows(A, C) )
%   | then return 0.17418667094857032;  // std dev = 0.465, 212.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=67 */
%   | else if ( follows(A, E), follows(E, C) )
%   | | then if ( follows(A, C) )
%   | | | then return 0.35814893509951234;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.18345013991878947;  // std dev = 0.468, 83.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=27 */
%   else if ( follows(A, F) )
%   | then if ( follows(G, F), follows(F, G) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.27675358626230306;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.20698614440183793;  // std dev = 3.125, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else return 0.12130682983635446;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( tweets(A, I) )
%   | | then return 0.30259337954395676;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.26991364098186527;  // std dev = 0.492, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( tweets(A, E), follows(A, F) )
%   | then if ( follows(F, D) )
%   | | then if ( follows(A, C), tweets(C, E) )
%   | | | then return 0.15464291837541908;  // std dev = 6.755, 210.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=67 */
%   | | | else return 0.40440765938870715;  // std dev = 1.298, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.08431876357687389;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( follows(A, C), follows(A, D) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.22050584166798776;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.1420744691189683;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( follows(D, A), tweets(A, G) )
%   | | | then return 0.20574733500544568;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.3082262279553898;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   else if ( follows(A, H) )
%   | then return 0.14783182193498182;  // std dev = 0.466, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
%   | else return 0.09593184259534371;  // std dev = 0.446, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), follows(D, E) )
%   | then if ( follows(A, E), tweets(E, C) )
%   | | then if ( follows(E, F), tweets(D, C) )
%   | | | then return 0.15321962082839186;  // std dev = 6.731, 201.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=69 */
%   | | | else return 0.018775934418412344;  // std dev = 1.966, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( tweets(E, C) )
%   | | | then return 0.23035120601353243;  // std dev = 3.126, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.10790379363865354;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( tweets(G, C), follows(G, A) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return 0.1567389804591858;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.13444916065283966;  // std dev = 1.145, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.08002012827748704;  // std dev = 0.444, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   else if ( follows(A, I), follows(I, J) )
%   | then return 0.07607635973724383;  // std dev = 0.450, 103.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=29 */
%   | else return 0.1772083985215007;  // std dev = 0.486, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then if ( follows(C, E), follows(E, A) )
%   | | then return 0.09177316296410581;  // std dev = 0.459, 139.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=42 */
%   | | else return 0.15281783603233698;  // std dev = 0.482, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
%   | else return 0.07193186125309017;  // std dev = 0.460, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   else if ( tweets(A, F), follows(A, G) )
%   | then if ( follows(H, A), follows(G, H) )
%   | | then return -0.050019273563827696;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( follows(G, I), tweets(G, F) )
%   | | | then return 0.21988553344812517;  // std dev = 3.567, 51.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
%   | | | else return 0.3026456412129119;  // std dev = 1.566, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( follows(J, A), tweets(J, K) )
%   | | then if ( tweets(A, K) )
%   | | | then return 0.16542455648610044;  // std dev = 2.929, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.5060446527789986;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.09973403457974347;  // std dev = 0.464, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( follows(E, D) )
%   | then if ( follows(E, A), follows(D, E) )
%   | | then if ( tweets(D, C), tweets(E, F) )
%   | | | then return 0.14563797315364224;  // std dev = 5.409, 124.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=47 */
%   | | | else return 0.06868179400305077;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( follows(A, E), follows(E, A) )
%   | | | then return -0.005435184001065041;  // std dev = 2.157, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.10541416704731182;  // std dev = 4.487, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   | else return -0.02570030583084257;  // std dev = 0.417, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( tweets(A, G) )
%   | then return 0.014666991635998735;  // std dev = 0.445, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   | else if ( follows(H, A), tweets(H, I) )
%   | | then return 0.004228791762661719;  // std dev = 0.451, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.20674686878332402;  // std dev = 2.931, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.05612788490612507;  // std dev = 2.523, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(C, D), follows(D, A) )
%   | then if ( follows(A, D), follows(D, C) )
%   | | then if ( tweets(C, E), tweets(D, E) )
%   | | | then return 0.08545491739748588;  // std dev = 5.008, 112.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=38 */
%   | | | else return 0.19239228513606838;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.30116186467855854;  // std dev = 1.654, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.21854517367399076;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0.0622932163162279;  // std dev = 0.467, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   else if ( tweets(A, G) )
%   | then if ( follows(A, H) )
%   | | then if ( follows(A, I), follows(H, I) )
%   | | | then return 0.12752113486775965;  // std dev = 2.810, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.04414299997889323;  // std dev = 3.313, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | else return 0.06602913630896795;  // std dev = 0.471, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | else return 0.04047143676217277;  // std dev = 0.460, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A) )
%   | then return 0.04166684204620856;  // std dev = 0.467, 281.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=90 */
%   | else if ( follows(A, E) )
%   | | then return 0.04057686936998988;  // std dev = 0.469, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | | else return 0.20231213084622926;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, A), follows(F, A) )
%   | | | then return 0.06116584113084526;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.11871076583301708;  // std dev = 3.690, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   | | else return 0.2608453298931539;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.025514046725298372;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0411526199413683;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.060989445617434024;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), follows(A, D) )
%   | then if ( follows(A, E), follows(D, E) )
%   | | then if ( tweets(E, C), tweets(D, F) )
%   | | | then return 0.09260081512869223;  // std dev = 5.971, 153.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=57 */
%   | | | else return 0.20868191734477315;  // std dev = 1.411, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return -0.012832982190878028;  // std dev = 0.450, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( tweets(H, C), tweets(G, C) )
%   | | | then return 0.04044658381508602;  // std dev = 3.794, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | | else return 0.15363788681556226;  // std dev = 1.302, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( tweets(I, C), follows(I, A) )
%   | | | then return 0.07283024454979607;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return 0.11419688291366865;  // std dev = 2.070, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   else if ( follows(J, A), tweets(J, K) )
%   | then return -0.0019793813577737773;  // std dev = 0.457, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | else return 0.10243073682757071;  // std dev = 0.488, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, A), follows(D, A) )
%   | | then if ( tweets(E, C), tweets(D, F) )
%   | | | then return 0.09358842414319019;  // std dev = 4.976, 104.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=41 */
%   | | | else return 0.17329196966957758;  // std dev = 1.210, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( follows(G, A), follows(A, E) )
%   | | | then return 0.001600691975135816;  // std dev = 3.920, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | | else return 0.040566526601534286;  // std dev = 4.199, 78.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return 0.10706557975817192;  // std dev = 2.840, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.3572780395496959;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.11800998939622116;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.09519400819047501;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else return -0.009897984534702822;  // std dev = 0.455, 141.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=41 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( tweets(D, C), follows(A, E) )
%   | then if ( follows(D, E), follows(F, D) )
%   | | then if ( follows(A, F), follows(F, E) )
%   | | | then return -0.030543940623243164;  // std dev = 5.603, 152.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=44 */
%   | | | else return 0.023715042859226907;  // std dev = 3.640, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else if ( follows(E, D) )
%   | | | then return 0.05785267122500274;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17478932978243047;  // std dev = 2.178, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else return -0.06124961916650221;  // std dev = 0.455, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   else if ( follows(G, A), tweets(G, H) )
%   | then if ( follows(A, G) )
%   | | then if ( follows(A, I), follows(G, I) )
%   | | | then return 0.07500655816852343;  // std dev = 2.901, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return -0.07151295195774872;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.23745356505714685;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.009980928859169935;  // std dev = 0.460, 162.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=49 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.703', 'seconds']
Refined model CLL: -0.386345


******************************************
Best model found
******************************************
Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 85.23 

Total Inference Time : 27.06846284866333 

Total revision time: 115.21965099143982
Best scored revision CLL: -0.164298


Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 115.31078816223145 

Total Inference Time : 27.06846284866333 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.089
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 382.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 368.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 374.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.478, 358.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 393.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.465, 400.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.464, 402.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.461, 411.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 366.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.479, 352.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.555', 'seconds']
Parameter learned model CLL:-0.166931 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 98.19
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), tweets(D, C) )
%   | then if ( follows(D, A) )
%   | | then if ( follows(E, A), follows(E, D) )
%   | | | then return 0.16450731660240325;  // std dev = 6.063, 173.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=53 */
%   | | | else return 0.28672036367094095;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | else if ( follows(A, F), follows(F, D) )
%   | | | then return 0.28672036367094095;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.2029765213064089;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( follows(A, G) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2391013160518933;  // std dev = 0.486, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   else if ( follows(H, A), follows(A, H) )
%   | then if ( follows(H, I), follows(I, A) )
%   | | then return 0.26723984419042146;  // std dev = 0.492, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else return 0.1914822684328457;  // std dev = 0.471, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | else return 0.09624417319475043;  // std dev = 0.426, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(E, A), follows(E, D) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(D, F), tweets(D, C) )
%   | | | then return 0.16979445716607214;  // std dev = 6.366, 182.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=61 */
%   | | | else return 0.10000345666011157;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( tweets(E, C) )
%   | | | then return 0.2639911847204288;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5018144497635498;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tweets(D, C) )
%   | | then if ( follows(A, G), follows(D, G) )
%   | | | then return 0.24811816884741297;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.10674677488362641;  // std dev = 2.941, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | else return 0.28162893957529533;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( follows(H, A) )
%   | then return 0.06589728268892235;  // std dev = 0.425, 118.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=28 */
%   | else return 0.22102463113402046;  // std dev = 0.484, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(C, E), follows(E, A) )
%   | then if ( follows(E, C), tweets(E, D) )
%   | | then if ( tweets(A, D) )
%   | | | then return 0.11798224786312825;  // std dev = 5.896, 164.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=50 */
%   | | | else return 0.08690451589286903;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( tweets(A, D), follows(E, C) )
%   | | | then return 0.15357820211021167;  // std dev = 1.809, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.3662128038947236;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( follows(F, C) )
%   | | then if ( follows(A, F), follows(A, C) )
%   | | | then return 0.2412896687849497;  // std dev = 3.100, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.17127840781322717;  // std dev = 3.074, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | else return 0.027176664438938514;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( follows(G, A) )
%   | then return -0.0400132547739425;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return 0.08424243313522872;  // std dev = 0.451, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), tweets(A, D) )
%   then if ( tweets(C, D) )
%   | then if ( follows(C, E), follows(E, C) )
%   | | then if ( follows(E, A), follows(C, A) )
%   | | | then return 0.11521071133920058;  // std dev = 5.817, 155.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=50 */
%   | | | else return 0.06834119720100691;  // std dev = 4.583, 99.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=30 */
%   | | else if ( tweets(F, D), follows(F, A) )
%   | | | then return 0.0491756527696103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17495678164088957;  // std dev = 1.920, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return -0.048477987199420834;  // std dev = 0.434, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( tweets(A, G) )
%   | then return 0.16214820016175607;  // std dev = 0.481, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(A, I), follows(H, I) )
%   | | | then return 0.1404280583579212;  // std dev = 3.428, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return 0.04759689396010472;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.10194396847748631;  // std dev = 0.458, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), follows(A, E) )
%   | then if ( follows(E, F), tweets(E, C) )
%   | | then if ( follows(A, F), tweets(F, C) )
%   | | | then return 0.14019098323700296;  // std dev = 6.318, 171.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=64 */
%   | | | else return 0.06864450658385937;  // std dev = 2.636, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else return -0.057000385734981826;  // std dev = 0.408, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( follows(H, G), tweets(G, C) )
%   | | | then return 0.3196098919193476;  // std dev = 1.670, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.0607875951579537;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.1376434680459541;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.19221230473511372;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   else if ( follows(J, A), follows(A, J) )
%   | then return 0.0879749745309382;  // std dev = 0.468, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | else return 0.048931906171622776;  // std dev = 0.440, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(D, A), tweets(D, E) )
%   | then if ( follows(C, A), follows(D, C) )
%   | | then if ( tweets(C, E), follows(A, D) )
%   | | | then return 0.08972122194134245;  // std dev = 5.752, 148.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=50 */
%   | | | else return 0.18337197639563757;  // std dev = 2.238, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return 0.00926862401191942;  // std dev = 0.453, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | else if ( follows(A, D), follows(D, C) )
%   | | then if ( follows(F, A), follows(A, F) )
%   | | | then return 0.07092055448339248;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3605245138312407;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( follows(A, D), follows(D, G) )
%   | | | then return 0.012700707361492595;  // std dev = 1.203, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1327133682497565;  // std dev = 3.502, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   else if ( tweets(A, H) )
%   | then return 0.022512737597281843;  // std dev = 0.449, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else return 0.20545779569793168;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(D, A), tweets(D, C) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then if ( tweets(E, F), tweets(D, F) )
%   | | | then return 0.05327261978051939;  // std dev = 6.248, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
%   | | | else return -0.05888390807062297;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( follows(D, G), follows(G, A) )
%   | | | then return 0.18641845465405638;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07208519385747979;  // std dev = 1.972, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else return -0.03366840168576585;  // std dev = 0.441, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   else if ( tweets(A, H) )
%   | then return 0.17553170993175524;  // std dev = 0.497, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( tweets(I, K), follows(A, J) )
%   | | | then return 0.182959060890405;  // std dev = 3.067, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.03357298076393106;  // std dev = 2.076, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else return 0.07259895181449963;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( tweets(A, D), tweets(C, E) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(F, A), follows(F, C) )
%   | | | then return 0.06506020294216129;  // std dev = 5.876, 152.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=53 */
%   | | | else return 0.03440054786477236;  // std dev = 3.174, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else return 0.22046303226964983;  // std dev = 1.234, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( follows(A, G), follows(G, C) )
%   | | then if ( tweets(C, H), tweets(G, H) )
%   | | | then return 0.03158165177174844;  // std dev = 2.957, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return -0.031066634888191193;  // std dev = 1.169, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( follows(I, C), tweets(I, J) )
%   | | | then return 0.1959578509247549;  // std dev = 1.458, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.05550125905135097;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( tweets(A, K) )
%   | then return 0.015390660368095641;  // std dev = 0.462, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | else return 0.1030277562848523;  // std dev = 0.484, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(D, A), follows(D, C) )
%   | then if ( tweets(D, E), tweets(C, E) )
%   | | then return 0.02403748204953442;  // std dev = 0.466, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
%   | | else if ( tweets(A, F), follows(A, D) )
%   | | | then return 0.07953366812468049;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.28793348067636654;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tweets(C, G) )
%   | | then if ( follows(A, H), follows(H, C) )
%   | | | then return 0.11605843366014637;  // std dev = 3.051, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.22184448034010232;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else return 0.008900873285959319;  // std dev = 0.450, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( follows(A, I), follows(J, A) )
%   | then return -0.034596386540712766;  // std dev = 0.444, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( follows(A, K), follows(K, L) )
%   | | then return 0.011077891311239783;  // std dev = 0.465, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else return 0.055500543332442066;  // std dev = 0.476, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(A, E), follows(E, C) )
%   | then if ( tweets(A, D), tweets(E, D) )
%   | | then return 0.038601928112705484;  // std dev = 0.475, 157.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=54 */
%   | | else return -0.0034595746662995147;  // std dev = 0.459, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | else if ( follows(A, F), follows(F, G) )
%   | | then return -0.06969016175282447;  // std dev = 0.457, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | else return 0.0731874682836099;  // std dev = 0.490, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   else if ( follows(A, H), follows(H, I) )
%   | then if ( follows(A, I) )
%   | | then if ( follows(A, J), follows(I, J) )
%   | | | then return 0.14512727299772413;  // std dev = 1.231, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4059128094329571;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.017124474451467177;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.1245652160522885;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.011832902478042757;  // std dev = 0.461, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.005', 'seconds']
Refined model CLL: -0.390444


******************************************
Best model found
******************************************
Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 98.19 

Total Inference Time : 16.223760843276978 

Total revision time: 117.02285023117065
Best scored revision CLL: -0.166931


Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 117.07551761054992 

Total Inference Time : 16.223760843276978 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.143
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 459.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.476, 449.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 464.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 470.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 464.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.483, 420.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 475.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 476.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.478, 440.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.466, 488.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.364', 'seconds']
Parameter learned model CLL:-0.164298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 82.398
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then return 0.16805308845414285;  // std dev = 0.462, 313.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=97 */
%   else if ( follows(E, A), tweets(E, F) )
%   | then if ( follows(A, G), follows(G, E) )
%   | | then if ( follows(G, A) )
%   | | | then return 0.324815601766179;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( follows(A, E) )
%   | | | then return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.20508771060971645;  // std dev = 3.332, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(I, H), follows(A, I) )
%   | | | then return 0.06867525088898598;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.23745927992709853;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.1795775065280838;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D) )
%   | then if ( follows(D, A), follows(C, A) )
%   | | then if ( tweets(C, E), tweets(D, F) )
%   | | | then return 0.16849358662438016;  // std dev = 5.709, 146.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=49 */
%   | | | else return 0.058658393832897185;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( tweets(A, G), follows(A, D) )
%   | | | then return 0.24433090845278022;  // std dev = 4.284, 76.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=31 */
%   | | | else return 0.17893967494646051;  // std dev = 5.109, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   | else if ( follows(H, A) )
%   | | then return 0.1697695049440083;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.5031028382773416;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23485338858098154;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( follows(J, A) )
%   | then return 0.10999463034152862;  // std dev = 0.448, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else return 0.16069204491725442;  // std dev = 0.472, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( tweets(C, D), follows(A, E) )
%   | then if ( follows(E, F), follows(A, F) )
%   | | then return 0.13756603740375845;  // std dev = 0.471, 238.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=79 */
%   | | else if ( follows(E, G), tweets(G, D) )
%   | | | then return 0.25553249552027696;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.4115845458956503;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.10910556822315721;  // std dev = 0.456, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   else if ( follows(A, H) )
%   | then if ( follows(H, I) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.10083589943996525;  // std dev = 2.916, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.23282130725768188;  // std dev = 3.468, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | else return 0.03999554846686458;  // std dev = 0.445, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( tweets(A, J) )
%   | | then return 0.19194913538659725;  // std dev = 0.490, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.2781581108000707;  // std dev = 0.499, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(C, E), follows(A, E) )
%   | then if ( tweets(C, D) )
%   | | then if ( follows(E, F), tweets(E, G) )
%   | | | then return 0.15096222978310805;  // std dev = 6.327, 172.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=63 */
%   | | | else return 0.38950165776829826;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.00984046981891723;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.10894031779401893;  // std dev = 0.468, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   else if ( follows(A, H) )
%   | then return 0.0951724717480783;  // std dev = 0.468, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
%   | else if ( follows(I, A) )
%   | | then if ( follows(I, J), follows(J, A) )
%   | | | then return 0.1316508947586979;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2983175614253646;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.09188683816155345;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.133651449125251;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(A, E), follows(E, C) )
%   | then if ( tweets(C, D), follows(A, C) )
%   | | then if ( follows(C, E) )
%   | | | then return 0.08127714118983344;  // std dev = 5.947, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
%   | | | else return 0.013000475179330848;  // std dev = 1.924, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else return 0.25703869559197984;  // std dev = 1.242, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( tweets(F, D), follows(F, C) )
%   | | then if ( follows(A, C) )
%   | | | then return 0.17705488012619508;  // std dev = 2.269, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.08267697803883338;  // std dev = 3.515, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | else return 0.48226511605835964;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( tweets(A, G) )
%   | then return 0.009446991502200503;  // std dev = 0.436, 98.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=25 */
%   | else if ( follows(A, H) )
%   | | then return 0.06098086694818362;  // std dev = 0.462, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | | else return 0.13203533340599743;  // std dev = 0.485, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( follows(D, C) )
%   | then if ( follows(A, C), follows(C, D) )
%   | | then return 0.08092212417771517;  // std dev = 0.473, 192.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=65 */
%   | | else if ( follows(D, A) )
%   | | | then return 0.1366822456177994;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.32674623467968744;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.024179695231332766;  // std dev = 0.443, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   else if ( tweets(A, E) )
%   | then if ( follows(A, F), follows(F, G) )
%   | | then if ( tweets(F, E) )
%   | | | then return 0.1334823181428714;  // std dev = 3.351, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.0031654156890869103;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( follows(A, H) )
%   | | | then return 0.013660833877195633;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.09988826356070332;  // std dev = 3.447, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | else return 0.06765413327707527;  // std dev = 0.470, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(A, D), follows(E, A) )
%   | then if ( follows(C, A), follows(D, F) )
%   | | then if ( follows(D, E), follows(F, E) )
%   | | | then return 0.0761134832436121;  // std dev = 6.405, 180.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=63 */
%   | | | else return 0.14194132611774693;  // std dev = 2.409, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else return -0.03721201777770925;  // std dev = 0.431, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( follows(A, D) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.12785929065485993;  // std dev = 2.734, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.38277848118640456;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( follows(G, A), follows(H, G) )
%   | | | then return 0.19202873516094662;  // std dev = 2.052, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.046617632145988915;  // std dev = 3.486, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   else if ( follows(I, A) )
%   | then return 0.019663866735093672;  // std dev = 0.455, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | else return 0.0286513989220489;  // std dev = 0.464, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(D, E), tweets(E, C) )
%   | then if ( follows(A, E), tweets(D, F) )
%   | | then return 0.02982545804549704;  // std dev = 0.467, 228.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=73 */
%   | | else if ( tweets(D, C) )
%   | | | then return 0.11395667803678677;  // std dev = 3.147, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return -0.006205788116232069;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.015637905800821878;  // std dev = 0.463, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   else if ( follows(G, A), tweets(A, H) )
%   | then return 0.1324656533247693;  // std dev = 0.487, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J), follows(J, K) )
%   | | | then return 0.08474025428050845;  // std dev = 3.359, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.17593060840581326;  // std dev = 2.414, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( tweets(A, L) )
%   | | | then return -2.8555164012442465E-4;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.04110565029341648;  // std dev = 2.833, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(D, C), follows(A, D) )
%   | then if ( tweets(C, E), tweets(D, E) )
%   | | then return 0.0045900802868551124;  // std dev = 0.458, 247.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=74 */
%   | | else return 0.1651790928309183;  // std dev = 0.496, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return -0.027005997399184117;  // std dev = 0.460, 143.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=43 */
%   else if ( follows(A, F) )
%   | then if ( follows(G, A) )
%   | | then return 0.31397359987068535;  // std dev = 0.855, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.12263195522945432;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.24116050243544063;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(J, A) )
%   | | | then return 0.06751674510642147;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.047391803182726844;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return -0.030544553608277927;  // std dev = 0.448, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(D, C), follows(A, D) )
%   | then if ( follows(C, E), follows(D, E) )
%   | | then if ( follows(E, A), follows(E, C) )
%   | | | then return 0.06148925904932157;  // std dev = 4.745, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | | | else return 0.0043284833219446135;  // std dev = 5.200, 126.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=39 */
%   | | else if ( follows(C, A) )
%   | | | then return 0.02891793797547985;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5194146867602081;  // std dev = 0.907, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( follows(A, D), follows(D, F) )
%   | | then return -0.07537181927468567;  // std dev = 0.444, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( tweets(A, G), tweets(D, G) )
%   | | | then return 0.009136855097995382;  // std dev = 3.384, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return 0.10060097699620263;  // std dev = 2.749, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   else if ( follows(A, H), follows(I, A) )
%   | then return -0.22016359238787803;  // std dev = 0.408, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return -1.1150569226870685E-4;  // std dev = 0.458, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.923', 'seconds']
Refined model CLL: -0.380759


******************************************
Best model found
******************************************
Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 82.398 

Total Inference Time : 25.332874298095703 

Total revision time: 110.67215453720092
Best scored revision CLL: -0.164298


Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 110.7248219165802 

Total Inference Time : 25.332874298095703 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.049
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 370.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.477, 360.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.464, 402.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.479, 353.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 368.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.479, 353.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.480, 350.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.476, 363.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 387.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.481, 348.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.706', 'seconds']
Parameter learned model CLL:-0.166931 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 141.446
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( tweets(A, E), follows(D, A) )
%   | then if ( tweets(D, E), follows(A, D) )
%   | | then if ( tweets(A, F), tweets(C, F) )
%   | | | then return 0.21814893509951352;  // std dev = 5.879, 150.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=54 */
%   | | | else return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( follows(D, C), tweets(C, E) )
%   | | | then return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.08891816586874295;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( tweets(C, G) )
%   | | then if ( follows(H, A), follows(I, H) )
%   | | | then return 0.16249676118646764;  // std dev = 4.413, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   | | | else return 0.1914822684328457;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( tweets(A, J) )
%   | then return 0.1034319539674369;  // std dev = 0.430, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | else return 0.1914822684328457;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(A, D) )
%   | then if ( follows(C, A) )
%   | | then if ( tweets(C, E) )
%   | | | then return 0.16334993571053588;  // std dev = 6.872, 213.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=71 */
%   | | | else return 0.0038615830026757316;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( follows(F, A) )
%   | | | then return 0.4616852636640528;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.20080201454864327;  // std dev = 2.764, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( follows(G, A), follows(C, G) )
%   | | then if ( tweets(C, H), tweets(G, H) )
%   | | | then return 0.19830602744712061;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.08719491633600907;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( follows(C, I), follows(A, I) )
%   | | | then return 0.01686766464977647;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.13158101153005122;  // std dev = 2.780, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   else return 0.34508597027374144;  // std dev = 0.500, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(E, A), tweets(D, C) )
%   | then if ( follows(D, F), follows(G, E) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.13899223664277413;  // std dev = 6.727, 203.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=68 */
%   | | | else return 0.2909233485691959;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.06579466040920656;  // std dev = 0.442, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else return 0.0790438227506139;  // std dev = 0.445, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   else if ( follows(H, A) )
%   | then if ( follows(A, I), follows(I, H) )
%   | | then if ( tweets(H, J), tweets(I, J) )
%   | | | then return 0.308330304235584;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.07495825871935113;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( follows(A, H), tweets(H, K) )
%   | | | then return 0.12666942965279868;  // std dev = 1.444, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.20282630064769352;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else return 0.13673363621576284;  // std dev = 0.468, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( tweets(A, D), tweets(C, E) )
%   | then if ( tweets(A, E) )
%   | | then return 0.07593569401982865;  // std dev = 0.456, 231.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=68 */
%   | | else return 0.23439280730231588;  // std dev = 0.488, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.024302835387678245;  // std dev = 0.437, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( tweets(A, H) )
%   | | then if ( tweets(F, H) )
%   | | | then return 0.1549028324138781;  // std dev = 2.598, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.00937913433068024;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.23964840602630716;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(A, J) )
%   | | | then return 0.15598920525600654;  // std dev = 1.787, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.12290166677653805;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else return 0.07823762223099104;  // std dev = 0.452, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, D), follows(C, D) )
%   | then if ( follows(C, A) )
%   | | then if ( tweets(C, E), tweets(D, E) )
%   | | | then return 0.1305939148703781;  // std dev = 6.954, 208.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=76 */
%   | | | else return 0.007912160249937536;  // std dev = 2.337, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( tweets(A, F) )
%   | | | then return 0.36233389250712394;  // std dev = 1.567, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.02122973777414005;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( follows(C, G) )
%   | | then if ( tweets(A, H), tweets(C, H) )
%   | | | then return 0.11770543335495066;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.05185909007351135;  // std dev = 2.241, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.017770741860134113;  // std dev = 1.944, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.05209153821490427;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   else return 0.23609191355023826;  // std dev = 0.500, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( follows(A, D), follows(D, C) )
%   | then if ( follows(C, D) )
%   | | then return 0.07597501699581775;  // std dev = 0.473, 221.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=74 */
%   | | else return -0.02951981037063944;  // std dev = 0.422, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( tweets(C, E), tweets(A, F) )
%   | | then if ( follows(A, G), follows(C, G) )
%   | | | then return 0.356095546251953;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10892834563636744;  // std dev = 1.971, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else return 0.09149349961203747;  // std dev = 0.456, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   else if ( follows(H, A), follows(A, I) )
%   | then return -0.032105596469786855;  // std dev = 0.464, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( tweets(A, J), follows(A, K) )
%   | | then if ( follows(A, L), follows(K, L) )
%   | | | then return 0.06741524584174918;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.13889466412092;  // std dev = 2.365, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else return 0.06022577390646173;  // std dev = 0.467, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), follows(D, A) )
%   | then if ( follows(E, A), follows(E, D) )
%   | | then if ( tweets(D, C) )
%   | | | then return 0.07047890460550262;  // std dev = 5.902, 155.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=53 */
%   | | | else return -0.09429514794956673;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( follows(A, F), follows(D, F) )
%   | | | then return 0.13328941750806023;  // std dev = 2.786, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.048723017433726826;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else return 0.002492774426527519;  // std dev = 0.470, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( follows(G, A), follows(H, A) )
%   | | then return 0.04465885039713104;  // std dev = 0.466, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.1820925464501304;  // std dev = 2.384, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.07727619065332542;  // std dev = 1.620, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else return 0.15944664414464296;  // std dev = 0.490, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(D, A), follows(C, D) )
%   | then if ( tweets(C, E), tweets(D, E) )
%   | | then if ( tweets(A, E) )
%   | | | then return 0.07927908558597783;  // std dev = 5.611, 135.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=50 */
%   | | | else return 0.05939807547598716;  // std dev = 2.659, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else return -0.02502766402502468;  // std dev = 0.434, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( tweets(A, F) )
%   | | then return -0.03177658520593864;  // std dev = 0.444, 93.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=25 */
%   | | else if ( follows(A, C), tweets(D, G) )
%   | | | then return 0.09151953224214589;  // std dev = 2.351, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.019387597052909787;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( tweets(A, H) )
%   | then if ( follows(A, I), follows(I, J) )
%   | | then return -0.012484560287624505;  // std dev = 0.456, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else return 0.01722173036218017;  // std dev = 0.442, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else return -0.015431768821469438;  // std dev = 0.437, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, A), follows(A, E) )
%   | | then if ( tweets(D, C), follows(E, D) )
%   | | | then return 0.044386914652415344;  // std dev = 6.123, 166.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=57 */
%   | | | else return 0.14950540955456462;  // std dev = 1.703, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( follows(A, E), follows(E, F) )
%   | | | then return -0.11664488051891071;  // std dev = 2.481, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.07677201906254935;  // std dev = 2.992, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | else if ( follows(A, G) )
%   | | then return 0.13112394144194364;  // std dev = 0.486, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.056483983987580824;  // std dev = 0.490, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   else if ( follows(A, H), follows(H, I) )
%   | then if ( follows(A, I), follows(H, A) )
%   | | then return -0.004102897493758937;  // std dev = 0.457, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else return 0.10200814310915537;  // std dev = 0.485, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return -0.027835295126804067;  // std dev = 0.427, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( tweets(A, E), follows(A, C) )
%   | then if ( follows(A, F), follows(F, C) )
%   | | then return 0.032487184928515905;  // std dev = 0.473, 183.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=62 */
%   | | else if ( follows(C, G), follows(G, A) )
%   | | | then return -0.01675400812504907;  // std dev = 1.443, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.1133368671352655;  // std dev = 1.895, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return -0.045448507980893296;  // std dev = 0.449, 119.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=33 */
%   else if ( tweets(A, H) )
%   | then if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J), tweets(I, H) )
%   | | | then return 0.03821563565973034;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.2108674729401805;  // std dev = 1.746, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.16620856695247677;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( follows(A, K), follows(K, L) )
%   | | then return 0.07395256650766982;  // std dev = 0.489, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.09052897399094201;  // std dev = 0.478, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.372', 'seconds']
Refined model CLL: -0.381594


******************************************
Best model found
******************************************
Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 141.446 

Total Inference Time : 15.819870948791504 

Total revision time: 159.69421159744263
Best scored revision CLL: -0.166931


Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 159.7276352596283 

Total Inference Time : 15.819870948791504 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.188
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 481.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 482.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 487.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 467.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 453.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 487.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 487.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 465.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 457.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.476, 449.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.279', 'seconds']
Parameter learned model CLL:-0.164298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 63.599000000000004
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(E, A), follows(E, C) )
%   | then if ( follows(A, D), follows(E, D) )
%   | | then if ( follows(D, F), follows(F, A) )
%   | | | then return 0.1937653734556772;  // std dev = 5.706, 146.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=49 */
%   | | | else return 0.0755402394473383;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( follows(C, A), follows(A, D) )
%   | | | then return 0.4945125714631487;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.25814893509951237;  // std dev = 3.286, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | else if ( follows(C, A) )
%   | | then return 0.1308762078267851;  // std dev = 0.445, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( follows(A, D) )
%   | | | then return 0.15639454913460007;  // std dev = 3.454, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | | else return 0.23592671287729014;  // std dev = 3.252, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   else if ( tweets(A, G) )
%   | then return 0.16370449065506737;  // std dev = 0.461, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | else return 0.13087620782678508;  // std dev = 0.445, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), tweets(A, D) )
%   then if ( follows(C, A) )
%   | then if ( follows(E, A), follows(E, C) )
%   | | then if ( follows(C, E), tweets(C, D) )
%   | | | then return 0.12298320244123973;  // std dev = 5.122, 125.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=37 */
%   | | | else return 0.20550653332251753;  // std dev = 2.211, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( follows(A, F), follows(C, F) )
%   | | | then return 0.20751951013016287;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.12145896494019376;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( tweets(C, D), follows(C, G) )
%   | | then if ( follows(H, A), follows(H, C) )
%   | | | then return 0.33463657906589317;  // std dev = 1.584, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.2129245153802058;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | else if ( follows(C, I) )
%   | | | then return 0.0269370664065595;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.20066659989857208;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else return 0.14063424098438673;  // std dev = 0.461, 193.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=59 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, D), follows(C, D) )
%   | then return 0.12039945807752045;  // std dev = 0.466, 304.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=96 */
%   | else if ( tweets(A, E) )
%   | | then return 0.13670157690264625;  // std dev = 0.472, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | else if ( follows(C, F) )
%   | | | then return 0.2783367755444839;  // std dev = 2.059, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.10749949574456154;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( follows(G, A) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then if ( tweets(A, I), tweets(G, I) )
%   | | | then return 0.23071958137027881;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.10472307739697707;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.11984171718696672;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( tweets(A, J) )
%   | | then return 0.2613709223664474;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.2106740989191649;  // std dev = 0.487, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), tweets(A, D) )
%   then if ( follows(C, A) )
%   | then return 0.1003872409207191;  // std dev = 0.465, 216.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=68 */
%   | else return 0.04754304287650731;  // std dev = 0.443, 108.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=29 */
%   else if ( follows(E, A) )
%   | then if ( follows(A, F) )
%   | | then if ( follows(F, E) )
%   | | | then return 0.1758338878106521;  // std dev = 2.604, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.3584783284930399;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.21022088968623892;  // std dev = 2.823, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.0771437176789591;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(H, I), follows(A, I) )
%   | | | then return 0.1882926061685804;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.11378411093520958;  // std dev = 2.433, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else return 0.06685023935282236;  // std dev = 0.449, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( tweets(A, D) )
%   | then return 0.06357592829359907;  // std dev = 0.460, 293.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=88 */
%   | else if ( tweets(A, E) )
%   | | then return 0.440005352945622;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.0989023659107319;  // std dev = 0.473, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   else if ( tweets(A, F) )
%   | then if ( follows(A, G) )
%   | | then if ( follows(A, H), follows(G, H) )
%   | | | then return 0.0794971538163369;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.15464176266359314;  // std dev = 2.713, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else return 0.12631835495422186;  // std dev = 0.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J) )
%   | | | then return 0.16230680715285511;  // std dev = 2.187, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.27563290721996403;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.1397656996545848;  // std dev = 0.480, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( tweets(A, E), follows(A, D) )
%   | then if ( follows(D, F), follows(A, F) )
%   | | then return 0.10056142767325783;  // std dev = 0.475, 198.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=68 */
%   | | else return 0.21781148293516475;  // std dev = 0.497, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else return 0.047865527004992005;  // std dev = 0.464, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
%   else if ( follows(A, G), tweets(A, H) )
%   | then if ( follows(I, A) )
%   | | then return 0.3837184670873984;  // std dev = 0.848, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.24964925583809375;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tweets(A, J), follows(K, A) )
%   | | then if ( follows(K, L), follows(L, A) )
%   | | | then return 0.1137972981102688;  // std dev = 2.833, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.0826944203483737;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( follows(M, A) )
%   | | | then return 0.1505893086907093;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.121755906834078;  // std dev = 2.857, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), tweets(D, C) )
%   | then if ( follows(E, D), follows(A, F) )
%   | | then if ( follows(E, A), follows(A, E) )
%   | | | then return 0.09999138990208835;  // std dev = 5.242, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
%   | | | else return 0.04325698060483442;  // std dev = 4.471, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | | else if ( follows(D, G), follows(G, A) )
%   | | | then return 0.05921344771774101;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.3000195266203412;  // std dev = 1.322, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( tweets(H, C), tweets(I, C) )
%   | | | then return 0.1424533609831747;  // std dev = 3.174, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.4744438888571254;  // std dev = 0.829, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.26210016951406007;  // std dev = 1.117, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.28634144602834405;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return 0.04145744210639164;  // std dev = 0.470, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(A, D), follows(C, D) )
%   | then if ( follows(C, E), follows(E, A) )
%   | | then if ( follows(A, E) )
%   | | | then return 0.04908345141856955;  // std dev = 5.776, 151.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=50 */
%   | | | else return -0.10260204680651153;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( follows(D, F), follows(F, C) )
%   | | | then return 0.11071538661037421;  // std dev = 3.557, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | | | else return 0.372704090030352;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.0078345360704676;  // std dev = 0.427, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   else if ( follows(A, G), tweets(A, H) )
%   | then return -0.04979284462136786;  // std dev = 0.441, 111.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=29 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(I, J), follows(A, J) )
%   | | | then return 0.11383725185589048;  // std dev = 2.187, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.011780663542164692;  // std dev = 2.492, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else return -0.009388892469070863;  // std dev = 0.452, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( follows(E, C), follows(E, D) )
%   | then return 0.017199769595537078;  // std dev = 0.464, 282.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=88 */
%   | else return -0.17273348665847266;  // std dev = 0.403, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   else if ( tweets(A, F), follows(A, G) )
%   | then if ( follows(G, H), tweets(H, F) )
%   | | then if ( follows(A, H), follows(H, G) )
%   | | | then return 0.06242507502203104;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.13925871721366348;  // std dev = 2.378, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( follows(G, I) )
%   | | | then return -0.03491338010908821;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.053573867503802754;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( tweets(A, J) )
%   | | then return -0.010210930601652297;  // std dev = 0.462, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.016142709321773585;  // std dev = 3.272, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.0622746037448807;  // std dev = 2.580, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, D), follows(C, D) )
%   | then return -0.0034022149732056317;  // std dev = 0.460, 321.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=96 */
%   | else if ( follows(C, E) )
%   | | then if ( tweets(A, F), tweets(E, F) )
%   | | | then return 0.11375437505004149;  // std dev = 3.069, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.06457652569785362;  // std dev = 2.447, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else return -0.05140831719084642;  // std dev = 0.460, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   else if ( tweets(A, G), follows(H, A) )
%   | then if ( follows(H, I), follows(I, A) )
%   | | then return 0.1304965081573274;  // std dev = 0.495, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else return 0.045165162026447304;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(J, A) )
%   | | then return 0.002167057770597634;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.021237944818650035;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.04327493784957149;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.957', 'seconds']
Refined model CLL: -0.37697


******************************************
Best model found
******************************************
Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 63.599000000000004 

Total Inference Time : 14.76438593864441 

Total revision time: 81.28253012847901
Best scored revision CLL: -0.164298


Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 81.31595379066468 

Total Inference Time : 14.76438593864441 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.022
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 371.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 383.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 390.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 385.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 371.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 378.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.476, 363.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 385.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 392.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 366.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.537', 'seconds']
Parameter learned model CLL:-0.166931 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 121.057
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A), tweets(C, D) )
%   | then if ( follows(A, E), follows(E, C) )
%   | | then if ( follows(C, E) )
%   | | | then return 0.17304255212079034;  // std dev = 7.120, 235.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=74 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( tweets(F, D), follows(F, C) )
%   | | | then return 0.12841920536978263;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( tweets(C, G), follows(C, H) )
%   | | then if ( follows(A, H), follows(H, C) )
%   | | | then return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.3381489350995123;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.13814893509951237;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   else return 0.08672036367094095;  // std dev = 0.420, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then if ( follows(D, E), follows(E, A) )
%   | | | then return 0.17987214792204503;  // std dev = 7.014, 218.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=75 */
%   | | | else return 0.3258310991978394;  // std dev = 1.995, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( tweets(A, F) )
%   | | | then return 0.2417864683289835;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.03663788207052242;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( follows(G, A), tweets(A, H) )
%   | | then if ( follows(I, G) )
%   | | | then return 0.08888939972600332;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.04532723005682731;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( tweets(C, J), tweets(A, J) )
%   | | | then return 0.26646839629156666;  // std dev = 2.476, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.1325029425265841;  // std dev = 2.767, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   else return 0.3472611844231893;  // std dev = 0.500, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( follows(A, D), follows(C, D) )
%   | then if ( tweets(C, E), follows(D, A) )
%   | | then if ( tweets(D, E), tweets(A, E) )
%   | | | then return 0.12449231453261825;  // std dev = 5.357, 133.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
%   | | | else return 0.1959130898221747;  // std dev = 3.230, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | else if ( follows(D, F) )
%   | | | then return 0.07630649603726002;  // std dev = 3.819, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | | else return 0.22185199203140207;  // std dev = 1.502, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( follows(G, C), tweets(G, H) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.30686926739949577;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.17017897690827763;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.00528190276573733;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( tweets(A, I) )
%   | then return 0.09294831707503916;  // std dev = 0.454, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | else return 0.05212539597587494;  // std dev = 0.430, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A), follows(C, D) )
%   | then if ( tweets(C, E), tweets(D, E) )
%   | | then if ( follows(A, D), follows(D, C) )
%   | | | then return 0.1806820373798247;  // std dev = 6.475, 176.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=69 */
%   | | | else return 0.09952349835912586;  // std dev = 2.013, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( tweets(A, F), tweets(D, G) )
%   | | | then return -0.045719969835720214;  // std dev = 1.558, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.15426096878461174;  // std dev = 1.364, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( follows(C, A) )
%   | | then if ( follows(A, H), follows(C, H) )
%   | | | then return -0.002986214010515763;  // std dev = 1.735, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.11773094556931518;  // std dev = 2.155, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( follows(A, I), follows(C, I) )
%   | | | then return 0.20279706522591057;  // std dev = 2.032, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.14407433635116523;  // std dev = 3.494, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   else return 0.10126785135847607;  // std dev = 0.466, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( tweets(D, E), follows(D, C) )
%   | then if ( follows(D, A), follows(C, A) )
%   | | then if ( tweets(A, E), tweets(C, F) )
%   | | | then return 0.09208246565132011;  // std dev = 5.538, 138.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=46 */
%   | | | else return 0.010403656326807226;  // std dev = 3.090, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else if ( tweets(A, E) )
%   | | | then return 0.09869805410785375;  // std dev = 4.704, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   | | | else return 0.17719286854079175;  // std dev = 2.655, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else return -0.022567179543051107;  // std dev = 0.401, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else if ( tweets(A, G), follows(A, H) )
%   | then if ( follows(I, A) )
%   | | then return -0.01710700591029275;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.038272915157322285;  // std dev = 0.408, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( tweets(A, J) )
%   | | then return 0.05976692871703448;  // std dev = 0.457, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.12469427188797269;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then if ( follows(E, C), follows(C, E) )
%   | | then if ( follows(E, A), follows(C, A) )
%   | | | then return 0.08763594521739931;  // std dev = 5.717, 144.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=50 */
%   | | | else return 0.15157747988231587;  // std dev = 4.181, 72.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=30 */
%   | | else if ( follows(F, A) )
%   | | | then return 0.1513229875486916;  // std dev = 1.119, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.04038324361851493;  // std dev = 1.877, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( follows(C, G) )
%   | | then if ( tweets(C, H), follows(I, A) )
%   | | | then return 0.09510565491125182;  // std dev = 3.599, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return -0.029542192368233265;  // std dev = 1.938, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else return 0.17002530878008906;  // std dev = 0.490, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   else return 0.010572885854448233;  // std dev = 0.438, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(D, E), follows(A, E) )
%   | then if ( follows(D, A), follows(E, A) )
%   | | then return 0.06733778446541301;  // std dev = 0.476, 147.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=51 */
%   | | else return -2.0515527044446757E-4;  // std dev = 0.448, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   | else return -0.012980695192644867;  // std dev = 0.450, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   else if ( follows(F, A), follows(A, F) )
%   | then if ( follows(G, F), tweets(G, H) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.17558332480973288;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.481219607802197;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 9.565806974103364E-5;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( follows(I, A), follows(A, J) )
%   | | then return -0.0471618147547654;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.224271993936354;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.15736278761380246;  // std dev = 2.869, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(A, C), tweets(A, E) )
%   | then if ( follows(A, F), follows(F, C) )
%   | | then if ( tweets(A, D), tweets(F, D) )
%   | | | then return 0.04654998366224225;  // std dev = 5.878, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | | else return -0.004822787198731128;  // std dev = 2.661, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( follows(A, G), follows(C, G) )
%   | | | then return 0.03996739204133807;  // std dev = 1.441, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.11507342073046255;  // std dev = 1.850, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( tweets(A, D), follows(A, H) )
%   | | then if ( follows(C, H) )
%   | | | then return 0.311888599425814;  // std dev = 1.303, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.011581633022816888;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tweets(I, D), follows(I, C) )
%   | | | then return 0.06523262779707723;  // std dev = 4.038, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | | | else return 0.12997669045135937;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.01756942910829861;  // std dev = 0.452, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( follows(A, E), follows(F, D) )
%   | then if ( tweets(D, C), follows(E, A) )
%   | | then if ( follows(A, F), tweets(F, G) )
%   | | | then return 0.03700670530539933;  // std dev = 6.374, 183.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=61 */
%   | | | else return 0.1336913537193986;  // std dev = 1.937, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else return -0.051533583403867;  // std dev = 0.439, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | else return 0.15410261741605058;  // std dev = 0.495, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   else if ( follows(A, H), follows(H, I) )
%   | then if ( tweets(I, J), follows(I, H) )
%   | | then if ( tweets(H, J) )
%   | | | then return -0.03136850130501487;  // std dev = 4.460, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   | | | else return -0.19578683764990773;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.15073083497819684;  // std dev = 0.427, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( tweets(A, K) )
%   | | then return 0.06417036548115487;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.04400233999590799;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(D, E) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(E, F), follows(F, D) )
%   | | | then return 0.04301517779923474;  // std dev = 6.705, 199.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=69 */
%   | | | else return 0.24399562880673412;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( follows(D, A), tweets(D, C) )
%   | | | then return -0.10888803234068806;  // std dev = 1.920, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.009092101626049927;  // std dev = 2.030, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else return 0.20121729683610354;  // std dev = 0.500, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( follows(H, A), follows(G, A) )
%   | | then return 0.026756973166857607;  // std dev = 0.476, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else return -0.06297924098060673;  // std dev = 0.441, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | else if ( tweets(A, I) )
%   | | then return -0.018652378010702075;  // std dev = 0.462, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else return 0.07653813917896507;  // std dev = 0.484, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.915', 'seconds']
Refined model CLL: -0.387862


******************************************
Best model found
******************************************
Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 121.057 

Total Inference Time : 22.045335054397583 

Total revision time: 145.60639429473878
Best scored revision CLL: -0.166931


Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 145.69748783493043 

Total Inference Time : 22.045335054397583 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.219
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.479, 437.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 465.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 475.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.479, 437.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 474.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 471.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 467.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 462.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 474.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.476, 450.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.247', 'seconds']
Parameter learned model CLL:-0.164298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 121.659
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), follows(D, E) )
%   | then return 0.19029179224236767;  // std dev = 0.471, 280.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=93 */
%   | else if ( follows(F, A), tweets(F, C) )
%   | | then return 0.18423589162125148;  // std dev = 0.469, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else return 0.3581489350995123;  // std dev = 0.500, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( follows(G, A), tweets(G, H) )
%   | then if ( follows(A, I), follows(G, I) )
%   | | then if ( follows(A, G), follows(I, G) )
%   | | | then return 0.2929315437951645;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( follows(A, J), follows(J, K) )
%   | | then if ( follows(K, J), follows(A, K) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.224815601766179;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | else return 0.17957750652808377;  // std dev = 0.467, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), tweets(A, D) )
%   then if ( follows(C, E), follows(A, E) )
%   | then if ( follows(C, A) )
%   | | then if ( tweets(E, D) )
%   | | | then return 0.18666428414183348;  // std dev = 6.177, 167.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=59 */
%   | | | else return 0.05559309319040188;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( follows(E, C), follows(F, A) )
%   | | | then return 0.5000375376348463;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.26194229953960824;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( follows(G, A), follows(H, G) )
%   | | then if ( follows(C, I) )
%   | | | then return 0.20179192359975864;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.3278428738167505;  // std dev = 0.987, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.1195231226145636;  // std dev = 0.453, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   else if ( follows(A, J), follows(J, A) )
%   | then return 0.08877216881028352;  // std dev = 0.445, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | else return 0.13466965876021939;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), follows(D, E) )
%   | then return 0.13402603086082707;  // std dev = 0.471, 282.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=93 */
%   | else if ( follows(A, F) )
%   | | then if ( follows(G, A) )
%   | | | then return 0.1652434155503311;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.18956875471888987;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.14242924425391076;  // std dev = 0.471, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   else if ( follows(A, H) )
%   | then if ( follows(I, A), follows(I, H) )
%   | | then if ( follows(H, I) )
%   | | | then return 0.24726135502984165;  // std dev = 2.484, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.12527408922216893;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.10888115470976564;  // std dev = 0.460, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | else if ( follows(J, A) )
%   | | then return 0.1863455618264455;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.22720464624270828;  // std dev = 0.492, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(A, D), follows(D, E) )
%   | then if ( follows(A, E), follows(E, C) )
%   | | then if ( follows(F, A), follows(A, F) )
%   | | | then return 0.09864970810877179;  // std dev = 5.424, 136.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=43 */
%   | | | else return 0.2510330475769788;  // std dev = 1.250, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.04942744114729841;  // std dev = 0.444, 170.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=46 */
%   | else if ( tweets(A, G), tweets(C, G) )
%   | | then if ( tweets(D, G) )
%   | | | then return 0.17003352114558068;  // std dev = 3.144, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.28827135098483475;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tweets(A, H) )
%   | | | then return -0.004865265788939921;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1002775464093519;  // std dev = 2.761, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   else if ( follows(I, A) )
%   | then return 0.09522251789348671;  // std dev = 0.464, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | else return 0.026538117525888947;  // std dev = 0.437, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, C), follows(A, E) )
%   | then if ( follows(C, E), follows(E, F) )
%   | | then if ( follows(A, F), follows(E, D) )
%   | | | then return 0.10689561466258798;  // std dev = 6.693, 200.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=68 */
%   | | | else return 0.22664658122964462;  // std dev = 2.232, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( follows(C, E), tweets(A, G) )
%   | | | then return -0.1263782884909786;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07613428833560272;  // std dev = 2.714, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | else if ( follows(H, C) )
%   | | then if ( tweets(A, I) )
%   | | | then return 0.13513705427888523;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.07744053441061752;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.25942668133787933;  // std dev = 0.987, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( follows(A, J) )
%   | then return 0.08170287426023429;  // std dev = 0.464, 118.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
%   | else return 0.03507909493703303;  // std dev = 0.444, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( tweets(A, D), follows(E, C) )
%   | then if ( follows(E, A), follows(C, E) )
%   | | then if ( tweets(E, D) )
%   | | | then return 0.08236502441049319;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   | | | else return 0.1072608212223095;  // std dev = 1.792, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.03747109759651818;  // std dev = 0.456, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
%   | else return 0.016305112067790506;  // std dev = 0.452, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   else if ( follows(A, F), follows(F, G) )
%   | then return 0.06185327722330618;  // std dev = 0.462, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.23585175438046124;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.15084703972947683;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.4471749208735334;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.179743077200324;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, D), follows(D, E) )
%   | then if ( follows(C, D) )
%   | | then if ( follows(A, E), follows(E, D) )
%   | | | then return 0.10660304069991731;  // std dev = 6.442, 177.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=66 */
%   | | | else return 0.21191336279689776;  // std dev = 2.589, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( tweets(A, F) )
%   | | | then return 0.0340022974450866;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.24556671527484653;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tweets(A, G) )
%   | | then return 0.2042613058724689;  // std dev = 0.497, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | else return 0.11105329201325542;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( tweets(A, H) )
%   | then return 0.017922704524300594;  // std dev = 0.452, 87.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=25 */
%   | else if ( follows(A, I) )
%   | | then return 0.07814918097449003;  // std dev = 0.476, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | else return 0.17192447442199293;  // std dev = 0.496, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( tweets(A, E), follows(F, C) )
%   | then if ( tweets(A, D), follows(A, G) )
%   | | then return 0.0510701077894097;  // std dev = 0.473, 212.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=72 */
%   | | else if ( follows(F, A), tweets(F, E) )
%   | | | then return 0.0580682485982911;  // std dev = 2.762, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.4856393504989205;  // std dev = 0.954, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.003656348727642336;  // std dev = 0.464, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   else if ( follows(A, H) )
%   | then if ( tweets(A, I), follows(H, J) )
%   | | then if ( tweets(H, I), tweets(J, I) )
%   | | | then return 0.06395934510023525;  // std dev = 3.370, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return 0.24035432714922866;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( follows(A, K), follows(H, K) )
%   | | | then return 0.29690513850315586;  // std dev = 1.849, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.12465635815307088;  // std dev = 2.542, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | else return 0.014321878494287229;  // std dev = 0.459, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, D), follows(D, C) )
%   | then return 0.015448770446903338;  // std dev = 0.464, 227.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=71 */
%   | else if ( tweets(A, E), follows(A, C) )
%   | | then if ( follows(A, F), follows(C, F) )
%   | | | then return -0.04604408504808042;  // std dev = 1.476, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.06495378924096454;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else return -0.0239477384968829;  // std dev = 0.465, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   else if ( follows(A, G) )
%   | then if ( tweets(A, H) )
%   | | then if ( follows(G, I), tweets(G, H) )
%   | | | then return 0.04802351812185474;  // std dev = 3.469, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.16726682263543743;  // std dev = 1.253, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.022838881701128126;  // std dev = 0.459, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | else if ( tweets(A, J) )
%   | | then return 0.15949537817192944;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.1965539779369158;  // std dev = 0.500, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, C), tweets(C, E) )
%   | then if ( follows(D, A), follows(F, D) )
%   | | then return 0.0188335518971682;  // std dev = 0.469, 203.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=66 */
%   | | else return -0.012706622781756143;  // std dev = 0.463, 129.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=39 */
%   | else return -0.1683464323801741;  // std dev = 0.391, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( follows(A, H), tweets(A, I) )
%   | | then return 0.0032968031264510385;  // std dev = 0.459, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( tweets(A, J), tweets(H, J) )
%   | | | then return 0.16101489371099587;  // std dev = 2.224, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.08371048826893836;  // std dev = 3.023, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | else if ( tweets(A, K) )
%   | | then return -0.03452815245977505;  // std dev = 0.456, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( follows(A, L) )
%   | | | then return 0.0550899983219678;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.04237255202097067;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.284', 'seconds']
Refined model CLL: -0.384614


******************************************
Best model found
******************************************
Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 121.659 

Total Inference Time : 29.01114273071289 

Total revision time: 153.55714581298827
Best scored revision CLL: -0.164298


Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 153.64823935317992 

Total Inference Time : 29.01114273071289 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.053
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 368.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.463, 405.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 384.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 392.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 391.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.478, 355.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 367.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 368.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 388.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.478, 357.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.519', 'seconds']
Parameter learned model CLL:-0.166931 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 311.361
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( follows(C, D), tweets(C, E) )
%   | then if ( tweets(D, F), follows(G, C) )
%   | | then if ( follows(D, G) )
%   | | | then return 0.22681252956955855;  // std dev = 7.107, 217.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=80 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.08037115732173443;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( follows(C, D) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( follows(A, I), follows(I, J) )
%   | then return 0.13314893509951237;  // std dev = 0.447, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | else if ( tweets(A, K) )
%   | | then return 0.1824732594238367;  // std dev = 0.468, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(A, E), follows(D, E) )
%   | then if ( follows(E, F) )
%   | | then if ( follows(D, A), follows(E, A) )
%   | | | then return 0.1910185713436806;  // std dev = 5.696, 140.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=51 */
%   | | | else return 0.12596696651545994;  // std dev = 3.653, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | else return 4.360177139839346E-4;  // std dev = 0.402, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else return 0.06424077534268166;  // std dev = 0.430, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   else if ( follows(G, A) )
%   | then if ( follows(H, G), follows(A, H) )
%   | | then return 0.13557488926406758;  // std dev = 0.461, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.16778708794566322;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.23414537895557627;  // std dev = 1.710, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( follows(A, J), follows(J, K) )
%   | | then return 0.3411555346520432;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.2195467402759844;  // std dev = 0.490, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( tweets(D, C) )
%   | then if ( follows(E, A), follows(F, E) )
%   | | then if ( follows(A, F), follows(D, G) )
%   | | | then return 0.15512025596438253;  // std dev = 6.469, 183.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=65 */
%   | | | else return 0.09977108028090391;  // std dev = 2.635, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( follows(D, H), follows(A, H) )
%   | | | then return 0.16303445057194196;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.2100042871413115;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return 0.07202992500468904;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( follows(I, A) )
%   | then if ( follows(J, I), follows(A, J) )
%   | | then return 0.12861828327069155;  // std dev = 0.466, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else return 0.0621593468139374;  // std dev = 0.443, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | else if ( follows(A, K), follows(K, L) )
%   | | then return 0.2186991622001717;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.1597783503623465;  // std dev = 0.484, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( follows(D, A), follows(C, D) )
%   | then if ( tweets(C, E), tweets(D, E) )
%   | | then return 0.12075913815855012;  // std dev = 0.476, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
%   | | else return 0.029260764353578377;  // std dev = 0.434, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else return 0.07247312962323509;  // std dev = 0.455, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( follows(A, G) )
%   | | then return 0.05589674796456153;  // std dev = 0.441, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.22118849436284216;  // std dev = 1.710, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.15156871763137686;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(A, J) )
%   | | | then return 0.19302909420816988;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.22125830335731275;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0.30202250339007375;  // std dev = 0.498, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(E, A) )
%   | then return 0.08580980407963237;  // std dev = 0.469, 235.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=77 */
%   | else return 0.04229278092044605;  // std dev = 0.446, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   else if ( follows(A, F), follows(F, A) )
%   | then if ( tweets(F, G) )
%   | | then if ( follows(F, H), follows(H, A) )
%   | | | then return 0.13440114470671108;  // std dev = 2.388, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.1802402962733571;  // std dev = 2.303, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else return 0.06471514453183151;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(I, A) )
%   | | then if ( follows(A, J) )
%   | | | then return -0.030691699525327652;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12611592070676914;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.2284656076773001;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12533472353326738;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( tweets(D, C), follows(D, E) )
%   | then if ( follows(F, A), follows(G, F) )
%   | | then if ( follows(F, D), follows(D, G) )
%   | | | then return 0.08246621653476306;  // std dev = 6.491, 186.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=64 */
%   | | | else return 0.35082769653763557;  // std dev = 1.870, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else return 0.03651426906500457;  // std dev = 0.444, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( tweets(D, C) )
%   | | then if ( follows(H, A) )
%   | | | then return 0.21992298365142432;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3231771314546739;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.4448068215125387;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( follows(I, A) )
%   | then return 0.05811168627376388;  // std dev = 0.467, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | else if ( follows(A, J), follows(J, K) )
%   | | then return 0.27826964437343016;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.06964885616691421;  // std dev = 0.490, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(C, E), follows(A, E) )
%   | then if ( follows(A, C), tweets(E, F) )
%   | | then if ( follows(E, A), tweets(A, D) )
%   | | | then return 0.09886350517474457;  // std dev = 5.340, 121.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=46 */
%   | | | else return 0.03887917065910284;  // std dev = 4.758, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | | else if ( follows(E, G), follows(G, C) )
%   | | | then return 0.31015481321747373;  // std dev = 1.498, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.030607318779090415;  // std dev = 1.212, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( tweets(A, D) )
%   | | then if ( follows(H, A), follows(H, C) )
%   | | | then return 0.05872338010708231;  // std dev = 2.542, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.02324741163267111;  // std dev = 1.828, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return -0.0864276004674113;  // std dev = 0.402, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   else if ( tweets(A, I) )
%   | then return 0.005792017679128983;  // std dev = 0.452, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else return -0.08502235467598279;  // std dev = 0.446, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then return 0.02338087567136145;  // std dev = 0.468, 264.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=85 */
%   else if ( follows(E, A), follows(A, E) )
%   | then if ( follows(A, F), follows(F, E) )
%   | | then if ( tweets(E, G), tweets(F, H) )
%   | | | then return 0.12271345591335694;  // std dev = 2.898, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return -0.08424380487947958;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( follows(A, I), follows(E, I) )
%   | | | then return 0.1802315205824666;  // std dev = 1.013, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1479701417453115;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( follows(A, J), follows(J, K) )
%   | | then if ( follows(L, A) )
%   | | | then return -0.1292466710234131;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.10875498083423105;  // std dev = 2.591, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( tweets(A, M) )
%   | | | then return 0.01879586930361322;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.17304085674573924;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(A, E), follows(E, C) )
%   | then if ( tweets(E, D), tweets(A, D) )
%   | | then return -0.004121026600102532;  // std dev = 0.457, 182.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=54 */
%   | | else if ( tweets(A, F), follows(A, C) )
%   | | | then return 0.19579698832557707;  // std dev = 2.235, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.0525673715318843;  // std dev = 3.213, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | else if ( tweets(A, D), follows(G, C) )
%   | | then if ( follows(A, H), follows(C, H) )
%   | | | then return 0.04245095868988347;  // std dev = 1.375, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.09755451964536277;  // std dev = 2.872, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | else if ( follows(A, C) )
%   | | | then return 0.06531335956812438;  // std dev = 1.577, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.7261370504724173;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( tweets(A, I) )
%   | then return 0.03940422071285196;  // std dev = 0.474, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | else return -0.10647906760358304;  // std dev = 0.440, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A), follows(C, D) )
%   | then if ( follows(D, C), follows(C, A) )
%   | | then if ( tweets(D, E), tweets(A, E) )
%   | | | then return 0.01764941693684793;  // std dev = 5.755, 152.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=49 */
%   | | | else return -0.06455188661098456;  // std dev = 2.865, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( follows(C, A) )
%   | | | then return 0.3090917583936381;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.03788018532749462;  // std dev = 3.356, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | else if ( follows(C, F), tweets(C, G) )
%   | | then if ( follows(A, F), follows(F, C) )
%   | | | then return 0.22172182779599647;  // std dev = 1.501, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.06097513728792587;  // std dev = 3.489, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | else if ( tweets(A, H), follows(I, A) )
%   | | | then return -0.22139898195647534;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.030140308804020802;  // std dev = 2.612, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   else return 0.1349396871020957;  // std dev = 0.497, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.891', 'seconds']
Refined model CLL: -0.403838


******************************************
Best model found
******************************************
Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 311.361 

Total Inference Time : 25.92199158668518 

Total revision time: 339.74681302452086
Best scored revision CLL: -0.166931


Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 339.8030206813812 

Total Inference Time : 25.92199158668518 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.183
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 460.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 467.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 461.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 466.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 465.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.477, 445.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 453.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 480.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 473.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 452.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.320', 'seconds']
Parameter learned model CLL:-0.164298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 50.495
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(A, E) )
%   | then if ( follows(E, F), follows(A, F) )
%   | | then if ( follows(F, A), follows(C, F) )
%   | | | then return 0.16849376268571906;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   | | | else return 0.2699136409818653;  // std dev = 3.515, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | else return 0.12130682983635444;  // std dev = 0.440, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else if ( follows(C, G), follows(G, A) )
%   | | then return 0.25208832903890627;  // std dev = 0.489, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( follows(H, A) )
%   | then return 0.14847151574467365;  // std dev = 0.454, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | else if ( tweets(A, I) )
%   | | then return 0.17460463130204304;  // std dev = 0.465, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.1996123497336587;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.21814893509951233;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(D, A) )
%   | then if ( follows(A, D), tweets(A, E) )
%   | | then if ( tweets(C, E), tweets(D, F) )
%   | | | then return 0.19377330279276642;  // std dev = 6.035, 158.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=57 */
%   | | | else return 0.33637587372079536;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( follows(A, D) )
%   | | | then return 0.22371290706060554;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.5000713313692531;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(G, A), follows(H, G) )
%   | | then return 0.0937862415598647;  // std dev = 0.437, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | else if ( tweets(A, I), tweets(D, I) )
%   | | | then return 0.18535539841000298;  // std dev = 3.607, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return 0.16563691203242611;  // std dev = 3.162, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   else if ( follows(A, J) )
%   | then return 0.07618471089040202;  // std dev = 0.427, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else return 0.1404089073581323;  // std dev = 0.463, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D) )
%   | then if ( follows(E, A), follows(D, E) )
%   | | then return 0.12903583030748325;  // std dev = 0.468, 184.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=60 */
%   | | else if ( follows(F, A), follows(G, F) )
%   | | | then return 0.26082672789068373;  // std dev = 2.802, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.13340049686487113;  // std dev = 3.945, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | else return 0.10599043351194953;  // std dev = 0.459, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   else if ( follows(H, A) )
%   | then if ( follows(H, I), follows(I, A) )
%   | | then return 0.25241254471168173;  // std dev = 0.497, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0.14664230641821385;  // std dev = 0.471, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | else if ( follows(A, J) )
%   | | then if ( follows(J, K), follows(A, K) )
%   | | | then return 0.14097379007832636;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.21967071558472354;  // std dev = 2.304, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else return 0.27534454512227924;  // std dev = 0.499, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(A, C), tweets(A, E) )
%   | then if ( follows(D, A), follows(C, D) )
%   | | then return 0.1448476301936289;  // std dev = 0.479, 106.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=38 */
%   | | else return 0.11956664465179147;  // std dev = 0.473, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
%   | else return 0.08668518883468458;  // std dev = 0.464, 123.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=38 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( tweets(A, H), follows(A, G) )
%   | | then return 0.08898566878104897;  // std dev = 0.459, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( follows(A, G), follows(G, I) )
%   | | | then return 0.2847857907259987;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.16576328314363054;  // std dev = 3.513, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | else if ( follows(A, J) )
%   | | then return 0.07675867510612519;  // std dev = 0.454, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.16246607315333061;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.15132780552399508;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, C), follows(D, A) )
%   | then if ( tweets(A, E), tweets(C, E) )
%   | | then if ( tweets(D, F), follows(G, D) )
%   | | | then return 0.13643377557443212;  // std dev = 5.875, 148.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=55 */
%   | | | else return 0.3638555727074874;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( follows(A, C) )
%   | | | then return 0.10942660697526184;  // std dev = 2.259, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return -0.03648972104175493;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( tweets(A, H), tweets(C, H) )
%   | | then return 0.05096460115371561;  // std dev = 0.456, 101.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=30 */
%   | | else if ( follows(A, I), follows(C, I) )
%   | | | then return 0.1039751234880812;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.5828599944641171;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( follows(A, J), follows(J, K) )
%   | then return 0.08523186744989668;  // std dev = 0.470, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | else return 0.039161605706205194;  // std dev = 0.451, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then return 0.054077234589070614;  // std dev = 0.465, 337.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=107 */
%   else if ( tweets(A, E) )
%   | then if ( follows(A, F), follows(F, G) )
%   | | then if ( tweets(F, E), follows(G, F) )
%   | | | then return 0.10510793474785422;  // std dev = 3.209, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.24791943588503992;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( follows(A, H) )
%   | | | then return 0.2858164494654756;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12811065966100257;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J), follows(J, I) )
%   | | | then return 0.11580746732229144;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.18746491729916945;  // std dev = 2.447, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.04887292241381992;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1637359188216143;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A) )
%   | then if ( follows(E, D), tweets(D, C) )
%   | | then return 0.06762591348564177;  // std dev = 0.474, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
%   | | else return 0.27640218982572934;  // std dev = 0.501, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.03675722181010707;  // std dev = 0.462, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( follows(G, A), follows(F, A) )
%   | | then return 0.08452435494654527;  // std dev = 0.482, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( follows(A, G) )
%   | | | then return 0.21502167811659675;  // std dev = 2.648, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.12722388816944263;  // std dev = 2.107, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( follows(A, H) )
%   | | then return 0.0875450210416336;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.08263330436049898;  // std dev = 1.339, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.042508332756941325;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(C, A), follows(D, A) )
%   | then return 0.09885564085654888;  // std dev = 0.489, 130.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=51 */
%   | else return 0.006224914323761169;  // std dev = 0.464, 230.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=71 */
%   else if ( follows(A, E) )
%   | then if ( tweets(A, F) )
%   | | then if ( follows(G, A), tweets(G, F) )
%   | | | then return 0.0637740277274879;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2029116411896876;  // std dev = 1.173, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.40429101385946825;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(I, A) )
%   | | | then return 0.06249561826376044;  // std dev = 3.038, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.13350920954358622;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.051877814485861165;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.05180433983796812;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(A, E), follows(E, C) )
%   | then if ( tweets(E, D), tweets(C, D) )
%   | | then if ( follows(C, E) )
%   | | | then return 0.029759759203459524;  // std dev = 5.769, 149.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=50 */
%   | | | else return -0.016185609729473083;  // std dev = 2.234, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else return 0.16199323512792038;  // std dev = 1.259, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( tweets(C, D) )
%   | | then if ( follows(A, F), follows(G, C) )
%   | | | then return 0.11874427436051499;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.04610446868729425;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | else return -0.13203583275187106;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( follows(H, A) )
%   | then if ( follows(A, I), follows(H, I) )
%   | | then return -0.027663247695172283;  // std dev = 0.451, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else return 0.32947199515398334;  // std dev = 1.132, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.013248598362580766;  // std dev = 0.456, 161.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=48 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), follows(A, E) )
%   | then return 0.020113241015222362;  // std dev = 0.472, 228.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=76 */
%   | else if ( follows(A, F), follows(F, G) )
%   | | then if ( tweets(F, C), follows(G, F) )
%   | | | then return 0.13374196450023243;  // std dev = 3.069, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return -0.033452074189450724;  // std dev = 1.474, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( follows(A, H) )
%   | | | then return -0.06267280217391649;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.06120142545907594;  // std dev = 3.395, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   else if ( follows(I, A) )
%   | then if ( follows(A, J), follows(I, J) )
%   | | then return 0.03851534249821642;  // std dev = 0.479, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | else if ( follows(A, I) )
%   | | | then return -0.19409554117174238;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.007521383699648586;  // std dev = 1.331, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return -0.021437899109168067;  // std dev = 0.467, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.381', 'seconds']
Refined model CLL: -0.391295


******************************************
Best model found
******************************************
Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 50.495 

Total Inference Time : 16.074323892593384 

Total revision time: 69.58642366218567
Best scored revision CLL: -0.164298


Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 69.64263131904602 

Total Inference Time : 16.074323892593384 

Starting experiment 33_nell_sports_twitter 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.105
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.481, 348.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 375.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 367.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.476, 364.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.466, 394.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 371.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.478, 358.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 391.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 367.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 390.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.613', 'seconds']
Parameter learned model CLL:-0.166931 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 159.018
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), tweets(D, C) )
%   | then if ( follows(D, E) )
%   | | then return 0.17579599392304193;  // std dev = 0.466, 255.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=81 */
%   | | else return 0.10814893509951236;  // std dev = 0.433, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else return 0.1359267128772901;  // std dev = 0.448, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   else if ( follows(F, A), follows(A, F) )
%   | then if ( follows(A, G), follows(F, G) )
%   | | then if ( follows(G, A) )
%   | | | then return 0.20430278125335852;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.15444523139580865;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( follows(E, C), tweets(E, F) )
%   | then if ( tweets(A, F), follows(D, A) )
%   | | then if ( tweets(C, F) )
%   | | | then return 0.21106470562046167;  // std dev = 6.516, 181.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=68 */
%   | | | else return 0.40964741445143177;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( tweets(A, F) )
%   | | | then return 0.41069981500712716;  // std dev = 1.304, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.2465719453926634;  // std dev = 3.342, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | else return 0.07955387618488086;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( tweets(A, G), follows(A, H) )
%   | then if ( follows(A, I), follows(H, I) )
%   | | then return 0.5853740978856559;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( follows(H, J), tweets(H, G) )
%   | | | then return 0.08537409788565586;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.22851614522884264;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return 0.11511836220159295;  // std dev = 0.461, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( tweets(A, E), follows(D, A) )
%   | then if ( tweets(D, E) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.12458133441909233;  // std dev = 6.384, 187.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=60 */
%   | | | else return 0.07698789431741401;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.2860631556199988;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( follows(F, A), follows(F, C) )
%   | | then return 0.0715066924655503;  // std dev = 0.451, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | else return 0.1295091389623396;  // std dev = 0.471, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   else if ( tweets(A, G) )
%   | then if ( follows(H, A), follows(A, I) )
%   | | then return 0.03264568090103293;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.2564866566494975;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.20571512022256544;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return 0.4018919484025461;  // std dev = 0.490, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A), follows(D, C) )
%   | then if ( follows(C, E), follows(A, E) )
%   | | then if ( follows(D, E), follows(A, D) )
%   | | | then return 0.13181270356591585;  // std dev = 6.355, 178.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=62 */
%   | | | else return 0.07031192529449688;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | else if ( tweets(D, F), tweets(C, F) )
%   | | | then return 0.5010594116082692;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.21943346430042043;  // std dev = 1.811, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( follows(C, G), tweets(A, H) )
%   | | then if ( tweets(C, H), follows(G, C) )
%   | | | then return 0.06557108039023896;  // std dev = 2.670, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return -0.03970217153259298;  // std dev = 1.550, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.34116938190832863;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.09261677406841336;  // std dev = 2.657, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   else return 0.1739746022307275;  // std dev = 0.486, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, D), tweets(C, E) )
%   | then if ( follows(D, C), tweets(D, F) )
%   | | then if ( follows(C, D), tweets(C, F) )
%   | | | then return 0.09844265804328653;  // std dev = 6.910, 214.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=72 */
%   | | | else return 0.2489751315095568;  // std dev = 1.854, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( follows(C, D), follows(G, C) )
%   | | | then return -0.027595621107866147;  // std dev = 2.312, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.08376270397383659;  // std dev = 2.610, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | else return 0.21005317541015658;  // std dev = 0.494, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   else if ( tweets(A, H) )
%   | then if ( follows(A, I), follows(I, J) )
%   | | then if ( tweets(I, H), follows(J, I) )
%   | | | then return 0.08994141059676537;  // std dev = 2.025, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.25717630313760154;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.011538075938118227;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return -0.015499632360955081;  // std dev = 0.453, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(A, D), follows(D, C) )
%   | then if ( follows(D, A), tweets(D, E) )
%   | | then if ( tweets(C, E) )
%   | | | then return 0.08516897479215389;  // std dev = 6.008, 160.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=55 */
%   | | | else return 0.1488279168501214;  // std dev = 1.554, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( tweets(C, F), tweets(D, F) )
%   | | | then return 0.06536513539412998;  // std dev = 3.200, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.04047772074124567;  // std dev = 1.469, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( follows(G, A), follows(G, C) )
%   | | then return 0.3932638015273098;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.10210693830448828;  // std dev = 2.239, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.30295140581239544;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( follows(I, A) )
%   | then return -0.034896456265765485;  // std dev = 0.433, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | else return 0.004169761979375738;  // std dev = 0.451, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( tweets(D, E), follows(F, D) )
%   | then if ( follows(A, D) )
%   | | then if ( tweets(F, C), follows(F, A) )
%   | | | then return 0.06707737473806949;  // std dev = 5.679, 143.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=49 */
%   | | | else return 0.01569317884677457;  // std dev = 3.921, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | else if ( follows(F, A) )
%   | | | then return 0.07772474747841442;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.18684539313908072;  // std dev = 1.487, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return -0.05404090004165105;  // std dev = 0.419, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( tweets(A, G) )
%   | then return -0.017755482941457207;  // std dev = 0.442, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | else if ( follows(H, A), follows(A, H) )
%   | | then return 0.003801759047763331;  // std dev = 0.462, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.16418502630916557;  // std dev = 1.350, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.14259006601232121;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), tweets(C, E) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( tweets(A, F), follows(C, A) )
%   | | | then return 0.07351348283572438;  // std dev = 5.690, 140.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=51 */
%   | | | else return 0.11192064295698906;  // std dev = 4.007, 68.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */
%   | | else if ( follows(D, A) )
%   | | | then return -0.13642238314456284;  // std dev = 1.796, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.05250564359333127;  // std dev = 4.112, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(A, G) )
%   | | | then return -0.130068678960801;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.061447568503871605;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tweets(A, H) )
%   | | | then return -0.0100132990098421;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -1.7234528916972684E-4;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   else return 0.2857332657382283;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( tweets(A, D) )
%   | then if ( follows(A, E), follows(E, C) )
%   | | then if ( follows(C, E) )
%   | | | then return 0.04732891735420956;  // std dev = 6.249, 171.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=60 */
%   | | | else return 0.1353502881885707;  // std dev = 1.281, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 3.582219030655236E-5;  // std dev = 0.470, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | else return -0.01715506409744205;  // std dev = 0.464, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( tweets(A, H), follows(A, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.17148040656202101;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.048718745102587155;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tweets(A, I), tweets(F, I) )
%   | | | then return 0.17116274418135605;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.1260997346240159;  // std dev = 1.488, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0.040426226928253026;  // std dev = 0.474, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(D, E) )
%   | then if ( follows(E, A), tweets(D, C) )
%   | | then if ( follows(A, E), follows(E, D) )
%   | | | then return 0.044325617733103416;  // std dev = 6.063, 160.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=57 */
%   | | | else return -0.1331007009465253;  // std dev = 1.971, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( follows(D, A) )
%   | | | then return 0.13614618845105705;  // std dev = 2.479, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.04572410500831707;  // std dev = 2.709, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | else return 0.2538622534903951;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( follows(F, A), follows(A, F) )
%   | then return 0.03323635806417347;  // std dev = 0.469, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | else if ( follows(A, G), follows(H, A) )
%   | | then return -0.3035825669388267;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return -0.11366580584928579;  // std dev = 1.518, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.004586513438095986;  // std dev = 3.034, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '3.321', 'seconds']
Refined model CLL: -0.396927


******************************************
Best model found
******************************************
Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 159.018 

Total Inference Time : 48.371655225753784 

Total revision time: 209.98367056655883
Best scored revision CLL: -0.166931


Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 210.0196701030731 

Total Inference Time : 48.371655225753784 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.175
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 470.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 485.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 475.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 460.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 464.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.480, 433.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 464.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.478, 441.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.463, 503.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 462.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.290', 'seconds']
Parameter learned model CLL:-0.164298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 53.205
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), follows(D, A) )
%   | then return 0.20332660007413297;  // std dev = 0.475, 197.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=68 */
%   | else return 0.17358517671024978;  // std dev = 0.465, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
%   else if ( follows(A, E), follows(F, A) )
%   | then if ( follows(E, F), follows(E, A) )
%   | | then return 0.16249676118646889;  // std dev = 0.460, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( follows(A, F), follows(E, F) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.24276431971489687;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(A, H), follows(G, H) )
%   | | | then return 0.1914822684328457;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.28672036367094095;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.20814893509951235;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), follows(E, D) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(D, E), tweets(D, C) )
%   | | | then return 0.18029141981557759;  // std dev = 5.876, 152.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=53 */
%   | | | else return 0.4679165695981114;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else return 0.14545986423430987;  // std dev = 0.463, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | else if ( follows(A, F), follows(F, G) )
%   | | then if ( follows(G, F), follows(A, G) )
%   | | | then return 0.14337022109047332;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.21803085457463656;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( follows(A, H) )
%   | | | then return 0.23567791339816577;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.28012235784261036;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( follows(A, I) )
%   | then return 0.12914870844376158;  // std dev = 0.461, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | else return 0.16302899678401922;  // std dev = 0.471, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), follows(D, A) )
%   | then if ( follows(D, E), follows(E, A) )
%   | | then if ( follows(E, D), tweets(E, C) )
%   | | | then return 0.14439323988157074;  // std dev = 4.876, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
%   | | | else return 0.030190000972913522;  // std dev = 2.453, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( follows(A, F), follows(F, D) )
%   | | | then return 0.19556051343205755;  // std dev = 3.013, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.17018512804974295;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( follows(G, A), follows(A, H) )
%   | | then if ( tweets(G, C) )
%   | | | then return 0.24841862695565878;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.06471677830145217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.14805011163478568;  // std dev = 3.055, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.1681643578507466;  // std dev = 3.990, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   else return 0.09945285106485109;  // std dev = 0.455, 140.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=41 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then return 0.11376308418356565;  // std dev = 0.472, 245.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=82 */
%   else if ( follows(D, A), follows(E, D) )
%   | then if ( tweets(A, F), tweets(E, F) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.15101029067379837;  // std dev = 2.883, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.2789240373120244;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( follows(A, G) )
%   | | | then return 0.46199240985122475;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2865693967582954;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( follows(A, H), tweets(A, I) )
%   | | then if ( follows(H, J), tweets(H, I) )
%   | | | then return 0.11326069897127017;  // std dev = 3.648, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0.20196917805485473;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.19111128656377335;  // std dev = 3.094, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.14869453970621901;  // std dev = 2.637, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), follows(D, E) )
%   | then return 0.0863938903385748;  // std dev = 0.472, 280.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=93 */
%   | else return 0.04886720370288551;  // std dev = 0.458, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   else if ( follows(F, A) )
%   | then if ( tweets(F, G) )
%   | | then if ( follows(A, H), follows(H, F) )
%   | | | then return 0.1082205738642306;  // std dev = 2.707, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.17880775744440242;  // std dev = 1.861, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return -0.09595357226079662;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J), follows(J, K) )
%   | | | then return 0.12367010795737017;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.18012055833350576;  // std dev = 2.273, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( follows(A, L) )
%   | | | then return 0.0347670619676238;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.15395797974967346;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(D, A), follows(D, C) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then if ( follows(C, E), follows(A, D) )
%   | | | then return 0.1352993297366469;  // std dev = 4.495, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   | | | else return 0.25329108229260056;  // std dev = 2.642, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.01921753760692625;  // std dev = 0.457, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( follows(A, F), follows(F, C) )
%   | | then return 0.05277862138723799;  // std dev = 0.468, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | else if ( follows(A, G), follows(C, G) )
%   | | | then return 0.205646915475049;  // std dev = 1.799, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.06406166223713611;  // std dev = 2.183, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   else if ( follows(A, H), tweets(A, I) )
%   | then return 0.04196323916920484;  // std dev = 0.463, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
%   | else if ( tweets(A, J) )
%   | | then return 0.11679393308096254;  // std dev = 0.481, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | else return 0.04814053833421624;  // std dev = 0.468, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(D, E), follows(A, E) )
%   | then if ( follows(F, A), tweets(F, C) )
%   | | then if ( follows(F, D), tweets(D, C) )
%   | | | then return 0.04502110468733909;  // std dev = 6.079, 167.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=55 */
%   | | | else return 0.22324182137092416;  // std dev = 2.180, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else return -0.024767734138116435;  // std dev = 0.426, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | else if ( follows(D, G), tweets(D, C) )
%   | | then if ( tweets(G, C) )
%   | | | then return 0.10600456375494671;  // std dev = 3.063, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return 0.21306715466607262;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( follows(H, A) )
%   | | | then return 0.11371434968118602;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.31621903845677857;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( follows(I, A) )
%   | then return 0.007015715741057874;  // std dev = 0.455, 111.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
%   | else return 0.0739718781911992;  // std dev = 0.479, 76.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=27 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(D, E), follows(A, E) )
%   | then return -0.004888812070369242;  // std dev = 0.455, 258.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=75 */
%   | else if ( follows(D, F), tweets(D, C) )
%   | | then if ( follows(G, A), follows(G, D) )
%   | | | then return -0.003503980619637822;  // std dev = 1.168, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.11573752111065554;  // std dev = 2.982, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | else return -0.05515017265308767;  // std dev = 0.448, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   else if ( tweets(A, H), follows(I, A) )
%   | then return 0.18281704643279267;  // std dev = 0.496, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | else if ( follows(A, J) )
%   | | then if ( follows(K, A) )
%   | | | then return 0.024728907752745517;  // std dev = 3.218, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return 0.07535148051781149;  // std dev = 3.176, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( follows(L, A) )
%   | | | then return 0.06150622915114987;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.010084517852071418;  // std dev = 2.759, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(D, A), follows(A, D) )
%   | then if ( tweets(A, E), tweets(D, E) )
%   | | then if ( follows(A, F), follows(D, F) )
%   | | | then return 0.023036780889103978;  // std dev = 6.132, 174.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=55 */
%   | | | else return -0.07454349563280009;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( follows(C, A) )
%   | | | then return 0.09457067538719499;  // std dev = 2.229, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.04087058251753878;  // std dev = 1.610, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( follows(A, D), follows(C, A) )
%   | | | then return 0.22653303808056105;  // std dev = 1.636, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.05581402314898035;  // std dev = 2.853, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else if ( follows(A, D), follows(D, C) )
%   | | | then return 0.06129301358108561;  // std dev = 2.843, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.01669424145884558;  // std dev = 3.819, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   else return -0.020395968228143293;  // std dev = 0.451, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(D, A) )
%   then if ( follows(D, C), follows(C, E) )
%   | then return 0.025655840753026925;  // std dev = 0.469, 239.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=79 */
%   | else return -0.08342659538765093;  // std dev = 0.432, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.1805501687697527;  // std dev = 2.592, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.005694305406707456;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.05128392109043066;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.07255849784668036;  // std dev = 3.636, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0.13444288365228704;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.05822081011721105;  // std dev = 2.952, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.03372757687594733;  // std dev = 2.472, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.785', 'seconds']
Refined model CLL: -0.38694


******************************************
Best model found
******************************************
Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 53.205 

Total Inference Time : 16.993491172790527 

Total revision time: 73.12945020675659
Best scored revision CLL: -0.164298


Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 73.16544974327087 

Total Inference Time : 16.993491172790527 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.08
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 371.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 378.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 371.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 374.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 369.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 371.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 388.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 389.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.464, 401.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 383.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.577', 'seconds']
Parameter learned model CLL:-0.166931 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 558.858
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D) )
%   | then if ( tweets(A, E), follows(D, A) )
%   | | then if ( tweets(C, F), tweets(D, F) )
%   | | | then return 0.1969467493071639;  // std dev = 6.403, 183.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=62 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( follows(G, A), follows(D, G) )
%   | | | then return 0.17336632640385882;  // std dev = 4.456, 92.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
%   | | | else return 0.14386322081379804;  // std dev = 2.928, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( tweets(A, H) )
%   | | then return 0.3126943896449669;  // std dev = 0.498, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.23314893509951234;  // std dev = 0.484, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   else return 0.11621345122854462;  // std dev = 0.438, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then return 0.16669490426554706;  // std dev = 0.472, 203.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=68 */
%   | else return 0.1017058277624028;  // std dev = 0.443, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   else if ( tweets(A, E), follows(A, F) )
%   | then if ( follows(F, G), follows(H, A) )
%   | | then if ( follows(F, H) )
%   | | | then return 0.08244468654048864;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4373122701671147;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.12588307858069925;  // std dev = 0.456, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(K, A) )
%   | | | then return 0.16904129712192592;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4397187297348978;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.22435766275083108;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.227334239218108;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(A, D), tweets(A, E) )
%   | then if ( follows(D, C) )
%   | | then if ( tweets(C, F), tweets(D, F) )
%   | | | then return 0.1528280183642648;  // std dev = 6.474, 185.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=64 */
%   | | | else return 0.04475710338948241;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.04465866917271526;  // std dev = 0.428, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | else if ( tweets(A, G) )
%   | | then if ( tweets(C, G), follows(C, A) )
%   | | | then return 0.22320677791333013;  // std dev = 1.705, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.2835218578738721;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( follows(A, D) )
%   | | | then return 0.21040079347747506;  // std dev = 3.308, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return 0.060782070109313684;  // std dev = 1.926, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   else if ( follows(H, A) )
%   | then return 0.052600104834309415;  // std dev = 0.429, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | else return 0.1062530949063967;  // std dev = 0.464, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), tweets(D, C) )
%   | then if ( follows(E, D), follows(E, A) )
%   | | then if ( follows(D, A), tweets(E, F) )
%   | | | then return 0.18527324766590178;  // std dev = 5.419, 122.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=49 */
%   | | | else return 0.09748452554852532;  // std dev = 3.788, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.2091468654962896;  // std dev = 1.855, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.17833606736720772;  // std dev = 2.582, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | else if ( follows(H, A) )
%   | | then return 0.25189244603662797;  // std dev = 0.496, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return 0.11006694817807677;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( follows(I, A), follows(A, I) )
%   | then if ( follows(A, J), follows(J, I) )
%   | | then return 0.10741864570658917;  // std dev = 0.466, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else return 0.24598983844614997;  // std dev = 0.496, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0.08068467396948902;  // std dev = 0.465, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(E, A), follows(E, C) )
%   | then if ( tweets(E, F) )
%   | | then if ( follows(A, C) )
%   | | | then return 0.14928461840016302;  // std dev = 5.921, 147.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=58 */
%   | | | else return 0.23388419803976254;  // std dev = 2.175, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return 0.026003246751807013;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( tweets(G, D), follows(G, C) )
%   | | then return 0.07005007002785192;  // std dev = 0.463, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | | else return 0.24940427482286429;  // std dev = 1.236, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( tweets(A, H) )
%   | then if ( tweets(I, H), follows(A, I) )
%   | | then if ( follows(A, J), follows(I, J) )
%   | | | then return 0.2745932342742309;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.05103991622963606;  // std dev = 2.504, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else return -0.04293321648359834;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.06381551687655844;  // std dev = 0.462, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(E, C), tweets(E, D) )
%   | then if ( tweets(A, F), follows(E, A) )
%   | | then if ( follows(C, E), tweets(A, D) )
%   | | | then return 0.06756213704544625;  // std dev = 5.714, 144.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=50 */
%   | | | else return -0.013774141868592618;  // std dev = 2.443, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( follows(A, E), tweets(A, D) )
%   | | | then return 0.16520101041746313;  // std dev = 2.309, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.08125349729302617;  // std dev = 4.743, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | else return -0.08003882887847101;  // std dev = 0.410, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   else if ( tweets(A, G) )
%   | then if ( tweets(H, G), follows(A, H) )
%   | | then if ( follows(A, I), follows(H, I) )
%   | | | then return 0.05883516057453347;  // std dev = 1.410, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.2414572906288877;  // std dev = 2.113, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.014875535364567975;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.06423751463670901;  // std dev = 0.465, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( tweets(A, D), tweets(C, E) )
%   | | then return 0.053163743190204525;  // std dev = 0.474, 209.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=71 */
%   | | else return 0.02285574587242428;  // std dev = 0.453, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | else return -0.0157675873406122;  // std dev = 0.447, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   else if ( tweets(A, F) )
%   | then if ( follows(A, G), follows(G, H) )
%   | | then if ( follows(A, H), follows(H, G) )
%   | | | then return -0.010443627452365696;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.17051522573593697;  // std dev = 1.786, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return -0.046719430361238275;  // std dev = 0.442, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J) )
%   | | | then return 0.022725583384849386;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.053824301566592764;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.16442470480231444;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(C, E), follows(E, A) )
%   | then if ( tweets(E, D) )
%   | | then if ( follows(E, C), tweets(A, F) )
%   | | | then return 0.045691086764422253;  // std dev = 5.942, 156.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=54 */
%   | | | else return -0.022455886911063726;  // std dev = 2.991, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( follows(A, E), tweets(A, D) )
%   | | | then return 0.00515272672931225;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3090601548991874;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( follows(A, G), follows(C, G) )
%   | | then if ( follows(G, H), follows(H, C) )
%   | | | then return 0.11405943404193515;  // std dev = 3.488, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0.025121861981182086;  // std dev = 1.661, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( tweets(I, D), follows(I, C) )
%   | | | then return 0.33383604247590826;  // std dev = 1.734, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return -0.01387299726814717;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.010352185041443864;  // std dev = 0.454, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( follows(A, E), tweets(E, C) )
%   | then if ( follows(D, E), tweets(D, F) )
%   | | then return 0.024647747448317704;  // std dev = 0.470, 202.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=67 */
%   | | else return -0.039130021552915624;  // std dev = 0.464, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else return -0.028243560150722616;  // std dev = 0.458, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   else if ( follows(G, A) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then if ( tweets(G, I), tweets(H, I) )
%   | | | then return 0.14740031739696893;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.01640752183395307;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.02030746306766742;  // std dev = 0.460, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | else if ( tweets(A, J) )
%   | | then if ( follows(A, K), follows(K, L) )
%   | | | then return 0.07465732114030989;  // std dev = 2.213, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.006453935157424566;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.026275539085832817;  // std dev = 0.467, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( follows(D, E), tweets(D, F) )
%   | then if ( follows(G, C), tweets(G, F) )
%   | | then if ( follows(C, D), tweets(C, F) )
%   | | | then return 0.0637723385124875;  // std dev = 6.996, 209.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=78 */
%   | | | else return 0.013081592269409614;  // std dev = 3.002, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | else if ( follows(E, C) )
%   | | | then return 0.2252920325805836;  // std dev = 0.981, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03876810564366858;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.10542557556219001;  // std dev = 0.399, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else if ( follows(A, H), follows(H, I) )
%   | then if ( tweets(A, J), follows(A, I) )
%   | | then if ( follows(I, H) )
%   | | | then return 0.025826212568564155;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.010112711271401861;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.03797558984170673;  // std dev = 0.459, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else return 0.010060753531098561;  // std dev = 0.463, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '37.623', 'seconds']
Refined model CLL: -0.394921


******************************************
Best model found
******************************************
Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 558.858 

Total Inference Time : 77.70210027694702 

Total revision time: 639.0316908721924
Best scored revision CLL: -0.166931


Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 639.1092300777435 

Total Inference Time : 77.70210027694702 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.282
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 486.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.478, 440.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 460.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 470.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 474.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 472.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 466.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 462.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 469.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.462, 504.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.397', 'seconds']
Parameter learned model CLL:-0.164298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 77.265
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(E, C), tweets(C, D) )
%   | then return 0.18891816586874235;  // std dev = 0.470, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
%   | else if ( follows(A, F), follows(C, F) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( follows(G, A), tweets(G, H) )
%   | then if ( follows(G, I), follows(I, A) )
%   | | then return 0.35814893509951234;  // std dev = 0.500, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( follows(G, J), follows(A, J) )
%   | | | then return 0.17393840878372288;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( follows(A, K), follows(K, L) )
%   | | then return 0.17296374991432573;  // std dev = 0.464, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | | else if ( tweets(A, M) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(A, D), follows(D, E) )
%   | then return 0.15144237489459667;  // std dev = 0.466, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
%   | else if ( tweets(A, F), tweets(D, F) )
%   | | then return 0.17936052473822525;  // std dev = 0.476, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | else return 0.25392548152203903;  // std dev = 0.493, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   else if ( follows(A, G) )
%   | then if ( tweets(A, H) )
%   | | then if ( follows(I, A) )
%   | | | then return 0.34174096105023744;  // std dev = 0.995, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.30874113578563495;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.1665388245648817;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( tweets(A, J) )
%   | | then if ( follows(K, A) )
%   | | | then return 0.15174334887550084;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.38016970721420645;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.14170461403904847;  // std dev = 0.463, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(A, D), follows(E, A) )
%   | then if ( tweets(E, D) )
%   | | then if ( follows(F, E), follows(C, F) )
%   | | | then return 0.12788821005605217;  // std dev = 6.915, 221.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=70 */
%   | | | else return 0.35331424991509913;  // std dev = 1.315, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.009824880583949999;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( follows(C, A) )
%   | | then if ( follows(A, G), follows(G, C) )
%   | | | then return 0.17792162168103104;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.46033112007441646;  // std dev = 1.181, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( follows(C, H), follows(A, H) )
%   | | | then return 0.10507567322664613;  // std dev = 3.467, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return 0.17517443266988875;  // std dev = 3.624, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else if ( follows(I, A), tweets(A, J) )
%   | then return 0.1370128723282552;  // std dev = 0.469, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | else return 0.036438373176937544;  // std dev = 0.435, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(C, A), tweets(A, E) )
%   | then if ( follows(A, D) )
%   | | then if ( tweets(C, E), follows(D, C) )
%   | | | then return 0.15732734749228175;  // std dev = 5.741, 142.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=52 */
%   | | | else return 0.24060457695091433;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return 0.06759556868874501;  // std dev = 0.449, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( follows(F, A), tweets(F, G) )
%   | | then return 0.020160533822084548;  // std dev = 0.442, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | | else if ( follows(A, D), follows(D, C) )
%   | | | then return 0.08317814970457713;  // std dev = 2.928, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.23746270959211804;  // std dev = 3.449, 48.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=22 */
%   else if ( tweets(A, H) )
%   | then return 0.044475678501915666;  // std dev = 0.444, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | else if ( follows(A, I) )
%   | | then return -0.037986582286588716;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return 0.18653872901540205;  // std dev = 0.486, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( tweets(A, E), follows(A, C) )
%   | then if ( follows(D, A), tweets(D, E) )
%   | | then if ( tweets(C, F), follows(A, D) )
%   | | | then return 0.09320471567168546;  // std dev = 4.977, 112.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=37 */
%   | | | else return 0.21848918019495003;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( follows(A, D), tweets(D, E) )
%   | | | then return 0.14383215306106892;  // std dev = 3.148, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.166010719451799;  // std dev = 2.441, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else if ( tweets(C, G) )
%   | | then if ( follows(A, H), tweets(A, G) )
%   | | | then return 0.056722980795060884;  // std dev = 1.875, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.1204185609635158;  // std dev = 4.540, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
%   | | else return -0.043597661498052734;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( tweets(A, I) )
%   | then return 0.04903324034822408;  // std dev = 0.461, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | else return 0.09079447517047358;  // std dev = 0.473, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( tweets(D, C), follows(D, A) )
%   | then if ( follows(A, E), follows(D, E) )
%   | | then if ( follows(E, F), tweets(E, G) )
%   | | | then return 0.06628344578218749;  // std dev = 6.514, 193.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=63 */
%   | | | else return -0.0481969540071557;  // std dev = 1.544, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( follows(D, H), follows(H, A) )
%   | | | then return 0.06555174185627848;  // std dev = 2.997, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.2789765078397002;  // std dev = 2.057, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(I, J) )
%   | | | then return 0.08659404947512171;  // std dev = 3.634, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.4695988433777194;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.025119265048302294;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( follows(A, K), follows(K, A) )
%   | then return 0.02951125733379454;  // std dev = 0.459, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else return 0.06676196313011439;  // std dev = 0.469, 83.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=27 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), follows(E, D) )
%   | then if ( follows(E, A), follows(D, E) )
%   | | then if ( tweets(D, F), tweets(E, F) )
%   | | | then return 0.12854177299466374;  // std dev = 5.393, 122.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=48 */
%   | | | else return 0.3210720507976224;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( follows(A, D) )
%   | | | then return 0.016304713971754585;  // std dev = 4.573, 99.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=30 */
%   | | | else return 0.06611914578271036;  // std dev = 2.157, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( tweets(G, C), follows(H, G) )
%   | | | then return 0.04703588001372899;  // std dev = 3.508, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.3195501036181797;  // std dev = 1.076, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( follows(A, I) )
%   | | | then return -0.11684137847659128;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.07594331070736025;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else return 0.021896292812295406;  // std dev = 0.455, 139.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=41 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), follows(A, D) )
%   | then return 0.03367506396350191;  // std dev = 0.472, 206.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=68 */
%   | else if ( follows(A, E) )
%   | | then return 0.08808852060227651;  // std dev = 0.486, 76.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=29 */
%   | | else return 0.04607689502398928;  // std dev = 0.473, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   else if ( follows(F, A), tweets(F, G) )
%   | then if ( follows(F, H), follows(H, A) )
%   | | then return 0.24775769805256065;  // std dev = 0.498, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( follows(A, I), follows(F, I) )
%   | | | then return 0.19191224087250458;  // std dev = 1.764, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.06710099514923785;  // std dev = 1.379, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( follows(A, J), follows(J, K) )
%   | | then return 0.029251756323187352;  // std dev = 0.468, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( follows(A, L) )
%   | | | then return 0.4216442445623025;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1324161940319328;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(C, E), follows(E, A) )
%   | then if ( tweets(E, D), tweets(C, F) )
%   | | then if ( follows(A, C), follows(E, C) )
%   | | | then return 0.07742078562545751;  // std dev = 4.599, 90.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=34 */
%   | | | else return 0.020899806154646414;  // std dev = 3.881, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | else return -0.048687068815575364;  // std dev = 0.456, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( tweets(C, D) )
%   | | then return 0.0133998978658761;  // std dev = 0.463, 96.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
%   | | else return -0.11095208032187402;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( follows(A, G), follows(G, A) )
%   | then return -0.03889191337458195;  // std dev = 0.454, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | else if ( tweets(A, H) )
%   | | then return -0.022691357875311284;  // std dev = 0.456, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.14574834187924923;  // std dev = 1.492, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.06216965349638157;  // std dev = 3.855, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D) )
%   | then if ( follows(E, A) )
%   | | then return -0.006051878931332523;  // std dev = 0.461, 291.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=89 */
%   | | else return 0.04431846323998429;  // std dev = 0.473, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | else return -0.06316505327707363;  // std dev = 0.459, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   else if ( follows(F, A), tweets(A, G) )
%   | then if ( follows(F, H), follows(H, A) )
%   | | then if ( tweets(F, G) )
%   | | | then return 0.12399424918529718;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.01149994610978137;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.013134659008621615;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(I, A) )
%   | | then return -0.10952886330578084;  // std dev = 0.442, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( tweets(A, J) )
%   | | | then return -7.768363710034019E-4;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.14220354703969623;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29.467', 'seconds']
Refined model CLL: -0.383131


******************************************
Best model found
******************************************
Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 77.265 

Total Inference Time : 32.333837270736694 

Total revision time: 112.58876831245422
Best scored revision CLL: -0.164298


Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 112.66630751800537 

Total Inference Time : 32.333837270736694 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.091
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 376.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.483, 340.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 377.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.466, 396.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.465, 398.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 389.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 386.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 368.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.476, 364.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 372.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.731', 'seconds']
Parameter learned model CLL:-0.166931 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 177.105
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(E, A), tweets(E, F) )
%   | then if ( follows(E, C), follows(A, D) )
%   | | then if ( follows(A, E), follows(E, D) )
%   | | | then return 0.23851703325902276;  // std dev = 6.198, 163.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=62 */
%   | | | else return 0.18018283340459712;  // std dev = 3.589, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | else if ( follows(C, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.26555634250691973;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | else if ( follows(A, D), follows(D, C) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( follows(C, A) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.16849376268571928;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   else if ( tweets(A, G), follows(A, H) )
%   | then return 0.10814893509951236;  // std dev = 0.433, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else return 0.16926004621062346;  // std dev = 0.463, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), follows(A, D) )
%   | then if ( follows(E, A), follows(E, C) )
%   | | then if ( follows(D, E) )
%   | | | then return 0.20055492290879123;  // std dev = 6.081, 158.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=59 */
%   | | | else return 0.1374769038506317;  // std dev = 3.908, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | else if ( tweets(A, F), follows(D, G) )
%   | | | then return 0.09057760631287551;  // std dev = 1.885, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.15976598038947312;  // std dev = 1.809, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( follows(C, H), follows(I, A) )
%   | | then if ( tweets(A, J), tweets(I, J) )
%   | | | then return 0.447655544291458;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.222655544291458;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( follows(K, A) )
%   | | | then return 0.09446743783575551;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.21573000675875736;  // std dev = 3.254, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   else return 0.07156509746083474;  // std dev = 0.424, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( tweets(D, C), follows(A, D) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then if ( follows(F, A), tweets(F, C) )
%   | | | then return 0.15056411646326787;  // std dev = 6.589, 190.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=67 */
%   | | | else return -0.013423026100142791;  // std dev = 2.007, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( follows(G, A), tweets(G, C) )
%   | | | then return 0.19432127140719516;  // std dev = 1.843, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.2396012896793482;  // std dev = 2.270, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return 0.19438372538440768;  // std dev = 0.480, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   else if ( follows(H, A) )
%   | then if ( follows(A, I), follows(H, I) )
%   | | then if ( tweets(H, J), tweets(I, K) )
%   | | | then return 0.12990180954757827;  // std dev = 3.384, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return -0.04221705377331191;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.45447888475660553;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.036251132388758156;  // std dev = 0.421, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(A, E), follows(C, E) )
%   | then if ( follows(D, A), follows(C, D) )
%   | | then return 0.11672983343664936;  // std dev = 0.475, 175.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=60 */
%   | | else if ( follows(A, C), tweets(C, F) )
%   | | | then return 0.25392349792424035;  // std dev = 3.313, 44.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=21 */
%   | | | else return 0.11627753289047267;  // std dev = 2.293, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else return 0.05820248900049414;  // std dev = 0.460, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( follows(A, H), tweets(A, I) )
%   | | then if ( follows(H, G) )
%   | | | then return 0.46318860601966066;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3083378181778659;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.1237019683843271;  // std dev = 1.791, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.3033349312652492;  // std dev = 1.221, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.13457871351511635;  // std dev = 0.475, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(D, E), follows(A, E) )
%   | then if ( follows(F, A), tweets(F, C) )
%   | | then return 0.09083518555483759;  // std dev = 0.476, 194.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=67 */
%   | | else if ( follows(E, D) )
%   | | | then return 0.1697344955242409;  // std dev = 1.495, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.440972286123793;  // std dev = 0.818, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.012594052696235772;  // std dev = 0.436, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( tweets(G, I) )
%   | | then if ( follows(A, H), tweets(H, J) )
%   | | | then return 0.08435290549961731;  // std dev = 3.268, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.1985154879895994;  // std dev = 1.799, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return -0.044438334380021496;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( tweets(A, K) )
%   | | then return 0.10694175234962579;  // std dev = 0.466, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return 0.1762907831603743;  // std dev = 0.490, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( tweets(D, C), follows(D, A) )
%   | then if ( follows(E, D) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.0720088123712084;  // std dev = 6.413, 184.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=62 */
%   | | | else return 0.14879414482499453;  // std dev = 3.210, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | else return -0.11573022521119365;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( follows(F, A), tweets(F, G) )
%   | | then return 0.4760145222385036;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.0554322843470617;  // std dev = 2.436, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.25297362859383593;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( follows(J, A) )
%   | then return 0.00274007825650388;  // std dev = 0.446, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | else if ( follows(A, K), follows(K, L) )
%   | | then return 0.1446293648893895;  // std dev = 0.497, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.07752864861723269;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), follows(D, A) )
%   | then if ( tweets(D, E), tweets(C, E) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.0727615097992049;  // std dev = 6.816, 202.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=72 */
%   | | | else return -0.07196572849879115;  // std dev = 1.524, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( tweets(A, F), follows(D, C) )
%   | | | then return 0.018277099321684403;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2724242461246273;  // std dev = 1.220, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( follows(G, C), tweets(G, H) )
%   | | then if ( follows(I, A), follows(G, I) )
%   | | | then return 0.014887116753352293;  // std dev = 2.964, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return 0.07361327169814331;  // std dev = 3.845, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | else return -0.1548354652122776;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.11903911490020427;  // std dev = 0.481, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), tweets(A, D) )
%   then if ( follows(C, E), follows(A, E) )
%   | then if ( follows(F, A), follows(F, C) )
%   | | then return 0.017224362016398567;  // std dev = 0.469, 206.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=66 */
%   | | else return -0.1832865044385073;  // std dev = 0.440, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | else if ( tweets(C, D), follows(C, G) )
%   | | then if ( follows(C, A) )
%   | | | then return 0.16477811176073504;  // std dev = 1.582, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.2182953126405831;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.015095290090645398;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   else if ( follows(H, A) )
%   | then if ( follows(I, H), tweets(I, J) )
%   | | then if ( follows(A, K), follows(H, K) )
%   | | | then return 0.09437261121817686;  // std dev = 3.356, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.12009384292131757;  // std dev = 2.318, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return -0.153569511121582;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.003963397307826755;  // std dev = 0.456, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( tweets(D, E), follows(F, D) )
%   | then if ( tweets(A, E), follows(A, D) )
%   | | then return 0.011912978093759994;  // std dev = 0.468, 211.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=68 */
%   | | else return 0.0487337711953536;  // std dev = 0.470, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | else return -0.08460413811803033;  // std dev = 0.401, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else if ( follows(G, A), follows(A, G) )
%   | then if ( follows(H, G), tweets(H, I) )
%   | | then if ( follows(H, A) )
%   | | | then return 0.06924244729603565;  // std dev = 2.395, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.19454134086313463;  // std dev = 2.083, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return -0.08776655536993619;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( follows(A, J), follows(J, K) )
%   | | then return -0.03938260837425319;  // std dev = 0.456, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.1285821581085945;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.08856951734272656;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A), follows(D, C) )
%   | then if ( tweets(D, E), tweets(A, F) )
%   | | then if ( follows(C, G), follows(A, G) )
%   | | | then return 0.032900045114641265;  // std dev = 6.597, 195.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=66 */
%   | | | else return -0.15463120938756805;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( follows(C, A), follows(A, D) )
%   | | | then return 0.1964455314580858;  // std dev = 2.232, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.06129963233783824;  // std dev = 2.707, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else if ( follows(C, A) )
%   | | then if ( tweets(A, H) )
%   | | | then return -0.0630528423244437;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.14764521420241206;  // std dev = 1.271, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( tweets(A, I) )
%   | | | then return -0.008676599216935223;  // std dev = 2.878, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.050198780017261864;  // std dev = 2.399, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else return -0.02572087392775435;  // std dev = 0.447, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '44.134', 'seconds']
Refined model CLL: -0.397085


******************************************
Best model found
******************************************
Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 177.105 

Total Inference Time : 29.603694200515747 

Total revision time: 209.23066510772705
Best scored revision CLL: -0.166931


Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 209.28674592590332 

Total Inference Time : 29.603694200515747 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.247
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 467.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 481.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 482.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.463, 502.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 463.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 457.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 468.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.464, 497.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 466.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.466, 488.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.236', 'seconds']
Parameter learned model CLL:-0.164298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 56.733
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( follows(A, D), follows(D, C) )
%   | then if ( follows(D, E), follows(E, C) )
%   | | then if ( follows(D, A), follows(E, A) )
%   | | | then return 0.26991364098186404;  // std dev = 4.058, 68.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=28 */
%   | | | else return 0.21269438964496654;  // std dev = 5.017, 110.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=39 */
%   | | else return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( follows(A, F), follows(C, F) )
%   | | then if ( tweets(F, G), tweets(A, G) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( follows(I, A), follows(A, J) )
%   | then return 0.08314893509951238;  // std dev = 0.418, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | else return 0.22127742671962447;  // std dev = 0.481, 179.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=65 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(A, D), follows(C, D) )
%   | then if ( tweets(A, E), tweets(D, E) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.16403182048127643;  // std dev = 4.941, 109.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=37 */
%   | | | else return 0.2387967871585087;  // std dev = 3.178, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | else return 0.12396709190579677;  // std dev = 0.456, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( follows(A, F), follows(C, F) )
%   | | then if ( follows(F, D) )
%   | | | then return 0.24702449727959655;  // std dev = 2.151, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.8379773755721479;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.18695875138270568;  // std dev = 3.843, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | | else return 0.14008483563812651;  // std dev = 1.669, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( follows(H, A) )
%   | then return 0.09772278883431892;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.14690432181730734;  // std dev = 0.466, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( follows(D, A), follows(D, C) )
%   | then if ( follows(C, E), follows(E, A) )
%   | | then if ( tweets(C, F), tweets(E, F) )
%   | | | then return 0.2030926996313472;  // std dev = 5.071, 107.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=43 */
%   | | | else return 0.5528597808309579;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.05709156689783265;  // std dev = 0.439, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | else if ( tweets(A, G) )
%   | | then return 0.07158953787808986;  // std dev = 0.451, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
%   | | else if ( follows(A, H), follows(H, C) )
%   | | | then return 0.3120427614846286;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.13201279518692866;  // std dev = 1.633, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( follows(A, I) )
%   | then return 0.09470151365419094;  // std dev = 0.457, 157.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=46 */
%   | else if ( tweets(A, J) )
%   | | then return 0.14836249774679136;  // std dev = 0.476, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | else return 0.1016136230117667;  // std dev = 0.456, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( tweets(A, E) )
%   | then if ( follows(A, F), follows(C, F) )
%   | | then return 0.0685809143720483;  // std dev = 0.460, 215.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=65 */
%   | | else return 0.12341099202888926;  // std dev = 0.475, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | else return 0.03815195181279932;  // std dev = 0.450, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   else if ( follows(A, G), tweets(A, H) )
%   | then if ( follows(G, I), tweets(I, H) )
%   | | then if ( tweets(G, H), follows(I, G) )
%   | | | then return 0.17809773366517165;  // std dev = 3.334, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.292015390155559;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.22058681872698754;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( tweets(A, J) )
%   | | then return 0.06875173367687157;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.09970769784786639;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.17976336960653747;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), follows(A, D) )
%   | then return 0.07143454801053455;  // std dev = 0.465, 305.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=96 */
%   | else if ( follows(C, A) )
%   | | then return 0.3024006742368689;  // std dev = 0.498, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.10816923926467924;  // std dev = 0.474, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   else if ( follows(E, A), tweets(A, F) )
%   | then if ( follows(E, G), follows(G, A) )
%   | | then if ( tweets(E, F) )
%   | | | then return 0.16778002660072033;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.08732025648577753;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.08732025648577753;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(H, A) )
%   | | then return 0.11897844203430126;  // std dev = 0.471, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.13476657635222858;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.14848039433847365;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(A, D) )
%   | then if ( follows(C, E), follows(E, A) )
%   | | then if ( follows(D, A), follows(A, C) )
%   | | | then return 0.06637057731956722;  // std dev = 5.433, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return -0.05257207462199736;  // std dev = 1.538, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( follows(C, D), follows(A, C) )
%   | | | then return 0.14239149430560913;  // std dev = 3.327, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.05819468394098688;  // std dev = 2.052, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else return 0.002733512239536091;  // std dev = 0.462, 120.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=35 */
%   else if ( follows(A, F), tweets(A, G) )
%   | then return 0.04102514120662518;  // std dev = 0.459, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | else if ( tweets(A, H) )
%   | | then return 0.3179107163822524;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.1140906393232478;  // std dev = 3.212, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.011443933273549714;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(D, A) )
%   then if ( tweets(D, E), follows(F, D) )
%   | then return 0.03665775811589466;  // std dev = 0.465, 282.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=88 */
%   | else return -0.08928262557834143;  // std dev = 0.400, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   else if ( follows(G, A) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then if ( tweets(A, I) )
%   | | | then return 0.05556586673184954;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.09777015091497972;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2598479475080138;  // std dev = 1.214, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( follows(A, J), follows(J, K) )
%   | | then if ( follows(A, K), follows(K, J) )
%   | | | then return 0.0013167461949463914;  // std dev = 2.978, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return 0.14444796831834247;  // std dev = 3.513, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | else if ( follows(A, L) )
%   | | | then return -0.0037113481249724505;  // std dev = 1.712, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.06721063991852627;  // std dev = 2.665, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, D) )
%   | | then if ( tweets(C, E), tweets(D, E) )
%   | | | then return 0.07275003438030533;  // std dev = 7.820, 269.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=94 */
%   | | | else return -0.03194502919567718;  // std dev = 1.224, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( follows(D, C) )
%   | | | then return 0.047478843266610136;  // std dev = 3.973, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   | | | else return -8.786444804927591E-5;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( follows(F, A) )
%   | | then return 0.09543187108985303;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.22532811533756902;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13475058110903365;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( follows(H, A) )
%   | then return -0.0022188888356868613;  // std dev = 0.454, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else return 0.05014071357832342;  // std dev = 0.481, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), tweets(D, C) )
%   | then if ( follows(A, E) )
%   | | then return 0.05902257887317533;  // std dev = 0.478, 210.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=74 */
%   | | else return 0.033981092049712;  // std dev = 0.469, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | else return 0.011398924113342673;  // std dev = 0.465, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   else if ( follows(A, F), follows(G, A) )
%   | then if ( follows(F, A), follows(F, G) )
%   | | then return 0.30750365746278646;  // std dev = 0.493, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return -0.06534176469026282;  // std dev = 0.442, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(A, I), follows(H, I) )
%   | | | then return 0.2141048415543179;  // std dev = 1.872, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.019081337286657674;  // std dev = 2.472, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.3213169198490394;  // std dev = 1.107, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05540396168254147;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A), follows(E, D) )
%   | then if ( follows(C, A) )
%   | | then if ( follows(A, E) )
%   | | | then return 0.040439301674097816;  // std dev = 6.755, 200.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=70 */
%   | | | else return -0.0017010304260602948;  // std dev = 2.870, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else return -0.07203992924582536;  // std dev = 0.427, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(F, C) )
%   | | | then return 0.06210892709433951;  // std dev = 4.657, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
%   | | | else return -0.14088798595707716;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.14194182539109795;  // std dev = 0.490, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( follows(G, A) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then return 0.05230831299615587;  // std dev = 0.477, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | else return -0.08644610975278255;  // std dev = 0.429, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else return -0.0408150013744542;  // std dev = 0.452, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.074', 'seconds']
Refined model CLL: -0.384801


******************************************
Best model found
******************************************
Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 56.733 

Total Inference Time : 14.509008169174194 

Total revision time: 74.28501413345336
Best scored revision CLL: -0.164298


Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 74.34109495162963 

Total Inference Time : 14.509008169174194 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.078
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.466, 395.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 377.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 392.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 380.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.464, 403.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 383.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.477, 361.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.477, 361.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.479, 354.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 378.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.648', 'seconds']
Parameter learned model CLL:-0.166931 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 185.04
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A), tweets(C, D) )
%   | then if ( tweets(E, D), follows(E, C) )
%   | | then if ( tweets(A, D), follows(E, A) )
%   | | | then return 0.17283424978482687;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   | | | else return 0.22336632640385973;  // std dev = 5.163, 115.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=42 */
%   | | else if ( follows(A, F), follows(C, F) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(G, C), follows(C, H) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( follows(A, I), follows(C, I) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.1914822684328457;  // std dev = 3.367, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   else return 0.12481560176617904;  // std dev = 0.442, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(A, E), follows(E, C) )
%   | then if ( follows(A, C) )
%   | | then return 0.18813197106636384;  // std dev = 0.478, 175.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=62 */
%   | | else return 0.11436163025161875;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else return 0.10505968934342223;  // std dev = 0.450, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( follows(H, A), follows(H, F) )
%   | | then if ( follows(A, G), follows(H, G) )
%   | | | then return 0.25729866416291597;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.11915613654573198;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( follows(A, I), follows(I, F) )
%   | | | then return 0.3171873642307679;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.20997611572656474;  // std dev = 2.607, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | else if ( tweets(A, J) )
%   | | then return 0.14089779892385604;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.20820549123154836;  // std dev = 0.484, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A), follows(E, D) )
%   | then if ( tweets(D, F), follows(C, E) )
%   | | then if ( tweets(A, F), follows(D, C) )
%   | | | then return 0.1415374790247722;  // std dev = 6.472, 188.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=63 */
%   | | | else return 0.09705937995173529;  // std dev = 4.606, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   | | else if ( follows(C, E) )
%   | | | then return -0.0796306676580585;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.08111036864214634;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( tweets(A, G), tweets(C, G) )
%   | | then if ( follows(C, H) )
%   | | | then return 0.10891736133843581;  // std dev = 2.333, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.14602869127815574;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( follows(A, I), follows(C, I) )
%   | | | then return 0.014987224326415756;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2307513233885089;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else return 0.24885401735663978;  // std dev = 0.494, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), tweets(D, C) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then return 0.09966290483965691;  // std dev = 0.465, 259.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=82 */
%   | | else return 0.013905311355164955;  // std dev = 0.428, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( follows(A, G) )
%   | | then return 0.18396329336846656;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.12272637212861075;  // std dev = 0.471, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   else if ( follows(A, H), follows(H, I) )
%   | then if ( follows(A, J), follows(J, H) )
%   | | then if ( tweets(H, K), tweets(J, K) )
%   | | | then return 0.24509372742076382;  // std dev = 2.634, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.037441263608030795;  // std dev = 1.495, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( tweets(H, L), follows(H, A) )
%   | | | then return 0.5402186215818487;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20606634366966928;  // std dev = 1.498, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0.22460410176953868;  // std dev = 0.499, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, A), tweets(E, F) )
%   | | then if ( tweets(D, F) )
%   | | | then return 0.10675726290124211;  // std dev = 6.395, 182.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=62 */
%   | | | else return 0.26868559849526924;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.04830834465078901;  // std dev = 0.454, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | else if ( follows(A, G) )
%   | | then return 0.23642683807111659;  // std dev = 0.492, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.0882657247970797;  // std dev = 0.466, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   else if ( follows(A, H), follows(H, I) )
%   | then if ( follows(A, I) )
%   | | then if ( follows(I, J) )
%   | | | then return 0.04983419695130654;  // std dev = 3.335, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.2005697050209425;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.008142108868458505;  // std dev = 0.457, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else return -0.02990017727978547;  // std dev = 0.433, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(A, E), follows(C, E) )
%   | then if ( follows(E, F), follows(A, F) )
%   | | then if ( tweets(E, D), follows(G, C) )
%   | | | then return 0.07667802627214494;  // std dev = 6.445, 188.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=62 */
%   | | | else return 0.3166147455088297;  // std dev = 1.318, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.023013072412236543;  // std dev = 0.436, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( follows(A, C) )
%   | | then return 0.15666517751656708;  // std dev = 0.485, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.10000713339437552;  // std dev = 0.476, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   else if ( follows(H, A), follows(A, H) )
%   | then if ( follows(A, I), follows(H, I) )
%   | | then if ( follows(I, H) )
%   | | | then return 0.049892145023150425;  // std dev = 3.193, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return 0.3239590641539613;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.06470125382003841;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.03126761173598911;  // std dev = 0.458, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( tweets(D, E), follows(C, D) )
%   | then if ( follows(A, D) )
%   | | then if ( tweets(C, E), follows(A, C) )
%   | | | then return 0.05744638614793174;  // std dev = 6.803, 209.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=69 */
%   | | | else return 0.15934289740436666;  // std dev = 2.157, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0.029525325732726045;  // std dev = 0.462, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | else return -0.15448819197688912;  // std dev = 0.432, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( tweets(A, H), follows(A, G) )
%   | | then return 0.27939318209087427;  // std dev = 0.494, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.10069124414596643;  // std dev = 1.796, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.22782599636472758;  // std dev = 1.215, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( tweets(A, J) )
%   | | then return 0.10248472581666404;  // std dev = 0.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.035613598757797696;  // std dev = 0.465, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( tweets(A, E), follows(A, D) )
%   | then if ( follows(F, A), follows(D, G) )
%   | | then if ( follows(C, F), follows(F, D) )
%   | | | then return 0.043585084843386884;  // std dev = 6.202, 175.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=57 */
%   | | | else return 0.13095421493188872;  // std dev = 2.413, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( follows(C, A) )
%   | | | then return 0.13085419627095174;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4464643412496521;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.014630356822356553;  // std dev = 0.465, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
%   else if ( follows(H, A) )
%   | then if ( follows(H, I), follows(I, A) )
%   | | then return 0.09089260447586253;  // std dev = 0.481, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else return -0.07107485177768717;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( tweets(A, J) )
%   | | then return 0.16304020286156534;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.1411571951740018;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(C, D), follows(D, A) )
%   | then if ( tweets(C, E), tweets(D, F) )
%   | | then if ( tweets(A, F) )
%   | | | then return 0.053416850877491005;  // std dev = 5.619, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
%   | | | else return 0.007734200579596897;  // std dev = 2.612, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( follows(D, C) )
%   | | | then return 0.22303097378249198;  // std dev = 1.575, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.05395667460262262;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.011658831522010723;  // std dev = 0.455, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   else if ( follows(A, G), follows(G, H) )
%   | then return -0.02947983757605127;  // std dev = 0.461, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(J, A) )
%   | | | then return 0.04002403428725384;  // std dev = 2.452, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.08448630556800989;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.016165622039247672;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(A, C), tweets(D, E) )
%   | then if ( tweets(C, E) )
%   | | then if ( follows(A, D), tweets(A, E) )
%   | | | then return 0.006062277577023305;  // std dev = 5.998, 169.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=52 */
%   | | | else return 0.0689022233593241;  // std dev = 4.692, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
%   | | else return -0.13166897669143507;  // std dev = 0.445, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( tweets(A, F) )
%   | | then if ( follows(A, D) )
%   | | | then return -0.10730714930658203;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07935292702698267;  // std dev = 2.621, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else return 0.1409917514555236;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( tweets(A, I), follows(A, H) )
%   | | then return -0.14614388659477012;  // std dev = 0.461, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.08925640621356876;  // std dev = 0.487, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return -0.06244267106415572;  // std dev = 0.440, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '37.683', 'seconds']
Refined model CLL: -0.382034


******************************************
Best model found
******************************************
Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 185.04 

Total Inference Time : 39.20307230949402 

Total revision time: 226.80515238571166
Best scored revision CLL: -0.166931


Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 226.84030648994445 

Total Inference Time : 39.20307230949402 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.087
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.480, 432.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 455.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 456.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.478, 442.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.477, 446.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 487.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 480.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 475.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 454.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.462, 505.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.342', 'seconds']
Parameter learned model CLL:-0.164298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 80.254
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(A, D) )
%   | then if ( follows(E, A), tweets(A, F) )
%   | | then if ( follows(C, E), tweets(E, F) )
%   | | | then return 0.21439893509951355;  // std dev = 6.058, 160.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=57 */
%   | | | else return 0.3581489350995123;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.1739384087837229;  // std dev = 0.465, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   | else if ( tweets(A, G), tweets(C, G) )
%   | | then if ( follows(H, A), follows(H, D) )
%   | | | then return 0.29564893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.2029765213064089;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else return 0.3875606998053947;  // std dev = 0.499, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else if ( tweets(A, I) )
%   | then return 0.17243464938522607;  // std dev = 0.464, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | else if ( follows(J, A) )
%   | | then return 0.23314893509951226;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.24945328292559932;  // std dev = 0.488, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then return 0.1476063431923355;  // std dev = 0.467, 303.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=97 */
%   else if ( follows(A, E) )
%   | then if ( follows(A, F), follows(E, F) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.18045698790554432;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.29396273503198134;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( follows(E, G) )
%   | | | then return 0.13748373357962343;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.32499268074016396;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return 0.1683594999535783;  // std dev = 3.056, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.2595492123484437;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.16916917652222443;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.17499268074016378;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( tweets(A, E) )
%   | then if ( follows(F, A), follows(D, F) )
%   | | then if ( follows(A, D), tweets(D, G) )
%   | | | then return 0.12682862146251758;  // std dev = 6.115, 172.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=55 */
%   | | | else return 0.16755223749410786;  // std dev = 3.173, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( follows(D, C), tweets(C, E) )
%   | | | then return 0.1925495563212164;  // std dev = 3.334, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.3783100133080574;  // std dev = 1.299, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.1065717913172038;  // std dev = 0.463, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   else if ( follows(H, A) )
%   | then if ( follows(H, I), follows(I, A) )
%   | | then if ( tweets(A, J) )
%   | | | then return 0.24900978189147704;  // std dev = 2.807, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.13527774691691927;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.464562690570566;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.1274930728028718;  // std dev = 0.468, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, C), follows(D, A) )
%   | then if ( follows(E, D), follows(E, A) )
%   | | then if ( follows(D, E), follows(E, C) )
%   | | | then return 0.13587293467602637;  // std dev = 4.960, 108.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=38 */
%   | | | else return 0.08229129059301099;  // std dev = 3.931, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | | else return 0.006943771108385908;  // std dev = 0.418, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | else if ( follows(F, C), tweets(C, G) )
%   | | then if ( follows(A, C), tweets(A, G) )
%   | | | then return 0.15422215614434392;  // std dev = 3.783, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | | else return 0.09646184805985251;  // std dev = 3.146, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | else return 0.3573723381879323;  // std dev = 1.108, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( follows(A, H) )
%   | then return 0.06609938131053768;  // std dev = 0.458, 125.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=37 */
%   | else if ( tweets(A, I) )
%   | | then return 0.0767042648068298;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0.18872873008969063;  // std dev = 0.492, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A), follows(E, D) )
%   | then if ( tweets(A, F), follows(E, A) )
%   | | then return 0.06683650584889189;  // std dev = 0.458, 154.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=46 */
%   | | else if ( follows(D, C), follows(C, G) )
%   | | | then return 0.09724885127065332;  // std dev = 4.601, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
%   | | | else return 0.1821813342259501;  // std dev = 2.470, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | else if ( tweets(A, H) )
%   | | then return 0.07415626193707768;  // std dev = 0.464, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | else return 0.03441821038221449;  // std dev = 0.449, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   else if ( follows(I, A) )
%   | then if ( tweets(A, J) )
%   | | then return 0.12541481203846006;  // std dev = 0.484, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | else return -0.020912693888268188;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( tweets(A, K) )
%   | | then return 0.1416622171398515;  // std dev = 0.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.15432761944882975;  // std dev = 0.492, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( follows(D, E), follows(E, A) )
%   | then return 0.06025484444550317;  // std dev = 0.463, 190.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=59 */
%   | else return -0.0015242533530723443;  // std dev = 0.450, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G), follows(A, G) )
%   | | then if ( follows(G, H), follows(H, F) )
%   | | | then return 0.10135645709383623;  // std dev = 4.039, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | | | else return -0.016202968646010445;  // std dev = 1.943, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.09547664410252561;  // std dev = 2.786, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.1358111055445729;  // std dev = 2.459, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else if ( follows(J, A) )
%   | | then return 0.19562589916368722;  // std dev = 1.257, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.11623807682283119;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.1494768655858918;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(D, A), follows(D, C) )
%   | then if ( tweets(A, E), tweets(C, E) )
%   | | then if ( tweets(D, E) )
%   | | | then return 0.09650181690251572;  // std dev = 4.964, 108.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=38 */
%   | | | else return 0.18239305514441995;  // std dev = 1.843, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.03384625467457977;  // std dev = 0.457, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else return 0.03170137518892863;  // std dev = 0.460, 98.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   else if ( follows(A, F), follows(G, A) )
%   | then return -0.04764641092795073;  // std dev = 0.437, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.07248841786694055;  // std dev = 3.724, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | | else return 0.09102974034208418;  // std dev = 3.349, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | else if ( follows(J, A) )
%   | | | then return -3.6222839185929954E-5;  // std dev = 1.419, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.034712883364274666;  // std dev = 3.951, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), follows(D, C) )
%   | then if ( follows(A, E), follows(C, E) )
%   | | then if ( follows(E, F) )
%   | | | then return 0.04138088140475094;  // std dev = 7.895, 288.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=91 */
%   | | | else return -0.03739217764262751;  // std dev = 1.947, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( follows(C, A) )
%   | | | then return 0.025024818094779046;  // std dev = 2.161, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.09953343645542118;  // std dev = 3.213, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | else return -0.08263698650056725;  // std dev = 0.411, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   else if ( tweets(A, G), follows(H, A) )
%   | then return 0.06190369398023945;  // std dev = 0.481, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | else if ( tweets(A, I) )
%   | | then return 0.07566740215194981;  // std dev = 0.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.07949210881013793;  // std dev = 1.347, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.08455113654327802;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(E, A), follows(D, E) )
%   | then if ( follows(E, D), follows(A, E) )
%   | | then return 0.03339755687262776;  // std dev = 0.465, 174.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=55 */
%   | | else if ( follows(D, A) )
%   | | | then return 0.10576841120372624;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.38599610969070347;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(F, A), tweets(F, C) )
%   | | then if ( follows(G, F), follows(D, H) )
%   | | | then return 0.16116510401885042;  // std dev = 2.530, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.28466735874327354;  // std dev = 1.135, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( follows(D, I), tweets(D, C) )
%   | | | then return 0.042492301383005596;  // std dev = 3.463, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.1073751019881165;  // std dev = 1.559, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( follows(J, A) )
%   | then return -0.013689383590386019;  // std dev = 0.459, 108.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=32 */
%   | else return 0.03551100420140162;  // std dev = 0.476, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( tweets(C, D) )
%   | then if ( follows(C, E), follows(A, E) )
%   | | then if ( tweets(E, D), follows(F, C) )
%   | | | then return 0.07852568159743417;  // std dev = 6.199, 164.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=61 */
%   | | | else return 0.28536546172662464;  // std dev = 1.350, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( follows(G, A), follows(G, C) )
%   | | | then return 0.043163079197424424;  // std dev = 3.001, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.012036613713037757;  // std dev = 2.251, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else return -0.1070896969391694;  // std dev = 0.399, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else if ( follows(A, H), tweets(A, I) )
%   | then return -0.004060256630150671;  // std dev = 0.456, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | else if ( follows(A, J) )
%   | | then return 0.058471673290534355;  // std dev = 0.473, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | else if ( follows(K, A) )
%   | | | then return 0.0765125869650167;  // std dev = 1.322, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.01676900474828796;  // std dev = 2.737, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.693', 'seconds']
Refined model CLL: -0.38621


******************************************
Best model found
******************************************
Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 80.254 

Total Inference Time : 23.488189697265625 

Total revision time: 106.52357665634156
Best scored revision CLL: -0.164298


Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 106.55873076057435 

Total Inference Time : 23.488189697265625 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.069
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.465, 398.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 390.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 380.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 374.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 393.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.465, 400.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.465, 399.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 392.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 371.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 390.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.656', 'seconds']
Parameter learned model CLL:-0.166931 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 126.16
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(A, C), tweets(C, D) )
%   | then if ( follows(A, E), follows(C, E) )
%   | | then return 0.1827562649424456;  // std dev = 0.468, 191.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=62 */
%   | | else return 0.25814893509951237;  // std dev = 0.490, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return 0.1368374596896763;  // std dev = 0.448, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( follows(A, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.23592671287729014;  // std dev = 3.252, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( follows(F, A) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.221785298735876;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( tweets(A, H) )
%   | | then return 0.22178529873587596;  // std dev = 0.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.21109011157010057;  // std dev = 0.478, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(A, D), follows(C, D) )
%   | then if ( tweets(C, E), tweets(D, E) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.14961369876549374;  // std dev = 6.867, 218.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=69 */
%   | | | else return 0.22247270189882748;  // std dev = 2.067, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return 0.07470151697045867;  // std dev = 0.432, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( tweets(A, F), tweets(C, F) )
%   | | then return 0.180876511626963;  // std dev = 0.479, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.5899545672501274;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( follows(A, G), follows(G, H) )
%   | then return 0.11853854594047078;  // std dev = 0.454, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | else if ( follows(A, I), tweets(A, J) )
%   | | then if ( follows(K, A) )
%   | | | then return 0.17399541312914932;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1622848608523529;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.14079710896270844;  // std dev = 0.460, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(E, A) )
%   | then if ( follows(D, F), follows(E, D) )
%   | | then if ( tweets(D, C) )
%   | | | then return 0.16788873342349442;  // std dev = 6.522, 186.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=66 */
%   | | | else return 0.31492445128405105;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.06568823346792249;  // std dev = 0.442, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( follows(D, G), follows(A, G) )
%   | | then if ( follows(G, D) )
%   | | | then return 0.14264360822812752;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.11095914446550209;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( follows(D, H) )
%   | | | then return 0.3670386941457161;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.16833591434387377;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( follows(A, I), follows(I, J) )
%   | then return 0.10777345149641666;  // std dev = 0.463, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | else return 0.12777457767805925;  // std dev = 0.463, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( tweets(C, D), follows(E, C) )
%   | then if ( follows(A, E), tweets(E, F) )
%   | | then if ( follows(E, A), follows(A, C) )
%   | | | then return 0.13953070119671065;  // std dev = 5.388, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   | | | else return 0.22099892236528573;  // std dev = 3.098, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | else if ( follows(A, G), follows(E, G) )
%   | | | then return 0.054500946200729386;  // std dev = 2.560, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.1351640335553627;  // std dev = 2.450, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( tweets(C, H) )
%   | | then return 0.5745977424299017;  // std dev = 0.903, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.15427975849051542;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( tweets(A, I) )
%   | then return 0.020271786320348515;  // std dev = 0.436, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | else if ( follows(J, A) )
%   | | then return 0.09442621245166191;  // std dev = 0.462, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else return 0.12125292804039488;  // std dev = 0.471, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), tweets(D, C) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(A, E), follows(E, D) )
%   | | | then return 0.11695100418893196;  // std dev = 6.196, 167.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=60 */
%   | | | else return 0.03589742146819935;  // std dev = 2.409, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( follows(A, F), follows(D, F) )
%   | | | then return 0.3285189967516768;  // std dev = 1.316, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.10106090840688077;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( follows(G, A) )
%   | | then return -0.07630620279409972;  // std dev = 0.447, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.06071463543889081;  // std dev = 2.363, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.17334954245815165;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( follows(A, J), follows(J, K) )
%   | then return 0.03789043131069145;  // std dev = 0.445, 84.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=23 */
%   | else return 0.14336201881620653;  // std dev = 0.484, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(E, C), follows(E, A) )
%   | then if ( tweets(E, D), tweets(A, D) )
%   | | then if ( follows(A, E), follows(A, C) )
%   | | | then return 0.054194313398184674;  // std dev = 5.361, 133.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
%   | | | else return 0.10876395849180091;  // std dev = 2.653, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( tweets(E, F), tweets(A, F) )
%   | | | then return 0.30633613415848737;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.09103742842806915;  // std dev = 3.149, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | else return 0.03170142740451385;  // std dev = 0.459, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( follows(A, H), follows(H, I) )
%   | | then return 0.06413003460728618;  // std dev = 0.460, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.14345694989557278;  // std dev = 1.908, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.10056754084541526;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.054246635001388904;  // std dev = 0.464, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(A, D) )
%   | then if ( tweets(C, D) )
%   | | then if ( follows(E, A), tweets(E, D) )
%   | | | then return 0.10480039028584771;  // std dev = 6.714, 191.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=73 */
%   | | | else return 0.05423981999668745;  // std dev = 3.076, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | else if ( follows(C, A) )
%   | | | then return -0.21616964503818167;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.09563021329961725;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( follows(F, C), tweets(F, G) )
%   | | then if ( follows(A, F), tweets(C, G) )
%   | | | then return 0.09117563573754538;  // std dev = 3.042, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.14607531460409953;  // std dev = 2.874, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else return 0.022106651664904924;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.03699475224498552;  // std dev = 0.457, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( tweets(D, C) )
%   | then return 0.016618404961386175;  // std dev = 0.463, 260.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=81 */
%   | else return -0.09043206257922497;  // std dev = 0.385, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   else if ( follows(E, A) )
%   | then if ( follows(A, F), follows(E, F) )
%   | | then if ( follows(F, E) )
%   | | | then return 0.10785024726368272;  // std dev = 3.065, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return -0.050229722181316945;  // std dev = 1.517, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.3415534250891959;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tweets(A, G) )
%   | | then if ( follows(A, H), follows(H, I) )
%   | | | then return 0.10981003664666192;  // std dev = 2.210, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.12020649938113652;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.1386810910123016;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.13027038922501225;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), tweets(D, E) )
%   | then if ( follows(A, F), follows(D, F) )
%   | | then if ( follows(F, G), tweets(F, C) )
%   | | | then return 0.01010508326797917;  // std dev = 6.622, 202.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=64 */
%   | | | else return 0.19164000961005412;  // std dev = 1.391, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.03125819661807724;  // std dev = 0.459, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | else if ( tweets(H, C), follows(A, H) )
%   | | then if ( follows(H, I), follows(I, H) )
%   | | | then return 0.17251168681905318;  // std dev = 1.935, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.05279249257168676;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return -0.09859145215509042;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( follows(J, A) )
%   | then if ( follows(K, J), tweets(K, L) )
%   | | then return 0.048394970460763534;  // std dev = 0.473, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | else return -0.1439518815469366;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.050481244984552844;  // std dev = 0.445, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(E, C), follows(A, F) )
%   | then if ( follows(F, A), tweets(C, G) )
%   | | then if ( follows(F, C), tweets(A, G) )
%   | | | then return 0.05480343307426183;  // std dev = 5.765, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
%   | | | else return -0.004111192233168915;  // std dev = 3.622, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | else if ( tweets(C, D), follows(E, F) )
%   | | | then return 0.1904082041056383;  // std dev = 1.210, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4187039840890936;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 1.5633224796849258E-4;  // std dev = 0.455, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   else if ( tweets(A, H) )
%   | then return -0.045175072861067186;  // std dev = 0.454, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( follows(I, A), follows(A, I) )
%   | | then return 0.008037730968950168;  // std dev = 0.467, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.0728858529039171;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13812994851932442;  // std dev = 2.218, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.780', 'seconds']
Refined model CLL: -0.387255


******************************************
Best model found
******************************************
Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 126.16 

Total Inference Time : 44.92838716506958 

Total revision time: 173.70860782051085
Best scored revision CLL: -0.166931


Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 173.78426328086852 

Total Inference Time : 44.92838716506958 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.269
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 464.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 460.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 453.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 458.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 459.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 477.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 469.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 486.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 467.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 460.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.315', 'seconds']
Parameter learned model CLL:-0.164298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 71.281
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(D, A), follows(C, A) )
%   | then if ( follows(D, C), follows(A, D) )
%   | | then if ( tweets(C, E), tweets(D, E) )
%   | | | then return 0.19443212094021903;  // std dev = 5.022, 113.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=38 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.13592671287729013;  // std dev = 0.448, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else return 0.13441352653920122;  // std dev = 0.447, 257.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=71 */
%   else if ( follows(F, A), tweets(A, G) )
%   | then if ( follows(A, H) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.13814893509951237;  // std dev = 0.449, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | else if ( follows(I, A) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.224815601766179;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(A, E), follows(C, E) )
%   | then if ( follows(A, C), follows(E, C) )
%   | | then return 0.12700799135592325;  // std dev = 0.455, 222.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=65 */
%   | | else return 0.26518597417162953;  // std dev = 0.494, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | else return 0.10309618674143727;  // std dev = 0.445, 100.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=27 */
%   else if ( tweets(A, F) )
%   | then if ( follows(A, G) )
%   | | then if ( follows(G, H), tweets(H, F) )
%   | | | then return 0.19812935315931965;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0.09024696568554962;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.2729658741899732;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(A, J), follows(I, J) )
%   | | | then return 0.1591683141982806;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.18684778072071678;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else return 0.16185476307886185;  // std dev = 0.471, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(A, D), follows(C, A) )
%   | then if ( follows(C, E), follows(E, A) )
%   | | then return 0.11025955429889431;  // std dev = 0.457, 148.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.1567447575123358;  // std dev = 3.163, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.17986077136980605;  // std dev = 2.396, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else return 0.10331615558412645;  // std dev = 0.454, 207.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=60 */
%   else if ( tweets(A, G) )
%   | then if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return 0.15117461349616762;  // std dev = 2.962, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return 0.07617461349616764;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.14984448387140345;  // std dev = 0.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( follows(J, A) )
%   | | then return 0.10868054176363746;  // std dev = 0.471, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.13762391671840865;  // std dev = 0.471, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D) )
%   | then if ( follows(D, A), tweets(D, C) )
%   | | then if ( follows(D, E), follows(E, A) )
%   | | | then return 0.1672504245106278;  // std dev = 5.137, 113.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=42 */
%   | | | else return 0.12176203162837433;  // std dev = 4.106, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | | else if ( follows(F, A), follows(D, F) )
%   | | | then return 0.04122464098943845;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.12999875995983043;  // std dev = 4.321, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | else if ( follows(G, A) )
%   | | then return 0.18207530435010422;  // std dev = 0.485, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | else return 0.1599442778895565;  // std dev = 0.490, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( follows(H, A), tweets(H, I) )
%   | then return 0.0789430828469213;  // std dev = 0.453, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( follows(A, J) )
%   | | then return 0.12034483212824726;  // std dev = 0.466, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | else return 0.11505124145634615;  // std dev = 0.471, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then return 0.09595458900580892;  // std dev = 0.466, 380.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=122 */
%   else if ( follows(E, A) )
%   | then if ( tweets(A, F) )
%   | | then if ( follows(A, G), tweets(E, F) )
%   | | | then return -0.030508891351231637;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.14849833526298956;  // std dev = 3.063, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | else if ( follows(E, H), follows(H, A) )
%   | | | then return 0.07432540507128978;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0743254050712898;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( follows(A, I) )
%   | | then if ( tweets(A, J) )
%   | | | then return 0.2912662341399562;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4432087981458765;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.30099615009652275;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0796334345625488;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), tweets(A, E) )
%   | | then if ( tweets(D, F), follows(D, C) )
%   | | | then return 0.08382591142788919;  // std dev = 6.015, 164.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=54 */
%   | | | else return 0.204095391831123;  // std dev = 1.934, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( follows(A, D) )
%   | | | then return 0.05618851421876748;  // std dev = 3.043, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.008836622117258539;  // std dev = 2.459, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | else if ( tweets(A, G), follows(A, D) )
%   | | then if ( follows(H, A), follows(I, H) )
%   | | | then return 0.5030637066642966;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.01009513277414972;  // std dev = 2.770, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( follows(D, C) )
%   | | | then return 0.17025580567760548;  // std dev = 3.842, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
%   | | | else return 0.4326831924855601;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0017056385076542223;  // std dev = 0.443, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), tweets(A, D) )
%   then if ( follows(C, A), tweets(C, D) )
%   | then return 0.07101534462919269;  // std dev = 0.474, 199.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=67 */
%   | else return 0.009491541852842109;  // std dev = 0.451, 107.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=30 */
%   else if ( follows(A, E), follows(F, A) )
%   | then if ( follows(E, G), follows(F, E) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.13242075882722223;  // std dev = 2.508, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.23359289568902616;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.05117079121842762;  // std dev = 0.450, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( tweets(A, H), follows(I, A) )
%   | | then if ( follows(I, J), follows(J, A) )
%   | | | then return 0.14018960776696035;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.09352165700880195;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.05722636856618872;  // std dev = 3.073, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0.08223175115198081;  // std dev = 3.186, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(A, D) )
%   | then if ( follows(D, E), follows(A, E) )
%   | | then if ( follows(C, A), follows(D, A) )
%   | | | then return 0.047883119472874824;  // std dev = 5.745, 150.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=49 */
%   | | | else return 0.1435185736004667;  // std dev = 4.410, 81.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=33 */
%   | | else return 0.008307112429268324;  // std dev = 0.460, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else if ( follows(F, A), follows(D, C) )
%   | | then if ( follows(A, F), tweets(A, G) )
%   | | | then return 0.2929050671135643;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.24781168085373112;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tweets(A, H), tweets(D, H) )
%   | | | then return 0.0978094121844455;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.1372408119775007;  // std dev = 2.264, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else if ( follows(I, A) )
%   | then return 0.09008496252363989;  // std dev = 0.480, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | else return 0.036246685222028174;  // std dev = 0.465, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(E, C), follows(A, E) )
%   | then return 0.028256057179305363;  // std dev = 0.467, 187.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=60 */
%   | else return -0.01568812585503878;  // std dev = 0.457, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( follows(F, A) )
%   | | then if ( follows(A, G), follows(G, H) )
%   | | | then return 0.07049010853073756;  // std dev = 2.786, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.395049345043525;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.012560609991014295;  // std dev = 0.461, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | else if ( follows(A, I) )
%   | | then if ( tweets(A, J) )
%   | | | then return 0.3971893522331373;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16499775128537553;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tweets(A, K) )
%   | | | then return -0.026828729984208488;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.09602021141636831;  // std dev = 2.493, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( tweets(A, E), tweets(C, E) )
%   | then if ( follows(D, A) )
%   | | then if ( tweets(D, F), follows(G, D) )
%   | | | then return 0.03157387163103263;  // std dev = 6.084, 168.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=55 */
%   | | | else return 0.10849849097042237;  // std dev = 1.314, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( follows(A, C) )
%   | | | then return 0.011832599072080272;  // std dev = 3.963, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | | else return -0.030683321515871238;  // std dev = 1.850, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( follows(D, A) )
%   | | then if ( follows(A, C) )
%   | | | then return 0.03092079289260667;  // std dev = 2.342, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.07956026954136697;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( follows(A, D) )
%   | | | then return 0.26726814728307896;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0415496779700114;  // std dev = 2.098, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   else return -0.030191438530296384;  // std dev = 0.445, 183.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=50 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.891', 'seconds']
Refined model CLL: -0.372837


******************************************
Best model found
******************************************
Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 71.281 

Total Inference Time : 20.73750376701355 

Total revision time: 95.0233374118805
Best scored revision CLL: -0.164298


Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 95.09899287223817 

Total Inference Time : 20.73750376701355 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.078
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 368.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 388.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 374.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 379.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.465, 400.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 376.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 375.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 375.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 387.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 370.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.505', 'seconds']
Parameter learned model CLL:-0.166931 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 138.141
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(E, A), follows(E, C) )
%   | then if ( follows(A, D), follows(C, E) )
%   | | then if ( follows(E, D), follows(D, C) )
%   | | | then return 0.17424088912250185;  // std dev = 6.133, 174.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=55 */
%   | | | else return 0.254375350193852;  // std dev = 3.561, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | | else if ( follows(F, E) )
%   | | | then return 0.39148226843284567;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(A, G), follows(G, C) )
%   | | then if ( follows(C, G) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.17393840878372288;  // std dev = 2.865, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.13087620782678508;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   else return 0.1184229077022521;  // std dev = 0.439, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( tweets(A, E), follows(F, C) )
%   | then if ( follows(F, A), follows(C, F) )
%   | | then if ( tweets(F, G) )
%   | | | then return 0.18802929954759215;  // std dev = 5.969, 156.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=55 */
%   | | | else return 0.2739578827433456;  // std dev = 1.478, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( follows(F, A), tweets(F, D) )
%   | | | then return 0.07356692397392907;  // std dev = 1.219, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1757070713420572;  // std dev = 3.783, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | else if ( tweets(H, D), follows(H, C) )
%   | | then if ( follows(A, H) )
%   | | | then return 0.2926048089263727;  // std dev = 2.641, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.16033568713440166;  // std dev = 1.827, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return 0.4398082701984647;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( follows(A, I), follows(I, J) )
%   | then return 0.11474014875131741;  // std dev = 0.448, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | else return 0.24311325121181818;  // std dev = 0.490, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(A, D), follows(D, C) )
%   | then if ( follows(E, A), follows(C, E) )
%   | | then if ( tweets(A, F), tweets(E, F) )
%   | | | then return 0.14113307312336876;  // std dev = 6.263, 176.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=59 */
%   | | | else return 0.23306513755810446;  // std dev = 3.067, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | else return 0.5067391826177394;  // std dev = 0.450, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( follows(C, A) )
%   | | | then return 0.10856302649338204;  // std dev = 3.108, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return -0.00861129434985252;  // std dev = 1.249, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( tweets(A, I), follows(A, D) )
%   | | | then return 0.4773861632395769;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1512325462618215;  // std dev = 2.314, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   else if ( follows(A, J) )
%   | then return 0.06569623180657501;  // std dev = 0.436, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else return 0.1802465434584602;  // std dev = 0.481, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), follows(A, D) )
%   | then if ( follows(E, A), tweets(E, F) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.1155661148831175;  // std dev = 7.201, 229.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=79 */
%   | | | else return 0.31183541491989425;  // std dev = 1.801, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( follows(D, G), follows(G, C) )
%   | | | then return 0.044475998069846506;  // std dev = 1.455, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.06896919980407548;  // std dev = 1.263, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( follows(H, A), follows(H, C) )
%   | | then if ( follows(C, I) )
%   | | | then return 0.1615397872674212;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0248517710922451;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.2327596167889728;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.16474650485053322;  // std dev = 2.512, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   else return 0.06392711897286349;  // std dev = 0.447, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(E, C), follows(E, A) )
%   | then if ( follows(C, E), tweets(E, D) )
%   | | then if ( tweets(A, F), tweets(C, F) )
%   | | | then return 0.14024204360632675;  // std dev = 5.761, 141.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=53 */
%   | | | else return 0.10588288482107473;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( follows(A, C), follows(A, E) )
%   | | | then return 0.16582243697448984;  // std dev = 2.273, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.3924685920260882;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(A, G), follows(C, G) )
%   | | then if ( follows(G, C) )
%   | | | then return 0.12617836570189755;  // std dev = 3.142, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return -0.06973695451426155;  // std dev = 2.490, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( tweets(A, H), follows(A, C) )
%   | | | then return 0.13656396387347855;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.2697991859357794;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return 0.06334199916312006;  // std dev = 0.461, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(E, A), tweets(A, F) )
%   | then if ( follows(A, E), follows(A, D) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.07676284597954827;  // std dev = 6.339, 178.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=61 */
%   | | | else return -0.055075635890335636;  // std dev = 1.928, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( tweets(E, F) )
%   | | | then return 0.20089746142124026;  // std dev = 2.128, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return -0.0243888682459434;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.027633291597944597;  // std dev = 0.462, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   else if ( tweets(A, G) )
%   | then if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return 0.15196727016961872;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.10100782704149987;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.19030697962448187;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0.09187102556678028;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(A, D), follows(D, C) )
%   | then if ( tweets(C, E), tweets(D, E) )
%   | | then return 0.010561305116979195;  // std dev = 0.459, 257.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=77 */
%   | | else return 0.1507652785150212;  // std dev = 0.496, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( follows(F, A), follows(F, C) )
%   | | then if ( follows(A, F), follows(C, A) )
%   | | | then return 0.016710930626777698;  // std dev = 1.149, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.35570817183784725;  // std dev = 1.117, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( follows(A, D), tweets(A, G) )
%   | | | then return 0.20536074935691392;  // std dev = 1.240, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.056894548277756196;  // std dev = 3.364, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   else if ( follows(H, A) )
%   | then return 0.15239291301835822;  // std dev = 0.496, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( tweets(A, I) )
%   | | then return 0.07177459337298174;  // std dev = 0.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.09425493934291923;  // std dev = 0.478, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A) )
%   | then if ( follows(D, C), follows(C, A) )
%   | | then if ( tweets(A, E), follows(A, D) )
%   | | | then return 0.06179760539238244;  // std dev = 5.777, 148.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=51 */
%   | | | else return 0.006541402945247539;  // std dev = 2.823, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( follows(A, D), tweets(D, F) )
%   | | | then return -0.014244356211231091;  // std dev = 4.289, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | | | else return 0.11205168988530212;  // std dev = 2.139, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( tweets(A, G) )
%   | | then if ( follows(A, H), follows(C, H) )
%   | | | then return -0.10642981826719876;  // std dev = 1.543, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.03329839867357187;  // std dev = 2.596, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( follows(C, I) )
%   | | | then return 0.34821830462509995;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.016298408561335295;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   else return 0.1909943111105845;  // std dev = 0.500, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), follows(E, D) )
%   | then if ( tweets(D, C) )
%   | | then return 0.0030771597424570684;  // std dev = 0.464, 256.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=80 */
%   | | else if ( follows(A, E), tweets(E, C) )
%   | | | then return -0.04300445158431106;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20554412190275073;  // std dev = 1.215, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.0344724462358538;  // std dev = 0.448, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then return 0.06414070002914442;  // std dev = 0.482, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( follows(A, F), tweets(F, H) )
%   | | | then return 0.014440438440899551;  // std dev = 2.451, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.08622037674337271;  // std dev = 1.109, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then return 0.10563595377142547;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.04187493118804435;  // std dev = 0.465, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(C, E), follows(E, A) )
%   | then return -0.006366332946519885;  // std dev = 0.461, 233.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=71 */
%   | else if ( follows(A, F), follows(C, F) )
%   | | then return 0.009408326977803845;  // std dev = 0.467, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | else return 0.15667313748225944;  // std dev = 0.492, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I), follows(G, I) )
%   | | | then return 0.12266076581153502;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3691325828735799;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.12676380483668873;  // std dev = 1.891, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.05400269695518377;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( tweets(A, K) )
%   | | then return 0.015002359751318499;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.14625021487214582;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '57.691', 'seconds']
Refined model CLL: -0.389897


******************************************
Best model found
******************************************
Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 138.141 

Total Inference Time : 36.02920579910278 

Total revision time: 176.69202269935607
Best scored revision CLL: -0.166931


Results 

CLL : -0.164298 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 176.74712314033508 

Total Inference Time : 36.02920579910278 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.131
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 477.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.476, 450.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 458.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.477, 444.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 478.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 475.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.467, 484.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.465, 492.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.478, 441.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 467.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.295', 'seconds']
Parameter learned model CLL:-0.164298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 106.794
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A) )
%   | then if ( follows(E, D) )
%   | | then if ( follows(E, A), follows(A, F) )
%   | | | then return 0.20929397326745144;  // std dev = 5.463, 131.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=46 */
%   | | | else return 0.18373033044834863;  // std dev = 5.322, 129.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=42 */
%   | | else return 0.10814893509951218;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( tweets(H, C) )
%   | | | then return 0.28672036367094095;  // std dev = 3.207, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( follows(J, A) )
%   | then return 0.1438632208137981;  // std dev = 0.452, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | else return 0.17759337954395607;  // std dev = 0.466, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), tweets(D, C) )
%   | then if ( follows(E, A), follows(E, D) )
%   | | then if ( follows(A, E), tweets(E, C) )
%   | | | then return 0.23730881948769575;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=37 */
%   | | | else return 0.1716673487950456;  // std dev = 3.726, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | else if ( follows(F, D), follows(A, G) )
%   | | | then return 0.16354832162457208;  // std dev = 4.256, 82.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=27 */
%   | | | else return 0.34107163487105213;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(H, I), follows(A, I) )
%   | | | then return 0.19074441972919226;  // std dev = 2.510, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.11351287387010517;  // std dev = 3.037, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else return 0.32373365448410585;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( follows(A, J), follows(J, K) )
%   | then return 0.09866332400959486;  // std dev = 0.439, 111.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=29 */
%   | else return 0.16056805357937637;  // std dev = 0.468, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(E, A), tweets(E, C) )
%   | then if ( follows(D, A) )
%   | | then if ( tweets(D, C), follows(E, D) )
%   | | | then return 0.11178877473308017;  // std dev = 5.095, 120.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
%   | | | else return 0.14254810992024705;  // std dev = 4.398, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | else if ( follows(E, D), follows(D, F) )
%   | | | then return 0.3587902887765386;  // std dev = 1.493, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.2083252061551193;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.09980249253569698;  // std dev = 0.457, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   else if ( tweets(A, G) )
%   | then return 0.07980085410308084;  // std dev = 0.450, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | else if ( follows(A, H) )
%   | | then return 0.10741523338244206;  // std dev = 0.451, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.19191263704322387;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.2007026066316971;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(E, C), follows(A, E) )
%   | then return 0.11574100297555928;  // std dev = 0.471, 214.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=71 */
%   | else return 0.07367579613201955;  // std dev = 0.454, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   else if ( tweets(A, F), follows(A, G) )
%   | then if ( follows(G, H), tweets(G, F) )
%   | | then if ( follows(H, G) )
%   | | | then return 0.14252096988875437;  // std dev = 3.193, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.04101205097844837;  // std dev = 1.237, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.03900853588593525;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(I, J) )
%   | | | then return 0.13119116622457552;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.08056613399602484;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.12100678629125104;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.14764264765844057;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(D, E), tweets(D, C) )
%   | then if ( follows(E, A), follows(D, A) )
%   | | then return 0.07874252910749577;  // std dev = 0.468, 130.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=42 */
%   | | else if ( follows(E, A), follows(A, E) )
%   | | | then return 0.13086983094028878;  // std dev = 3.190, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.09138638148226384;  // std dev = 4.765, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | else return 0.028459762837806556;  // std dev = 0.433, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   else if ( follows(F, A), tweets(A, G) )
%   | then if ( follows(F, H), follows(H, A) )
%   | | then return 0.23261352171765753;  // std dev = 0.497, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | else return 0.08764120930234807;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J), follows(J, K) )
%   | | | then return 0.2184310227745848;  // std dev = 3.205, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | | else return 0.14010826982531568;  // std dev = 2.667, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else return 0.058621080783811924;  // std dev = 0.459, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(E, C), follows(A, E) )
%   | then return 0.04466160025418103;  // std dev = 0.461, 197.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=60 */
%   | else if ( follows(F, C), follows(F, A) )
%   | | then if ( tweets(F, D) )
%   | | | then return 0.1626762203883025;  // std dev = 2.747, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return -0.0075938876466344896;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.07855090545490337;  // std dev = 0.472, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   else if ( follows(A, G) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then if ( follows(G, A) )
%   | | | then return 0.2532248510009723;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.3246534224295438;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.033168069089643655;  // std dev = 1.710, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.13773452588610394;  // std dev = 4.755, 96.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=37 */
%   | else return 0.06838754500129476;  // std dev = 0.468, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(E, A), follows(F, E) )
%   | then if ( follows(A, F), tweets(F, C) )
%   | | then if ( follows(E, D), follows(D, G) )
%   | | | then return 0.10122094774679434;  // std dev = 5.943, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.48234657134354264;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.012229187756582613;  // std dev = 0.444, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | else if ( follows(D, H), tweets(D, C) )
%   | | then if ( tweets(H, C) )
%   | | | then return 0.13967062064051838;  // std dev = 3.277, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | | | else return -0.021248974148135147;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.5032741231550018;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( follows(I, A), tweets(A, J) )
%   | then if ( follows(I, K), follows(K, A) )
%   | | then return 0.09641805154719574;  // std dev = 0.485, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else return 0.05555913147643036;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.018774706774904025;  // std dev = 0.458, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( tweets(A, E), follows(A, F) )
%   | then if ( follows(F, D) )
%   | | then if ( follows(C, F), follows(C, D) )
%   | | | then return 0.07476123475448328;  // std dev = 6.179, 165.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=60 */
%   | | | else return 0.004459332926666955;  // std dev = 2.818, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | else return 0.23202223399077535;  // std dev = 1.219, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( follows(A, D), follows(D, A) )
%   | | then return -0.031486075782619596;  // std dev = 0.444, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( tweets(C, G) )
%   | | | then return 0.05957288640498818;  // std dev = 3.951, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | | else return -0.09284787512784971;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( tweets(A, H) )
%   | then return -0.018116778272594555;  // std dev = 0.459, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | else if ( follows(A, I) )
%   | | then return 0.040646350708435225;  // std dev = 0.463, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | else return 0.13642751888192586;  // std dev = 0.492, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( follows(C, D), follows(D, A) )
%   | then return 0.00585264363548874;  // std dev = 0.463, 164.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=51 */
%   | else return 0.05126549801542738;  // std dev = 0.475, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   else if ( follows(E, A), tweets(E, F) )
%   | then if ( tweets(A, G), follows(H, E) )
%   | | then if ( follows(H, A), tweets(H, G) )
%   | | | then return 0.09577432014064659;  // std dev = 2.747, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.024586728178581006;  // std dev = 2.147, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else return 0.27273816191265693;  // std dev = 0.481, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J), follows(J, I) )
%   | | | then return -0.02092620958576148;  // std dev = 2.908, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.0856047085044759;  // std dev = 3.702, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.1844375284607558;  // std dev = 1.446, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0332840485574052;  // std dev = 2.713, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), follows(E, D) )
%   | then return 0.020428721482604717;  // std dev = 0.469, 267.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=88 */
%   | else return -0.022350939662600825;  // std dev = 0.455, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   else if ( follows(F, A) )
%   | then if ( follows(A, F) )
%   | | then if ( follows(F, G), follows(G, A) )
%   | | | then return 0.11641053070483284;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.010772784049881856;  // std dev = 2.198, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else return -0.06679714534666922;  // std dev = 0.424, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I), follows(I, J) )
%   | | | then return -0.0021782436111454817;  // std dev = 1.881, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.07813435659902351;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.09712467300705283;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10131086532738569;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.518', 'seconds']
Refined model CLL: -0.386263


******************************************
Best model found
******************************************
Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 106.794 

Total Inference Time : 36.76986527442932 

Total revision time: 146.39387660026551
Best scored revision CLL: -0.164298


Results 

CLL : -0.166931 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 146.44897704124452 

Total Inference Time : 36.76986527442932 

